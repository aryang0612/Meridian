{
  "duplications": {
    "code": [
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 2,
            "endLine": 6,
            "content": "\nimport React, { useState, useEffect } from 'react';\nimport { multiTenantService, Tenant, TenantUser } from '../../lib/multiTenant';\nimport { billingService } from '../../lib/billing';\nimport { monitoringService } from '../../lib/monitoring';"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import React, { useState, useEffect } from 'react';\nimport { multiTenantService, Tenant, TenantUser } from '../../lib/multiTenant';\nimport { billingService } from '../../lib/billing';\nimport { monitoringService } from '../../lib/monitoring';\nimport { apiGatewayService } from '../../lib/apiGateway';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 23,
            "endLine": 27,
            "content": "\nexport default function AdminPanel() {\n  const [stats, setStats] = useState<AdminStats>({\n    totalTenants: 0,\n    activeTenants: 0,"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 24,
            "endLine": 28,
            "content": "export default function AdminPanel() {\n  const [stats, setStats] = useState<AdminStats>({\n    totalTenants: 0,\n    activeTenants: 0,\n    totalUsers: 0,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 56,
            "endLine": 60,
            "content": "\n  const loadStats = async () => {\n    // Mock data for demonstration - replace with actual API calls\n    setStats({\n      totalTenants: 127,"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 57,
            "endLine": 61,
            "content": "  const loadStats = async () => {\n    // Mock data for demonstration - replace with actual API calls\n    setStats({\n      totalTenants: 127,\n      activeTenants: 98,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 67,
            "endLine": 71,
            "content": "\n  const loadTenants = async () => {\n    // Mock data for demonstration - replace with actual API calls\n    const mockTenants: TenantDetails[] = [\n      {"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 68,
            "endLine": 72,
            "content": "  const loadTenants = async () => {\n    // Mock data for demonstration - replace with actual API calls\n    const mockTenants: TenantDetails[] = [\n      {\n        id: '1',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 79,
            "endLine": 83,
            "content": "          features: { aiCategorization: true, bulkOperations: true, customReports: true, apiAccess: true },\n          limits: { users: 100, transactions: -1, storage: 2000 },\n        },\n        createdAt: '2024-01-15T10:30:00Z',\n        updatedAt: '2024-01-20T15:45:00Z',"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 96,
            "endLine": 100,
            "content": "          features: { aiCategorization: true, bulkOperations: true, customReports: true, apiAccess: true },\n          limits: { users: 25, transactions: 50000, storage: 500 },\n        },\n        createdAt: '2024-01-10T09:15:00Z',\n        updatedAt: '2024-01-18T11:20:00Z',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 108,
            "endLine": 112,
            "content": "\n  const suspendTenant = async (tenantId: string) => {\n    try {\n      // Implement tenant suspension\n      console.log('Suspending tenant:', tenantId);"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 109,
            "endLine": 113,
            "content": "  const suspendTenant = async (tenantId: string) => {\n    try {\n      // Implement tenant suspension\n      console.log('Suspending tenant:', tenantId);\n      // Update tenant status in database"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 120,
            "endLine": 124,
            "content": "\n  const activateTenant = async (tenantId: string) => {\n    try {\n      // Implement tenant activation\n      console.log('Activating tenant:', tenantId);"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 121,
            "endLine": 125,
            "content": "  const activateTenant = async (tenantId: string) => {\n    try {\n      // Implement tenant activation\n      console.log('Activating tenant:', tenantId);\n      await loadTenants(); // Refresh data"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 130,
            "endLine": 134,
            "content": "\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-slate-50\">\n        <NavigationBar activeSection=\"admin\" />"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 131,
            "endLine": 135,
            "content": "  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-slate-50\">\n        <NavigationBar activeSection=\"admin\" />\n        <div className=\"flex items-center justify-center h-screen\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 132,
            "endLine": 136,
            "content": "    return (\n      <div className=\"min-h-screen bg-slate-50\">\n        <NavigationBar activeSection=\"admin\" />\n        <div className=\"flex items-center justify-center h-screen\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 142,
            "endLine": 146,
            "content": "  return (\n    <div className=\"min-h-screen bg-slate-50\">\n      <NavigationBar activeSection=\"admin\" />\n      \n      <div className=\"max-w-7xl mx-auto px-6 lg:px-8 py-8\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 145,
            "endLine": 149,
            "content": "      \n      <div className=\"max-w-7xl mx-auto px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-slate-900\">Admin Panel</h1>"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 146,
            "endLine": 150,
            "content": "      <div className=\"max-w-7xl mx-auto px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-slate-900\">Admin Panel</h1>\n          <p className=\"text-slate-600 mt-2\">Manage tenants, billing, and system monitoring</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 152,
            "endLine": 156,
            "content": "\n        {error && (\n          <div className=\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\">\n            <div className=\"flex\">\n              <div className=\"ml-3\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 153,
            "endLine": 157,
            "content": "        {error && (\n          <div className=\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\">\n            <div className=\"flex\">\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-red-700\">{error}</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 162,
            "endLine": 166,
            "content": "\n        {/* Tab Navigation */}\n        <div className=\"border-b border-slate-200 mb-8\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {["
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 163,
            "endLine": 167,
            "content": "        {/* Tab Navigation */}\n        <div className=\"border-b border-slate-200 mb-8\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {[\n              { id: 'overview', name: 'Overview' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 7,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 193,
            "endLine": 197,
            "content": "              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 208,
            "endLine": 212,
            "content": "\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 209,
            "endLine": 213,
            "content": "              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 224,
            "endLine": 228,
            "content": "\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 225,
            "endLine": 229,
            "content": "              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 240,
            "endLine": 244,
            "content": "\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 241,
            "endLine": 245,
            "content": "              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 197,
            "endLine": 201,
            "content": "                      <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                      </svg>\n                    </div>\n                  </div>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 621,
            "endLine": 625,
            "content": "                  <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                  </svg>\n                </div>\n                <div>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 37,
            "endLine": 41,
            "content": "                  <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                </div>\n                <h2 className=\"text-xl font-semibold text-slate-900\">Account</h2>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 199,
            "endLine": 203,
            "content": "                      </svg>\n                    </div>\n                  </div>\n                  <div className=\"ml-4\">\n                    <p className=\"text-sm font-medium text-slate-600\">Total Tenants</p>"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 231,
            "endLine": 235,
            "content": "                      </svg>\n                    </div>\n                  </div>\n                  <div className=\"ml-4\">\n                    <p className=\"text-sm font-medium text-slate-600\">Total Users</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 205,
            "endLine": 209,
            "content": "                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 221,
            "endLine": 225,
            "content": "                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 237,
            "endLine": 241,
            "content": "                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 206,
            "endLine": 210,
            "content": "                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 222,
            "endLine": 226,
            "content": "                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 238,
            "endLine": 242,
            "content": "                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 207,
            "endLine": 211,
            "content": "              </div>\n\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 223,
            "endLine": 227,
            "content": "              </div>\n\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 239,
            "endLine": 243,
            "content": "              </div>\n\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 6,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 213,
            "endLine": 217,
            "content": "                      <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </div>\n                  </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 291,
            "endLine": 295,
            "content": "                                <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                                <span className=\"font-medium text-green-900\">CSV (Comma Separated Values)</span>\n                              </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 297,
            "endLine": 301,
            "content": "                                <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                                <span className=\"font-medium text-green-900\">OFX/QFX Bank Downloads</span>\n                              </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 303,
            "endLine": 307,
            "content": "                                <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                                <span className=\"font-medium text-green-900\">Excel (.xlsx) with proper formatting</span>\n                              </div>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 610,
            "endLine": 614,
            "content": "                  <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                </div>\n                <div>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 63,
            "endLine": 67,
            "content": "                  <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\" />\n                  </svg>\n                </div>\n                <h2 className=\"text-xl font-semibold text-slate-900\">System</h2>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 214,
            "endLine": 218,
            "content": "                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div className=\"ml-4\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 497,
            "endLine": 501,
            "content": "                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                              </svg>\n                              Do's\n                            </h4>\n                            <ul className=\"space-y-3 text-slate-600\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 600,
            "endLine": 604,
            "content": "                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-slate-900 mb-2\">CRA Compliant</h4>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 229,
            "endLine": 233,
            "content": "                      <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z\" />\n                      </svg>\n                    </div>\n                  </div>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 599,
            "endLine": 603,
            "content": "                  <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <div>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 93,
            "endLine": 97,
            "content": "                  <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                  </svg>\n                </div>\n                <h2 className=\"text-xl font-semibold text-slate-900\">Integrations</h2>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 257,
            "endLine": 261,
            "content": "\n            {/* System Health */}\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">System Health</h3>\n              <div className=\"flex items-center space-x-4\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 258,
            "endLine": 262,
            "content": "            {/* System Health */}\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">System Health</h3>\n              <div className=\"flex items-center space-x-4\">\n                <div className={`w-3 h-3 rounded-full ${"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 8,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 259,
            "endLine": 263,
            "content": "            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">System Health</h3>\n              <div className=\"flex items-center space-x-4\">\n                <div className={`w-3 h-3 rounded-full ${\n                  stats.systemHealth === 'healthy' ? 'bg-green-500' :"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 376,
            "endLine": 380,
            "content": "            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">Billing Overview</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-slate-900\">$45,670</div>"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 395,
            "endLine": 399,
            "content": "            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">Revenue Trends</h3>\n              <div className=\"h-64 bg-slate-100 rounded-lg flex items-center justify-center\">\n                <p className=\"text-slate-500\">Revenue chart would be implemented here</p>\n              </div>"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 408,
            "endLine": 412,
            "content": "              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <h3 className=\"text-lg font-medium text-slate-900 mb-4\">Error Rate</h3>\n                <div className=\"text-3xl font-bold text-slate-900\">0.23%</div>\n                <div className=\"text-sm text-green-600\">↓ 0.05% from last week</div>\n              </div>"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 413,
            "endLine": 417,
            "content": "              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n                <h3 className=\"text-lg font-medium text-slate-900 mb-4\">Response Time</h3>\n                <div className=\"text-3xl font-bold text-slate-900\">245ms</div>\n                <div className=\"text-sm text-green-600\">↓ 12ms from last week</div>\n              </div>"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 421,
            "endLine": 425,
            "content": "            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">System Performance</h3>\n              <div className=\"h-64 bg-slate-100 rounded-lg flex items-center justify-center\">\n                <p className=\"text-slate-500\">Performance monitoring charts would be implemented here</p>\n              </div>"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 433,
            "endLine": 437,
            "content": "            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">API Usage Statistics</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-slate-900\">1.2M</div>"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 452,
            "endLine": 456,
            "content": "            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">Popular Endpoints</h3>\n              <div className=\"space-y-4\">\n                {[\n                  { endpoint: '/api/transactions', calls: 456789, avgTime: '123ms' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 271,
            "endLine": 275,
            "content": "\n        {/* Tenants Tab */}\n        {activeTab === 'tenants' && (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 272,
            "endLine": 276,
            "content": "        {/* Tenants Tab */}\n        {activeTab === 'tenants' && (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200\">\n              <div className=\"px-6 py-4 border-b border-slate-200\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 5,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 285,
            "endLine": 289,
            "content": "                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\n                        Plan\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 288,
            "endLine": 292,
            "content": "                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\n                        Status\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 291,
            "endLine": 295,
            "content": "                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\n                        Users\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 294,
            "endLine": 298,
            "content": "                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\n                        Usage\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 297,
            "endLine": 301,
            "content": "                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\n                        Actions\n                      </th>\n                    </tr>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 311,
            "endLine": 315,
            "content": "                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                            tenant.plan === 'enterprise' ? 'bg-purple-100 text-purple-800' :\n                            tenant.plan === 'professional' ? 'bg-blue-100 text-blue-800' :"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 320,
            "endLine": 324,
            "content": "                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                            tenant.status === 'active' ? 'bg-green-100 text-green-800' :\n                            tenant.status === 'trial' ? 'bg-yellow-100 text-yellow-800' :"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 312,
            "endLine": 316,
            "content": "                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                            tenant.plan === 'enterprise' ? 'bg-purple-100 text-purple-800' :\n                            tenant.plan === 'professional' ? 'bg-blue-100 text-blue-800' :\n                            'bg-green-100 text-green-800'"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 321,
            "endLine": 325,
            "content": "                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                            tenant.status === 'active' ? 'bg-green-100 text-green-800' :\n                            tenant.status === 'trial' ? 'bg-yellow-100 text-yellow-800' :\n                            'bg-red-100 text-red-800'"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 372,
            "endLine": 376,
            "content": "\n        {/* Billing Tab */}\n        {activeTab === 'billing' && (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 373,
            "endLine": 377,
            "content": "        {/* Billing Tab */}\n        {activeTab === 'billing' && (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">Billing Overview</h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 375,
            "endLine": 379,
            "content": "          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">Billing Overview</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 432,
            "endLine": 436,
            "content": "          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">API Usage Statistics</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 378,
            "endLine": 382,
            "content": "              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-slate-900\">$45,670</div>\n                  <div className=\"text-sm text-slate-500\">Monthly Recurring Revenue</div>\n                </div>"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 435,
            "endLine": 439,
            "content": "              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-slate-900\">1.2M</div>\n                  <div className=\"text-sm text-slate-500\">Total API Calls</div>\n                </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 233,
            "endLine": 237,
            "content": "                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                          <div className=\"text-center\">\n                            <div className=\"w-16 h-16 bg-blue-100 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n                              <svg className=\"w-8 h-8 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 393,
            "endLine": 397,
            "content": "\n            {/* Revenue Chart Placeholder */}\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">Revenue Trends</h3>\n              <div className=\"h-64 bg-slate-100 rounded-lg flex items-center justify-center\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 394,
            "endLine": 398,
            "content": "            {/* Revenue Chart Placeholder */}\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">Revenue Trends</h3>\n              <div className=\"h-64 bg-slate-100 rounded-lg flex items-center justify-center\">\n                <p className=\"text-slate-500\">Revenue chart would be implemented here</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 397,
            "endLine": 401,
            "content": "              <div className=\"h-64 bg-slate-100 rounded-lg flex items-center justify-center\">\n                <p className=\"text-slate-500\">Revenue chart would be implemented here</p>\n              </div>\n            </div>\n          </div>"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 423,
            "endLine": 427,
            "content": "              <div className=\"h-64 bg-slate-100 rounded-lg flex items-center justify-center\">\n                <p className=\"text-slate-500\">Performance monitoring charts would be implemented here</p>\n              </div>\n            </div>\n          </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 403,
            "endLine": 407,
            "content": "\n        {/* Monitoring Tab */}\n        {activeTab === 'monitoring' && (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 404,
            "endLine": 408,
            "content": "        {/* Monitoring Tab */}\n        {activeTab === 'monitoring' && (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 419,
            "endLine": 423,
            "content": "\n            {/* Performance Chart Placeholder */}\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">System Performance</h3>\n              <div className=\"h-64 bg-slate-100 rounded-lg flex items-center justify-center\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 420,
            "endLine": 424,
            "content": "            {/* Performance Chart Placeholder */}\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">System Performance</h3>\n              <div className=\"h-64 bg-slate-100 rounded-lg flex items-center justify-center\">\n                <p className=\"text-slate-500\">Performance monitoring charts would be implemented here</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 429,
            "endLine": 433,
            "content": "\n        {/* API Management Tab */}\n        {activeTab === 'api' && (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 430,
            "endLine": 434,
            "content": "        {/* API Management Tab */}\n        {activeTab === 'api' && (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">API Usage Statistics</h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 450,
            "endLine": 454,
            "content": "\n            {/* API Endpoints */}\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">Popular Endpoints</h3>\n              <div className=\"space-y-4\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 451,
            "endLine": 455,
            "content": "            {/* API Endpoints */}\n            <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <h3 className=\"text-lg font-medium text-slate-900 mb-4\">Popular Endpoints</h3>\n              <div className=\"space-y-4\">\n                {["
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 473,
            "endLine": 477,
            "content": "\n      {/* Tenant Details Modal */}\n      {selectedTenant && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-screen overflow-y-auto\">"
          },
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 474,
            "endLine": 478,
            "content": "      {/* Tenant Details Modal */}\n      {selectedTenant && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-screen overflow-y-auto\">\n            <div className=\"px-6 py-4 border-b border-slate-200 flex items-center justify-between\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 483,
            "endLine": 487,
            "content": "              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 197,
            "endLine": 201,
            "content": "                    >\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                    </button>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 484,
            "endLine": 488,
            "content": "                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 198,
            "endLine": 202,
            "content": "                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                    </button>\n                  </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/admin/page.tsx",
            "startLine": 485,
            "endLine": 489,
            "content": "                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div className=\"p-6\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 199,
            "endLine": 203,
            "content": "                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                    </button>\n                  </div>\n                  "
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 677,
            "endLine": 681,
            "content": "                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                    </button>\n                  </div>\n                </div>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 145,
            "endLine": 149,
            "content": "                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 12,
            "endLine": 16,
            "content": "  \n  if (!openai) {\n    const apiKey = process.env.OPENAI_API_KEY;\n    if (!apiKey || !apiKey.startsWith('sk-')) {\n      console.warn('OPENAI_API_KEY is missing or invalid');"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 13,
            "endLine": 17,
            "content": "  if (!openai) {\n    const apiKey = process.env.OPENAI_API_KEY;\n    if (!apiKey || !apiKey.startsWith('sk-')) {\n      console.warn('OPENAI_API_KEY is missing or invalid');\n      apiKeyValid = false;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 18,
            "endLine": 22,
            "content": "      return null;\n    }\n    \n    try {\n      openai = new OpenAI({ apiKey });"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 25,
            "endLine": 29,
            "content": "      return null;\n    }\n    \n    try {\n      openai = new OpenAI({ apiKey });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 19,
            "endLine": 23,
            "content": "    }\n    \n    try {\n      openai = new OpenAI({ apiKey });\n    } catch (error) {"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 26,
            "endLine": 30,
            "content": "    }\n    \n    try {\n      openai = new OpenAI({ apiKey });\n    } catch (error) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 20,
            "endLine": 24,
            "content": "    \n    try {\n      openai = new OpenAI({ apiKey });\n    } catch (error) {\n      console.error('Failed to initialize OpenAI client:', error);"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 21,
            "endLine": 25,
            "content": "    try {\n      openai = new OpenAI({ apiKey });\n    } catch (error) {\n      console.error('Failed to initialize OpenAI client:', error);\n      apiKeyValid = false;"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 27,
            "endLine": 31,
            "content": "    \n    try {\n      openai = new OpenAI({ apiKey });\n    } catch (error) {\n      console.error('Failed to initialize OpenAI client:', error);"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 28,
            "endLine": 32,
            "content": "    try {\n      openai = new OpenAI({ apiKey });\n    } catch (error) {\n      console.error('Failed to initialize OpenAI client:', error);\n      apiKeyValid = false;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 22,
            "endLine": 26,
            "content": "      openai = new OpenAI({ apiKey });\n    } catch (error) {\n      console.error('Failed to initialize OpenAI client:', error);\n      apiKeyValid = false;\n      return null;"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 29,
            "endLine": 33,
            "content": "      openai = new OpenAI({ apiKey });\n    } catch (error) {\n      console.error('Failed to initialize OpenAI client:', error);\n      apiKeyValid = false;\n      return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 23,
            "endLine": 27,
            "content": "    } catch (error) {\n      console.error('Failed to initialize OpenAI client:', error);\n      apiKeyValid = false;\n      return null;\n    }"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 30,
            "endLine": 34,
            "content": "    } catch (error) {\n      console.error('Failed to initialize OpenAI client:', error);\n      apiKeyValid = false;\n      return null;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 24,
            "endLine": 28,
            "content": "      console.error('Failed to initialize OpenAI client:', error);\n      apiKeyValid = false;\n      return null;\n    }\n  }"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 31,
            "endLine": 35,
            "content": "      console.error('Failed to initialize OpenAI client:', error);\n      apiKeyValid = false;\n      return null;\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 25,
            "endLine": 29,
            "content": "      apiKeyValid = false;\n      return null;\n    }\n  }\n  return openai;"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 32,
            "endLine": 36,
            "content": "      apiKeyValid = false;\n      return null;\n    }\n  }\n  return openai;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 31,
            "endLine": 35,
            "content": "\nexport async function POST(request: NextRequest) {\n  try {\n    const { transaction, learnedPatterns, forceAI = false } = await request.json();\n"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 32,
            "endLine": 36,
            "content": "export async function POST(request: NextRequest) {\n  try {\n    const { transaction, learnedPatterns, forceAI = false } = await request.json();\n\n    if (!transaction || !transaction.description) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 35,
            "endLine": 39,
            "content": "\n    if (!transaction || !transaction.description) {\n      return NextResponse.json({ error: 'Transaction with description is required' }, { status: 400 });\n    }\n"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 36,
            "endLine": 40,
            "content": "    if (!transaction || !transaction.description) {\n      return NextResponse.json({ error: 'Transaction with description is required' }, { status: 400 });\n    }\n\n    // Get user ID from request headers (set by client)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 39,
            "endLine": 43,
            "content": "\n    // Get user ID from request headers (set by client)\n    const userId = request.headers.get('x-user-id');\n    console.log('🔍 API request from user:', userId);\n"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 40,
            "endLine": 44,
            "content": "    // Get user ID from request headers (set by client)\n    const userId = request.headers.get('x-user-id');\n    console.log('🔍 API request from user:', userId);\n\n    // Initialize chart of accounts to get available account codes"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 43,
            "endLine": 47,
            "content": "\n    // Initialize chart of accounts to get available account codes\n    const chartOfAccounts = new ChartOfAccounts('ON');\n    const accounts = chartOfAccounts.getAllAccounts();\n    "
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 44,
            "endLine": 48,
            "content": "    // Initialize chart of accounts to get available account codes\n    const chartOfAccounts = new ChartOfAccounts('ON');\n    const accounts = chartOfAccounts.getAllAccounts();\n    \n    // Create a list of available account codes for ChatGPT to choose from"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 47,
            "endLine": 51,
            "content": "    \n    // Create a list of available account codes for ChatGPT to choose from\n    const accountOptions = accounts.map(account => `${account.code} - ${account.name}`).join('\\n');\n\n    // If forceAI is true (AI button clicked), skip learned patterns and go straight to ChatGPT"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 48,
            "endLine": 52,
            "content": "    // Create a list of available account codes for ChatGPT to choose from\n    const accountOptions = accounts.map(account => `${account.code} - ${account.name}`).join('\\n');\n\n    // If forceAI is true (AI button clicked), skip learned patterns and go straight to ChatGPT\n    if (forceAI) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 50,
            "endLine": 54,
            "content": "\n    // If forceAI is true (AI button clicked), skip learned patterns and go straight to ChatGPT\n    if (forceAI) {\n      console.log('🤖 AI button clicked - calling ChatGPT directly...');\n    } else {"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 51,
            "endLine": 55,
            "content": "    // If forceAI is true (AI button clicked), skip learned patterns and go straight to ChatGPT\n    if (forceAI) {\n      console.log('🤖 AI button clicked - calling ChatGPT directly...');\n    } else {\n      // ALWAYS check learned patterns first for automatic categorization"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 59,
            "endLine": 63,
            "content": "      \n      // Load learned patterns from frontend if provided\n      if (learnedPatterns && Object.keys(learnedPatterns).length > 0) {\n        console.log('🧠 Loading learned patterns from frontend:', Object.keys(learnedPatterns).length, 'patterns');\n        aiEngine.loadLearnedPatternsFromFrontend(learnedPatterns);"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 60,
            "endLine": 64,
            "content": "      // Load learned patterns from frontend if provided\n      if (learnedPatterns && Object.keys(learnedPatterns).length > 0) {\n        console.log('🧠 Loading learned patterns from frontend:', Object.keys(learnedPatterns).length, 'patterns');\n        aiEngine.loadLearnedPatternsFromFrontend(learnedPatterns);\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 65,
            "endLine": 69,
            "content": "      \n      const learnedResult = aiEngine.categorizeTransaction(transaction);\n      console.log('🧠 Learned pattern result:', learnedResult);\n      \n      // If we have a high-confidence learned pattern, use it"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 66,
            "endLine": 70,
            "content": "      const learnedResult = aiEngine.categorizeTransaction(transaction);\n      console.log('🧠 Learned pattern result:', learnedResult);\n      \n      // If we have a high-confidence learned pattern, use it\n      if (learnedResult.confidence >= 80) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 68,
            "endLine": 72,
            "content": "      \n      // If we have a high-confidence learned pattern, use it\n      if (learnedResult.confidence >= 80) {\n        console.log('✅ Using learned pattern categorization');\n        const accountName = chartOfAccounts.getAccount(learnedResult.accountCode)?.name || 'Unknown Account';"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 69,
            "endLine": 73,
            "content": "      // If we have a high-confidence learned pattern, use it\n      if (learnedResult.confidence >= 80) {\n        console.log('✅ Using learned pattern categorization');\n        const accountName = chartOfAccounts.getAccount(learnedResult.accountCode)?.name || 'Unknown Account';\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 73,
            "endLine": 77,
            "content": "        \n        return NextResponse.json({\n          result: {\n            accountCode: learnedResult.accountCode,\n            confidence: learnedResult.confidence,"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 74,
            "endLine": 78,
            "content": "        return NextResponse.json({\n          result: {\n            accountCode: learnedResult.accountCode,\n            confidence: learnedResult.confidence,\n            reasoning: `Learned pattern match (${learnedResult.confidence}%): This transaction matches a previously learned pattern for \"${accountName}\". The system has been trained on similar transactions.`,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 85,
            "endLine": 89,
            "content": "\n    // If no learned pattern or forceAI is true, try ChatGPT\n    console.log('🤖 Calling ChatGPT for categorization...');\n    const client = getOpenAIClient();\n    let aiResult = null;"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 86,
            "endLine": 90,
            "content": "    // If no learned pattern or forceAI is true, try ChatGPT\n    console.log('🤖 Calling ChatGPT for categorization...');\n    const client = getOpenAIClient();\n    let aiResult = null;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 94,
            "endLine": 98,
            "content": "        \n        const systemPrompt = `You are an AI assistant that categorizes financial transactions for a Canadian bookkeeping application.\n\nYour task is to:\n1. Analyze the transaction description and amount"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 95,
            "endLine": 99,
            "content": "        const systemPrompt = `You are an AI assistant that categorizes financial transactions for a Canadian bookkeeping application.\n\nYour task is to:\n1. Analyze the transaction description and amount\n2. Choose the most appropriate account code from the provided list"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 96,
            "endLine": 100,
            "content": "\nYour task is to:\n1. Analyze the transaction description and amount\n2. Choose the most appropriate account code from the provided list\n3. Provide clear reasoning for your choice"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 97,
            "endLine": 101,
            "content": "Your task is to:\n1. Analyze the transaction description and amount\n2. Choose the most appropriate account code from the provided list\n3. Provide clear reasoning for your choice\n4. Suggest a merchant name for creating a custom keyword (if applicable)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 105,
            "endLine": 109,
            "content": "\nImportant guidelines:\n- Choose the most specific and appropriate account code\n- Consider the transaction type (expense, income, transfer, etc.)\n- For business meals and entertainment (restaurants, coffee shops, etc.), use 420 - Entertainment"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 106,
            "endLine": 110,
            "content": "Important guidelines:\n- Choose the most specific and appropriate account code\n- Consider the transaction type (expense, income, transfer, etc.)\n- For business meals and entertainment (restaurants, coffee shops, etc.), use 420 - Entertainment\n- For alcohol purchases specifically, use 421 - Entertainment - Alcohol Purchases"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 115,
            "endLine": 119,
            "content": "\nSpecific categorization rules:\n- Tim Hortons, Starbucks, McDonald's, restaurants → 420 (Entertainment)\n- Alcohol stores, liquor purchases → 421 (Entertainment - Alcohol Purchases)\n- Gas stations, auto services → 449 (Motor Vehicle Expenses)"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 116,
            "endLine": 120,
            "content": "Specific categorization rules:\n- Tim Hortons, Starbucks, McDonald's, restaurants → 420 (Entertainment)\n- Alcohol stores, liquor purchases → 421 (Entertainment - Alcohol Purchases)\n- Gas stations, auto services → 449 (Motor Vehicle Expenses)\n- Office supplies, general retail → 453 (Office Expenses) or 455 (Supplies and Small Tools)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 123,
            "endLine": 127,
            "content": "\nFormat your response exactly as:\nACCOUNT_CODE: [the account code number]\nCONFIDENCE: [confidence percentage 0-100]\nREASONING: [your explanation here]"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 124,
            "endLine": 128,
            "content": "Format your response exactly as:\nACCOUNT_CODE: [the account code number]\nCONFIDENCE: [confidence percentage 0-100]\nREASONING: [your explanation here]\nKEYWORD: [merchant name or \"None\"]`;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 129,
            "endLine": 133,
            "content": "\n        const userPrompt = `Please categorize this transaction:\n\nDescription: ${transaction.description}\nAmount: $${transaction.amount.toFixed(2)}"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 130,
            "endLine": 134,
            "content": "        const userPrompt = `Please categorize this transaction:\n\nDescription: ${transaction.description}\nAmount: $${transaction.amount.toFixed(2)}\nDate: ${transaction.date || 'Not specified'}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 131,
            "endLine": 135,
            "content": "\nDescription: ${transaction.description}\nAmount: $${transaction.amount.toFixed(2)}\nDate: ${transaction.date || 'Not specified'}\n"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 132,
            "endLine": 136,
            "content": "Description: ${transaction.description}\nAmount: $${transaction.amount.toFixed(2)}\nDate: ${transaction.date || 'Not specified'}\n\nBased on the description and amount, which account code best represents this transaction?`;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 135,
            "endLine": 139,
            "content": "\nBased on the description and amount, which account code best represents this transaction?`;\n\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 10000);"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 136,
            "endLine": 140,
            "content": "Based on the description and amount, which account code best represents this transaction?`;\n\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 10000);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 137,
            "endLine": 141,
            "content": "\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 10000);\n\n        const completion = await client.chat.completions.create({"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 138,
            "endLine": 142,
            "content": "        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 10000);\n\n        const completion = await client.chat.completions.create({\n          model: 'gpt-3.5-turbo',"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 126,
            "endLine": 130,
            "content": "      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout\n\n      const completion = await client.chat.completions.create({\n        model: 'gpt-3.5-turbo',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 140,
            "endLine": 144,
            "content": "\n        const completion = await client.chat.completions.create({\n          model: 'gpt-3.5-turbo',\n          messages: [\n            { role: 'system', content: systemPrompt },"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 141,
            "endLine": 145,
            "content": "        const completion = await client.chat.completions.create({\n          model: 'gpt-3.5-turbo',\n          messages: [\n            { role: 'system', content: systemPrompt },\n            { role: 'user', content: userPrompt }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 149,
            "endLine": 153,
            "content": "        }, {\n          signal: controller.signal\n        });\n\n        clearTimeout(timeoutId);"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 134,
            "endLine": 138,
            "content": "      }, {\n        signal: controller.signal\n      });\n\n      clearTimeout(timeoutId);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 150,
            "endLine": 154,
            "content": "          signal: controller.signal\n        });\n\n        clearTimeout(timeoutId);\n"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 135,
            "endLine": 139,
            "content": "        signal: controller.signal\n      });\n\n      clearTimeout(timeoutId);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 152,
            "endLine": 156,
            "content": "\n        clearTimeout(timeoutId);\n\n        const response = completion.choices[0]?.message?.content || '';\n        console.log('🤖 ChatGPT response:', response);"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 153,
            "endLine": 157,
            "content": "        clearTimeout(timeoutId);\n\n        const response = completion.choices[0]?.message?.content || '';\n        console.log('🤖 ChatGPT response:', response);\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 154,
            "endLine": 158,
            "content": "\n        const response = completion.choices[0]?.message?.content || '';\n        console.log('🤖 ChatGPT response:', response);\n        \n        // Parse the response"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 155,
            "endLine": 159,
            "content": "        const response = completion.choices[0]?.message?.content || '';\n        console.log('🤖 ChatGPT response:', response);\n        \n        // Parse the response\n        const accountCodeMatch = response.match(/ACCOUNT_CODE:\\s*(\\d+)/i);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 157,
            "endLine": 161,
            "content": "        \n        // Parse the response\n        const accountCodeMatch = response.match(/ACCOUNT_CODE:\\s*(\\d+)/i);\n        const confidenceMatch = response.match(/CONFIDENCE:\\s*(\\d+)/i);\n        const reasoningMatch = response.match(/REASONING:\\s*(.+?)(?=\\n|$)/i);"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 158,
            "endLine": 162,
            "content": "        // Parse the response\n        const accountCodeMatch = response.match(/ACCOUNT_CODE:\\s*(\\d+)/i);\n        const confidenceMatch = response.match(/CONFIDENCE:\\s*(\\d+)/i);\n        const reasoningMatch = response.match(/REASONING:\\s*(.+?)(?=\\n|$)/i);\n        const keywordMatch = response.match(/KEYWORD:\\s*(.+?)(?=\\n|$)/i);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 163,
            "endLine": 167,
            "content": "        \n        if (accountCodeMatch && confidenceMatch) {\n          const accountCode = accountCodeMatch[1];\n          const confidence = parseInt(confidenceMatch[1]);\n          const reasoning = reasoningMatch ? reasoningMatch[1].trim() : 'AI categorization provided';"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 164,
            "endLine": 168,
            "content": "        if (accountCodeMatch && confidenceMatch) {\n          const accountCode = accountCodeMatch[1];\n          const confidence = parseInt(confidenceMatch[1]);\n          const reasoning = reasoningMatch ? reasoningMatch[1].trim() : 'AI categorization provided';\n          const suggestedKeyword = keywordMatch ? keywordMatch[1].trim() : '';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 169,
            "endLine": 173,
            "content": "          \n          // Validate the account code exists\n          const account = chartOfAccounts.getAccount(accountCode);\n          if (account) {\n            aiResult = {"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 170,
            "endLine": 174,
            "content": "          // Validate the account code exists\n          const account = chartOfAccounts.getAccount(accountCode);\n          if (account) {\n            aiResult = {\n              accountCode,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 187,
            "endLine": 191,
            "content": "\n      } catch (openaiError: any) {\n        console.warn('OpenAI API failed, falling back to local categorization:', openaiError);\n      }\n    }"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 188,
            "endLine": 192,
            "content": "      } catch (openaiError: any) {\n        console.warn('OpenAI API failed, falling back to local categorization:', openaiError);\n      }\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 192,
            "endLine": 196,
            "content": "\n    // Fallback to local categorization if AI failed\n    if (!aiResult) {\n      console.log('🔄 Falling back to local categorization...');\n      const aiEngine = new AIEngine('ON', userId || undefined);"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 193,
            "endLine": 197,
            "content": "    // Fallback to local categorization if AI failed\n    if (!aiResult) {\n      console.log('🔄 Falling back to local categorization...');\n      const aiEngine = new AIEngine('ON', userId || undefined);\n      await aiEngine.initialize();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 200,
            "endLine": 204,
            "content": "      \n      aiResult = {\n        accountCode: localResult.accountCode,\n        confidence: localResult.confidence,\n        reasoning: generateFallbackReasoning(transaction, localResult, accountName),"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 201,
            "endLine": 205,
            "content": "      aiResult = {\n        accountCode: localResult.accountCode,\n        confidence: localResult.confidence,\n        reasoning: generateFallbackReasoning(transaction, localResult, accountName),\n        suggestedKeyword: undefined,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 209,
            "endLine": 213,
            "content": "\n    return NextResponse.json({ result: aiResult });\n\n  } catch (error) {\n    console.error('Error in AI categorization:', error);"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 210,
            "endLine": 214,
            "content": "    return NextResponse.json({ result: aiResult });\n\n  } catch (error) {\n    console.error('Error in AI categorization:', error);\n    return NextResponse.json({ error: 'Failed to categorize transaction' }, { status: 500 });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 211,
            "endLine": 215,
            "content": "\n  } catch (error) {\n    console.error('Error in AI categorization:', error);\n    return NextResponse.json({ error: 'Failed to categorize transaction' }, { status: 500 });\n  }"
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 212,
            "endLine": 216,
            "content": "  } catch (error) {\n    console.error('Error in AI categorization:', error);\n    return NextResponse.json({ error: 'Failed to categorize transaction' }, { status: 500 });\n  }\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 217,
            "endLine": 221,
            "content": "\nfunction generateFallbackReasoning(transaction: any, result: any, accountName: string): string {\n  const description = transaction.description.toLowerCase();\n  const amount = Math.abs(transaction.amount);\n  "
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 218,
            "endLine": 222,
            "content": "function generateFallbackReasoning(transaction: any, result: any, accountName: string): string {\n  const description = transaction.description.toLowerCase();\n  const amount = Math.abs(transaction.amount);\n  \n  if (description.includes('transfer')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 221,
            "endLine": 225,
            "content": "  \n  if (description.includes('transfer')) {\n    return `This appears to be a transfer transaction based on the description \"${transaction.description}\". Categorized as ${accountName}.`;\n  }\n  "
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 222,
            "endLine": 226,
            "content": "  if (description.includes('transfer')) {\n    return `This appears to be a transfer transaction based on the description \"${transaction.description}\". Categorized as ${accountName}.`;\n  }\n  \n  if (description.includes('fee') || description.includes('charge')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 225,
            "endLine": 229,
            "content": "  \n  if (description.includes('fee') || description.includes('charge')) {\n    return `This appears to be a bank fee or service charge based on the description \"${transaction.description}\". Categorized as ${accountName}.`;\n  }\n  "
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 226,
            "endLine": 230,
            "content": "  if (description.includes('fee') || description.includes('charge')) {\n    return `This appears to be a bank fee or service charge based on the description \"${transaction.description}\". Categorized as ${accountName}.`;\n  }\n  \n  if (amount < 5) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 229,
            "endLine": 233,
            "content": "  \n  if (amount < 5) {\n    return `Small transaction amount ($${amount.toFixed(2)}) suggests a fee or minor expense. Categorized as ${accountName}.`;\n  }\n  "
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 230,
            "endLine": 234,
            "content": "  if (amount < 5) {\n    return `Small transaction amount ($${amount.toFixed(2)}) suggests a fee or minor expense. Categorized as ${accountName}.`;\n  }\n  \n  if (amount > 1000) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 233,
            "endLine": 237,
            "content": "  \n  if (amount > 1000) {\n    return `Large transaction amount ($${amount.toFixed(2)}) for \"${transaction.description}\". Categorized as ${accountName}.`;\n  }\n  "
          },
          {
            "file": "src/app/api/ai-categorize/route.ts",
            "startLine": 234,
            "endLine": 238,
            "content": "  if (amount > 1000) {\n    return `Large transaction amount ($${amount.toFixed(2)}) for \"${transaction.description}\". Categorized as ${accountName}.`;\n  }\n  \n  return `Transaction \"${transaction.description}\" categorized as ${accountName} based on pattern matching and business rules.`;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 3,
            "endLine": 7,
            "content": "\n// Lazy initialization of OpenAI client to prevent build-time errors\nlet openai: OpenAI | null = null;\nlet apiKeyValid = true; // Track if API key is valid\n"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 4,
            "endLine": 8,
            "content": "// Lazy initialization of OpenAI client to prevent build-time errors\nlet openai: OpenAI | null = null;\nlet apiKeyValid = true; // Track if API key is valid\n\nfunction getOpenAIClient(): OpenAI | null {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 7,
            "endLine": 11,
            "content": "\nfunction getOpenAIClient(): OpenAI | null {\n  if (!apiKeyValid) {\n    return null; // Don't try to create client if we know key is invalid\n  }"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 8,
            "endLine": 12,
            "content": "function getOpenAIClient(): OpenAI | null {\n  if (!apiKeyValid) {\n    return null; // Don't try to create client if we know key is invalid\n  }\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 12,
            "endLine": 16,
            "content": "  \n  if (!openai) {\n    const apiKey = process.env.OPENAI_API_KEY;\n    if (!apiKey) {\n      console.warn('OPENAI_API_KEY environment variable is missing');"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 13,
            "endLine": 17,
            "content": "  if (!openai) {\n    const apiKey = process.env.OPENAI_API_KEY;\n    if (!apiKey) {\n      console.warn('OPENAI_API_KEY environment variable is missing');\n      apiKeyValid = false;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 20,
            "endLine": 24,
            "content": "    \n    // Basic validation of API key format\n    if (!apiKey.startsWith('sk-')) {\n      console.warn('OPENAI_API_KEY appears to be invalid (should start with sk-)');\n      apiKeyValid = false;"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 21,
            "endLine": 25,
            "content": "    // Basic validation of API key format\n    if (!apiKey.startsWith('sk-')) {\n      console.warn('OPENAI_API_KEY appears to be invalid (should start with sk-)');\n      apiKeyValid = false;\n      return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 38,
            "endLine": 42,
            "content": "\n// Fallback responses when OpenAI is not available\nconst getFallbackResponse = (message: string): string => {\n  const lowerMessage = message.toLowerCase();\n  "
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 39,
            "endLine": 43,
            "content": "// Fallback responses when OpenAI is not available\nconst getFallbackResponse = (message: string): string => {\n  const lowerMessage = message.toLowerCase();\n  \n  // Common Meridian AI support responses"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 42,
            "endLine": 46,
            "content": "  \n  // Common Meridian AI support responses\n  if (lowerMessage.includes('upload') || lowerMessage.includes('file')) {\n    return \"To upload a bank statement, go to the Dashboard and use the file upload area. We support CSV files from major Canadian banks including RBC, TD, BMO, Scotia, and CIBC.\";\n  }"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 43,
            "endLine": 47,
            "content": "  // Common Meridian AI support responses\n  if (lowerMessage.includes('upload') || lowerMessage.includes('file')) {\n    return \"To upload a bank statement, go to the Dashboard and use the file upload area. We support CSV files from major Canadian banks including RBC, TD, BMO, Scotia, and CIBC.\";\n  }\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 47,
            "endLine": 51,
            "content": "  \n  if (lowerMessage.includes('categoriz') || lowerMessage.includes('ai')) {\n    return \"Meridian AI uses advanced machine learning to automatically categorize your transactions with 95%+ accuracy. The system learns from your business patterns and improves over time.\";\n  }\n  "
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 48,
            "endLine": 52,
            "content": "  if (lowerMessage.includes('categoriz') || lowerMessage.includes('ai')) {\n    return \"Meridian AI uses advanced machine learning to automatically categorize your transactions with 95%+ accuracy. The system learns from your business patterns and improves over time.\";\n  }\n  \n  if (lowerMessage.includes('export') || lowerMessage.includes('xero') || lowerMessage.includes('quickbooks')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 51,
            "endLine": 55,
            "content": "  \n  if (lowerMessage.includes('export') || lowerMessage.includes('xero') || lowerMessage.includes('quickbooks')) {\n    return \"You can export your processed data to Xero, QuickBooks, Sage 50, or CSV format. Go to the Export section after processing your transactions.\";\n  }\n  "
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 52,
            "endLine": 56,
            "content": "  if (lowerMessage.includes('export') || lowerMessage.includes('xero') || lowerMessage.includes('quickbooks')) {\n    return \"You can export your processed data to Xero, QuickBooks, Sage 50, or CSV format. Go to the Export section after processing your transactions.\";\n  }\n  \n  if (lowerMessage.includes('security') || lowerMessage.includes('compliance')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 55,
            "endLine": 59,
            "content": "  \n  if (lowerMessage.includes('security') || lowerMessage.includes('compliance')) {\n    return \"Meridian AI maintains bank-level security with SOC 2 Type II compliance. Your data is encrypted and processed securely in Canada.\";\n  }\n  "
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 56,
            "endLine": 60,
            "content": "  if (lowerMessage.includes('security') || lowerMessage.includes('compliance')) {\n    return \"Meridian AI maintains bank-level security with SOC 2 Type II compliance. Your data is encrypted and processed securely in Canada.\";\n  }\n  \n  if (lowerMessage.includes('help') || lowerMessage.includes('support')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 59,
            "endLine": 63,
            "content": "  \n  if (lowerMessage.includes('help') || lowerMessage.includes('support')) {\n    return \"I'm here to help with Meridian AI bookkeeping questions! You can ask about file uploads, AI categorization, exports, security, or any other features.\";\n  }\n  "
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 60,
            "endLine": 64,
            "content": "  if (lowerMessage.includes('help') || lowerMessage.includes('support')) {\n    return \"I'm here to help with Meridian AI bookkeeping questions! You can ask about file uploads, AI categorization, exports, security, or any other features.\";\n  }\n  \n  // Default response"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 63,
            "endLine": 67,
            "content": "  \n  // Default response\n  return \"I'm the Meridian AI support assistant. I can help you with bookkeeping questions, file uploads, AI categorization, exports, and more. What would you like to know about?\";\n};\n"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 64,
            "endLine": 68,
            "content": "  // Default response\n  return \"I'm the Meridian AI support assistant. I can help you with bookkeeping questions, file uploads, AI categorization, exports, and more. What would you like to know about?\";\n};\n\nexport async function POST(request: NextRequest) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 67,
            "endLine": 71,
            "content": "\nexport async function POST(request: NextRequest) {\n  try {\n    const { message, conversationHistory = [] } = await request.json();\n"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 68,
            "endLine": 72,
            "content": "export async function POST(request: NextRequest) {\n  try {\n    const { message, conversationHistory = [] } = await request.json();\n\n    if (!message) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 78,
            "endLine": 82,
            "content": "    \n    if (!client) {\n      // Use fallback response when OpenAI is not available\n      const fallbackResponse = getFallbackResponse(message);\n      "
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 79,
            "endLine": 83,
            "content": "    if (!client) {\n      // Use fallback response when OpenAI is not available\n      const fallbackResponse = getFallbackResponse(message);\n      \n      return NextResponse.json({ "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 81,
            "endLine": 85,
            "content": "      const fallbackResponse = getFallbackResponse(message);\n      \n      return NextResponse.json({ \n        response: fallbackResponse,\n        conversationHistory: [...conversationHistory, "
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 175,
            "endLine": 179,
            "content": "      const fallbackResponse = getFallbackResponse(message);\n      \n      return NextResponse.json({ \n        response: fallbackResponse,\n        conversationHistory: [...conversationHistory, "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 6,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 82,
            "endLine": 86,
            "content": "      \n      return NextResponse.json({ \n        response: fallbackResponse,\n        conversationHistory: [...conversationHistory, \n          { role: 'user', content: message },"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 83,
            "endLine": 87,
            "content": "      return NextResponse.json({ \n        response: fallbackResponse,\n        conversationHistory: [...conversationHistory, \n          { role: 'user', content: message },\n          { role: 'assistant', content: fallbackResponse }"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 157,
            "endLine": 161,
            "content": "        \n        return NextResponse.json({ \n          response: fallbackResponse,\n          conversationHistory: [...conversationHistory, \n            { role: 'user', content: message },"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 158,
            "endLine": 162,
            "content": "        return NextResponse.json({ \n          response: fallbackResponse,\n          conversationHistory: [...conversationHistory, \n            { role: 'user', content: message },\n            { role: 'assistant', content: fallbackResponse }"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 176,
            "endLine": 180,
            "content": "      \n      return NextResponse.json({ \n        response: fallbackResponse,\n        conversationHistory: [...conversationHistory, \n          { role: 'user', content: message },"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 177,
            "endLine": 181,
            "content": "      return NextResponse.json({ \n        response: fallbackResponse,\n        conversationHistory: [...conversationHistory, \n          { role: 'user', content: message },\n          { role: 'assistant', content: fallbackResponse }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 84,
            "endLine": 88,
            "content": "        response: fallbackResponse,\n        conversationHistory: [...conversationHistory, \n          { role: 'user', content: message },\n          { role: 'assistant', content: fallbackResponse }\n        ],"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 159,
            "endLine": 163,
            "content": "          response: fallbackResponse,\n          conversationHistory: [...conversationHistory, \n            { role: 'user', content: message },\n            { role: 'assistant', content: fallbackResponse }\n          ],"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 178,
            "endLine": 182,
            "content": "        response: fallbackResponse,\n        conversationHistory: [...conversationHistory, \n          { role: 'user', content: message },\n          { role: 'assistant', content: fallbackResponse }\n        ],"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 85,
            "endLine": 89,
            "content": "        conversationHistory: [...conversationHistory, \n          { role: 'user', content: message },\n          { role: 'assistant', content: fallbackResponse }\n        ],\n        note: 'Using fallback response - OpenAI API not available'"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 144,
            "endLine": 148,
            "content": "        conversationHistory: [...conversationHistory, \n          { role: 'user', content: message },\n          { role: 'assistant', content: response }\n        ]\n      });"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 160,
            "endLine": 164,
            "content": "          conversationHistory: [...conversationHistory, \n            { role: 'user', content: message },\n            { role: 'assistant', content: fallbackResponse }\n          ],\n          note: 'Using fallback response due to timeout'"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 179,
            "endLine": 183,
            "content": "        conversationHistory: [...conversationHistory, \n          { role: 'user', content: message },\n          { role: 'assistant', content: fallbackResponse }\n        ],\n        note: 'Using fallback response due to OpenAI API error'"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 86,
            "endLine": 90,
            "content": "          { role: 'user', content: message },\n          { role: 'assistant', content: fallbackResponse }\n        ],\n        note: 'Using fallback response - OpenAI API not available'\n      });"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 161,
            "endLine": 165,
            "content": "            { role: 'user', content: message },\n            { role: 'assistant', content: fallbackResponse }\n          ],\n          note: 'Using fallback response due to timeout'\n        });"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 180,
            "endLine": 184,
            "content": "          { role: 'user', content: message },\n          { role: 'assistant', content: fallbackResponse }\n        ],\n        note: 'Using fallback response due to OpenAI API error'\n      });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 92,
            "endLine": 96,
            "content": "\n    // System prompt to make ChatGPT act as a Meridian AI support assistant\n    const systemPrompt = {\n      role: 'system' as const,\n      content: `You are a helpful support assistant for Meridian AI, a Canadian bookkeeping application that processes bank statements with AI categorization. "
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 93,
            "endLine": 97,
            "content": "    // System prompt to make ChatGPT act as a Meridian AI support assistant\n    const systemPrompt = {\n      role: 'system' as const,\n      content: `You are a helpful support assistant for Meridian AI, a Canadian bookkeeping application that processes bank statements with AI categorization. \n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 97,
            "endLine": 101,
            "content": "\nKey features of Meridian AI:\n- Processes CSV bank statements from major Canadian banks (RBC, TD, BMO, Scotia, CIBC)\n- Uses AI to categorize transactions with 95%+ accuracy\n- Exports to Xero, QuickBooks, Sage 50, and CSV formats"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 98,
            "endLine": 102,
            "content": "Key features of Meridian AI:\n- Processes CSV bank statements from major Canadian banks (RBC, TD, BMO, Scotia, CIBC)\n- Uses AI to categorize transactions with 95%+ accuracy\n- Exports to Xero, QuickBooks, Sage 50, and CSV formats\n- CRA-compliant with proper chart of accounts mapping"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 105,
            "endLine": 109,
            "content": "\nCommon user questions:\n- How to upload bank statements\n- Troubleshooting file format issues\n- Understanding AI categorization"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 106,
            "endLine": 110,
            "content": "Common user questions:\n- How to upload bank statements\n- Troubleshooting file format issues\n- Understanding AI categorization\n- Exporting to accounting software"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 113,
            "endLine": 117,
            "content": "\nBe helpful, professional, and focus on Meridian AI features. If users ask about topics unrelated to bookkeeping, accounting, or Meridian AI, politely redirect them back to how you can help with their bookkeeping needs.`\n    };\n\n    // Prepare messages for OpenAI"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 114,
            "endLine": 118,
            "content": "Be helpful, professional, and focus on Meridian AI features. If users ask about topics unrelated to bookkeeping, accounting, or Meridian AI, politely redirect them back to how you can help with their bookkeeping needs.`\n    };\n\n    // Prepare messages for OpenAI\n    const messages = ["
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 123,
            "endLine": 127,
            "content": "\n    try {\n      // Add timeout to prevent hanging requests\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 124,
            "endLine": 128,
            "content": "    try {\n      // Add timeout to prevent hanging requests\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 128,
            "endLine": 132,
            "content": "\n      const completion = await client.chat.completions.create({\n        model: 'gpt-3.5-turbo',\n        messages: messages,\n        max_tokens: 500,"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 129,
            "endLine": 133,
            "content": "      const completion = await client.chat.completions.create({\n        model: 'gpt-3.5-turbo',\n        messages: messages,\n        max_tokens: 500,\n        temperature: 0.7,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 137,
            "endLine": 141,
            "content": "\n      clearTimeout(timeoutId);\n\n      const response = completion.choices[0]?.message?.content || 'Sorry, I could not generate a response.';\n"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 138,
            "endLine": 142,
            "content": "      clearTimeout(timeoutId);\n\n      const response = completion.choices[0]?.message?.content || 'Sorry, I could not generate a response.';\n\n      return NextResponse.json({ "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 139,
            "endLine": 143,
            "content": "\n      const response = completion.choices[0]?.message?.content || 'Sorry, I could not generate a response.';\n\n      return NextResponse.json({ \n        response,"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 140,
            "endLine": 144,
            "content": "      const response = completion.choices[0]?.message?.content || 'Sorry, I could not generate a response.';\n\n      return NextResponse.json({ \n        response,\n        conversationHistory: [...conversationHistory, "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 141,
            "endLine": 145,
            "content": "\n      return NextResponse.json({ \n        response,\n        conversationHistory: [...conversationHistory, \n          { role: 'user', content: message },"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 142,
            "endLine": 146,
            "content": "      return NextResponse.json({ \n        response,\n        conversationHistory: [...conversationHistory, \n          { role: 'user', content: message },\n          { role: 'assistant', content: response }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 149,
            "endLine": 153,
            "content": "      \n    } catch (openaiError: any) {\n      console.error('OpenAI API error:', openaiError);\n      \n      // Handle timeout errors"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 150,
            "endLine": 154,
            "content": "    } catch (openaiError: any) {\n      console.error('OpenAI API error:', openaiError);\n      \n      // Handle timeout errors\n      if (openaiError.name === 'AbortError' || openaiError.code === 'ECONNABORTED') {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 152,
            "endLine": 156,
            "content": "      \n      // Handle timeout errors\n      if (openaiError.name === 'AbortError' || openaiError.code === 'ECONNABORTED') {\n        console.warn('OpenAI API request timed out, using fallback response');\n        const fallbackResponse = \"I'm taking a bit longer than usual to respond. Please try again in a moment, or contact support if this persists.\";"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 153,
            "endLine": 157,
            "content": "      // Handle timeout errors\n      if (openaiError.name === 'AbortError' || openaiError.code === 'ECONNABORTED') {\n        console.warn('OpenAI API request timed out, using fallback response');\n        const fallbackResponse = \"I'm taking a bit longer than usual to respond. Please try again in a moment, or contact support if this persists.\";\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 167,
            "endLine": 171,
            "content": "      \n      // If it's an API key error, mark as invalid and use fallback\n      if (openaiError.code === 'invalid_api_key' || openaiError.status === 401) {\n        apiKeyValid = false;\n        console.warn('OpenAI API key is invalid, switching to fallback mode');"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 168,
            "endLine": 172,
            "content": "      // If it's an API key error, mark as invalid and use fallback\n      if (openaiError.code === 'invalid_api_key' || openaiError.status === 401) {\n        apiKeyValid = false;\n        console.warn('OpenAI API key is invalid, switching to fallback mode');\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 173,
            "endLine": 177,
            "content": "      \n      // Use fallback response\n      const fallbackResponse = getFallbackResponse(message);\n      \n      return NextResponse.json({ "
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 174,
            "endLine": 178,
            "content": "      // Use fallback response\n      const fallbackResponse = getFallbackResponse(message);\n      \n      return NextResponse.json({ \n        response: fallbackResponse,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 186,
            "endLine": 190,
            "content": "\n  } catch (error) {\n    console.error('Chat API error:', error);\n    \n    // Even if everything fails, provide a helpful response"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 187,
            "endLine": 191,
            "content": "  } catch (error) {\n    console.error('Chat API error:', error);\n    \n    // Even if everything fails, provide a helpful response\n    const fallbackResponse = \"I'm having trouble connecting right now, but I'm here to help with Meridian AI! You can ask about file uploads, AI categorization, exports, or any other features.\";"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 189,
            "endLine": 193,
            "content": "    \n    // Even if everything fails, provide a helpful response\n    const fallbackResponse = \"I'm having trouble connecting right now, but I'm here to help with Meridian AI! You can ask about file uploads, AI categorization, exports, or any other features.\";\n    \n    return NextResponse.json({ "
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 190,
            "endLine": 194,
            "content": "    // Even if everything fails, provide a helpful response\n    const fallbackResponse = \"I'm having trouble connecting right now, but I'm here to help with Meridian AI! You can ask about file uploads, AI categorization, exports, or any other features.\";\n    \n    return NextResponse.json({ \n      response: fallbackResponse,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 192,
            "endLine": 196,
            "content": "    \n    return NextResponse.json({ \n      response: fallbackResponse,\n      conversationHistory: [],\n      note: 'Using emergency fallback response'"
          },
          {
            "file": "src/app/api/chat/route.ts",
            "startLine": 193,
            "endLine": 197,
            "content": "    return NextResponse.json({ \n      response: fallbackResponse,\n      conversationHistory: [],\n      note: 'Using emergency fallback response'\n    });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 42,
            "endLine": 46,
            "content": "\n@theme inline {\n  --color-background: var(--background);\n  --color-foreground: var(--foreground);\n  --font-sans: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'SF Pro Text', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 43,
            "endLine": 47,
            "content": "@theme inline {\n  --color-background: var(--background);\n  --color-foreground: var(--foreground);\n  --font-sans: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'SF Pro Text', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\n  --font-mono: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', 'Source Code Pro', monospace;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 62,
            "endLine": 66,
            "content": "\nbody {\n  background: var(--background);\n  color: var(--foreground);\n  font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'SF Pro Text', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 63,
            "endLine": 67,
            "content": "body {\n  background: var(--background);\n  color: var(--foreground);\n  font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'SF Pro Text', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\n  font-feature-settings: \"rlig\" 1, \"calt\" 1;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 76,
            "endLine": 80,
            "content": "  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 456,
            "endLine": 460,
            "content": "          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 556,
            "endLine": 560,
            "content": "          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 85,
            "endLine": 89,
            "content": "\n/* Make main content areas more opaque */\n.min-h-screen.bg-white {\n  background: rgba(255, 255, 255, 0.95) !important;\n  backdrop-filter: blur(10px);"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 86,
            "endLine": 90,
            "content": "/* Make main content areas more opaque */\n.min-h-screen.bg-white {\n  background: rgba(255, 255, 255, 0.95) !important;\n  backdrop-filter: blur(10px);\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 91,
            "endLine": 95,
            "content": "\n.bg-white {\n  background: rgba(255, 255, 255, 0.95) !important;\n  backdrop-filter: blur(5px);\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 92,
            "endLine": 96,
            "content": ".bg-white {\n  background: rgba(255, 255, 255, 0.95) !important;\n  backdrop-filter: blur(5px);\n}\n"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 108,
            "endLine": 112,
            "content": ".bg-white {\n  background: rgba(255, 255, 255, 0.95) !important;\n  backdrop-filter: blur(5px);\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 96,
            "endLine": 100,
            "content": "\n.bg-white\\/80 {\n  background: rgba(255, 255, 255, 0.9) !important;\n  backdrop-filter: blur(8px);\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 97,
            "endLine": 101,
            "content": ".bg-white\\/80 {\n  background: rgba(255, 255, 255, 0.9) !important;\n  backdrop-filter: blur(8px);\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 101,
            "endLine": 105,
            "content": "\n.bg-white\\/95 {\n  background: rgba(255, 255, 255, 0.98) !important;\n  backdrop-filter: blur(12px);\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 102,
            "endLine": 106,
            "content": ".bg-white\\/95 {\n  background: rgba(255, 255, 255, 0.98) !important;\n  backdrop-filter: blur(12px);\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 106,
            "endLine": 110,
            "content": "\n/* Make all white backgrounds more opaque */\n.bg-white {\n  background: rgba(255, 255, 255, 0.95) !important;\n  backdrop-filter: blur(5px);"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 107,
            "endLine": 111,
            "content": "/* Make all white backgrounds more opaque */\n.bg-white {\n  background: rgba(255, 255, 255, 0.95) !important;\n  backdrop-filter: blur(5px);\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 112,
            "endLine": 116,
            "content": "\n/* Make slate backgrounds more opaque */\n.bg-slate-50 {\n  background: rgba(248, 250, 252, 0.95) !important;\n  backdrop-filter: blur(3px);"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 113,
            "endLine": 117,
            "content": "/* Make slate backgrounds more opaque */\n.bg-slate-50 {\n  background: rgba(248, 250, 252, 0.95) !important;\n  backdrop-filter: blur(3px);\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 118,
            "endLine": 122,
            "content": "\n.bg-slate-100 {\n  background: rgba(241, 245, 249, 0.95) !important;\n  backdrop-filter: blur(3px);\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 119,
            "endLine": 123,
            "content": ".bg-slate-100 {\n  background: rgba(241, 245, 249, 0.95) !important;\n  backdrop-filter: blur(3px);\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 123,
            "endLine": 127,
            "content": "\n/* Make gray backgrounds more opaque */\n.bg-gray-50 {\n  background: rgba(249, 250, 251, 0.95) !important;\n  backdrop-filter: blur(3px);"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 124,
            "endLine": 128,
            "content": "/* Make gray backgrounds more opaque */\n.bg-gray-50 {\n  background: rgba(249, 250, 251, 0.95) !important;\n  backdrop-filter: blur(3px);\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 129,
            "endLine": 133,
            "content": "\n.bg-gray-100 {\n  background: rgba(243, 244, 246, 0.95) !important;\n  backdrop-filter: blur(3px);\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 130,
            "endLine": 134,
            "content": ".bg-gray-100 {\n  background: rgba(243, 244, 246, 0.95) !important;\n  backdrop-filter: blur(3px);\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 134,
            "endLine": 138,
            "content": "\n/* Smooth transitions for all interactive elements */\n* {\n  transition: all 0.2s ease-in-out;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 135,
            "endLine": 139,
            "content": "/* Smooth transitions for all interactive elements */\n* {\n  transition: all 0.2s ease-in-out;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 139,
            "endLine": 143,
            "content": "\n/* Remove default button styles and add consistent focus states */\nbutton:focus-visible,\ninput:focus-visible,\nselect:focus-visible,"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 140,
            "endLine": 144,
            "content": "/* Remove default button styles and add consistent focus states */\nbutton:focus-visible,\ninput:focus-visible,\nselect:focus-visible,\ntextarea:focus-visible {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 155,
            "endLine": 159,
            "content": "\ninput::placeholder,\ntextarea::placeholder {\n  color: #64748b;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 156,
            "endLine": 160,
            "content": "input::placeholder,\ntextarea::placeholder {\n  color: #64748b;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 160,
            "endLine": 164,
            "content": "\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 161,
            "endLine": 165,
            "content": "/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 169,
            "endLine": 173,
            "content": "\n::-webkit-scrollbar-thumb {\n  background: var(--grey-300);\n  border-radius: 4px;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 170,
            "endLine": 174,
            "content": "::-webkit-scrollbar-thumb {\n  background: var(--grey-300);\n  border-radius: 4px;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 201,
            "endLine": 205,
            "content": "  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 212,
            "endLine": 216,
            "content": "  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 202,
            "endLine": 206,
            "content": "    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 213,
            "endLine": 217,
            "content": "    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 203,
            "endLine": 207,
            "content": "    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 214,
            "endLine": 218,
            "content": "    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 243,
            "endLine": 247,
            "content": "\n@keyframes logoFloat {\n  0% { transform: translateY(0) scale(1); }\n  50% { transform: translateY(-12px) scale(1.04); }\n  100% { transform: translateY(0) scale(1); }"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 244,
            "endLine": 248,
            "content": "@keyframes logoFloat {\n  0% { transform: translateY(0) scale(1); }\n  50% { transform: translateY(-12px) scale(1.04); }\n  100% { transform: translateY(0) scale(1); }\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 283,
            "endLine": 287,
            "content": "  position: fixed;\n  inset: 0;\n  background: #fff;\n  z-index: 99999;\n  display: flex;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 453,
            "endLine": 457,
            "content": "  position: fixed;\n  inset: 0;\n  background: #fff;\n  z-index: 99999;\n  display: flex;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 284,
            "endLine": 288,
            "content": "  inset: 0;\n  background: #fff;\n  z-index: 99999;\n  display: flex;\n  align-items: center;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 454,
            "endLine": 458,
            "content": "  inset: 0;\n  background: #fff;\n  z-index: 99999;\n  display: flex;\n  align-items: center;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 285,
            "endLine": 289,
            "content": "  background: #fff;\n  z-index: 99999;\n  display: flex;\n  align-items: center;\n  justify-content: center;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 455,
            "endLine": 459,
            "content": "  background: #fff;\n  z-index: 99999;\n  display: flex;\n  align-items: center;\n  justify-content: center;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 291,
            "endLine": 295,
            "content": "  transition: opacity 0.7s;\n  opacity: 1;\n  pointer-events: all;\n}\n"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 514,
            "endLine": 518,
            "content": "  transition: opacity 0.7s;\n  opacity: 1;\n  pointer-events: all;\n}\n"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 689,
            "endLine": 693,
            "content": "  transition: opacity 0.7s;\n  opacity: 1;\n  pointer-events: all;\n}\n"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 907,
            "endLine": 911,
            "content": "  transition: opacity 0.7s;\n  opacity: 1;\n  pointer-events: all;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 295,
            "endLine": 299,
            "content": "\n.meridian-preloader.hide {\n  opacity: 0;\n  pointer-events: none;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 296,
            "endLine": 300,
            "content": ".meridian-preloader.hide {\n  opacity: 0;\n  pointer-events: none;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 316,
            "endLine": 320,
            "content": "\n.meridian-float:nth-child(2) { animation-delay: 1s; }\n.meridian-float:nth-child(3) { animation-delay: 2s; }\n.meridian-float:nth-child(4) { animation-delay: 3s; }\n"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 317,
            "endLine": 321,
            "content": ".meridian-float:nth-child(2) { animation-delay: 1s; }\n.meridian-float:nth-child(3) { animation-delay: 2s; }\n.meridian-float:nth-child(4) { animation-delay: 3s; }\n\n@keyframes floatY {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 320,
            "endLine": 324,
            "content": "\n@keyframes floatY {\n  from { transform: translateY(0); }\n  to { transform: translateY(-30px); }\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 321,
            "endLine": 325,
            "content": "@keyframes floatY {\n  from { transform: translateY(0); }\n  to { transform: translateY(-30px); }\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 334,
            "endLine": 338,
            "content": "  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 361,
            "endLine": 365,
            "content": "  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 412,
            "endLine": 416,
            "content": "  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 335,
            "endLine": 339,
            "content": "  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  margin-bottom: 0;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 362,
            "endLine": 366,
            "content": "  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  margin-bottom: 0;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 413,
            "endLine": 417,
            "content": "  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  margin-bottom: 0;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 336,
            "endLine": 340,
            "content": "  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  margin-bottom: 0;\n  margin-top: 2vh;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 363,
            "endLine": 367,
            "content": "  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  margin-bottom: 0;\n  margin-top: 2vh;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 337,
            "endLine": 341,
            "content": "  justify-content: center;\n  width: 100vw;\n  margin-bottom: 0;\n  margin-top: 2vh;\n  background: transparent !important;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 364,
            "endLine": 368,
            "content": "  justify-content: center;\n  width: 100vw;\n  margin-bottom: 0;\n  margin-top: 2vh;\n  background: transparent !important;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 338,
            "endLine": 342,
            "content": "  width: 100vw;\n  margin-bottom: 0;\n  margin-top: 2vh;\n  background: transparent !important;\n  border: none !important;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 365,
            "endLine": 369,
            "content": "  width: 100vw;\n  margin-bottom: 0;\n  margin-top: 2vh;\n  background: transparent !important;\n  border: none !important;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 339,
            "endLine": 343,
            "content": "  margin-bottom: 0;\n  margin-top: 2vh;\n  background: transparent !important;\n  border: none !important;\n  box-shadow: none !important;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 366,
            "endLine": 370,
            "content": "  margin-bottom: 0;\n  margin-top: 2vh;\n  background: transparent !important;\n  border: none !important;\n  box-shadow: none !important;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 340,
            "endLine": 344,
            "content": "  margin-top: 2vh;\n  background: transparent !important;\n  border: none !important;\n  box-shadow: none !important;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 367,
            "endLine": 371,
            "content": "  margin-top: 2vh;\n  background: transparent !important;\n  border: none !important;\n  box-shadow: none !important;\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 341,
            "endLine": 345,
            "content": "  background: transparent !important;\n  border: none !important;\n  box-shadow: none !important;\n}\n"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 368,
            "endLine": 372,
            "content": "  background: transparent !important;\n  border: none !important;\n  box-shadow: none !important;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 384,
            "endLine": 388,
            "content": "  font-size: 1.25rem;\n  font-weight: 400;\n  color: #52525b;\n  margin-bottom: 2.2vh;\n  text-align: center;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 479,
            "endLine": 483,
            "content": "  font-size: 1.25rem;\n  font-weight: 400;\n  color: #52525b;\n  margin-bottom: 2.2vh;\n  text-align: center;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 385,
            "endLine": 389,
            "content": "  font-weight: 400;\n  color: #52525b;\n  margin-bottom: 2.2vh;\n  text-align: center;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 480,
            "endLine": 484,
            "content": "  font-weight: 400;\n  color: #52525b;\n  margin-bottom: 2.2vh;\n  text-align: center;\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 386,
            "endLine": 390,
            "content": "  color: #52525b;\n  margin-bottom: 2.2vh;\n  text-align: center;\n}\n"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 481,
            "endLine": 485,
            "content": "  color: #52525b;\n  margin-bottom: 2.2vh;\n  text-align: center;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 390,
            "endLine": 394,
            "content": "\n.meridian-preloader-btn-below-logo {\n  background: linear-gradient(90deg, #7c3aed 0%, #6366f1 100%);\n  color: #fff;\n  font-size: 1rem;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 391,
            "endLine": 395,
            "content": ".meridian-preloader-btn-below-logo {\n  background: linear-gradient(90deg, #7c3aed 0%, #6366f1 100%);\n  color: #fff;\n  font-size: 1rem;\n  font-weight: 600;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 392,
            "endLine": 396,
            "content": "  background: linear-gradient(90deg, #7c3aed 0%, #6366f1 100%);\n  color: #fff;\n  font-size: 1rem;\n  font-weight: 600;\n  padding: 0.5em 1.2em;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 487,
            "endLine": 491,
            "content": "  background: linear-gradient(90deg, #7c3aed 0%, #6366f1 100%);\n  color: #fff;\n  font-size: 1rem;\n  font-weight: 600;\n  padding: 0.5em 1.2em;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 393,
            "endLine": 397,
            "content": "  color: #fff;\n  font-size: 1rem;\n  font-weight: 600;\n  padding: 0.5em 1.2em;\n  border: none;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 488,
            "endLine": 492,
            "content": "  color: #fff;\n  font-size: 1rem;\n  font-weight: 600;\n  padding: 0.5em 1.2em;\n  border: none;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 394,
            "endLine": 398,
            "content": "  font-size: 1rem;\n  font-weight: 600;\n  padding: 0.5em 1.2em;\n  border: none;\n  border-radius: 999px;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 489,
            "endLine": 493,
            "content": "  font-size: 1rem;\n  font-weight: 600;\n  padding: 0.5em 1.2em;\n  border: none;\n  border-radius: 999px;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 395,
            "endLine": 399,
            "content": "  font-weight: 600;\n  padding: 0.5em 1.2em;\n  border: none;\n  border-radius: 999px;\n  box-shadow: 0 2px 16px #a78bfa22;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 490,
            "endLine": 494,
            "content": "  font-weight: 600;\n  padding: 0.5em 1.2em;\n  border: none;\n  border-radius: 999px;\n  box-shadow: 0 2px 16px #a78bfa22;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 396,
            "endLine": 400,
            "content": "  padding: 0.5em 1.2em;\n  border: none;\n  border-radius: 999px;\n  box-shadow: 0 2px 16px #a78bfa22;\n  cursor: pointer;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 491,
            "endLine": 495,
            "content": "  padding: 0.5em 1.2em;\n  border: none;\n  border-radius: 999px;\n  box-shadow: 0 2px 16px #a78bfa22;\n  cursor: pointer;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 397,
            "endLine": 401,
            "content": "  border: none;\n  border-radius: 999px;\n  box-shadow: 0 2px 16px #a78bfa22;\n  cursor: pointer;\n  transition: background 0.2s, transform 0.2s;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 492,
            "endLine": 496,
            "content": "  border: none;\n  border-radius: 999px;\n  box-shadow: 0 2px 16px #a78bfa22;\n  cursor: pointer;\n  transition: background 0.2s, transform 0.2s;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 398,
            "endLine": 402,
            "content": "  border-radius: 999px;\n  box-shadow: 0 2px 16px #a78bfa22;\n  cursor: pointer;\n  transition: background 0.2s, transform 0.2s;\n  z-index: 2;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 493,
            "endLine": 497,
            "content": "  border-radius: 999px;\n  box-shadow: 0 2px 16px #a78bfa22;\n  cursor: pointer;\n  transition: background 0.2s, transform 0.2s;\n  z-index: 2;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 399,
            "endLine": 403,
            "content": "  box-shadow: 0 2px 16px #a78bfa22;\n  cursor: pointer;\n  transition: background 0.2s, transform 0.2s;\n  z-index: 2;\n  opacity: 0.97;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 494,
            "endLine": 498,
            "content": "  box-shadow: 0 2px 16px #a78bfa22;\n  cursor: pointer;\n  transition: background 0.2s, transform 0.2s;\n  z-index: 2;\n  opacity: 0.97;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 400,
            "endLine": 404,
            "content": "  cursor: pointer;\n  transition: background 0.2s, transform 0.2s;\n  z-index: 2;\n  opacity: 0.97;\n  text-align: center;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 495,
            "endLine": 499,
            "content": "  cursor: pointer;\n  transition: background 0.2s, transform 0.2s;\n  z-index: 2;\n  opacity: 0.97;\n  text-align: center;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 401,
            "endLine": 405,
            "content": "  transition: background 0.2s, transform 0.2s;\n  z-index: 2;\n  opacity: 0.97;\n  text-align: center;\n  margin-top: 0.5vh;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 496,
            "endLine": 500,
            "content": "  transition: background 0.2s, transform 0.2s;\n  z-index: 2;\n  opacity: 0.97;\n  text-align: center;\n  margin-top: 0.5vh;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 402,
            "endLine": 406,
            "content": "  z-index: 2;\n  opacity: 0.97;\n  text-align: center;\n  margin-top: 0.5vh;\n  align-self: center;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 497,
            "endLine": 501,
            "content": "  z-index: 2;\n  opacity: 0.97;\n  text-align: center;\n  margin-top: 0.5vh;\n  align-self: center;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 403,
            "endLine": 407,
            "content": "  opacity: 0.97;\n  text-align: center;\n  margin-top: 0.5vh;\n  align-self: center;\n  display: block;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 498,
            "endLine": 502,
            "content": "  opacity: 0.97;\n  text-align: center;\n  margin-top: 0.5vh;\n  align-self: center;\n  display: block;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 404,
            "endLine": 408,
            "content": "  text-align: center;\n  margin-top: 0.5vh;\n  align-self: center;\n  display: block;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 499,
            "endLine": 503,
            "content": "  text-align: center;\n  margin-top: 0.5vh;\n  align-self: center;\n  display: block;\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 405,
            "endLine": 409,
            "content": "  margin-top: 0.5vh;\n  align-self: center;\n  display: block;\n}\n"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 500,
            "endLine": 504,
            "content": "  margin-top: 0.5vh;\n  align-self: center;\n  display: block;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 485,
            "endLine": 489,
            "content": "\n.preloader-launch-btn {\n  background: linear-gradient(90deg, #7c3aed 0%, #6366f1 100%);\n  color: #fff;\n  font-size: 1rem;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 486,
            "endLine": 490,
            "content": ".preloader-launch-btn {\n  background: linear-gradient(90deg, #7c3aed 0%, #6366f1 100%);\n  color: #fff;\n  font-size: 1rem;\n  font-weight: 600;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 512,
            "endLine": 516,
            "content": "  overflow-x: hidden;\n  z-index: 99999;\n  transition: opacity 0.7s;\n  opacity: 1;\n  pointer-events: all;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 687,
            "endLine": 691,
            "content": "  overflow-x: hidden;\n  z-index: 99999;\n  transition: opacity 0.7s;\n  opacity: 1;\n  pointer-events: all;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 905,
            "endLine": 909,
            "content": "  overflow-x: hidden;\n  z-index: 99999;\n  transition: opacity 0.7s;\n  opacity: 1;\n  pointer-events: all;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 513,
            "endLine": 517,
            "content": "  z-index: 99999;\n  transition: opacity 0.7s;\n  opacity: 1;\n  pointer-events: all;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 688,
            "endLine": 692,
            "content": "  z-index: 99999;\n  transition: opacity 0.7s;\n  opacity: 1;\n  pointer-events: all;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 906,
            "endLine": 910,
            "content": "  z-index: 99999;\n  transition: opacity 0.7s;\n  opacity: 1;\n  pointer-events: all;\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 518,
            "endLine": 522,
            "content": "\n.preloader2-particles {\n  position: absolute;\n  top: 0; left: 0; width: 100%; height: 100%;\n  overflow: hidden;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 519,
            "endLine": 523,
            "content": ".preloader2-particles {\n  position: absolute;\n  top: 0; left: 0; width: 100%; height: 100%;\n  overflow: hidden;\n  z-index: 1;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 520,
            "endLine": 524,
            "content": "  position: absolute;\n  top: 0; left: 0; width: 100%; height: 100%;\n  overflow: hidden;\n  z-index: 1;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 695,
            "endLine": 699,
            "content": "  position: absolute;\n  top: 0; left: 0; width: 100%; height: 100%;\n  overflow: hidden;\n  z-index: 1;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 913,
            "endLine": 917,
            "content": "  position: absolute;\n  top: 0; left: 0; width: 100%; height: 100%;\n  overflow: hidden;\n  z-index: 1;\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 539,
            "endLine": 543,
            "content": "\n@keyframes preloader2-float {\n  0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.1; }\n  25% { transform: translateY(-30px) rotate(90deg); opacity: 0.2; }\n  50% { transform: translateY(-60px) rotate(180deg); opacity: 0.15; }"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 540,
            "endLine": 544,
            "content": "@keyframes preloader2-float {\n  0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.1; }\n  25% { transform: translateY(-30px) rotate(90deg); opacity: 0.2; }\n  50% { transform: translateY(-60px) rotate(180deg); opacity: 0.15; }\n  75% { transform: translateY(-30px) rotate(270deg); opacity: 0.1; }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 541,
            "endLine": 545,
            "content": "  0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.1; }\n  25% { transform: translateY(-30px) rotate(90deg); opacity: 0.2; }\n  50% { transform: translateY(-60px) rotate(180deg); opacity: 0.15; }\n  75% { transform: translateY(-30px) rotate(270deg); opacity: 0.1; }\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 719,
            "endLine": 723,
            "content": "  0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.1; }\n  25% { transform: translateY(-30px) rotate(90deg); opacity: 0.2; }\n  50% { transform: translateY(-50px) rotate(180deg); opacity: 0.15; }\n  75% { transform: translateY(-20px) rotate(270deg); opacity: 0.1; }\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 548,
            "endLine": 552,
            "content": "  position: relative;\n  z-index: 2;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 726,
            "endLine": 730,
            "content": "  position: relative;\n  z-index: 2;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 937,
            "endLine": 941,
            "content": "  position: relative;\n  z-index: 2;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 592,
            "endLine": 596,
            "content": "          position: relative;\n          z-index: 2;\n          min-height: 100vh;\n          display: flex;\n          align-items: center;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 549,
            "endLine": 553,
            "content": "  z-index: 2;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 727,
            "endLine": 731,
            "content": "  z-index: 2;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 938,
            "endLine": 942,
            "content": "  z-index: 2;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 550,
            "endLine": 554,
            "content": "  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 939,
            "endLine": 943,
            "content": "  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 551,
            "endLine": 555,
            "content": "  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 940,
            "endLine": 944,
            "content": "  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 552,
            "endLine": 556,
            "content": "  align-items: center;\n  justify-content: center;\n  padding: 20px;\n}\n"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 941,
            "endLine": 945,
            "content": "  align-items: center;\n  justify-content: center;\n  padding: 20px;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 556,
            "endLine": 560,
            "content": "\n.preloader2-hero-section {\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  border-radius: 30px;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 557,
            "endLine": 561,
            "content": ".preloader2-hero-section {\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  border-radius: 30px;\n  border: 1px solid rgba(0, 0, 0, 0.05);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 580,
            "endLine": 584,
            "content": "\n.preloader2-logo {\n  font-size: 3.5rem;\n  font-weight: 900;\n  background: linear-gradient(135deg, #7c3aed, #6366f1);"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 581,
            "endLine": 585,
            "content": ".preloader2-logo {\n  font-size: 3.5rem;\n  font-weight: 900;\n  background: linear-gradient(135deg, #7c3aed, #6366f1);\n  -webkit-background-clip: text;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 585,
            "endLine": 589,
            "content": "  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  margin-bottom: 20px;\n  letter-spacing: 8px;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 772,
            "endLine": 776,
            "content": "  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  margin-bottom: 24px;\n  letter-spacing: 12px;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 592,
            "endLine": 596,
            "content": "\n@keyframes preloader2-glow {\n  from { text-shadow: 0 0 20px rgba(124, 58, 237, 0.3); }\n  to { text-shadow: 0 0 30px rgba(124, 58, 237, 0.5); }\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 593,
            "endLine": 597,
            "content": "@keyframes preloader2-glow {\n  from { text-shadow: 0 0 20px rgba(124, 58, 237, 0.3); }\n  to { text-shadow: 0 0 30px rgba(124, 58, 237, 0.5); }\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 605,
            "endLine": 609,
            "content": "\n@keyframes preloader2-fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 606,
            "endLine": 610,
            "content": "@keyframes preloader2-fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 610,
            "endLine": 614,
            "content": "\n.preloader2-cta-button {\n  background: linear-gradient(135deg, #a78bfa, #7c3aed, #6366f1);\n  background-size: 300% 300%;\n  border: none;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 611,
            "endLine": 615,
            "content": ".preloader2-cta-button {\n  background: linear-gradient(135deg, #a78bfa, #7c3aed, #6366f1);\n  background-size: 300% 300%;\n  border: none;\n  padding: 18px 40px;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 630,
            "endLine": 634,
            "content": "  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n}\n.preloader2-cta-button:hover {"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 829,
            "endLine": 833,
            "content": "  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n}\n.preloader3-cta-button:hover {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 693,
            "endLine": 697,
            "content": "\n.preloader3-floating-elements {\n  position: absolute;\n  top: 0; left: 0; width: 100%; height: 100%;\n  overflow: hidden;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 694,
            "endLine": 698,
            "content": ".preloader3-floating-elements {\n  position: absolute;\n  top: 0; left: 0; width: 100%; height: 100%;\n  overflow: hidden;\n  z-index: 1;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 710,
            "endLine": 714,
            "content": "\n.preloader3-float-item:nth-child(1) { left: 10%; top: 20%; animation-delay: 0s; }\n.preloader3-float-item:nth-child(2) { left: 80%; top: 10%; animation-delay: 3s; }\n.preloader3-float-item:nth-child(3) { left: 15%; top: 70%; animation-delay: 6s; }\n.preloader3-float-item:nth-child(4) { left: 85%; top: 80%; animation-delay: 9s; }"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 711,
            "endLine": 715,
            "content": ".preloader3-float-item:nth-child(1) { left: 10%; top: 20%; animation-delay: 0s; }\n.preloader3-float-item:nth-child(2) { left: 80%; top: 10%; animation-delay: 3s; }\n.preloader3-float-item:nth-child(3) { left: 15%; top: 70%; animation-delay: 6s; }\n.preloader3-float-item:nth-child(4) { left: 85%; top: 80%; animation-delay: 9s; }\n.preloader3-float-item:nth-child(5) { left: 50%; top: 15%; animation-delay: 12s; }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 717,
            "endLine": 721,
            "content": "\n@keyframes preloader3-floatAround {\n  0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.1; }\n  25% { transform: translateY(-30px) rotate(90deg); opacity: 0.2; }\n  50% { transform: translateY(-50px) rotate(180deg); opacity: 0.15; }"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 718,
            "endLine": 722,
            "content": "@keyframes preloader3-floatAround {\n  0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.1; }\n  25% { transform: translateY(-30px) rotate(90deg); opacity: 0.2; }\n  50% { transform: translateY(-50px) rotate(180deg); opacity: 0.15; }\n  75% { transform: translateY(-20px) rotate(270deg); opacity: 0.1; }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 734,
            "endLine": 738,
            "content": "\n.preloader3-hero-section {\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(20px);\n  border-radius: 32px;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 735,
            "endLine": 739,
            "content": ".preloader3-hero-section {\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(20px);\n  border-radius: 32px;\n  border: 2px solid rgba(139, 92, 246, 0.1);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 767,
            "endLine": 771,
            "content": "\n.preloader3-logo {\n  font-size: 4rem;\n  font-weight: 900;\n  background: linear-gradient(135deg, #8b5cf6 0%, #3b82f6 50%, #06b6d4 100%);"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 768,
            "endLine": 772,
            "content": ".preloader3-logo {\n  font-size: 4rem;\n  font-weight: 900;\n  background: linear-gradient(135deg, #8b5cf6 0%, #3b82f6 50%, #06b6d4 100%);\n  -webkit-background-clip: text;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 798,
            "endLine": 802,
            "content": "\n.preloader3-cta-button {\n  background: linear-gradient(135deg, #8b5cf6, #7c3aed, #6d28d9);\n  background-size: 300% 300%;\n  border: none;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 799,
            "endLine": 803,
            "content": ".preloader3-cta-button {\n  background: linear-gradient(135deg, #8b5cf6, #7c3aed, #6d28d9);\n  background-size: 300% 300%;\n  border: none;\n  padding: 20px 48px;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 818,
            "endLine": 822,
            "content": "  content: '';\n  position: absolute;\n  top: 0; left: -100%;\n  width: 100%; height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 1030,
            "endLine": 1034,
            "content": "  content: '';\n  position: absolute;\n  top: 0; left: -100%;\n  width: 100%; height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 819,
            "endLine": 823,
            "content": "  position: absolute;\n  top: 0; left: -100%;\n  width: 100%; height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n  transition: left 0.6s ease;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 1031,
            "endLine": 1035,
            "content": "  position: absolute;\n  top: 0; left: -100%;\n  width: 100%; height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n  transition: left 0.8s cubic-bezier(0.16, 1, 0.3, 1);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 820,
            "endLine": 824,
            "content": "  top: 0; left: -100%;\n  width: 100%; height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n  transition: left 0.6s ease;\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 1032,
            "endLine": 1036,
            "content": "  top: 0; left: -100%;\n  width: 100%; height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n  transition: left 0.8s cubic-bezier(0.16, 1, 0.3, 1);\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 821,
            "endLine": 825,
            "content": "  width: 100%; height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n  transition: left 0.6s ease;\n}\n.preloader3-cta-button:hover::before {"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 1033,
            "endLine": 1037,
            "content": "  width: 100%; height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n  transition: left 0.8s cubic-bezier(0.16, 1, 0.3, 1);\n}\n.preloader4-cta-button:hover::before {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 822,
            "endLine": 826,
            "content": "  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n  transition: left 0.6s ease;\n}\n.preloader3-cta-button:hover::before {\n  left: 100%;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 1034,
            "endLine": 1038,
            "content": "  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n  transition: left 0.8s cubic-bezier(0.16, 1, 0.3, 1);\n}\n.preloader4-cta-button:hover::before {\n  left: 100%;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 861,
            "endLine": 865,
            "content": "\n.preloader3-hero-section:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 35px 60px rgba(0,0,0,0.12), 0 0 0 1px rgba(255,255,255,0.7);\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 862,
            "endLine": 866,
            "content": ".preloader3-hero-section:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 35px 60px rgba(0,0,0,0.12), 0 0 0 1px rgba(255,255,255,0.7);\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 911,
            "endLine": 915,
            "content": "\n.preloader4-floating-elements {\n  position: absolute;\n  top: 0; left: 0; width: 100%; height: 100%;\n  overflow: hidden;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 912,
            "endLine": 916,
            "content": ".preloader4-floating-elements {\n  position: absolute;\n  top: 0; left: 0; width: 100%; height: 100%;\n  overflow: hidden;\n  z-index: 1;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 930,
            "endLine": 934,
            "content": "\n@keyframes preloader4-minimalistFloat {\n  0%, 100% { transform: translateY(0px); opacity: 0.02; }\n  50% { transform: translateY(-40px); opacity: 0.06; }\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 931,
            "endLine": 935,
            "content": "@keyframes preloader4-minimalistFloat {\n  0%, 100% { transform: translateY(0px); opacity: 0.02; }\n  50% { transform: translateY(-40px); opacity: 0.06; }\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 945,
            "endLine": 949,
            "content": "\n.preloader4-hero-section {\n  background: rgba(255, 255, 255, 0.6);\n  backdrop-filter: blur(40px) saturate(180%);\n  border-radius: 24px;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 946,
            "endLine": 950,
            "content": ".preloader4-hero-section {\n  background: rgba(255, 255, 255, 0.6);\n  backdrop-filter: blur(40px) saturate(180%);\n  border-radius: 24px;\n  border: 1px solid rgba(255, 255, 255, 0.3);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 977,
            "endLine": 981,
            "content": "\n.preloader4-logo {\n  font-size: 3.8rem;\n  font-weight: 800;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 25%, #8b5cf6 50%, #3b82f6 75%, #06b6d4 100%);"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 978,
            "endLine": 982,
            "content": ".preloader4-logo {\n  font-size: 3.8rem;\n  font-weight: 800;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 25%, #8b5cf6 50%, #3b82f6 75%, #06b6d4 100%);\n  -webkit-background-clip: text;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 1011,
            "endLine": 1015,
            "content": "\n.preloader4-cta-button {\n  background: linear-gradient(135deg, #8b5cf6, #7c3aed);\n  border: none;\n  padding: 18px 48px;"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 1012,
            "endLine": 1016,
            "content": ".preloader4-cta-button {\n  background: linear-gradient(135deg, #8b5cf6, #7c3aed);\n  border: none;\n  padding: 18px 48px;\n  border-radius: 50px;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 1072,
            "endLine": 1076,
            "content": "\n.preloader4-hero-section:hover {\n  transform: translateY(-8px);\n  box-shadow: 0 48px 80px rgba(0,0,0,0.06), 0 16px 32px rgba(0,0,0,0.04), inset 0 1px 0 rgba(255,255,255,0.9);\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 1073,
            "endLine": 1077,
            "content": ".preloader4-hero-section:hover {\n  transform: translateY(-8px);\n  box-shadow: 0 48px 80px rgba(0,0,0,0.06), 0 16px 32px rgba(0,0,0,0.04), inset 0 1px 0 rgba(255,255,255,0.9);\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 1077,
            "endLine": 1081,
            "content": "\n.preloader4-logo:hover {\n  transform: scale(1.02);\n  filter: drop-shadow(0 4px 16px rgba(139, 92, 246, 0.25));\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 1078,
            "endLine": 1082,
            "content": ".preloader4-logo:hover {\n  transform: scale(1.02);\n  filter: drop-shadow(0 4px 16px rgba(139, 92, 246, 0.25));\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/globals.css",
            "startLine": 1082,
            "endLine": 1086,
            "content": "\n.preloader4-tagline:hover {\n  opacity: 1;\n  transform: scale(1.01);\n}"
          },
          {
            "file": "src/app/globals.css",
            "startLine": 1083,
            "endLine": 1087,
            "content": ".preloader4-tagline:hover {\n  opacity: 1;\n  transform: scale(1.01);\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 4,
            "endLine": 8,
            "content": "\n// Add interfaces for chat functionality\ninterface ChatMessage {\n  role: 'user' | 'assistant';\n  content: string;"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 5,
            "endLine": 9,
            "content": "// Add interfaces for chat functionality\ninterface ChatMessage {\n  role: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 4,
            "endLine": 8,
            "content": "\n// Add interfaces for chat functionality\ninterface ChatMessage {\n  role: 'user' | 'assistant';\n  content: string;"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 5,
            "endLine": 9,
            "content": "// Add interfaces for chat functionality\ninterface ChatMessage {\n  role: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 6,
            "endLine": 10,
            "content": "interface ChatMessage {\n  role: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;\n}"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 6,
            "endLine": 10,
            "content": "interface ChatMessage {\n  role: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 7,
            "endLine": 11,
            "content": "  role: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;\n}\n"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 7,
            "endLine": 11,
            "content": "  role: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 11,
            "endLine": 15,
            "content": "\nexport default function HelpPage() {\n  const [showUserGuide, setShowUserGuide] = useState(false);\n  const [showChatbot, setShowChatbot] = useState(false);\n  "
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 12,
            "endLine": 16,
            "content": "export default function HelpPage() {\n  const [showUserGuide, setShowUserGuide] = useState(false);\n  const [showChatbot, setShowChatbot] = useState(false);\n  \n  // Add chat state"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 15,
            "endLine": 19,
            "content": "  \n  // Add chat state\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 16,
            "endLine": 20,
            "content": "  // Add chat state\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState<Array<{role: string, content: string}>>([]);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 17,
            "endLine": 21,
            "content": "  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState<Array<{role: string, content: string}>>([]);\n"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 14,
            "endLine": 18,
            "content": "  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState<Array<{role: string, content: string}>>([]);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 18,
            "endLine": 22,
            "content": "  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState<Array<{role: string, content: string}>>([]);\n\n  const handleContactSupport = () => {"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 15,
            "endLine": 19,
            "content": "  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState<Array<{role: string, content: string}>>([]);\n\n  // Add function to send message to ChatGPT"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 19,
            "endLine": 23,
            "content": "  const [isLoading, setIsLoading] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState<Array<{role: string, content: string}>>([]);\n\n  const handleContactSupport = () => {\n    setShowChatbot(true);"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 16,
            "endLine": 20,
            "content": "  const [isLoading, setIsLoading] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState<Array<{role: string, content: string}>>([]);\n\n  // Add function to send message to ChatGPT\n  const sendMessage = async () => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 20,
            "endLine": 24,
            "content": "  const [conversationHistory, setConversationHistory] = useState<Array<{role: string, content: string}>>([]);\n\n  const handleContactSupport = () => {\n    setShowChatbot(true);\n  };"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 17,
            "endLine": 21,
            "content": "  const [conversationHistory, setConversationHistory] = useState<Array<{role: string, content: string}>>([]);\n\n  // Add function to send message to ChatGPT\n  const sendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 29,
            "endLine": 33,
            "content": "\n  // Add function to send message to ChatGPT\n  const sendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 30,
            "endLine": 34,
            "content": "  // Add function to send message to ChatGPT\n  const sendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n\n    const userMessage: ChatMessage = {"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 18,
            "endLine": 22,
            "content": "\n  // Add function to send message to ChatGPT\n  const sendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 19,
            "endLine": 23,
            "content": "  // Add function to send message to ChatGPT\n  const sendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n\n    const userMessage: ChatMessage = {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 31,
            "endLine": 35,
            "content": "  const sendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n\n    const userMessage: ChatMessage = {\n      role: 'user',"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 20,
            "endLine": 24,
            "content": "  const sendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n\n    const userMessage: ChatMessage = {\n      role: 'user',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 32,
            "endLine": 36,
            "content": "    if (!inputMessage.trim() || isLoading) return;\n\n    const userMessage: ChatMessage = {\n      role: 'user',\n      content: inputMessage.trim(),"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 21,
            "endLine": 25,
            "content": "    if (!inputMessage.trim() || isLoading) return;\n\n    const userMessage: ChatMessage = {\n      role: 'user',\n      content: inputMessage.trim(),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 33,
            "endLine": 37,
            "content": "\n    const userMessage: ChatMessage = {\n      role: 'user',\n      content: inputMessage.trim(),\n      timestamp: new Date()"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 34,
            "endLine": 38,
            "content": "    const userMessage: ChatMessage = {\n      role: 'user',\n      content: inputMessage.trim(),\n      timestamp: new Date()\n    };"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 22,
            "endLine": 26,
            "content": "\n    const userMessage: ChatMessage = {\n      role: 'user',\n      content: inputMessage.trim(),\n      timestamp: new Date()"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 23,
            "endLine": 27,
            "content": "    const userMessage: ChatMessage = {\n      role: 'user',\n      content: inputMessage.trim(),\n      timestamp: new Date()\n    };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 35,
            "endLine": 39,
            "content": "      role: 'user',\n      content: inputMessage.trim(),\n      timestamp: new Date()\n    };\n"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 24,
            "endLine": 28,
            "content": "      role: 'user',\n      content: inputMessage.trim(),\n      timestamp: new Date()\n    };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 36,
            "endLine": 40,
            "content": "      content: inputMessage.trim(),\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 25,
            "endLine": 29,
            "content": "      content: inputMessage.trim(),\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 37,
            "endLine": 41,
            "content": "      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 26,
            "endLine": 30,
            "content": "      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 38,
            "endLine": 42,
            "content": "    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsLoading(true);"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 27,
            "endLine": 31,
            "content": "    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsLoading(true);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 39,
            "endLine": 43,
            "content": "\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 28,
            "endLine": 32,
            "content": "\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 40,
            "endLine": 44,
            "content": "    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n\n    try {"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 29,
            "endLine": 33,
            "content": "    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 41,
            "endLine": 45,
            "content": "    setInputMessage('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('/api/chat', {"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 30,
            "endLine": 34,
            "content": "    setInputMessage('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('/api/chat', {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 42,
            "endLine": 46,
            "content": "    setIsLoading(true);\n\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 31,
            "endLine": 35,
            "content": "    setIsLoading(true);\n\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 43,
            "endLine": 47,
            "content": "\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 32,
            "endLine": 36,
            "content": "\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 44,
            "endLine": 48,
            "content": "    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 33,
            "endLine": 37,
            "content": "    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 45,
            "endLine": 49,
            "content": "      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 34,
            "endLine": 38,
            "content": "      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 46,
            "endLine": 50,
            "content": "        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 35,
            "endLine": 39,
            "content": "        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 47,
            "endLine": 51,
            "content": "        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: userMessage.content,"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 36,
            "endLine": 40,
            "content": "        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: userMessage.content,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 48,
            "endLine": 52,
            "content": "          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: userMessage.content,\n          conversationHistory: conversationHistory"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 37,
            "endLine": 41,
            "content": "          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: userMessage.content,\n          conversationHistory: conversationHistory"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 49,
            "endLine": 53,
            "content": "        },\n        body: JSON.stringify({\n          message: userMessage.content,\n          conversationHistory: conversationHistory\n        }),"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 38,
            "endLine": 42,
            "content": "        },\n        body: JSON.stringify({\n          message: userMessage.content,\n          conversationHistory: conversationHistory\n        }),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 50,
            "endLine": 54,
            "content": "        body: JSON.stringify({\n          message: userMessage.content,\n          conversationHistory: conversationHistory\n        }),\n      });"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 39,
            "endLine": 43,
            "content": "        body: JSON.stringify({\n          message: userMessage.content,\n          conversationHistory: conversationHistory\n        }),\n      });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 51,
            "endLine": 55,
            "content": "          message: userMessage.content,\n          conversationHistory: conversationHistory\n        }),\n      });\n"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 40,
            "endLine": 44,
            "content": "          message: userMessage.content,\n          conversationHistory: conversationHistory\n        }),\n      });\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 52,
            "endLine": 56,
            "content": "          conversationHistory: conversationHistory\n        }),\n      });\n\n      const data = await response.json();"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 41,
            "endLine": 45,
            "content": "          conversationHistory: conversationHistory\n        }),\n      });\n\n      const data = await response.json();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 54,
            "endLine": 58,
            "content": "      });\n\n      const data = await response.json();\n\n      if (response.ok) {"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 43,
            "endLine": 47,
            "content": "      });\n\n      const data = await response.json();\n\n      if (response.ok) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 55,
            "endLine": 59,
            "content": "\n      const data = await response.json();\n\n      if (response.ok) {\n        const assistantMessage: ChatMessage = {"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 44,
            "endLine": 48,
            "content": "\n      const data = await response.json();\n\n      if (response.ok) {\n        const assistantMessage: ChatMessage = {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 56,
            "endLine": 60,
            "content": "      const data = await response.json();\n\n      if (response.ok) {\n        const assistantMessage: ChatMessage = {\n          role: 'assistant',"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 45,
            "endLine": 49,
            "content": "      const data = await response.json();\n\n      if (response.ok) {\n        const assistantMessage: ChatMessage = {\n          role: 'assistant',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 57,
            "endLine": 61,
            "content": "\n      if (response.ok) {\n        const assistantMessage: ChatMessage = {\n          role: 'assistant',\n          content: data.response,"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 58,
            "endLine": 62,
            "content": "      if (response.ok) {\n        const assistantMessage: ChatMessage = {\n          role: 'assistant',\n          content: data.response,\n          timestamp: new Date()"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 46,
            "endLine": 50,
            "content": "\n      if (response.ok) {\n        const assistantMessage: ChatMessage = {\n          role: 'assistant',\n          content: data.response,"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 47,
            "endLine": 51,
            "content": "      if (response.ok) {\n        const assistantMessage: ChatMessage = {\n          role: 'assistant',\n          content: data.response,\n          timestamp: new Date()"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 59,
            "endLine": 63,
            "content": "        const assistantMessage: ChatMessage = {\n          role: 'assistant',\n          content: data.response,\n          timestamp: new Date()\n        };"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 48,
            "endLine": 52,
            "content": "        const assistantMessage: ChatMessage = {\n          role: 'assistant',\n          content: data.response,\n          timestamp: new Date()\n        };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 60,
            "endLine": 64,
            "content": "          role: 'assistant',\n          content: data.response,\n          timestamp: new Date()\n        };\n"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 49,
            "endLine": 53,
            "content": "          role: 'assistant',\n          content: data.response,\n          timestamp: new Date()\n        };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 61,
            "endLine": 65,
            "content": "          content: data.response,\n          timestamp: new Date()\n        };\n\n        setMessages(prev => [...prev, assistantMessage]);"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 50,
            "endLine": 54,
            "content": "          content: data.response,\n          timestamp: new Date()\n        };\n\n        setMessages(prev => [...prev, assistantMessage]);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 62,
            "endLine": 66,
            "content": "          timestamp: new Date()\n        };\n\n        setMessages(prev => [...prev, assistantMessage]);\n        setConversationHistory(data.conversationHistory);"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 51,
            "endLine": 55,
            "content": "          timestamp: new Date()\n        };\n\n        setMessages(prev => [...prev, assistantMessage]);\n        setConversationHistory(data.conversationHistory);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 63,
            "endLine": 67,
            "content": "        };\n\n        setMessages(prev => [...prev, assistantMessage]);\n        setConversationHistory(data.conversationHistory);\n      } else {"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 52,
            "endLine": 56,
            "content": "        };\n\n        setMessages(prev => [...prev, assistantMessage]);\n        setConversationHistory(data.conversationHistory);\n      } else {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 64,
            "endLine": 68,
            "content": "\n        setMessages(prev => [...prev, assistantMessage]);\n        setConversationHistory(data.conversationHistory);\n      } else {\n        throw new Error(data.error || 'Failed to get response');"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 65,
            "endLine": 69,
            "content": "        setMessages(prev => [...prev, assistantMessage]);\n        setConversationHistory(data.conversationHistory);\n      } else {\n        throw new Error(data.error || 'Failed to get response');\n      }"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 53,
            "endLine": 57,
            "content": "\n        setMessages(prev => [...prev, assistantMessage]);\n        setConversationHistory(data.conversationHistory);\n      } else {\n        throw new Error(data.error || 'Failed to get response');"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 54,
            "endLine": 58,
            "content": "        setMessages(prev => [...prev, assistantMessage]);\n        setConversationHistory(data.conversationHistory);\n      } else {\n        throw new Error(data.error || 'Failed to get response');\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 66,
            "endLine": 70,
            "content": "        setConversationHistory(data.conversationHistory);\n      } else {\n        throw new Error(data.error || 'Failed to get response');\n      }\n    } catch (error) {"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 55,
            "endLine": 59,
            "content": "        setConversationHistory(data.conversationHistory);\n      } else {\n        throw new Error(data.error || 'Failed to get response');\n      }\n    } catch (error) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 67,
            "endLine": 71,
            "content": "      } else {\n        throw new Error(data.error || 'Failed to get response');\n      }\n    } catch (error) {\n      console.error('Chat error:', error);"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 56,
            "endLine": 60,
            "content": "      } else {\n        throw new Error(data.error || 'Failed to get response');\n      }\n    } catch (error) {\n      console.error('Chat error:', error);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 68,
            "endLine": 72,
            "content": "        throw new Error(data.error || 'Failed to get response');\n      }\n    } catch (error) {\n      console.error('Chat error:', error);\n      const errorMessage: ChatMessage = {"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 57,
            "endLine": 61,
            "content": "        throw new Error(data.error || 'Failed to get response');\n      }\n    } catch (error) {\n      console.error('Chat error:', error);\n      const errorMessage: ChatMessage = {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 69,
            "endLine": 73,
            "content": "      }\n    } catch (error) {\n      console.error('Chat error:', error);\n      const errorMessage: ChatMessage = {\n        role: 'assistant',"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 58,
            "endLine": 62,
            "content": "      }\n    } catch (error) {\n      console.error('Chat error:', error);\n      const errorMessage: ChatMessage = {\n        role: 'assistant',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 70,
            "endLine": 74,
            "content": "    } catch (error) {\n      console.error('Chat error:', error);\n      const errorMessage: ChatMessage = {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again or contact support at support@meridianai.ca',"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 59,
            "endLine": 63,
            "content": "    } catch (error) {\n      console.error('Chat error:', error);\n      const errorMessage: ChatMessage = {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again or contact support at support@meridianai.ca',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 71,
            "endLine": 75,
            "content": "      console.error('Chat error:', error);\n      const errorMessage: ChatMessage = {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again or contact support at support@meridianai.ca',\n        timestamp: new Date()"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 60,
            "endLine": 64,
            "content": "      console.error('Chat error:', error);\n      const errorMessage: ChatMessage = {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again or contact support at support@meridianai.ca',\n        timestamp: new Date()"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 72,
            "endLine": 76,
            "content": "      const errorMessage: ChatMessage = {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again or contact support at support@meridianai.ca',\n        timestamp: new Date()\n      };"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 61,
            "endLine": 65,
            "content": "      const errorMessage: ChatMessage = {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again or contact support at support@meridianai.ca',\n        timestamp: new Date()\n      };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 73,
            "endLine": 77,
            "content": "        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again or contact support at support@meridianai.ca',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 62,
            "endLine": 66,
            "content": "        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again or contact support at support@meridianai.ca',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 74,
            "endLine": 78,
            "content": "        content: 'Sorry, I encountered an error. Please try again or contact support at support@meridianai.ca',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 63,
            "endLine": 67,
            "content": "        content: 'Sorry, I encountered an error. Please try again or contact support at support@meridianai.ca',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 75,
            "endLine": 79,
            "content": "        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 64,
            "endLine": 68,
            "content": "        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 76,
            "endLine": 80,
            "content": "      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 65,
            "endLine": 69,
            "content": "      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 77,
            "endLine": 81,
            "content": "      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 66,
            "endLine": 70,
            "content": "      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 82,
            "endLine": 86,
            "content": "\n  // Add function to handle quick action clicks\n  const handleQuickAction = (action: string) => {\n    let message = '';\n    switch (action) {"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 83,
            "endLine": 87,
            "content": "  // Add function to handle quick action clicks\n  const handleQuickAction = (action: string) => {\n    let message = '';\n    switch (action) {\n      case 'getting-started':"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 84,
            "endLine": 88,
            "content": "  const handleQuickAction = (action: string) => {\n    let message = '';\n    switch (action) {\n      case 'getting-started':\n        message = 'How do I get started with uploading my first bank statement?';"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 78,
            "endLine": 82,
            "content": "\n  const handleQuickAction = (action: string) => {\n    let message = '';\n    switch (action) {\n      case 'getting-started':"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 79,
            "endLine": 83,
            "content": "  const handleQuickAction = (action: string) => {\n    let message = '';\n    switch (action) {\n      case 'getting-started':\n        message = 'How do I get started with uploading my first bank statement?';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 85,
            "endLine": 89,
            "content": "    let message = '';\n    switch (action) {\n      case 'getting-started':\n        message = 'How do I get started with uploading my first bank statement?';\n        break;"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 80,
            "endLine": 84,
            "content": "    let message = '';\n    switch (action) {\n      case 'getting-started':\n        message = 'How do I get started with uploading my first bank statement?';\n        break;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 86,
            "endLine": 90,
            "content": "    switch (action) {\n      case 'getting-started':\n        message = 'How do I get started with uploading my first bank statement?';\n        break;\n      case 'file-upload':"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 81,
            "endLine": 85,
            "content": "    switch (action) {\n      case 'getting-started':\n        message = 'How do I get started with uploading my first bank statement?';\n        break;\n      case 'file-upload':"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 87,
            "endLine": 91,
            "content": "      case 'getting-started':\n        message = 'How do I get started with uploading my first bank statement?';\n        break;\n      case 'file-upload':\n        message = 'I\\'m having trouble uploading my bank statement file. Can you help?';"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 82,
            "endLine": 86,
            "content": "      case 'getting-started':\n        message = 'How do I get started with uploading my first bank statement?';\n        break;\n      case 'file-upload':\n        message = 'I\\'m having trouble uploading my bank statement file. Can you help?';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 88,
            "endLine": 92,
            "content": "        message = 'How do I get started with uploading my first bank statement?';\n        break;\n      case 'file-upload':\n        message = 'I\\'m having trouble uploading my bank statement file. Can you help?';\n        break;"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 83,
            "endLine": 87,
            "content": "        message = 'How do I get started with uploading my first bank statement?';\n        break;\n      case 'file-upload':\n        message = 'I\\'m having trouble uploading my bank statement file. Can you help?';\n        break;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 89,
            "endLine": 93,
            "content": "        break;\n      case 'file-upload':\n        message = 'I\\'m having trouble uploading my bank statement file. Can you help?';\n        break;\n      case 'export-help':"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 84,
            "endLine": 88,
            "content": "        break;\n      case 'file-upload':\n        message = 'I\\'m having trouble uploading my bank statement file. Can you help?';\n        break;\n      case 'export-help':"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 90,
            "endLine": 94,
            "content": "      case 'file-upload':\n        message = 'I\\'m having trouble uploading my bank statement file. Can you help?';\n        break;\n      case 'export-help':\n        message = 'How do I export my transactions to Xero or QuickBooks?';"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 85,
            "endLine": 89,
            "content": "      case 'file-upload':\n        message = 'I\\'m having trouble uploading my bank statement file. Can you help?';\n        break;\n      case 'export-help':\n        message = 'How do I export my transactions to Xero or QuickBooks?';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 91,
            "endLine": 95,
            "content": "        message = 'I\\'m having trouble uploading my bank statement file. Can you help?';\n        break;\n      case 'export-help':\n        message = 'How do I export my transactions to Xero or QuickBooks?';\n        break;"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 86,
            "endLine": 90,
            "content": "        message = 'I\\'m having trouble uploading my bank statement file. Can you help?';\n        break;\n      case 'export-help':\n        message = 'How do I export my transactions to Xero or QuickBooks?';\n        break;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 92,
            "endLine": 96,
            "content": "        break;\n      case 'export-help':\n        message = 'How do I export my transactions to Xero or QuickBooks?';\n        break;\n      case 'bank-compatibility':"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 87,
            "endLine": 91,
            "content": "        break;\n      case 'export-help':\n        message = 'How do I export my transactions to Xero or QuickBooks?';\n        break;\n      case 'bank-compatibility':"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 93,
            "endLine": 97,
            "content": "      case 'export-help':\n        message = 'How do I export my transactions to Xero or QuickBooks?';\n        break;\n      case 'bank-compatibility':\n        message = 'Which bank formats does Meridian AI support?';"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 88,
            "endLine": 92,
            "content": "      case 'export-help':\n        message = 'How do I export my transactions to Xero or QuickBooks?';\n        break;\n      case 'bank-compatibility':\n        message = 'Which bank formats does Meridian AI support?';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 94,
            "endLine": 98,
            "content": "        message = 'How do I export my transactions to Xero or QuickBooks?';\n        break;\n      case 'bank-compatibility':\n        message = 'Which bank formats does Meridian AI support?';\n        break;"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 89,
            "endLine": 93,
            "content": "        message = 'How do I export my transactions to Xero or QuickBooks?';\n        break;\n      case 'bank-compatibility':\n        message = 'Which bank formats does Meridian AI support?';\n        break;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 95,
            "endLine": 99,
            "content": "        break;\n      case 'bank-compatibility':\n        message = 'Which bank formats does Meridian AI support?';\n        break;\n      default:"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 90,
            "endLine": 94,
            "content": "        break;\n      case 'bank-compatibility':\n        message = 'Which bank formats does Meridian AI support?';\n        break;\n      default:"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 96,
            "endLine": 100,
            "content": "      case 'bank-compatibility':\n        message = 'Which bank formats does Meridian AI support?';\n        break;\n      default:\n        return;"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 91,
            "endLine": 95,
            "content": "      case 'bank-compatibility':\n        message = 'Which bank formats does Meridian AI support?';\n        break;\n      default:\n        return;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 97,
            "endLine": 101,
            "content": "        message = 'Which bank formats does Meridian AI support?';\n        break;\n      default:\n        return;\n    }"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 92,
            "endLine": 96,
            "content": "        message = 'Which bank formats does Meridian AI support?';\n        break;\n      default:\n        return;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 100,
            "endLine": 104,
            "content": "        return;\n    }\n    \n    setInputMessage(message);\n    setTimeout(() => sendMessage(), 100);"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 95,
            "endLine": 99,
            "content": "        return;\n    }\n    \n    setInputMessage(message);\n    setTimeout(() => sendMessage(), 100);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 101,
            "endLine": 105,
            "content": "    }\n    \n    setInputMessage(message);\n    setTimeout(() => sendMessage(), 100);\n  };"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 96,
            "endLine": 100,
            "content": "    }\n    \n    setInputMessage(message);\n    setTimeout(() => sendMessage(), 100);\n  };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 102,
            "endLine": 106,
            "content": "    \n    setInputMessage(message);\n    setTimeout(() => sendMessage(), 100);\n  };\n"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 97,
            "endLine": 101,
            "content": "    \n    setInputMessage(message);\n    setTimeout(() => sendMessage(), 100);\n  };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 103,
            "endLine": 107,
            "content": "    setInputMessage(message);\n    setTimeout(() => sendMessage(), 100);\n  };\n\n  return ("
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 98,
            "endLine": 102,
            "content": "    setInputMessage(message);\n    setTimeout(() => sendMessage(), 100);\n  };\n\n  return ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 6,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 110,
            "endLine": 114,
            "content": "      \n      <div className=\"relative min-h-screen bg-white\">\n        <div className=\"relative max-w-7xl mx-auto px-6 lg:px-8 py-12\">\n          {/* Page Header */}\n          <div className=\"mb-12\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 111,
            "endLine": 115,
            "content": "      <div className=\"relative min-h-screen bg-white\">\n        <div className=\"relative max-w-7xl mx-auto px-6 lg:px-8 py-12\">\n          {/* Page Header */}\n          <div className=\"mb-12\">\n            <div className=\"flex items-center space-x-4 mb-6\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 277,
            "endLine": 281,
            "content": "      \n      <div className=\"relative min-h-screen bg-white\">\n        <div className=\"relative max-w-7xl mx-auto px-6 lg:px-8 py-12\">\n          {/* Show a banner if using sample data */}\n          {isSample && ("
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 278,
            "endLine": 282,
            "content": "      <div className=\"relative min-h-screen bg-white\">\n        <div className=\"relative max-w-7xl mx-auto px-6 lg:px-8 py-12\">\n          {/* Show a banner if using sample data */}\n          {isSample && (\n            <div className=\"mb-6 p-4 bg-yellow-50 border-l-4 border-yellow-400 text-yellow-800 rounded\">"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 12,
            "endLine": 16,
            "content": "      \n      <div className=\"relative min-h-screen bg-white\">\n        <div className=\"relative max-w-7xl mx-auto px-6 lg:px-8 py-12\">\n          {/* Page Header */}\n          <div className=\"mb-12\">"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 13,
            "endLine": 17,
            "content": "      <div className=\"relative min-h-screen bg-white\">\n        <div className=\"relative max-w-7xl mx-auto px-6 lg:px-8 py-12\">\n          {/* Page Header */}\n          <div className=\"mb-12\">\n            <div className=\"flex items-center space-x-4 mb-6\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 112,
            "endLine": 116,
            "content": "        <div className=\"relative max-w-7xl mx-auto px-6 lg:px-8 py-12\">\n          {/* Page Header */}\n          <div className=\"mb-12\">\n            <div className=\"flex items-center space-x-4 mb-6\">\n              <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 14,
            "endLine": 18,
            "content": "        <div className=\"relative max-w-7xl mx-auto px-6 lg:px-8 py-12\">\n          {/* Page Header */}\n          <div className=\"mb-12\">\n            <div className=\"flex items-center space-x-4 mb-6\">\n              <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 113,
            "endLine": 117,
            "content": "          {/* Page Header */}\n          <div className=\"mb-12\">\n            <div className=\"flex items-center space-x-4 mb-6\">\n              <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 15,
            "endLine": 19,
            "content": "          {/* Page Header */}\n          <div className=\"mb-12\">\n            <div className=\"flex items-center space-x-4 mb-6\">\n              <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 114,
            "endLine": 118,
            "content": "          <div className=\"mb-12\">\n            <div className=\"flex items-center space-x-4 mb-6\">\n              <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 16,
            "endLine": 20,
            "content": "          <div className=\"mb-12\">\n            <div className=\"flex items-center space-x-4 mb-6\">\n              <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 115,
            "endLine": 119,
            "content": "            <div className=\"flex items-center space-x-4 mb-6\">\n              <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 17,
            "endLine": 21,
            "content": "            <div className=\"flex items-center space-x-4 mb-6\">\n              <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 116,
            "endLine": 120,
            "content": "              <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 184,
            "endLine": 188,
            "content": "                      <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                        <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                        </svg>\n                      </div>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 326,
            "endLine": 330,
            "content": "                <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 18,
            "endLine": 22,
            "content": "              <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 6,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 117,
            "endLine": 121,
            "content": "                <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              <div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 185,
            "endLine": 189,
            "content": "                        <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                        </svg>\n                      </div>\n                      <div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 472,
            "endLine": 476,
            "content": "                              <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                              </svg>\n                            </div>\n                            <h4 className=\"font-semibold text-slate-900 mb-2\">CSV Export</h4>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 327,
            "endLine": 331,
            "content": "                  <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n                <div>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 19,
            "endLine": 23,
            "content": "                <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n              </div>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 188,
            "endLine": 192,
            "content": "                  <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                  </svg>\n                </div>\n                <p className=\"text-sm\">Hi! I'm your AI assistant.</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 127,
            "endLine": 131,
            "content": "\n          {/* Quick Actions */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-12\">\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-6 hover:shadow-md transition-shadow\">\n              <div className=\"w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center mb-4\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 128,
            "endLine": 132,
            "content": "          {/* Quick Actions */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-12\">\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-6 hover:shadow-md transition-shadow\">\n              <div className=\"w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center mb-4\">\n                <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 5,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 130,
            "endLine": 134,
            "content": "            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-6 hover:shadow-md transition-shadow\">\n              <div className=\"w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center mb-4\">\n                <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                </svg>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 145,
            "endLine": 149,
            "content": "\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-6 hover:shadow-md transition-shadow\">\n              <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mb-4\">\n                <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m0 0V1a1 1 0 011-1h2a1 1 0 011 1v18a1 1 0 01-1 1H4a1 1 0 01-1-1V1a1 1 0 011-1h2a1 1 0 011 1v3m0 0h8m-8 0V1\" />"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 146,
            "endLine": 150,
            "content": "            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-6 hover:shadow-md transition-shadow\">\n              <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mb-4\">\n                <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m0 0V1a1 1 0 011-1h2a1 1 0 011 1v18a1 1 0 01-1 1H4a1 1 0 01-1-1V1a1 1 0 011-1h2a1 1 0 011 1v3m0 0h8m-8 0V1\" />\n                </svg>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 161,
            "endLine": 165,
            "content": "\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-6 hover:shadow-md transition-shadow opacity-60\">\n              <div className=\"w-12 h-12 bg-gray-100 rounded-xl flex items-center justify-center mb-4\">\n                <svg className=\"w-6 h-6 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 162,
            "endLine": 166,
            "content": "            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-6 hover:shadow-md transition-shadow opacity-60\">\n              <div className=\"w-12 h-12 bg-gray-100 rounded-xl flex items-center justify-center mb-4\">\n                <svg className=\"w-6 h-6 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                </svg>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 132,
            "endLine": 136,
            "content": "                <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-semibold text-slate-900 mb-2\">User Guide</h3>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 450,
            "endLine": 454,
            "content": "                              <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                              </svg>\n                            </div>\n                            <h4 className=\"font-semibold text-slate-900 mb-2\">Xero Integration</h4>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 903,
            "endLine": 907,
            "content": "                <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n              </div>\n              <h3 className=\"text-xl font-semibold text-slate-900 mb-2\">Email Support</h3>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 479,
            "endLine": 483,
            "content": "                      <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 10h2a2 2 0 012 2v6a2 2 0 01-2 2H3a2 2 0 01-2-2v-6a2 2 0 012-2zm0 0V6a2 2 0 012-2h2a2 2 0 012 2v4m0 0h6m0 0V6a2 2 0 012-2h2a2 2 0 012 2v4m0 0h2a2 2 0 012 2v6a2 2 0 01-2 2h-2a2 2 0 01-2-2v-6\" />\n                      </svg>\n                    </div>\n                    <div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 133,
            "endLine": 137,
            "content": "                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-semibold text-slate-900 mb-2\">User Guide</h3>\n              <p className=\"text-slate-600 text-sm mb-4\">Step-by-step instructions for using all features</p>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 186,
            "endLine": 190,
            "content": "                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                        </svg>\n                      </div>\n                      <div>\n                        <h2 className=\"text-3xl font-bold text-slate-900\">Meridian AI User Guide</h2>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 143,
            "endLine": 147,
            "content": "              </button>\n            </div>\n\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-6 hover:shadow-md transition-shadow\">\n              <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mb-4\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 159,
            "endLine": 163,
            "content": "              </button>\n            </div>\n\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-6 hover:shadow-md transition-shadow opacity-60\">\n              <div className=\"w-12 h-12 bg-gray-100 rounded-xl flex items-center justify-center mb-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 144,
            "endLine": 148,
            "content": "            </div>\n\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-6 hover:shadow-md transition-shadow\">\n              <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mb-4\">\n                <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 160,
            "endLine": 164,
            "content": "            </div>\n\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-6 hover:shadow-md transition-shadow opacity-60\">\n              <div className=\"w-12 h-12 bg-gray-100 rounded-xl flex items-center justify-center mb-4\">\n                <svg className=\"w-6 h-6 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 5,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 148,
            "endLine": 152,
            "content": "                <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m0 0V1a1 1 0 011-1h2a1 1 0 011 1v18a1 1 0 01-1 1H4a1 1 0 01-1-1V1a1 1 0 011-1h2a1 1 0 011 1v3m0 0h8m-8 0V1\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-semibold text-slate-900 mb-2\">Contact Support</h3>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 461,
            "endLine": 465,
            "content": "                              <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4a2 2 0 01-2 2h-2a2 2 0 00-2-2z\" />\n                              </svg>\n                            </div>\n                            <h4 className=\"font-semibold text-slate-900 mb-2\">QuickBooks</h4>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 571,
            "endLine": 575,
            "content": "                              <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                              </svg>\n                            </div>\n                            <div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 915,
            "endLine": 919,
            "content": "                <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                </svg>\n              </div>\n              <h3 className=\"text-xl font-semibold text-slate-900 mb-2\">Live Chat</h3>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 365,
            "endLine": 369,
            "content": "                      <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                      </svg>\n                    </div>\n                    <div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 176,
            "endLine": 180,
            "content": "\n          {/* User Guide Modal */}\n          {showUserGuide && (\n            <div className=\"fixed inset-0 bg-black/20 backdrop-blur-lg flex items-center justify-center z-50 p-4\">\n              <div className=\"bg-white/95 backdrop-blur-sm rounded-2xl shadow-2xl border border-white/20 max-w-6xl w-full max-h-[90vh] overflow-y-auto\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 177,
            "endLine": 181,
            "content": "          {/* User Guide Modal */}\n          {showUserGuide && (\n            <div className=\"fixed inset-0 bg-black/20 backdrop-blur-lg flex items-center justify-center z-50 p-4\">\n              <div className=\"bg-white/95 backdrop-blur-sm rounded-2xl shadow-2xl border border-white/20 max-w-6xl w-full max-h-[90vh] overflow-y-auto\">\n                <div className=\"p-8\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 182,
            "endLine": 186,
            "content": "                  <div className=\"flex items-center justify-between mb-8\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                        <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 334,
            "endLine": 338,
            "content": "                <div className=\"flex items-center justify-between mb-8\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-10 h-10 bg-slate-100 rounded-xl flex items-center justify-center\">\n                      <span className=\"text-slate-600 font-semibold\">3</span>\n                    </div>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 713,
            "endLine": 717,
            "content": "        <div className=\"flex items-center justify-between mb-8\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"w-10 h-10 bg-purple-100 rounded-xl flex items-center justify-center\">\n                              <AppIcons.financial.chart className=\"w-4 h-4 text-purple-600\" />\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 183,
            "endLine": 187,
            "content": "                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                        <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                        </svg>"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 391,
            "endLine": 395,
            "content": "                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                    <span className=\"text-slate-600 font-semibold\">4</span>\n                  </div>\n                  <h2 className=\"text-2xl font-semibold text-slate-900\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 325,
            "endLine": 329,
            "content": "              <div className=\"flex items-center space-x-4\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 203,
            "endLine": 207,
            "content": "                  \n                  <div className=\"space-y-12\">\n                    {/* Table of Contents */}\n                    <div className=\"bg-gradient-to-r from-purple-50 to-blue-50 rounded-2xl p-6 border border-purple-100\">\n                      <h3 className=\"text-xl font-semibold text-slate-900 mb-4\">Table of Contents</h3>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 204,
            "endLine": 208,
            "content": "                  <div className=\"space-y-12\">\n                    {/* Table of Contents */}\n                    <div className=\"bg-gradient-to-r from-purple-50 to-blue-50 rounded-2xl p-6 border border-purple-100\">\n                      <h3 className=\"text-xl font-semibold text-slate-900 mb-4\">Table of Contents</h3>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 223,
            "endLine": 227,
            "content": "\n                    {/* Getting Started */}\n                    <div id=\"getting-started\">\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 224,
            "endLine": 228,
            "content": "                    {/* Getting Started */}\n                    <div id=\"getting-started\">\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">1</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 7,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 226,
            "endLine": 230,
            "content": "                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">1</span>\n                        </span>\n                        Getting Started"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 279,
            "endLine": 283,
            "content": "                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">2</span>\n                        </span>\n                        File Preparation"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 338,
            "endLine": 342,
            "content": "                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">3</span>\n                        </span>\n                        Supported Canadian Banks"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 381,
            "endLine": 385,
            "content": "                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">4</span>\n                        </span>\n                        AI Categorization Engine"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 440,
            "endLine": 444,
            "content": "                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">5</span>\n                        </span>\n                        Export Options"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 486,
            "endLine": 490,
            "content": "                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">6</span>\n                        </span>\n                        Best Practices & Tips"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 561,
            "endLine": 565,
            "content": "                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">7</span>\n                        </span>\n                        CRA Compliance & Security"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 7,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 227,
            "endLine": 231,
            "content": "                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">1</span>\n                        </span>\n                        Getting Started\n                      </h3>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 280,
            "endLine": 284,
            "content": "                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">2</span>\n                        </span>\n                        File Preparation\n                      </h3>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 339,
            "endLine": 343,
            "content": "                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">3</span>\n                        </span>\n                        Supported Canadian Banks\n                      </h3>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 382,
            "endLine": 386,
            "content": "                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">4</span>\n                        </span>\n                        AI Categorization Engine\n                      </h3>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 441,
            "endLine": 445,
            "content": "                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">5</span>\n                        </span>\n                        Export Options\n                      </h3>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 487,
            "endLine": 491,
            "content": "                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">6</span>\n                        </span>\n                        Best Practices & Tips\n                      </h3>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 562,
            "endLine": 566,
            "content": "                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">7</span>\n                        </span>\n                        CRA Compliance & Security\n                      </h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 5,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 231,
            "endLine": 235,
            "content": "                      </h3>\n                      <div className=\"bg-white border border-slate-200 rounded-xl p-6 space-y-6\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                          <div className=\"text-center\">\n                            <div className=\"w-16 h-16 bg-blue-100 rounded-2xl flex items-center justify-center mx-auto mb-4\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 284,
            "endLine": 288,
            "content": "                      </h3>\n                      <div className=\"bg-white border border-slate-200 rounded-xl p-6 space-y-6\">\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                          <div>\n                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4\">Supported File Formats</h4>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 386,
            "endLine": 390,
            "content": "                      </h3>\n                      <div className=\"bg-white border border-slate-200 rounded-xl p-6 space-y-6\">\n                        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                          <div className=\"bg-gradient-to-br from-blue-50 to-purple-50 border border-blue-200 rounded-lg p-4\">\n                            <h4 className=\"font-semibold text-blue-900 mb-2\">Machine Learning</h4>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 445,
            "endLine": 449,
            "content": "                      </h3>\n                      <div className=\"bg-white border border-slate-200 rounded-xl p-6 space-y-6\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                          <div className=\"border border-slate-200 rounded-lg p-4 hover:border-purple-300 transition-colors\">\n                            <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 491,
            "endLine": 495,
            "content": "                      </h3>\n                      <div className=\"bg-white border border-slate-200 rounded-xl p-6 space-y-6\">\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                          <div>\n                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4 flex items-center\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 5,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 232,
            "endLine": 236,
            "content": "                      <div className=\"bg-white border border-slate-200 rounded-xl p-6 space-y-6\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                          <div className=\"text-center\">\n                            <div className=\"w-16 h-16 bg-blue-100 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n                              <svg className=\"w-8 h-8 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 285,
            "endLine": 289,
            "content": "                      <div className=\"bg-white border border-slate-200 rounded-xl p-6 space-y-6\">\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                          <div>\n                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4\">Supported File Formats</h4>\n                            <div className=\"space-y-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 387,
            "endLine": 391,
            "content": "                      <div className=\"bg-white border border-slate-200 rounded-xl p-6 space-y-6\">\n                        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                          <div className=\"bg-gradient-to-br from-blue-50 to-purple-50 border border-blue-200 rounded-lg p-4\">\n                            <h4 className=\"font-semibold text-blue-900 mb-2\">Machine Learning</h4>\n                            <p className=\"text-blue-800 text-sm\">Trained on 50,000+ Canadian business transactions for 95%+ accuracy</p>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 446,
            "endLine": 450,
            "content": "                      <div className=\"bg-white border border-slate-200 rounded-xl p-6 space-y-6\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                          <div className=\"border border-slate-200 rounded-lg p-4 hover:border-purple-300 transition-colors\">\n                            <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-3\">\n                              <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 492,
            "endLine": 496,
            "content": "                      <div className=\"bg-white border border-slate-200 rounded-xl p-6 space-y-6\">\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                          <div>\n                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4 flex items-center\">\n                              <svg className=\"w-5 h-5 text-green-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 246,
            "endLine": 250,
            "content": "                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                              </svg>\n                            </div>\n                            <h4 className=\"font-bold text-slate-900 mb-2\">Step 2: AI Processing</h4>\n                            <p className=\"text-slate-600 text-sm\">Our AI automatically categorizes transactions using Canadian tax codes</p>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 776,
            "endLine": 780,
            "content": "                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                            </svg>\n                          )}\n                        </div>\n                        <div className={`rounded-2xl p-3 shadow-sm max-w-xs border ${"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 800,
            "endLine": 804,
            "content": "                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                          </svg>\n                        </div>\n                        <div className=\"bg-white rounded-2xl rounded-tl-sm p-3 shadow-sm border border-slate-100\">\n                          <div className=\"flex space-x-1\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 254,
            "endLine": 258,
            "content": "                              <svg className=\"w-8 h-8 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                              </svg>\n                            </div>\n                            <h4 className=\"font-bold text-slate-900 mb-2\">Step 3: Export</h4>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 128,
            "endLine": 132,
            "content": "              <svg className=\"w-8 h-8 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </div>\n            <h3 className=\"text-xl font-semibold text-slate-900 mb-2\">Advanced Settings Coming Soon</h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 255,
            "endLine": 259,
            "content": "                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                              </svg>\n                            </div>\n                            <h4 className=\"font-bold text-slate-900 mb-2\">Step 3: Export</h4>\n                            <p className=\"text-slate-600 text-sm\">Export to Xero, QuickBooks, or download as CRA-compliant CSV</p>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 473,
            "endLine": 477,
            "content": "                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                              </svg>\n                            </div>\n                            <h4 className=\"font-semibold text-slate-900 mb-2\">CSV Export</h4>\n                            <p className=\"text-slate-600 text-sm mb-3\">CRA-compliant format for any accounting software</p>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 381,
            "endLine": 385,
            "content": "                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                      </svg>\n                      <span>{isGenerating ? 'Generating...' : 'Download PDF'}</span>\n                    </button>\n                  )}"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 611,
            "endLine": 615,
            "content": "                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-slate-900 mb-2\">PDF Export</h4>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 262,
            "endLine": 266,
            "content": "                        \n                        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                          <div className=\"flex items-start space-x-3\">\n                            <svg className=\"w-5 h-5 text-blue-600 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 263,
            "endLine": 267,
            "content": "                        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                          <div className=\"flex items-start space-x-3\">\n                            <svg className=\"w-5 h-5 text-blue-600 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                            </svg>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 276,
            "endLine": 280,
            "content": "\n                    {/* File Preparation */}\n                    <div id=\"file-preparation\">\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 277,
            "endLine": 281,
            "content": "                    {/* File Preparation */}\n                    <div id=\"file-preparation\">\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">2</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 286,
            "endLine": 290,
            "content": "                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                          <div>\n                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4\">Supported File Formats</h4>\n                            <div className=\"space-y-3\">\n                              <div className=\"flex items-center space-x-3 p-3 bg-green-50 rounded-lg border border-green-200\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 493,
            "endLine": 497,
            "content": "                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                          <div>\n                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4 flex items-center\">\n                              <svg className=\"w-5 h-5 text-green-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 290,
            "endLine": 294,
            "content": "                              <div className=\"flex items-center space-x-3 p-3 bg-green-50 rounded-lg border border-green-200\">\n                                <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                                <span className=\"font-medium text-green-900\">CSV (Comma Separated Values)</span>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 296,
            "endLine": 300,
            "content": "                              <div className=\"flex items-center space-x-3 p-3 bg-green-50 rounded-lg border border-green-200\">\n                                <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                                <span className=\"font-medium text-green-900\">OFX/QFX Bank Downloads</span>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 302,
            "endLine": 306,
            "content": "                              <div className=\"flex items-center space-x-3 p-3 bg-green-50 rounded-lg border border-green-200\">\n                                <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                                <span className=\"font-medium text-green-900\">Excel (.xlsx) with proper formatting</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 7,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 292,
            "endLine": 296,
            "content": "                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                                <span className=\"font-medium text-green-900\">CSV (Comma Separated Values)</span>\n                              </div>\n                              <div className=\"flex items-center space-x-3 p-3 bg-green-50 rounded-lg border border-green-200\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 298,
            "endLine": 302,
            "content": "                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                                <span className=\"font-medium text-green-900\">OFX/QFX Bank Downloads</span>\n                              </div>\n                              <div className=\"flex items-center space-x-3 p-3 bg-green-50 rounded-lg border border-green-200\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 304,
            "endLine": 308,
            "content": "                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                                <span className=\"font-medium text-green-900\">Excel (.xlsx) with proper formatting</span>\n                              </div>\n                            </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 582,
            "endLine": 586,
            "content": "                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                    <span className=\"text-green-800\">Provincial chart of accounts mapping</span>\n                                  </div>\n                                  <div className=\"flex items-center space-x-2\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 588,
            "endLine": 592,
            "content": "                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                    <span className=\"text-green-800\">HST/GST tax code compliance</span>\n                                  </div>\n                                </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 596,
            "endLine": 600,
            "content": "                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                    <span className=\"text-green-800\">Audit trail maintenance</span>\n                                  </div>\n                                  <div className=\"flex items-center space-x-2\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 602,
            "endLine": 606,
            "content": "                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                    <span className=\"text-green-800\">Digital receipt management</span>\n                                  </div>\n                                </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 295,
            "endLine": 299,
            "content": "                              </div>\n                              <div className=\"flex items-center space-x-3 p-3 bg-green-50 rounded-lg border border-green-200\">\n                                <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 301,
            "endLine": 305,
            "content": "                              </div>\n                              <div className=\"flex items-center space-x-3 p-3 bg-green-50 rounded-lg border border-green-200\">\n                                <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 310,
            "endLine": 314,
            "content": "                          \n                          <div>\n                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4\">Required Columns</h4>\n                            <div className=\"space-y-2 text-sm\">\n                              <div className=\"flex justify-between p-2 bg-slate-50 rounded\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 311,
            "endLine": 315,
            "content": "                          <div>\n                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4\">Required Columns</h4>\n                            <div className=\"space-y-2 text-sm\">\n                              <div className=\"flex justify-between p-2 bg-slate-50 rounded\">\n                                <span className=\"font-medium\">Date</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 317,
            "endLine": 321,
            "content": "                              </div>\n                              <div className=\"flex justify-between p-2 bg-slate-50 rounded\">\n                                <span className=\"font-medium\">Description</span>\n                                <span className=\"text-slate-600\">Merchant/payee name</span>\n                              </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 321,
            "endLine": 325,
            "content": "                              </div>\n                              <div className=\"flex justify-between p-2 bg-slate-50 rounded\">\n                                <span className=\"font-medium\">Amount</span>\n                                <span className=\"text-slate-600\">Transaction amount</span>\n                              </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 325,
            "endLine": 329,
            "content": "                              </div>\n                              <div className=\"flex justify-between p-2 bg-slate-50 rounded\">\n                                <span className=\"font-medium\">Type</span>\n                                <span className=\"text-slate-600\">Debit/Credit (optional)</span>\n                              </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 335,
            "endLine": 339,
            "content": "\n                    {/* Supported Banks */}\n                    <div>\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 336,
            "endLine": 340,
            "content": "                    {/* Supported Banks */}\n                    <div>\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">3</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 346,
            "endLine": 350,
            "content": "                          <div className=\"bg-gradient-to-br from-red-50 to-red-100 border border-red-200 rounded-lg p-4 text-center\">\n                            <div className=\"font-bold text-red-900 text-sm\">RBC</div>\n                            <div className=\"text-xs text-red-700\">Royal Bank</div>\n                          </div>\n                          <div className=\"bg-gradient-to-br from-green-50 to-green-100 border border-green-200 rounded-lg p-4 text-center\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 362,
            "endLine": 366,
            "content": "                          <div className=\"bg-gradient-to-br from-red-50 to-red-100 border border-red-200 rounded-lg p-4 text-center\">\n                            <div className=\"font-bold text-red-900 text-sm\">CIBC</div>\n                            <div className=\"text-xs text-red-700\">Imperial Bank</div>\n                          </div>\n                          <div className=\"bg-gradient-to-br from-purple-50 to-purple-100 border border-purple-200 rounded-lg p-4 text-center\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 371,
            "endLine": 375,
            "content": "                        \n                        <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                          <h5 className=\"font-semibold text-yellow-900 mb-2\">Additional Supported Institutions</h5>\n                          <p className=\"text-yellow-800 text-sm\">National Bank, Desjardins, Tangerine, PC Financial, and most Canadian credit unions. If your bank isn't listed, contact support.</p>\n                        </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 372,
            "endLine": 376,
            "content": "                        <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                          <h5 className=\"font-semibold text-yellow-900 mb-2\">Additional Supported Institutions</h5>\n                          <p className=\"text-yellow-800 text-sm\">National Bank, Desjardins, Tangerine, PC Financial, and most Canadian credit unions. If your bank isn't listed, contact support.</p>\n                        </div>\n                      </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 378,
            "endLine": 382,
            "content": "\n                    {/* AI Categorization */}\n                    <div id=\"ai-categorization\">\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 379,
            "endLine": 383,
            "content": "                    {/* AI Categorization */}\n                    <div id=\"ai-categorization\">\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">4</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 402,
            "endLine": 406,
            "content": "                        \n                        <div>\n                          <h4 className=\"text-lg font-semibold text-slate-900 mb-4\">Common Categories</h4>\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                            <div className=\"space-y-2\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 403,
            "endLine": 407,
            "content": "                        <div>\n                          <h4 className=\"text-lg font-semibold text-slate-900 mb-4\">Common Categories</h4>\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                            <div className=\"space-y-2\">\n                              <h5 className=\"font-medium text-slate-900\">Revenue</h5>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 437,
            "endLine": 441,
            "content": "\n                    {/* Export Options */}\n                    <div id=\"export-options\">\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 438,
            "endLine": 442,
            "content": "                    {/* Export Options */}\n                    <div id=\"export-options\">\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">5</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 5,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 448,
            "endLine": 452,
            "content": "                          <div className=\"border border-slate-200 rounded-lg p-4 hover:border-purple-300 transition-colors\">\n                            <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-3\">\n                              <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                              </svg>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 458,
            "endLine": 462,
            "content": "                          \n                          <div className=\"border border-slate-200 rounded-lg p-4 hover:border-purple-300 transition-colors\">\n                            <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-3\">\n                              <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4a2 2 0 01-2 2h-2a2 2 0 00-2-2z\" />"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 459,
            "endLine": 463,
            "content": "                          <div className=\"border border-slate-200 rounded-lg p-4 hover:border-purple-300 transition-colors\">\n                            <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-3\">\n                              <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4a2 2 0 01-2 2h-2a2 2 0 00-2-2z\" />\n                              </svg>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 469,
            "endLine": 473,
            "content": "                          \n                          <div className=\"border border-slate-200 rounded-lg p-4 hover:border-purple-300 transition-colors\">\n                            <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-3\">\n                              <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 470,
            "endLine": 474,
            "content": "                          <div className=\"border border-slate-200 rounded-lg p-4 hover:border-purple-300 transition-colors\">\n                            <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-3\">\n                              <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                              </svg>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 457,
            "endLine": 461,
            "content": "                          </div>\n                          \n                          <div className=\"border border-slate-200 rounded-lg p-4 hover:border-purple-300 transition-colors\">\n                            <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-3\">\n                              <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 468,
            "endLine": 472,
            "content": "                          </div>\n                          \n                          <div className=\"border border-slate-200 rounded-lg p-4 hover:border-purple-300 transition-colors\">\n                            <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-3\">\n                              <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 462,
            "endLine": 466,
            "content": "                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4a2 2 0 01-2 2h-2a2 2 0 00-2-2z\" />\n                              </svg>\n                            </div>\n                            <h4 className=\"font-semibold text-slate-900 mb-2\">QuickBooks</h4>\n                            <p className=\"text-slate-600 text-sm mb-3\">IIF and QBO file formats for seamless import</p>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 328,
            "endLine": 332,
            "content": "                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n                <div>\n                  <h1 className=\"text-3xl font-bold text-slate-900\">Financial Reports</h1>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 483,
            "endLine": 487,
            "content": "\n                    {/* Best Practices */}\n                    <div id=\"best-practices\">\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 484,
            "endLine": 488,
            "content": "                    {/* Best Practices */}\n                    <div id=\"best-practices\">\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">6</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 494,
            "endLine": 498,
            "content": "                          <div>\n                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4 flex items-center\">\n                              <svg className=\"w-5 h-5 text-green-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                              </svg>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 524,
            "endLine": 528,
            "content": "                          \n                          <div>\n                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4 flex items-center\">\n                              <svg className=\"w-5 h-5 text-red-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 525,
            "endLine": 529,
            "content": "                          <div>\n                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4 flex items-center\">\n                              <svg className=\"w-5 h-5 text-red-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                              </svg>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 495,
            "endLine": 499,
            "content": "                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4 flex items-center\">\n                              <svg className=\"w-5 h-5 text-green-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                              </svg>\n                              Do's"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 526,
            "endLine": 530,
            "content": "                            <h4 className=\"text-lg font-semibold text-slate-900 mb-4 flex items-center\">\n                              <svg className=\"w-5 h-5 text-red-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                              </svg>\n                              Don'ts"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 500,
            "endLine": 504,
            "content": "                            </h4>\n                            <ul className=\"space-y-3 text-slate-600\">\n                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-green-600 mt-1\">✓</span>\n                                <span>Upload statements monthly for best AI accuracy</span>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 531,
            "endLine": 535,
            "content": "                            </h4>\n                            <ul className=\"space-y-3 text-slate-600\">\n                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-red-600 mt-1\">✗</span>\n                                <span>Don't upload files with missing or corrupted data</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 501,
            "endLine": 505,
            "content": "                            <ul className=\"space-y-3 text-slate-600\">\n                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-green-600 mt-1\">✓</span>\n                                <span>Upload statements monthly for best AI accuracy</span>\n                              </li>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 532,
            "endLine": 536,
            "content": "                            <ul className=\"space-y-3 text-slate-600\">\n                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-red-600 mt-1\">✗</span>\n                                <span>Don't upload files with missing or corrupted data</span>\n                              </li>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 505,
            "endLine": 509,
            "content": "                              </li>\n                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-green-600 mt-1\">✓</span>\n                                <span>Review and correct AI suggestions to improve future categorization</span>\n                              </li>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 509,
            "endLine": 513,
            "content": "                              </li>\n                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-green-600 mt-1\">✓</span>\n                                <span>Use consistent merchant names in your banking</span>\n                              </li>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 513,
            "endLine": 517,
            "content": "                              </li>\n                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-green-600 mt-1\">✓</span>\n                                <span>Keep digital copies of receipts for CRA compliance</span>\n                              </li>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 517,
            "endLine": 521,
            "content": "                              </li>\n                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-green-600 mt-1\">✓</span>\n                                <span>Export data regularly to your accounting software</span>\n                              </li>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 5,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 533,
            "endLine": 537,
            "content": "                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-red-600 mt-1\">✗</span>\n                                <span>Don't upload files with missing or corrupted data</span>\n                              </li>\n                              <li className=\"flex items-start space-x-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 537,
            "endLine": 541,
            "content": "                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-red-600 mt-1\">✗</span>\n                                <span>Don't ignore AI categorization suggestions without review</span>\n                              </li>\n                              <li className=\"flex items-start space-x-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 541,
            "endLine": 545,
            "content": "                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-red-600 mt-1\">✗</span>\n                                <span>Don't mix personal and business transactions</span>\n                              </li>\n                              <li className=\"flex items-start space-x-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 545,
            "endLine": 549,
            "content": "                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-red-600 mt-1\">✗</span>\n                                <span>Don't wait until year-end to process statements</span>\n                              </li>\n                              <li className=\"flex items-start space-x-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 549,
            "endLine": 553,
            "content": "                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-red-600 mt-1\">✗</span>\n                                <span>Don't forget to backup your categorized data</span>\n                              </li>\n                            </ul>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 536,
            "endLine": 540,
            "content": "                              </li>\n                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-red-600 mt-1\">✗</span>\n                                <span>Don't ignore AI categorization suggestions without review</span>\n                              </li>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 540,
            "endLine": 544,
            "content": "                              </li>\n                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-red-600 mt-1\">✗</span>\n                                <span>Don't mix personal and business transactions</span>\n                              </li>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 544,
            "endLine": 548,
            "content": "                              </li>\n                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-red-600 mt-1\">✗</span>\n                                <span>Don't wait until year-end to process statements</span>\n                              </li>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 548,
            "endLine": 552,
            "content": "                              </li>\n                              <li className=\"flex items-start space-x-3\">\n                                <span className=\"text-red-600 mt-1\">✗</span>\n                                <span>Don't forget to backup your categorized data</span>\n                              </li>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 558,
            "endLine": 562,
            "content": "\n                    {/* CRA Compliance */}\n                    <div id=\"compliance\">\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 559,
            "endLine": 563,
            "content": "                    {/* CRA Compliance */}\n                    <div id=\"compliance\">\n                      <h3 className=\"text-2xl font-bold text-slate-900 mb-6 flex items-center\">\n                        <span className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n                          <span className=\"text-purple-600 font-bold\">7</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 579,
            "endLine": 583,
            "content": "                                <div className=\"space-y-2\">\n                                  <div className=\"flex items-center space-x-2\">\n                                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 593,
            "endLine": 597,
            "content": "                                <div className=\"space-y-2\">\n                                  <div className=\"flex items-center space-x-2\">\n                                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 580,
            "endLine": 584,
            "content": "                                  <div className=\"flex items-center space-x-2\">\n                                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                    <span className=\"text-green-800\">Provincial chart of accounts mapping</span>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 586,
            "endLine": 590,
            "content": "                                  <div className=\"flex items-center space-x-2\">\n                                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                    <span className=\"text-green-800\">HST/GST tax code compliance</span>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 594,
            "endLine": 598,
            "content": "                                  <div className=\"flex items-center space-x-2\">\n                                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                    <span className=\"text-green-800\">Audit trail maintenance</span>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 600,
            "endLine": 604,
            "content": "                                  <div className=\"flex items-center space-x-2\">\n                                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                    <span className=\"text-green-800\">Digital receipt management</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 581,
            "endLine": 585,
            "content": "                                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                    <span className=\"text-green-800\">Provincial chart of accounts mapping</span>\n                                  </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 587,
            "endLine": 591,
            "content": "                                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                    <span className=\"text-green-800\">HST/GST tax code compliance</span>\n                                  </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 595,
            "endLine": 599,
            "content": "                                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                    <span className=\"text-green-800\">Audit trail maintenance</span>\n                                  </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 601,
            "endLine": 605,
            "content": "                                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                    <span className=\"text-green-800\">Digital receipt management</span>\n                                  </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 585,
            "endLine": 589,
            "content": "                                  </div>\n                                  <div className=\"flex items-center space-x-2\">\n                                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 599,
            "endLine": 603,
            "content": "                                  </div>\n                                  <div className=\"flex items-center space-x-2\">\n                                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 611,
            "endLine": 615,
            "content": "                        \n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                          <div className=\"border border-slate-200 rounded-lg p-4\">\n                            <h5 className=\"font-semibold text-slate-900 mb-3\">Data Security</h5>\n                            <ul className=\"space-y-2 text-sm text-slate-600\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 612,
            "endLine": 616,
            "content": "                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                          <div className=\"border border-slate-200 rounded-lg p-4\">\n                            <h5 className=\"font-semibold text-slate-900 mb-3\">Data Security</h5>\n                            <ul className=\"space-y-2 text-sm text-slate-600\">\n                              <li>• Bank-level 256-bit encryption</li>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 613,
            "endLine": 617,
            "content": "                          <div className=\"border border-slate-200 rounded-lg p-4\">\n                            <h5 className=\"font-semibold text-slate-900 mb-3\">Data Security</h5>\n                            <ul className=\"space-y-2 text-sm text-slate-600\">\n                              <li>• Bank-level 256-bit encryption</li>\n                              <li>• SOC 2 Type II compliance</li>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 622,
            "endLine": 626,
            "content": "                          \n                          <div className=\"border border-slate-200 rounded-lg p-4\">\n                            <h5 className=\"font-semibold text-slate-900 mb-3\">Privacy Protection</h5>\n                            <ul className=\"space-y-2 text-sm text-slate-600\">\n                              <li>• PIPEDA compliant</li>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 623,
            "endLine": 627,
            "content": "                          <div className=\"border border-slate-200 rounded-lg p-4\">\n                            <h5 className=\"font-semibold text-slate-900 mb-3\">Privacy Protection</h5>\n                            <ul className=\"space-y-2 text-sm text-slate-600\">\n                              <li>• PIPEDA compliant</li>\n                              <li>• Local data processing</li>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 636,
            "endLine": 640,
            "content": "                  \n                  <div className=\"mt-8 pt-6 border-t border-slate-200\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"text-sm text-slate-600\">\n                        Need more help? Contact our support team for personalized assistance."
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 637,
            "endLine": 641,
            "content": "                  <div className=\"mt-8 pt-6 border-t border-slate-200\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"text-sm text-slate-600\">\n                        Need more help? Contact our support team for personalized assistance.\n                      </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 654,
            "endLine": 658,
            "content": "\n          {/* Chatbot Modal */}\n          {showChatbot && (\n            <div className=\"fixed bottom-4 right-4 w-96 h-[600px] bg-white rounded-2xl shadow-2xl flex flex-col z-50 animate-slide-up border border-slate-200\">\n                {/* Chatbot Header */}"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 655,
            "endLine": 659,
            "content": "          {/* Chatbot Modal */}\n          {showChatbot && (\n            <div className=\"fixed bottom-4 right-4 w-96 h-[600px] bg-white rounded-2xl shadow-2xl flex flex-col z-50 animate-slide-up border border-slate-200\">\n                {/* Chatbot Header */}\n                <div className=\"bg-gradient-to-r from-green-500 to-blue-500 text-white p-4 rounded-t-2xl\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 663,
            "endLine": 667,
            "content": "                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                        </svg>\n                      </div>\n                      <div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 676,
            "endLine": 680,
            "content": "                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                    </button>\n                  </div>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 144,
            "endLine": 148,
            "content": "              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 664,
            "endLine": 668,
            "content": "                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                        </svg>\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold\">Meridian Support</h3>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 916,
            "endLine": 920,
            "content": "                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                </svg>\n              </div>\n              <h3 className=\"text-xl font-semibold text-slate-900 mb-2\">Live Chat</h3>\n              <p className=\"text-slate-600 mb-4\">Chat with our support team in real-time</p>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 112,
            "endLine": 116,
            "content": "              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n            </svg>\n          </button>\n          \n          {/* Tooltip */}"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 189,
            "endLine": 193,
            "content": "                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                  </svg>\n                </div>\n                <p className=\"text-sm\">Hi! I'm your AI assistant.</p>\n                <p className=\"text-xs mt-1\">Ask me anything about Meridian AI!</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 675,
            "endLine": 679,
            "content": "                    >\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                    </button>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 143,
            "endLine": 147,
            "content": "            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 682,
            "endLine": 686,
            "content": "\n                {/* Chat Messages Area */}\n                <div className=\"flex-1 p-4 overflow-y-auto bg-gradient-to-b from-slate-50 to-white animate-fade-in\">\n                  <div className=\"space-y-4\">\n                    {/* Welcome Message - only show if no messages */}"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 683,
            "endLine": 687,
            "content": "                {/* Chat Messages Area */}\n                <div className=\"flex-1 p-4 overflow-y-auto bg-gradient-to-b from-slate-50 to-white animate-fade-in\">\n                  <div className=\"space-y-4\">\n                    {/* Welcome Message - only show if no messages */}\n                    {messages.length === 0 && ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 690,
            "endLine": 694,
            "content": "                          <div className=\"w-8 h-8 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0\">\n                            <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                            </svg>\n                          </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 798,
            "endLine": 802,
            "content": "                        <div className=\"w-8 h-8 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0\">\n                          <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                          </svg>\n                        </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 691,
            "endLine": 695,
            "content": "                            <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                            </svg>\n                          </div>\n                          <div className=\"bg-white rounded-2xl rounded-tl-sm p-3 shadow-sm max-w-xs border border-slate-100\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 771,
            "endLine": 775,
            "content": "                            <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                            </svg>\n                          ) : (\n                            <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 775,
            "endLine": 779,
            "content": "                            <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                            </svg>\n                          )}\n                        </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 799,
            "endLine": 803,
            "content": "                          <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                          </svg>\n                        </div>\n                        <div className=\"bg-white rounded-2xl rounded-tl-sm p-3 shadow-sm border border-slate-100\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 692,
            "endLine": 696,
            "content": "                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                            </svg>\n                          </div>\n                          <div className=\"bg-white rounded-2xl rounded-tl-sm p-3 shadow-sm max-w-xs border border-slate-100\">\n                            <p className=\"text-sm text-slate-800\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 772,
            "endLine": 776,
            "content": "                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                            </svg>\n                          ) : (\n                            <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 38,
            "endLine": 42,
            "content": "                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                </div>\n                <h2 className=\"text-xl font-semibold text-slate-900\">Account</h2>\n              </div>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 132,
            "endLine": 136,
            "content": "                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                </svg>\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-sm\">Meridian AI Assistant</h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 702,
            "endLine": 706,
            "content": "\n                        {/* Quick Actions */}\n                        <div className=\"space-y-2 animate-fade-in-delay\">\n                          <p className=\"text-xs text-slate-500 text-center\">Quick actions:</p>\n                          <div className=\"space-y-2\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 703,
            "endLine": 707,
            "content": "                        {/* Quick Actions */}\n                        <div className=\"space-y-2 animate-fade-in-delay\">\n                          <p className=\"text-xs text-slate-500 text-center\">Quick actions:</p>\n                          <div className=\"space-y-2\">\n                            <button "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 717,
            "endLine": 721,
            "content": "                            \n                            <button \n                              onClick={() => handleQuickAction('file-upload')}\n                              className=\"w-full text-left bg-blue-50 hover:bg-blue-100 border border-blue-200 rounded-lg p-3 transition-all duration-200 hover:shadow-sm hover:scale-[1.02]\"\n                            >"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 718,
            "endLine": 722,
            "content": "                            <button \n                              onClick={() => handleQuickAction('file-upload')}\n                              className=\"w-full text-left bg-blue-50 hover:bg-blue-100 border border-blue-200 rounded-lg p-3 transition-all duration-200 hover:shadow-sm hover:scale-[1.02]\"\n                            >\n                              <div className=\"flex items-center space-x-2\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 728,
            "endLine": 732,
            "content": "                            \n                            <button \n                              onClick={() => handleQuickAction('export-help')}\n                              className=\"w-full text-left bg-green-50 hover:bg-green-100 border border-green-200 rounded-lg p-3 transition-all duration-200 hover:shadow-sm hover:scale-[1.02]\"\n                            >"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 729,
            "endLine": 733,
            "content": "                            <button \n                              onClick={() => handleQuickAction('export-help')}\n                              className=\"w-full text-left bg-green-50 hover:bg-green-100 border border-green-200 rounded-lg p-3 transition-all duration-200 hover:shadow-sm hover:scale-[1.02]\"\n                            >\n                              <div className=\"flex items-center space-x-2\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 739,
            "endLine": 743,
            "content": "                            \n                            <button \n                              onClick={() => handleQuickAction('bank-compatibility')}\n                              className=\"w-full text-left bg-orange-50 hover:bg-orange-100 border border-orange-200 rounded-lg p-3 transition-all duration-200 hover:shadow-sm hover:scale-[1.02]\"\n                            >"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 740,
            "endLine": 744,
            "content": "                            <button \n                              onClick={() => handleQuickAction('bank-compatibility')}\n                              className=\"w-full text-left bg-orange-50 hover:bg-orange-100 border border-orange-200 rounded-lg p-3 transition-all duration-200 hover:shadow-sm hover:scale-[1.02]\"\n                            >\n                              <div className=\"flex items-center space-x-2\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 752,
            "endLine": 756,
            "content": "\n                        {/* Status Indicator */}\n                        <div className=\"bg-green-50 border border-green-200 rounded-lg p-3 animate-fade-in-delay-2\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 753,
            "endLine": 757,
            "content": "                        {/* Status Indicator */}\n                        <div className=\"bg-green-50 border border-green-200 rounded-lg p-3 animate-fade-in-delay-2\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n                            <p className=\"text-xs font-medium text-green-900\">ChatGPT AI Assistant</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 763,
            "endLine": 767,
            "content": "\n                    {/* Chat Messages */}\n                    {messages.map((message, index) => (\n                      <div key={index} className={`flex items-start space-x-2 ${message.role === 'user' ? 'flex-row-reverse space-x-reverse' : ''}`}>\n                        <div className={`w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 ${"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 764,
            "endLine": 768,
            "content": "                    {/* Chat Messages */}\n                    {messages.map((message, index) => (\n                      <div key={index} className={`flex items-start space-x-2 ${message.role === 'user' ? 'flex-row-reverse space-x-reverse' : ''}`}>\n                        <div className={`w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 ${\n                          message.role === 'user' ? 'bg-blue-500' : 'bg-green-500'"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 789,
            "endLine": 793,
            "content": "                            {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                          </p>\n                        </div>\n                      </div>\n                    ))}"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 206,
            "endLine": 210,
            "content": "                        {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                      </p>\n                    </div>\n                  </div>\n                ))}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 794,
            "endLine": 798,
            "content": "\n                    {/* Loading indicator */}\n                    {isLoading && (\n                      <div className=\"flex items-start space-x-2\">\n                        <div className=\"w-8 h-8 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 795,
            "endLine": 799,
            "content": "                    {/* Loading indicator */}\n                    {isLoading && (\n                      <div className=\"flex items-start space-x-2\">\n                        <div className=\"w-8 h-8 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0\">\n                          <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 804,
            "endLine": 808,
            "content": "                          <div className=\"flex space-x-1\">\n                            <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\"></div>\n                            <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                            <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                          </div>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 214,
            "endLine": 218,
            "content": "                      <div className=\"flex space-x-1\">\n                        <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\"></div>\n                        <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                        <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                      </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 805,
            "endLine": 809,
            "content": "                            <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\"></div>\n                            <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                            <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                          </div>\n                        </div>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 215,
            "endLine": 219,
            "content": "                        <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\"></div>\n                        <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                        <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                      </div>\n                    </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 806,
            "endLine": 810,
            "content": "                            <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                            <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                          </div>\n                        </div>\n                      </div>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 216,
            "endLine": 220,
            "content": "                        <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                        <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                      </div>\n                    </div>\n                  </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 807,
            "endLine": 811,
            "content": "                            <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                          </div>\n                        </div>\n                      </div>\n                    )}"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 217,
            "endLine": 221,
            "content": "                        <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                      </div>\n                    </div>\n                  </div>\n                )}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 814,
            "endLine": 818,
            "content": "\n                {/* Chat Input */}\n                <div className=\"p-4 border-t border-gray-200 bg-white rounded-b-2xl\">\n                  <div className=\"flex space-x-2\">\n                    <input"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 815,
            "endLine": 819,
            "content": "                {/* Chat Input */}\n                <div className=\"p-4 border-t border-gray-200 bg-white rounded-b-2xl\">\n                  <div className=\"flex space-x-2\">\n                    <input\n                      type=\"text\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 834,
            "endLine": 838,
            "content": "                      ) : (\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n                        </svg>\n                      )}"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 144,
            "endLine": 148,
            "content": "        ) : (\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n        )}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 5,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 835,
            "endLine": 839,
            "content": "                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n                        </svg>\n                      )}\n                    </button>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 380,
            "endLine": 384,
            "content": "                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                      </svg>\n                      <span>{isGenerating ? 'Generating...' : 'Download PDF'}</span>\n                    </button>"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 145,
            "endLine": 149,
            "content": "          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n        )}\n      </button>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 131,
            "endLine": 135,
            "content": "                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                </svg>\n              </div>\n              <div>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 243,
            "endLine": 247,
            "content": "                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n                </svg>\n              </button>\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 836,
            "endLine": 840,
            "content": "                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n                        </svg>\n                      )}\n                    </button>\n                  </div>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 244,
            "endLine": 248,
            "content": "                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n                </svg>\n              </button>\n            </div>\n          </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 847,
            "endLine": 851,
            "content": "\n          {/* FAQ Section */}\n          <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8 mb-12\">\n            <h2 className=\"text-2xl font-bold text-slate-900 mb-8\">Frequently Asked Questions</h2>\n            "
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 848,
            "endLine": 852,
            "content": "          {/* FAQ Section */}\n          <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8 mb-12\">\n            <h2 className=\"text-2xl font-bold text-slate-900 mb-8\">Frequently Asked Questions</h2>\n            \n            <div className=\"space-y-6\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 851,
            "endLine": 855,
            "content": "            \n            <div className=\"space-y-6\">\n              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">How do I upload my bank statements?</h3>\n                <p className=\"text-slate-600\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 852,
            "endLine": 856,
            "content": "            <div className=\"space-y-6\">\n              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">How do I upload my bank statements?</h3>\n                <p className=\"text-slate-600\">\n                  Simply drag and drop your CSV bank statement files into the upload area on the main page. "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 7,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 853,
            "endLine": 857,
            "content": "              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">How do I upload my bank statements?</h3>\n                <p className=\"text-slate-600\">\n                  Simply drag and drop your CSV bank statement files into the upload area on the main page. \n                  We support all major Canadian banks including RBC, TD, BMO, Scotia, and CIBC. "
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 861,
            "endLine": 865,
            "content": "\n              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">How accurate is the AI categorization?</h3>\n                <p className=\"text-slate-600\">\n                  Our AI engine achieves 95%+ accuracy on Canadian business transactions. It's trained on thousands "
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 862,
            "endLine": 866,
            "content": "              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">How accurate is the AI categorization?</h3>\n                <p className=\"text-slate-600\">\n                  Our AI engine achieves 95%+ accuracy on Canadian business transactions. It's trained on thousands \n                  of real transactions and continuously learns from user feedback. You can always review and correct "
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 870,
            "endLine": 874,
            "content": "\n              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Can I export to my accounting software?</h3>\n                <p className=\"text-slate-600\">\n                  Yes! We support direct export to Xero, QuickBooks, Sage 50, and generic CSV formats. "
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 871,
            "endLine": 875,
            "content": "              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Can I export to my accounting software?</h3>\n                <p className=\"text-slate-600\">\n                  Yes! We support direct export to Xero, QuickBooks, Sage 50, and generic CSV formats. \n                  All exports are CRA-compliant and include proper chart of accounts mapping for your province."
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 878,
            "endLine": 882,
            "content": "\n              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Is my financial data secure?</h3>\n                <p className=\"text-slate-600\">\n                  Absolutely. We use bank-level encryption, process data locally when possible, and never store "
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 879,
            "endLine": 883,
            "content": "              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Is my financial data secure?</h3>\n                <p className=\"text-slate-600\">\n                  Absolutely. We use bank-level encryption, process data locally when possible, and never store \n                  sensitive financial information permanently. All data transmission is encrypted and we're "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 859,
            "endLine": 863,
            "content": "                </p>\n              </div>\n\n              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">How accurate is the AI categorization?</h3>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 868,
            "endLine": 872,
            "content": "                </p>\n              </div>\n\n              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Can I export to my accounting software?</h3>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 876,
            "endLine": 880,
            "content": "                </p>\n              </div>\n\n              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Is my financial data secure?</h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 860,
            "endLine": 864,
            "content": "              </div>\n\n              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">How accurate is the AI categorization?</h3>\n                <p className=\"text-slate-600\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 869,
            "endLine": 873,
            "content": "              </div>\n\n              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Can I export to my accounting software?</h3>\n                <p className=\"text-slate-600\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 877,
            "endLine": 881,
            "content": "              </div>\n\n              <div className=\"border-b border-slate-200 pb-6\">\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">Is my financial data secure?</h3>\n                <p className=\"text-slate-600\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 887,
            "endLine": 891,
            "content": "\n              <div>\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">What file formats do you support?</h3>\n                <p className=\"text-slate-600\">\n                  We support CSV files from all major Canadian banks. Common formats include transaction exports "
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 888,
            "endLine": 892,
            "content": "              <div>\n                <h3 className=\"text-lg font-semibold text-slate-900 mb-3\">What file formats do you support?</h3>\n                <p className=\"text-slate-600\">\n                  We support CSV files from all major Canadian banks. Common formats include transaction exports \n                  from online banking, credit card statements, and business account downloads. If you have a "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 898,
            "endLine": 902,
            "content": "\n          {/* Contact Information */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <div className=\"bg-gradient-to-br from-blue-50 to-purple-50 rounded-2xl p-8 border border-blue-100\">\n              <div className=\"w-12 h-12 bg-white rounded-xl flex items-center justify-center mb-4 shadow-sm\">"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 899,
            "endLine": 903,
            "content": "          {/* Contact Information */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <div className=\"bg-gradient-to-br from-blue-50 to-purple-50 rounded-2xl p-8 border border-blue-100\">\n              <div className=\"w-12 h-12 bg-white rounded-xl flex items-center justify-center mb-4 shadow-sm\">\n                <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 902,
            "endLine": 906,
            "content": "              <div className=\"w-12 h-12 bg-white rounded-xl flex items-center justify-center mb-4 shadow-sm\">\n                <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n              </div>"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 914,
            "endLine": 918,
            "content": "              <div className=\"w-12 h-12 bg-white rounded-xl flex items-center justify-center mb-4 shadow-sm\">\n                <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                </svg>\n              </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/help/page.tsx",
            "startLine": 912,
            "endLine": 916,
            "content": "\n            <div className=\"bg-gradient-to-br from-green-50 to-blue-50 rounded-2xl p-8 border border-green-100\">\n              <div className=\"w-12 h-12 bg-white rounded-xl flex items-center justify-center mb-4 shadow-sm\">\n                <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />"
          },
          {
            "file": "src/app/help/page.tsx",
            "startLine": 913,
            "endLine": 917,
            "content": "            <div className=\"bg-gradient-to-br from-green-50 to-blue-50 rounded-2xl p-8 border border-green-100\">\n              <div className=\"w-12 h-12 bg-white rounded-xl flex items-center justify-center mb-4 shadow-sm\">\n                <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                </svg>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/layout.tsx",
            "startLine": 9,
            "endLine": 13,
            "content": "\nexport const metadata: Metadata = {\n  title: 'Meridian AI - Canadian Bookkeeping Automation',\n  description: 'AI-powered bank statement processing and categorization for Canadian businesses. Automate your bookkeeping with CRA-compliant export formats.',\n  keywords: 'bookkeeping, accounting, AI, Canada, CRA, bank statements, Xero, QuickBooks',"
          },
          {
            "file": "src/app/layout.tsx",
            "startLine": 10,
            "endLine": 14,
            "content": "export const metadata: Metadata = {\n  title: 'Meridian AI - Canadian Bookkeeping Automation',\n  description: 'AI-powered bank statement processing and categorization for Canadian businesses. Automate your bookkeeping with CRA-compliant export formats.',\n  keywords: 'bookkeeping, accounting, AI, Canada, CRA, bank statements, Xero, QuickBooks',\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/layout.tsx",
            "startLine": 15,
            "endLine": 19,
            "content": "\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"en\">\n      <body>"
          },
          {
            "file": "src/app/layout.tsx",
            "startLine": 16,
            "endLine": 20,
            "content": "export default function RootLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <ErrorBoundary>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/login/page.tsx",
            "startLine": 8,
            "endLine": 12,
            "content": "\nexport default function LoginPage() {\n  const supabase = getSupabaseClient();\n  const { user } = useAuth();\n  const router = useRouter();"
          },
          {
            "file": "src/app/login/page.tsx",
            "startLine": 9,
            "endLine": 13,
            "content": "export default function LoginPage() {\n  const supabase = getSupabaseClient();\n  const { user } = useAuth();\n  const router = useRouter();\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/login/page.tsx",
            "startLine": 19,
            "endLine": 23,
            "content": "\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-slate-50\">\n      <div className=\"bg-white p-8 rounded-xl shadow-lg w-full max-w-md\">\n        <h1 className=\"text-2xl font-bold mb-4 text-center\">Sign in to Meridian AI</h1>"
          },
          {
            "file": "src/app/login/page.tsx",
            "startLine": 20,
            "endLine": 24,
            "content": "  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-slate-50\">\n      <div className=\"bg-white p-8 rounded-xl shadow-lg w-full max-w-md\">\n        <h1 className=\"text-2xl font-bold mb-4 text-center\">Sign in to Meridian AI</h1>\n        <Auth"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import { Transaction, ValidationResult } from '../lib/types';\nimport { BankFormat } from '../data/bankFormats';\nimport { DuplicateDetectionResult } from '../lib/duplicateDetector';\nimport { AIEngine } from '../lib/aiEngine';\nimport FileUpload from '../components/FileUpload';"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import { Transaction, ValidationResult } from '../lib/types';\nimport { BankFormat } from '../data/bankFormats';\nimport { CheckCircle, AlertTriangle, TrendingUp, FileText, Calendar, DollarSign } from 'lucide-react';\n\ninterface ProcessingResultsProps {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 20,
            "endLine": 24,
            "content": "\nexport default function Dashboard() {\n  const { financialData, setDashboardData } = useFinancialData();\n  const { user, mounted } = useAuth();\n  const [transactions, setTransactions] = useState<Transaction[]>([]);"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 21,
            "endLine": 25,
            "content": "export default function Dashboard() {\n  const { financialData, setDashboardData } = useFinancialData();\n  const { user, mounted } = useAuth();\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [processingResults, setProcessingResults] = useState<{"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 37,
            "endLine": 41,
            "content": "\n  // AI Engine instance for feedback training (client-side only)\n  const aiEngineRef = useRef<AIEngine | null>(null);\n  useEffect(() => {\n    if (typeof window !== 'undefined' && !aiEngineRef.current) {"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 38,
            "endLine": 42,
            "content": "  // AI Engine instance for feedback training (client-side only)\n  const aiEngineRef = useRef<AIEngine | null>(null);\n  useEffect(() => {\n    if (typeof window !== 'undefined' && !aiEngineRef.current) {\n      // Pass user ID to AIEngine constructor"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 49,
            "endLine": 53,
            "content": "\n  // Update AIEngine when user changes\n  useEffect(() => {\n    if (typeof window !== 'undefined' && aiEngineRef.current) {\n      // Recreate AIEngine with new user ID"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 50,
            "endLine": 54,
            "content": "  // Update AIEngine when user changes\n  useEffect(() => {\n    if (typeof window !== 'undefined' && aiEngineRef.current) {\n      // Recreate AIEngine with new user ID\n      aiEngineRef.current = new AIEngine('ON', user?.id);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 59,
            "endLine": 63,
            "content": "\n  // Sync with global context for persistence (only on mount or when financialData changes externally)\n  useEffect(() => {\n    if (financialData?.dashboard && !transactions.length) {\n      const dashboard = financialData.dashboard;"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 60,
            "endLine": 64,
            "content": "  // Sync with global context for persistence (only on mount or when financialData changes externally)\n  useEffect(() => {\n    if (financialData?.dashboard && !transactions.length) {\n      const dashboard = financialData.dashboard;\n      setTransactions(dashboard.transactions);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 77,
            "endLine": 81,
            "content": "\n  // Save to global context whenever local state changes (debounced to prevent loops)\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (transactions.length > 0 || processingResults) {"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 78,
            "endLine": 82,
            "content": "  // Save to global context whenever local state changes (debounced to prevent loops)\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (transactions.length > 0 || processingResults) {\n        setDashboardData({"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 91,
            "endLine": 95,
            "content": "\n    return () => clearTimeout(timeoutId);\n  }, [transactions, processingResults, currentStep, duplicateResult, selectedProvince, setDashboardData]);\n\n  const handleFileProcessed = (data: {"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 92,
            "endLine": 96,
            "content": "    return () => clearTimeout(timeoutId);\n  }, [transactions, processingResults, currentStep, duplicateResult, selectedProvince, setDashboardData]);\n\n  const handleFileProcessed = (data: {\n    transactions: Transaction[];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 94,
            "endLine": 98,
            "content": "\n  const handleFileProcessed = (data: {\n    transactions: Transaction[];\n    validation: ValidationResult;\n    bankFormat: BankFormat | 'Unknown';"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 95,
            "endLine": 99,
            "content": "  const handleFileProcessed = (data: {\n    transactions: Transaction[];\n    validation: ValidationResult;\n    bankFormat: BankFormat | 'Unknown';\n    duplicateResult?: DuplicateDetectionResult;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 96,
            "endLine": 100,
            "content": "    transactions: Transaction[];\n    validation: ValidationResult;\n    bankFormat: BankFormat | 'Unknown';\n    duplicateResult?: DuplicateDetectionResult;\n    stats: any;"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 13,
            "endLine": 17,
            "content": "    transactions: Transaction[];\n    validation: ValidationResult;\n    bankFormat: BankFormat | 'Unknown';\n    duplicateResult?: DuplicateDetectionResult;\n    stats: any;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 751,
            "endLine": 755,
            "content": "    transactions: Transaction[];\n    validation: ValidationResult;\n    bankFormat: BankFormat | 'Unknown';\n    duplicateResult?: DuplicateDetectionResult;\n    stats: {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 97,
            "endLine": 101,
            "content": "    validation: ValidationResult;\n    bankFormat: BankFormat | 'Unknown';\n    duplicateResult?: DuplicateDetectionResult;\n    stats: any;\n  }) => {"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 14,
            "endLine": 18,
            "content": "    validation: ValidationResult;\n    bankFormat: BankFormat | 'Unknown';\n    duplicateResult?: DuplicateDetectionResult;\n    stats: any;\n  }) => void;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 752,
            "endLine": 756,
            "content": "    validation: ValidationResult;\n    bankFormat: BankFormat | 'Unknown';\n    duplicateResult?: DuplicateDetectionResult;\n    stats: {\n      total: number;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 108,
            "endLine": 112,
            "content": "    \n    // Handle duplicate detection results\n    if (data.duplicateResult) {\n      setDuplicateResult(data.duplicateResult);\n      setShowDuplicateWarning(data.duplicateResult.duplicateCount > 0);"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 109,
            "endLine": 113,
            "content": "    // Handle duplicate detection results\n    if (data.duplicateResult) {\n      setDuplicateResult(data.duplicateResult);\n      setShowDuplicateWarning(data.duplicateResult.duplicateCount > 0);\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 114,
            "endLine": 118,
            "content": "    \n    setError(null);\n    setErrorFileName(undefined);\n    setCurrentStep('review');\n  };"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 115,
            "endLine": 119,
            "content": "    setError(null);\n    setErrorFileName(undefined);\n    setCurrentStep('review');\n  };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 119,
            "endLine": 123,
            "content": "\n  const handleError = (errorMessage: string, fileName?: string) => {\n    setError(errorMessage);\n    setErrorFileName(fileName);\n    setTransactions([]);"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 120,
            "endLine": 124,
            "content": "  const handleError = (errorMessage: string, fileName?: string) => {\n    setError(errorMessage);\n    setErrorFileName(fileName);\n    setTransactions([]);\n    setProcessingResults(null);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 127,
            "endLine": 131,
            "content": "\n  const handleTransactionUpdate = (id: string, updates: Partial<Transaction>) => {\n    console.log('[DEBUG] handleTransactionUpdate called:', { id, updates });\n    setTransactions(prev => {\n      const newTransactions = prev.map(t => "
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 128,
            "endLine": 132,
            "content": "  const handleTransactionUpdate = (id: string, updates: Partial<Transaction>) => {\n    console.log('[DEBUG] handleTransactionUpdate called:', { id, updates });\n    setTransactions(prev => {\n      const newTransactions = prev.map(t => \n        t.id === id ? { ...t, ...updates } : t"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 142,
            "endLine": 146,
            "content": "\n  const handleResolveDuplicates = (cleanTransactions: Transaction[]) => {\n    setTransactions(cleanTransactions);\n    setShowDuplicateWarning(false);\n    setDuplicateResult(null);"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 143,
            "endLine": 147,
            "content": "  const handleResolveDuplicates = (cleanTransactions: Transaction[]) => {\n    setTransactions(cleanTransactions);\n    setShowDuplicateWarning(false);\n    setDuplicateResult(null);\n  };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 156,
            "endLine": 160,
            "content": "\n  const handleNewFile = () => {\n    // Clear all data and go back to upload step\n    setTransactions([]);\n    setProcessingResults(null);"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 157,
            "endLine": 161,
            "content": "  const handleNewFile = () => {\n    // Clear all data and go back to upload step\n    setTransactions([]);\n    setProcessingResults(null);\n    setDuplicateResult(null);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 173,
            "endLine": 177,
            "content": "\n  const handleDownloadTemplate = () => {\n    // Create and download a sample CSV template\n    const template = `Date,Description,Amount\n2024-01-15,Grocery Store Purchase,-125.50"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 174,
            "endLine": 178,
            "content": "  const handleDownloadTemplate = () => {\n    // Create and download a sample CSV template\n    const template = `Date,Description,Amount\n2024-01-15,Grocery Store Purchase,-125.50\n2024-01-16,Salary Deposit,2500.00"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 181,
            "endLine": 185,
            "content": "    \n    const blob = new Blob([template], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 182,
            "endLine": 186,
            "content": "    const blob = new Blob([template], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'meridian-template.csv';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 192,
            "endLine": 196,
            "content": "\n  const handleRetry = () => {\n    setError(null);\n    setErrorFileName(undefined);\n  };"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 193,
            "endLine": 197,
            "content": "  const handleRetry = () => {\n    setError(null);\n    setErrorFileName(undefined);\n  };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 197,
            "endLine": 201,
            "content": "\n  // Debug logging\n  console.log('[DEBUG] Dashboard render:', { \n    currentStep, \n    processingResults: !!processingResults, "
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 198,
            "endLine": 202,
            "content": "  // Debug logging\n  console.log('[DEBUG] Dashboard render:', { \n    currentStep, \n    processingResults: !!processingResults, \n    transactionsLength: transactions.length,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 205,
            "endLine": 209,
            "content": "\n  // Redirect to login if not authenticated (only after component is mounted)\n  // Temporarily disabled for testing - uncomment when Supabase is properly configured\n  /*\n  if (mounted && !user) {"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 206,
            "endLine": 210,
            "content": "  // Redirect to login if not authenticated (only after component is mounted)\n  // Temporarily disabled for testing - uncomment when Supabase is properly configured\n  /*\n  if (mounted && !user) {\n    return ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 235,
            "endLine": 239,
            "content": "\n      {/* Enhanced Main Content Area */}\n      <div className=\"relative max-w-screen-xl mx-auto px-2 py-20\">\n        <div className=\"space-y-20\">\n          {/* Enhanced Progress Indicator */}"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 236,
            "endLine": 240,
            "content": "      {/* Enhanced Main Content Area */}\n      <div className=\"relative max-w-screen-xl mx-auto px-2 py-20\">\n        <div className=\"space-y-20\">\n          {/* Enhanced Progress Indicator */}\n          <div className=\"flex items-center justify-center\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 289,
            "endLine": 293,
            "content": "\n          {/* Modern CSV Format Guide */}\n          {currentStep === 'upload' && !error && (\n            <div>\n              <div className=\"bg-white rounded-3xl p-10 border border-slate-200 shadow-xl shadow-slate-500/5\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 290,
            "endLine": 294,
            "content": "          {/* Modern CSV Format Guide */}\n          {currentStep === 'upload' && !error && (\n            <div>\n              <div className=\"bg-white rounded-3xl p-10 border border-slate-200 shadow-xl shadow-slate-500/5\">\n                <div className=\"flex items-center space-x-4 mb-8\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 295,
            "endLine": 299,
            "content": "                  <div className=\"w-12 h-12 bg-gradient-to-br from-purple-600 to-purple-700 rounded-2xl flex items-center justify-center shadow-lg shadow-purple-500/25\">\n                    <span className=\"text-white text-xl\">📋</span>\n                  </div>\n                  <div>\n                    <h2 className=\"text-2xl font-bold text-slate-900 mb-1\">Upload Your Bank Statement</h2>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 251,
            "endLine": 255,
            "content": "            <div className=\"w-12 h-12 bg-gradient-to-br from-purple-600 to-purple-700 rounded-2xl flex items-center justify-center flex-shrink-0 shadow-lg shadow-purple-500/25\">\n              <span className=\"text-white font-bold text-lg\">1</span>\n            </div>\n            <div>\n              <p className=\"font-bold text-slate-900 text-lg mb-2\">Review & Approve</p>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 260,
            "endLine": 264,
            "content": "            <div className=\"w-12 h-12 bg-gradient-to-br from-purple-600 to-purple-700 rounded-2xl flex items-center justify-center flex-shrink-0 shadow-lg shadow-purple-500/25\">\n              <span className=\"text-white font-bold text-lg\">2</span>\n            </div>\n            <div>\n              <p className=\"font-bold text-slate-900 text-lg mb-2\">Export & Import</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 307,
            "endLine": 311,
            "content": "\n          {/* Step 2: Processing Results */}\n          {currentStep === 'review' && processingResults && transactions.length > 0 && (\n            <>\n              <div className=\"bg-white rounded-2xl p-12\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 308,
            "endLine": 312,
            "content": "          {/* Step 2: Processing Results */}\n          {currentStep === 'review' && processingResults && transactions.length > 0 && (\n            <>\n              <div className=\"bg-white rounded-2xl p-12\">\n                <div className=\"flex items-center space-x-4 mb-8\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 313,
            "endLine": 317,
            "content": "                  <div className=\"w-10 h-10 bg-slate-100 rounded-xl flex items-center justify-center\">\n                    <span className=\"text-slate-600 font-semibold\">2</span>\n                  </div>\n                  <h2 className=\"text-2xl font-semibold text-slate-900\">\n                    Processing Results"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 336,
            "endLine": 340,
            "content": "                    <div className=\"w-10 h-10 bg-slate-100 rounded-xl flex items-center justify-center\">\n                      <span className=\"text-slate-600 font-semibold\">3</span>\n                    </div>\n                    <h2 className=\"text-2xl font-semibold text-slate-900\">\n                      Review & Code Transactions"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 322,
            "endLine": 326,
            "content": "\n              {/* Duplicate Warning */}\n              {showDuplicateWarning && duplicateResult && (\n                <DuplicateWarning\n                  duplicateResult={duplicateResult}"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 323,
            "endLine": 327,
            "content": "              {/* Duplicate Warning */}\n              {showDuplicateWarning && duplicateResult && (\n                <DuplicateWarning\n                  duplicateResult={duplicateResult}\n                  onResolveDuplicates={handleResolveDuplicates}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 331,
            "endLine": 335,
            "content": "\n              {/* Transaction Review */}\n              <div className=\"bg-white rounded-2xl p-12\">\n                <div className=\"flex items-center justify-between mb-8\">\n                  <div className=\"flex items-center space-x-4\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 332,
            "endLine": 336,
            "content": "              {/* Transaction Review */}\n              <div className=\"bg-white rounded-2xl p-12\">\n                <div className=\"flex items-center justify-between mb-8\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-10 h-10 bg-slate-100 rounded-xl flex items-center justify-center\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 350,
            "endLine": 354,
            "content": "                    <button\n                      onClick={handleNewFile}\n                      className=\"px-6 py-3 bg-red-50 text-red-700 rounded-xl hover:bg-red-100 transition-all duration-200 font-medium border border-red-200\"\n                    >\n                      Start Over"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 400,
            "endLine": 404,
            "content": "                  <button\n                    onClick={handleNewFile}\n                    className=\"px-6 py-3 bg-red-50 text-red-700 rounded-xl hover:bg-red-100 transition-all duration-200 font-medium border border-red-200\"\n                  >\n                    Start Over"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 351,
            "endLine": 355,
            "content": "                      onClick={handleNewFile}\n                      className=\"px-6 py-3 bg-red-50 text-red-700 rounded-xl hover:bg-red-100 transition-all duration-200 font-medium border border-red-200\"\n                    >\n                      Start Over\n                    </button>"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 401,
            "endLine": 405,
            "content": "                    onClick={handleNewFile}\n                    className=\"px-6 py-3 bg-red-50 text-red-700 rounded-xl hover:bg-red-100 transition-all duration-200 font-medium border border-red-200\"\n                  >\n                    Start Over\n                  </button>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 352,
            "endLine": 356,
            "content": "                      className=\"px-6 py-3 bg-red-50 text-red-700 rounded-xl hover:bg-red-100 transition-all duration-200 font-medium border border-red-200\"\n                    >\n                      Start Over\n                    </button>\n                    <button"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 402,
            "endLine": 406,
            "content": "                    className=\"px-6 py-3 bg-red-50 text-red-700 rounded-xl hover:bg-red-100 transition-all duration-200 font-medium border border-red-200\"\n                  >\n                    Start Over\n                  </button>\n                  <button"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 386,
            "endLine": 390,
            "content": "\n          {/* Export Step */}\n          {currentStep === 'export' && (\n            <div className=\"space-y-8\">\n              <div className=\"flex items-center justify-between\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 387,
            "endLine": 391,
            "content": "          {/* Export Step */}\n          {currentStep === 'export' && (\n            <div className=\"space-y-8\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 390,
            "endLine": 394,
            "content": "              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center\">\n                    <span className=\"text-slate-600 font-semibold\">4</span>\n                  </div>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 362,
            "endLine": 366,
            "content": "                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 476,
            "endLine": 480,
            "content": "                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 10h2a2 2 0 012 2v6a2 2 0 01-2 2H3a2 2 0 01-2-2v-6a2 2 0 012-2zm0 0V6a2 2 0 012-2h2a2 2 0 012 2v4m0 0h6m0 0V6a2 2 0 012-2h2a2 2 0 012 2v4m0 0h2a2 2 0 012 2v6a2 2 0 01-2 2h-2a2 2 0 01-2-2v-6\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 418,
            "endLine": 422,
            "content": "\n        {/* Q&A Section - Helpful Tips and Usage Guide */}\n        <div className=\"max-w-6xl mx-auto px-6 lg:px-8 py-20\">\n          <div className=\"bg-white rounded-3xl p-12 border border-slate-200/60 shadow-xl shadow-slate-500/5\">\n            <div className=\"text-center mb-16\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 419,
            "endLine": 423,
            "content": "        {/* Q&A Section - Helpful Tips and Usage Guide */}\n        <div className=\"max-w-6xl mx-auto px-6 lg:px-8 py-20\">\n          <div className=\"bg-white rounded-3xl p-12 border border-slate-200/60 shadow-xl shadow-slate-500/5\">\n            <div className=\"text-center mb-16\">\n              <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-lg shadow-purple-500/25\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 433,
            "endLine": 437,
            "content": "\n            <div className=\"grid lg:grid-cols-2 gap-12\">\n              {/* Left Column */}\n              <div className=\"space-y-8\">\n                <div className=\"bg-gradient-to-br from-purple-50 to-purple-100/50 rounded-2xl p-8 border border-purple-200/50\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 434,
            "endLine": 438,
            "content": "            <div className=\"grid lg:grid-cols-2 gap-12\">\n              {/* Left Column */}\n              <div className=\"space-y-8\">\n                <div className=\"bg-gradient-to-br from-purple-50 to-purple-100/50 rounded-2xl p-8 border border-purple-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 437,
            "endLine": 441,
            "content": "                <div className=\"bg-gradient-to-br from-purple-50 to-purple-100/50 rounded-2xl p-8 border border-purple-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-purple-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    What file formats are supported?\n                  </h3>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 45,
            "endLine": 49,
            "content": "      <div className=\"bg-gradient-to-br from-purple-50 to-purple-100/50 rounded-2xl p-8 border border-purple-100/50 shadow-lg shadow-purple-500/5\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"w-14 h-14 bg-gradient-to-br from-purple-600 to-purple-700 rounded-2xl flex items-center justify-center shadow-lg shadow-purple-500/25\">\n            <CheckCircle className=\"w-7 h-7 text-white\" />\n          </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 6,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 438,
            "endLine": 442,
            "content": "                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-purple-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    What file formats are supported?\n                  </h3>\n                  <p className=\"text-slate-700 leading-relaxed mb-4\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 453,
            "endLine": 457,
            "content": "                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-blue-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    How accurate is the AI categorization?\n                  </h3>\n                  <p className=\"text-slate-700 leading-relaxed mb-4\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 469,
            "endLine": 473,
            "content": "                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-green-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    Which provinces are supported?\n                  </h3>\n                  <p className=\"text-slate-700 leading-relaxed\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 483,
            "endLine": 487,
            "content": "                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-amber-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">💡</span>\n                    Pro Tips for Best Results\n                  </h3>\n                  <ul className=\"text-slate-700 space-y-3\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 516,
            "endLine": 520,
            "content": "                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-red-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    What if I encounter errors?\n                  </h3>\n                  <p className=\"text-slate-700 leading-relaxed mb-4\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 540,
            "endLine": 544,
            "content": "                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-indigo-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    Export formats available?\n                  </h3>\n                  <p className=\"text-slate-700 leading-relaxed mb-3\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 444,
            "endLine": 448,
            "content": "                  </p>\n                  <ul className=\"text-slate-700 space-y-2 ml-4\">\n                    <li className=\"flex items-center\"><span className=\"text-green-500 mr-2\">✓</span> RBC, TD, BMO, Scotiabank</li>\n                    <li className=\"flex items-center\"><span className=\"text-green-500 mr-2\">✓</span> CIBC, National Bank</li>\n                    <li className=\"flex items-center\"><span className=\"text-green-500 mr-2\">✓</span> Credit unions and online banks</li>"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 459,
            "endLine": 463,
            "content": "                  </p>\n                  <ul className=\"text-slate-700 space-y-2 ml-4\">\n                    <li className=\"flex items-center\"><span className=\"text-blue-500 mr-2\">•</span> Merchant names and patterns</li>\n                    <li className=\"flex items-center\"><span className=\"text-blue-500 mr-2\">•</span> Transaction descriptions</li>\n                    <li className=\"flex items-center\"><span className=\"text-blue-500 mr-2\">•</span> Amount ranges and frequency</li>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 445,
            "endLine": 449,
            "content": "                  <ul className=\"text-slate-700 space-y-2 ml-4\">\n                    <li className=\"flex items-center\"><span className=\"text-green-500 mr-2\">✓</span> RBC, TD, BMO, Scotiabank</li>\n                    <li className=\"flex items-center\"><span className=\"text-green-500 mr-2\">✓</span> CIBC, National Bank</li>\n                    <li className=\"flex items-center\"><span className=\"text-green-500 mr-2\">✓</span> Credit unions and online banks</li>\n                  </ul>"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 460,
            "endLine": 464,
            "content": "                  <ul className=\"text-slate-700 space-y-2 ml-4\">\n                    <li className=\"flex items-center\"><span className=\"text-blue-500 mr-2\">•</span> Merchant names and patterns</li>\n                    <li className=\"flex items-center\"><span className=\"text-blue-500 mr-2\">•</span> Transaction descriptions</li>\n                    <li className=\"flex items-center\"><span className=\"text-blue-500 mr-2\">•</span> Amount ranges and frequency</li>\n                    <li className=\"flex items-center\"><span className=\"text-blue-500 mr-2\">•</span> Your feedback and corrections</li>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 451,
            "endLine": 455,
            "content": "\n                <div className=\"bg-gradient-to-br from-blue-50 to-blue-100/50 rounded-2xl p-8 border border-blue-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-blue-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    How accurate is the AI categorization?"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 452,
            "endLine": 456,
            "content": "                <div className=\"bg-gradient-to-br from-blue-50 to-blue-100/50 rounded-2xl p-8 border border-blue-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-blue-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    How accurate is the AI categorization?\n                  </h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 467,
            "endLine": 471,
            "content": "\n                <div className=\"bg-gradient-to-br from-green-50 to-green-100/50 rounded-2xl p-8 border border-green-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-green-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    Which provinces are supported?"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 468,
            "endLine": 472,
            "content": "                <div className=\"bg-gradient-to-br from-green-50 to-green-100/50 rounded-2xl p-8 border border-green-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-green-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    Which provinces are supported?\n                  </h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 479,
            "endLine": 483,
            "content": "\n              {/* Right Column */}\n              <div className=\"space-y-8\">\n                <div className=\"bg-gradient-to-br from-amber-50 to-amber-100/50 rounded-2xl p-8 border border-amber-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 480,
            "endLine": 484,
            "content": "              {/* Right Column */}\n              <div className=\"space-y-8\">\n                <div className=\"bg-gradient-to-br from-amber-50 to-amber-100/50 rounded-2xl p-8 border border-amber-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-amber-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">💡</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 482,
            "endLine": 486,
            "content": "                <div className=\"bg-gradient-to-br from-amber-50 to-amber-100/50 rounded-2xl p-8 border border-amber-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-amber-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">💡</span>\n                    Pro Tips for Best Results\n                  </h3>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 218,
            "endLine": 222,
            "content": "        <div className=\"bg-gradient-to-br from-amber-50 to-amber-100/50 rounded-2xl p-8 border border-amber-200/50 shadow-lg shadow-amber-500/5\">\n          <div className=\"flex items-center space-x-4 mb-8\">\n            <div className=\"w-14 h-14 bg-gradient-to-br from-amber-500 to-amber-600 rounded-2xl flex items-center justify-center shadow-lg shadow-amber-500/25\">\n              <AlertTriangle className=\"w-7 h-7 text-white\" />\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 492,
            "endLine": 496,
            "content": "                      </div>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"text-amber-500 mr-3 mt-1 font-bold\">2.</span>\n                      <div>"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 498,
            "endLine": 502,
            "content": "                      </div>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"text-amber-500 mr-3 mt-1 font-bold\">3.</span>\n                      <div>"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 504,
            "endLine": 508,
            "content": "                      </div>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"text-amber-500 mr-3 mt-1 font-bold\">4.</span>\n                      <div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 514,
            "endLine": 518,
            "content": "\n                <div className=\"bg-gradient-to-br from-red-50 to-red-100/50 rounded-2xl p-8 border border-red-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-red-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    What if I encounter errors?"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 515,
            "endLine": 519,
            "content": "                <div className=\"bg-gradient-to-br from-red-50 to-red-100/50 rounded-2xl p-8 border border-red-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-red-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    What if I encounter errors?\n                  </h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 527,
            "endLine": 531,
            "content": "                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"text-red-500 mr-2 mt-1\">•</span>\n                      <div><strong>Missing columns:</strong> Check that Date, Description, and Amount columns exist</div>\n                    </li>"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 531,
            "endLine": 535,
            "content": "                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"text-red-500 mr-2 mt-1\">•</span>\n                      <div><strong>Date format issues:</strong> We support DD/MM/YYYY, MM/DD/YYYY, and YYYY-MM-DD</div>\n                    </li>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 538,
            "endLine": 542,
            "content": "\n                <div className=\"bg-gradient-to-br from-indigo-50 to-indigo-100/50 rounded-2xl p-8 border border-indigo-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-indigo-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    Export formats available?"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 539,
            "endLine": 543,
            "content": "                <div className=\"bg-gradient-to-br from-indigo-50 to-indigo-100/50 rounded-2xl p-8 border border-indigo-200/50\">\n                  <h3 className=\"text-xl font-bold text-slate-900 mb-4 flex items-center\">\n                    <span className=\"w-8 h-8 bg-indigo-500 rounded-xl text-white text-sm flex items-center justify-center mr-3 font-bold\">Q</span>\n                    Export formats available?\n                  </h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 548,
            "endLine": 552,
            "content": "                    <div className=\"bg-white rounded-lg p-3 border border-indigo-200/50\">\n                      <div className=\"font-semibold text-indigo-600\">Xero CSV</div>\n                      <div className=\"text-sm text-slate-600\">Direct import ready</div>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 border border-indigo-200/50\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 552,
            "endLine": 556,
            "content": "                    <div className=\"bg-white rounded-lg p-3 border border-indigo-200/50\">\n                      <div className=\"font-semibold text-indigo-600\">QuickBooks</div>\n                      <div className=\"text-sm text-slate-600\">IIF format</div>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 border border-indigo-200/50\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 556,
            "endLine": 560,
            "content": "                    <div className=\"bg-white rounded-lg p-3 border border-indigo-200/50\">\n                      <div className=\"font-semibold text-indigo-600\">Sage 50</div>\n                      <div className=\"text-sm text-slate-600\">Compatible CSV</div>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 border border-indigo-200/50\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 560,
            "endLine": 564,
            "content": "                    <div className=\"bg-white rounded-lg p-3 border border-indigo-200/50\">\n                      <div className=\"font-semibold text-indigo-600\">Generic CSV</div>\n                      <div className=\"text-sm text-slate-600\">Universal format</div>\n                    </div>\n                  </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 551,
            "endLine": 555,
            "content": "                    </div>\n                    <div className=\"bg-white rounded-lg p-3 border border-indigo-200/50\">\n                      <div className=\"font-semibold text-indigo-600\">QuickBooks</div>\n                      <div className=\"text-sm text-slate-600\">IIF format</div>\n                    </div>"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 555,
            "endLine": 559,
            "content": "                    </div>\n                    <div className=\"bg-white rounded-lg p-3 border border-indigo-200/50\">\n                      <div className=\"font-semibold text-indigo-600\">Sage 50</div>\n                      <div className=\"text-sm text-slate-600\">Compatible CSV</div>\n                    </div>"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 559,
            "endLine": 563,
            "content": "                    </div>\n                    <div className=\"bg-white rounded-lg p-3 border border-indigo-200/50\">\n                      <div className=\"font-semibold text-indigo-600\">Generic CSV</div>\n                      <div className=\"text-sm text-slate-600\">Universal format</div>\n                    </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 568,
            "endLine": 572,
            "content": "\n            {/* Call to Action */}\n            <div className=\"mt-16 text-center\">\n              <div className=\"bg-gradient-to-br from-slate-50 to-slate-100/50 rounded-2xl p-8 border border-slate-200/50\">\n                <h3 className=\"text-2xl font-bold text-slate-900 mb-4\">"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 569,
            "endLine": 573,
            "content": "            {/* Call to Action */}\n            <div className=\"mt-16 text-center\">\n              <div className=\"bg-gradient-to-br from-slate-50 to-slate-100/50 rounded-2xl p-8 border border-slate-200/50\">\n                <h3 className=\"text-2xl font-bold text-slate-900 mb-4\">\n                  Ready to streamline your bookkeeping?"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 590,
            "endLine": 594,
            "content": "          </div>\n        </div>\n      </div>\n\n      {/* Custom Keyword Manager Modal */}"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 137,
            "endLine": 141,
            "content": "          </div>\n        </div>\n      </div>\n\n      {/* Custom Keyword Manager Modal */}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 591,
            "endLine": 595,
            "content": "        </div>\n      </div>\n\n      {/* Custom Keyword Manager Modal */}\n      {showKeywordManager && ("
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 138,
            "endLine": 142,
            "content": "        </div>\n      </div>\n\n      {/* Custom Keyword Manager Modal */}\n      {showKeywordManager && ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/page.tsx",
            "startLine": 593,
            "endLine": 597,
            "content": "\n      {/* Custom Keyword Manager Modal */}\n      {showKeywordManager && (\n        <CustomKeywordManager\n          onClose={() => setShowKeywordManager(false)}"
          },
          {
            "file": "src/app/page.tsx",
            "startLine": 594,
            "endLine": 598,
            "content": "      {/* Custom Keyword Manager Modal */}\n      {showKeywordManager && (\n        <CustomKeywordManager\n          onClose={() => setShowKeywordManager(false)}\n          onKeywordsUpdated={() => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 2,
            "endLine": 6,
            "content": "\nimport { useState, useEffect } from 'react';\nimport NavigationBar from '../../components/NavigationBar';\nimport { ReportGenerator, FinancialData, ProfitLossData, BalanceSheetData } from '../../lib/reportGenerator';\nimport { useFinancialData } from '../../context/FinancialDataContext';"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import { useState, useEffect } from 'react';\nimport NavigationBar from '../../components/NavigationBar';\nimport { ReportGenerator, FinancialData, ProfitLossData, BalanceSheetData } from '../../lib/reportGenerator';\nimport { useFinancialData } from '../../context/FinancialDataContext';\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 7,
            "endLine": 11,
            "content": "\n// Sample transaction data - in a real app, this would come from your database\nconst generateSampleData = (): FinancialData => {\n  const today = new Date();\n  const startDate = new Date(today.getFullYear(), 0, 1); // Start of year"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 8,
            "endLine": 12,
            "content": "// Sample transaction data - in a real app, this would come from your database\nconst generateSampleData = (): FinancialData => {\n  const today = new Date();\n  const startDate = new Date(today.getFullYear(), 0, 1); // Start of year\n  const endDate = new Date(today.getFullYear(), today.getMonth(), today.getDate()); // Today"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 13,
            "endLine": 17,
            "content": "\n  return {\n    transactions: [\n      // Revenue transactions - using correct CSV account codes (as strings)\n      { id: '1', date: new Date('2024-01-15'), description: 'Service Revenue', amount: 5000, category: 'Service Revenue', accountCode: '220', type: 'income' },"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 14,
            "endLine": 18,
            "content": "  return {\n    transactions: [\n      // Revenue transactions - using correct CSV account codes (as strings)\n      { id: '1', date: new Date('2024-01-15'), description: 'Service Revenue', amount: 5000, category: 'Service Revenue', accountCode: '220', type: 'income' },\n      { id: '2', date: new Date('2024-02-20'), description: 'Product Sales', amount: 8500, category: 'Sales Revenue', accountCode: '200', type: 'income' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 20,
            "endLine": 24,
            "content": "      \n      // Expense transactions - using correct CSV account codes (as strings)\n      { id: '4', date: new Date('2024-01-05'), description: 'Office Rent', amount: -1200, category: 'Rent', accountCode: '469', type: 'expense' },\n      { id: '5', date: new Date('2024-01-10'), description: 'Internet & Phone', amount: -150, category: 'Telephone & Internet', accountCode: '489', type: 'expense' },\n      { id: '6', date: new Date('2024-02-01'), description: 'Marketing Campaign', amount: -800, category: 'Advertising', accountCode: '400', type: 'expense' },"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 21,
            "endLine": 25,
            "content": "      // Expense transactions - using correct CSV account codes (as strings)\n      { id: '4', date: new Date('2024-01-05'), description: 'Office Rent', amount: -1200, category: 'Rent', accountCode: '469', type: 'expense' },\n      { id: '5', date: new Date('2024-01-10'), description: 'Internet & Phone', amount: -150, category: 'Telephone & Internet', accountCode: '489', type: 'expense' },\n      { id: '6', date: new Date('2024-02-01'), description: 'Marketing Campaign', amount: -800, category: 'Advertising', accountCode: '400', type: 'expense' },\n      { id: '7', date: new Date('2024-02-15'), description: 'Office Supplies', amount: -250, category: 'Supplies and Small Tools', accountCode: '455', type: 'expense' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 26,
            "endLine": 30,
            "content": "      \n      // Asset transactions - using correct CSV account codes (as strings)\n      { id: '8', date: new Date('2024-01-01'), description: 'Cash in Bank', amount: 15000, category: 'Cash', accountCode: '610', type: 'asset' },\n      { id: '9', date: new Date('2024-01-20'), description: 'Accounts Receivable', amount: 4500, category: 'Accounts Receivable', accountCode: '610', type: 'asset' },\n      { id: '10', date: new Date('2024-02-01'), description: 'Office Equipment', amount: 5000, category: 'Equipment', accountCode: '710', type: 'asset' },"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 27,
            "endLine": 31,
            "content": "      // Asset transactions - using correct CSV account codes (as strings)\n      { id: '8', date: new Date('2024-01-01'), description: 'Cash in Bank', amount: 15000, category: 'Cash', accountCode: '610', type: 'asset' },\n      { id: '9', date: new Date('2024-01-20'), description: 'Accounts Receivable', amount: 4500, category: 'Accounts Receivable', accountCode: '610', type: 'asset' },\n      { id: '10', date: new Date('2024-02-01'), description: 'Office Equipment', amount: 5000, category: 'Equipment', accountCode: '710', type: 'asset' },\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 31,
            "endLine": 35,
            "content": "      \n      // Liability transactions - using correct CSV account codes (as strings)\n      { id: '11', date: new Date('2024-01-01'), description: 'Accounts Payable', amount: -2500, category: 'Accounts Payable', accountCode: '800', type: 'liability' },\n      { id: '12', date: new Date('2024-01-15'), description: 'Sales Tax Payable', amount: -1000, category: 'Sales Tax', accountCode: '820', type: 'liability' },\n      "
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 32,
            "endLine": 36,
            "content": "      // Liability transactions - using correct CSV account codes (as strings)\n      { id: '11', date: new Date('2024-01-01'), description: 'Accounts Payable', amount: -2500, category: 'Accounts Payable', accountCode: '800', type: 'liability' },\n      { id: '12', date: new Date('2024-01-15'), description: 'Sales Tax Payable', amount: -1000, category: 'Sales Tax', accountCode: '820', type: 'liability' },\n      \n      // Equity transactions - using correct CSV account codes (as strings)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 35,
            "endLine": 39,
            "content": "      \n      // Equity transactions - using correct CSV account codes (as strings)\n      { id: '13', date: new Date('2024-01-01'), description: 'Owner Investment', amount: 25000, category: 'Owner A Share Capital', accountCode: '970', type: 'equity' },\n    ],\n    startDate,"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 36,
            "endLine": 40,
            "content": "      // Equity transactions - using correct CSV account codes (as strings)\n      { id: '13', date: new Date('2024-01-01'), description: 'Owner Investment', amount: 25000, category: 'Owner A Share Capital', accountCode: '970', type: 'equity' },\n    ],\n    startDate,\n    endDate,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 45,
            "endLine": 49,
            "content": "\n// Convert dashboard data to FinancialData format\nconst convertDashboardToFinancialData = (contextData: any): FinancialData | null => {\n  // Check if we have uploaded transaction data in the dashboard\n  if (!contextData?.dashboard?.transactions || contextData.dashboard.transactions.length === 0) {"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 46,
            "endLine": 50,
            "content": "// Convert dashboard data to FinancialData format\nconst convertDashboardToFinancialData = (contextData: any): FinancialData | null => {\n  // Check if we have uploaded transaction data in the dashboard\n  if (!contextData?.dashboard?.transactions || contextData.dashboard.transactions.length === 0) {\n    console.log('📊 No uploaded transaction data found in context');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 53,
            "endLine": 57,
            "content": "\n  const transactions = contextData.dashboard.transactions;\n  console.log('📊 Found uploaded transactions:', transactions.length);\n  \n  // Get date range from transactions"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 54,
            "endLine": 58,
            "content": "  const transactions = contextData.dashboard.transactions;\n  console.log('📊 Found uploaded transactions:', transactions.length);\n  \n  // Get date range from transactions\n  const dates = transactions.map((t: any) => new Date(t.date)).sort((a: Date, b: Date) => a.getTime() - b.getTime());"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 56,
            "endLine": 60,
            "content": "  \n  // Get date range from transactions\n  const dates = transactions.map((t: any) => new Date(t.date)).sort((a: Date, b: Date) => a.getTime() - b.getTime());\n  \n  return {"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 57,
            "endLine": 61,
            "content": "  // Get date range from transactions\n  const dates = transactions.map((t: any) => new Date(t.date)).sort((a: Date, b: Date) => a.getTime() - b.getTime());\n  \n  return {\n    transactions: transactions.map((t: any) => ({"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 77,
            "endLine": 81,
            "content": "\nexport default function ReportsPage() {\n  const { financialData: contextData, isSample, setIsSample } = useFinancialData();\n  const [reportGenerator, setReportGenerator] = useState<ReportGenerator | null>(null);\n  const [financialData, setFinancialData] = useState<FinancialData | null>(null);"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 78,
            "endLine": 82,
            "content": "export default function ReportsPage() {\n  const { financialData: contextData, isSample, setIsSample } = useFinancialData();\n  const [reportGenerator, setReportGenerator] = useState<ReportGenerator | null>(null);\n  const [financialData, setFinancialData] = useState<FinancialData | null>(null);\n  const [profitLossData, setProfitLossData] = useState<ProfitLossData | null>(null);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 87,
            "endLine": 91,
            "content": "\n  // Initialize ReportGenerator on client-side only\n  useEffect(() => {\n    if (typeof window !== 'undefined' && !reportGenerator) {\n      const initReportGenerator = async () => {"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 88,
            "endLine": 92,
            "content": "  // Initialize ReportGenerator on client-side only\n  useEffect(() => {\n    if (typeof window !== 'undefined' && !reportGenerator) {\n      const initReportGenerator = async () => {\n        try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 95,
            "endLine": 99,
            "content": "          \n          // Wait for Chart of Accounts to initialize (increased timeout)\n          await new Promise(resolve => setTimeout(resolve, 500));\n          \n          setReportGenerator(generator);"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 96,
            "endLine": 100,
            "content": "          // Wait for Chart of Accounts to initialize (increased timeout)\n          await new Promise(resolve => setTimeout(resolve, 500));\n          \n          setReportGenerator(generator);\n          setIsReportGeneratorReady(true);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 98,
            "endLine": 102,
            "content": "          \n          setReportGenerator(generator);\n          setIsReportGeneratorReady(true);\n          console.log('✅ ReportGenerator initialized successfully');\n        } catch (error) {"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 99,
            "endLine": 103,
            "content": "          setReportGenerator(generator);\n          setIsReportGeneratorReady(true);\n          console.log('✅ ReportGenerator initialized successfully');\n        } catch (error) {\n          console.error('❌ Failed to initialize ReportGenerator:', error);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 119,
            "endLine": 123,
            "content": "\n  // Handle data processing and report generation\n  useEffect(() => {\n    console.log('📊 Reports page useEffect triggered');\n    console.log('📊 Context data:', contextData);"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 120,
            "endLine": 124,
            "content": "  // Handle data processing and report generation\n  useEffect(() => {\n    console.log('📊 Reports page useEffect triggered');\n    console.log('📊 Context data:', contextData);\n    console.log('📊 ReportGenerator ready:', isReportGeneratorReady);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 125,
            "endLine": 129,
            "content": "    \n    let data: FinancialData;\n    \n    // Try to convert uploaded data first\n    const uploadedData = convertDashboardToFinancialData(contextData);"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 126,
            "endLine": 130,
            "content": "    let data: FinancialData;\n    \n    // Try to convert uploaded data first\n    const uploadedData = convertDashboardToFinancialData(contextData);\n    if (uploadedData) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 127,
            "endLine": 131,
            "content": "    \n    // Try to convert uploaded data first\n    const uploadedData = convertDashboardToFinancialData(contextData);\n    if (uploadedData) {\n      data = uploadedData;"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 128,
            "endLine": 132,
            "content": "    // Try to convert uploaded data first\n    const uploadedData = convertDashboardToFinancialData(contextData);\n    if (uploadedData) {\n      data = uploadedData;\n      setIsSample(false);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 139,
            "endLine": 143,
            "content": "    \n    setFinancialData(data);\n    \n    // Generate report data only when ReportGenerator is ready\n    if (isReportGeneratorReady && reportGenerator) {"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 140,
            "endLine": 144,
            "content": "    setFinancialData(data);\n    \n    // Generate report data only when ReportGenerator is ready\n    if (isReportGeneratorReady && reportGenerator) {\n      try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 141,
            "endLine": 145,
            "content": "    \n    // Generate report data only when ReportGenerator is ready\n    if (isReportGeneratorReady && reportGenerator) {\n      try {\n        console.log('📊 Generating reports with data:', data);"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 142,
            "endLine": 146,
            "content": "    // Generate report data only when ReportGenerator is ready\n    if (isReportGeneratorReady && reportGenerator) {\n      try {\n        console.log('📊 Generating reports with data:', data);\n        const plData = reportGenerator.generateProfitLossData(data);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 168,
            "endLine": 172,
            "content": "\n  // Fallback functions for when ReportGenerator fails\n  const generateFallbackProfitLossData = (data: FinancialData): ProfitLossData => {\n    const revenue = data.transactions.filter(t => t.amount > 0);\n    const expenses = data.transactions.filter(t => t.amount < 0);"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 169,
            "endLine": 173,
            "content": "  // Fallback functions for when ReportGenerator fails\n  const generateFallbackProfitLossData = (data: FinancialData): ProfitLossData => {\n    const revenue = data.transactions.filter(t => t.amount > 0);\n    const expenses = data.transactions.filter(t => t.amount < 0);\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 173,
            "endLine": 177,
            "content": "    \n    const revenueTotal = revenue.reduce((sum, t) => sum + t.amount, 0);\n    const expensesTotal = Math.abs(expenses.reduce((sum, t) => sum + t.amount, 0));\n    \n    return {"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 174,
            "endLine": 178,
            "content": "    const revenueTotal = revenue.reduce((sum, t) => sum + t.amount, 0);\n    const expensesTotal = Math.abs(expenses.reduce((sum, t) => sum + t.amount, 0));\n    \n    return {\n      revenue: {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 176,
            "endLine": 180,
            "content": "    \n    return {\n      revenue: {\n        total: revenueTotal,\n        categories: revenue.map(t => ({ name: t.category, amount: t.amount, accountCode: t.accountCode }))"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 177,
            "endLine": 181,
            "content": "    return {\n      revenue: {\n        total: revenueTotal,\n        categories: revenue.map(t => ({ name: t.category, amount: t.amount, accountCode: t.accountCode }))\n      },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 191,
            "endLine": 195,
            "content": "\n  const generateFallbackBalanceSheetData = (data: FinancialData): BalanceSheetData => {\n    const assets = data.transactions.filter(t => t.type === 'asset');\n    const liabilities = data.transactions.filter(t => t.type === 'liability');\n    const equity = data.transactions.filter(t => t.type === 'equity');"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 192,
            "endLine": 196,
            "content": "  const generateFallbackBalanceSheetData = (data: FinancialData): BalanceSheetData => {\n    const assets = data.transactions.filter(t => t.type === 'asset');\n    const liabilities = data.transactions.filter(t => t.type === 'liability');\n    const equity = data.transactions.filter(t => t.type === 'equity');\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 196,
            "endLine": 200,
            "content": "    \n    const assetsTotal = assets.reduce((sum, t) => sum + Math.abs(t.amount), 0);\n    const liabilitiesTotal = liabilities.reduce((sum, t) => sum + Math.abs(t.amount), 0);\n    const equityTotal = equity.reduce((sum, t) => sum + Math.abs(t.amount), 0);\n    "
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 197,
            "endLine": 201,
            "content": "    const assetsTotal = assets.reduce((sum, t) => sum + Math.abs(t.amount), 0);\n    const liabilitiesTotal = liabilities.reduce((sum, t) => sum + Math.abs(t.amount), 0);\n    const equityTotal = equity.reduce((sum, t) => sum + Math.abs(t.amount), 0);\n    \n    return {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 200,
            "endLine": 204,
            "content": "    \n    return {\n      assets: {\n        current: assets.filter(t => t.accountCode.match(/^6[1-9]\\d$/)).map(t => ({ name: t.category, amount: Math.abs(t.amount), accountCode: t.accountCode })),\n        nonCurrent: assets.filter(t => t.accountCode.match(/^7\\d{2}$/)).map(t => ({ name: t.category, amount: Math.abs(t.amount), accountCode: t.accountCode })),"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 201,
            "endLine": 205,
            "content": "    return {\n      assets: {\n        current: assets.filter(t => t.accountCode.match(/^6[1-9]\\d$/)).map(t => ({ name: t.category, amount: Math.abs(t.amount), accountCode: t.accountCode })),\n        nonCurrent: assets.filter(t => t.accountCode.match(/^7\\d{2}$/)).map(t => ({ name: t.category, amount: Math.abs(t.amount), accountCode: t.accountCode })),\n        totalCurrent: assets.filter(t => t.accountCode.match(/^6[1-9]\\d$/)).reduce((sum, t) => sum + Math.abs(t.amount), 0),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 222,
            "endLine": 226,
            "content": "\n  const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('en-CA', {\n      style: 'currency',\n      currency: 'CAD',"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 223,
            "endLine": 227,
            "content": "  const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('en-CA', {\n      style: 'currency',\n      currency: 'CAD',\n      minimumFractionDigits: 2"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 224,
            "endLine": 228,
            "content": "    return new Intl.NumberFormat('en-CA', {\n      style: 'currency',\n      currency: 'CAD',\n      minimumFractionDigits: 2\n    }).format(Math.abs(amount));"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 128,
            "endLine": 132,
            "content": "    return new Intl.NumberFormat('en-CA', {\n      style: 'currency',\n      currency: 'CAD',\n      minimumFractionDigits: 2\n    }).format(Math.abs(amount));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 230,
            "endLine": 234,
            "content": "\n  const handleGeneratePDF = async (reportType: 'profit-loss' | 'balance-sheet') => {\n    if (!financialData || !reportGenerator) return;\n    \n    setIsGenerating(true);"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 231,
            "endLine": 235,
            "content": "  const handleGeneratePDF = async (reportType: 'profit-loss' | 'balance-sheet') => {\n    if (!financialData || !reportGenerator) return;\n    \n    setIsGenerating(true);\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 239,
            "endLine": 243,
            "content": "      \n      if (reportType === 'profit-loss') {\n        pdf = reportGenerator.generateProfitLossPDF(financialData);\n        filename = `Profit_Loss_Statement_${financialData.endDate.getFullYear()}.pdf`;\n      } else {"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 240,
            "endLine": 244,
            "content": "      if (reportType === 'profit-loss') {\n        pdf = reportGenerator.generateProfitLossPDF(financialData);\n        filename = `Profit_Loss_Statement_${financialData.endDate.getFullYear()}.pdf`;\n      } else {\n        pdf = reportGenerator.generateBalanceSheetPDF(financialData);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 247,
            "endLine": 251,
            "content": "      \n      // Download the PDF\n      pdf.save(filename);\n    } catch (error) {\n      console.error('Error generating PDF:', error);"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 248,
            "endLine": 252,
            "content": "      // Download the PDF\n      pdf.save(filename);\n    } catch (error) {\n      console.error('Error generating PDF:', error);\n      alert('Error generating PDF report. Please try again.');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 257,
            "endLine": 261,
            "content": "\n  const getPeriodLabel = () => {\n    switch (selectedPeriod) {\n      case 'ytd': return 'Year to Date';\n      case 'q4': return 'Q4 2024';"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 258,
            "endLine": 262,
            "content": "  const getPeriodLabel = () => {\n    switch (selectedPeriod) {\n      case 'ytd': return 'Year to Date';\n      case 'q4': return 'Q4 2024';\n      case 'q3': return 'Q3 2024';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 268,
            "endLine": 272,
            "content": "\n  // Show reports if we have data (either sample or real) and reports are generated\n  const hasReportData = financialData && financialData.transactions && financialData.transactions.length > 0;\n  const canShowReports = hasReportData && profitLossData && balanceSheetData;\n  const isRealData = !isSample && hasReportData;"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 269,
            "endLine": 273,
            "content": "  // Show reports if we have data (either sample or real) and reports are generated\n  const hasReportData = financialData && financialData.transactions && financialData.transactions.length > 0;\n  const canShowReports = hasReportData && profitLossData && balanceSheetData;\n  const isRealData = !isSample && hasReportData;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 286,
            "endLine": 290,
            "content": "          \n          {/* Debug banner for development */}\n          {process.env.NODE_ENV === 'development' && (\n            <div className=\"mb-6 p-4 bg-blue-50 border-l-4 border-blue-400 text-blue-800 rounded\">\n              <div className=\"flex items-center justify-between\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 287,
            "endLine": 291,
            "content": "          {/* Debug banner for development */}\n          {process.env.NODE_ENV === 'development' && (\n            <div className=\"mb-6 p-4 bg-blue-50 border-l-4 border-blue-400 text-blue-800 rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 336,
            "endLine": 340,
            "content": "              \n              {/* Period Selector */}\n              <div className=\"flex items-center space-x-4\">\n                <label className=\"text-sm font-medium text-slate-700\">Report Period:</label>\n                <select "
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 337,
            "endLine": 341,
            "content": "              {/* Period Selector */}\n              <div className=\"flex items-center space-x-4\">\n                <label className=\"text-sm font-medium text-slate-700\">Report Period:</label>\n                <select \n                  value={selectedPeriod}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 358,
            "endLine": 362,
            "content": "            \n            {/* Profit & Loss Report */}\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 overflow-hidden\">\n              <div className=\"p-8 border-b border-slate-100\">\n                <div className=\"flex items-center justify-between\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 359,
            "endLine": 363,
            "content": "            {/* Profit & Loss Report */}\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 overflow-hidden\">\n              <div className=\"p-8 border-b border-slate-100\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 360,
            "endLine": 364,
            "content": "            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 overflow-hidden\">\n              <div className=\"p-8 border-b border-slate-100\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 474,
            "endLine": 478,
            "content": "            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 overflow-hidden\">\n              <div className=\"p-8 border-b border-slate-100\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 361,
            "endLine": 365,
            "content": "              <div className=\"p-8 border-b border-slate-100\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 475,
            "endLine": 479,
            "content": "              <div className=\"p-8 border-b border-slate-100\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center\">\n                      <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 379,
            "endLine": 383,
            "content": "                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                      </svg>\n                      <span>{isGenerating ? 'Generating...' : 'Download PDF'}</span>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 242,
            "endLine": 246,
            "content": "              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n                </svg>\n              </button>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 416,
            "endLine": 420,
            "content": "\n                      {/* Expenses Summary */}\n                      <div className=\"bg-red-50 rounded-xl p-6\">\n                        <h3 className=\"font-semibold text-red-800 mb-4\">Expenses Summary</h3>\n                        <div className=\"space-y-3\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 417,
            "endLine": 421,
            "content": "                      {/* Expenses Summary */}\n                      <div className=\"bg-red-50 rounded-xl p-6\">\n                        <h3 className=\"font-semibold text-red-800 mb-4\">Expenses Summary</h3>\n                        <div className=\"space-y-3\">\n                          {profitLossData.expenses.categories.slice(0, 3).map((category, index) => ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 440,
            "endLine": 444,
            "content": "\n                      {/* Net Income */}\n                      <div className={`rounded-xl p-6 ${profitLossData.netIncome >= 0 ? 'bg-blue-50' : 'bg-orange-50'}`}>\n                        <div className=\"flex justify-between items-center\">\n                          <span className={`font-bold text-lg ${profitLossData.netIncome >= 0 ? 'text-blue-800' : 'text-orange-800'}`}>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 441,
            "endLine": 445,
            "content": "                      {/* Net Income */}\n                      <div className={`rounded-xl p-6 ${profitLossData.netIncome >= 0 ? 'bg-blue-50' : 'bg-orange-50'}`}>\n                        <div className=\"flex justify-between items-center\">\n                          <span className={`font-bold text-lg ${profitLossData.netIncome >= 0 ? 'text-blue-800' : 'text-orange-800'}`}>\n                            Net Income"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 455,
            "endLine": 459,
            "content": "                    </div>\n                  </div>\n                )\n              ) : hasReportData ? (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 574,
            "endLine": 578,
            "content": "                    </div>\n                  </div>\n                )\n              ) : hasReportData ? (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 456,
            "endLine": 460,
            "content": "                  </div>\n                )\n              ) : hasReportData ? (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  <div className=\"flex items-center justify-center space-x-2 mb-4\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 575,
            "endLine": 579,
            "content": "                  </div>\n                )\n              ) : hasReportData ? (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  <div className=\"flex items-center justify-center space-x-2 mb-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 457,
            "endLine": 461,
            "content": "                )\n              ) : hasReportData ? (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  <div className=\"flex items-center justify-center space-x-2 mb-4\">\n                    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-purple-600\"></div>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 576,
            "endLine": 580,
            "content": "                )\n              ) : hasReportData ? (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  <div className=\"flex items-center justify-center space-x-2 mb-4\">\n                    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-purple-600\"></div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 458,
            "endLine": 462,
            "content": "              ) : hasReportData ? (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  <div className=\"flex items-center justify-center space-x-2 mb-4\">\n                    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-purple-600\"></div>\n                    <span>Generating reports...</span>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 577,
            "endLine": 581,
            "content": "              ) : hasReportData ? (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  <div className=\"flex items-center justify-center space-x-2 mb-4\">\n                    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-purple-600\"></div>\n                    <span>Generating reports...</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 459,
            "endLine": 463,
            "content": "                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  <div className=\"flex items-center justify-center space-x-2 mb-4\">\n                    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-purple-600\"></div>\n                    <span>Generating reports...</span>\n                  </div>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 578,
            "endLine": 582,
            "content": "                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  <div className=\"flex items-center justify-center space-x-2 mb-4\">\n                    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-purple-600\"></div>\n                    <span>Generating reports...</span>\n                  </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 460,
            "endLine": 464,
            "content": "                  <div className=\"flex items-center justify-center space-x-2 mb-4\">\n                    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-purple-600\"></div>\n                    <span>Generating reports...</span>\n                  </div>\n                  <p className=\"text-sm\">Please wait while we process your financial data.</p>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 579,
            "endLine": 583,
            "content": "                  <div className=\"flex items-center justify-center space-x-2 mb-4\">\n                    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-purple-600\"></div>\n                    <span>Generating reports...</span>\n                  </div>\n                  <p className=\"text-sm\">Please wait while we process your financial data.</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 461,
            "endLine": 465,
            "content": "                    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-purple-600\"></div>\n                    <span>Generating reports...</span>\n                  </div>\n                  <p className=\"text-sm\">Please wait while we process your financial data.</p>\n                </div>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 580,
            "endLine": 584,
            "content": "                    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-purple-600\"></div>\n                    <span>Generating reports...</span>\n                  </div>\n                  <p className=\"text-sm\">Please wait while we process your financial data.</p>\n                </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 462,
            "endLine": 466,
            "content": "                    <span>Generating reports...</span>\n                  </div>\n                  <p className=\"text-sm\">Please wait while we process your financial data.</p>\n                </div>\n              ) : ("
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 581,
            "endLine": 585,
            "content": "                    <span>Generating reports...</span>\n                  </div>\n                  <p className=\"text-sm\">Please wait while we process your financial data.</p>\n                </div>\n              ) : ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 463,
            "endLine": 467,
            "content": "                  </div>\n                  <p className=\"text-sm\">Please wait while we process your financial data.</p>\n                </div>\n              ) : (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 582,
            "endLine": 586,
            "content": "                  </div>\n                  <p className=\"text-sm\">Please wait while we process your financial data.</p>\n                </div>\n              ) : (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 464,
            "endLine": 468,
            "content": "                  <p className=\"text-sm\">Please wait while we process your financial data.</p>\n                </div>\n              ) : (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  Please select or upload a file to view the Profit & Loss report."
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 583,
            "endLine": 587,
            "content": "                  <p className=\"text-sm\">Please wait while we process your financial data.</p>\n                </div>\n              ) : (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  Please select or upload a file to view the Balance Sheet report."
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 465,
            "endLine": 469,
            "content": "                </div>\n              ) : (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  Please select or upload a file to view the Profit & Loss report.\n                </div>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 584,
            "endLine": 588,
            "content": "                </div>\n              ) : (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  Please select or upload a file to view the Balance Sheet report.\n                </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 466,
            "endLine": 470,
            "content": "              ) : (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  Please select or upload a file to view the Profit & Loss report.\n                </div>\n              )}"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 585,
            "endLine": 589,
            "content": "              ) : (\n                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  Please select or upload a file to view the Balance Sheet report.\n                </div>\n              )}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 467,
            "endLine": 471,
            "content": "                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  Please select or upload a file to view the Profit & Loss report.\n                </div>\n              )}\n            </div>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 586,
            "endLine": 590,
            "content": "                <div className=\"p-8 text-center text-slate-500 text-lg\">\n                  Please select or upload a file to view the Balance Sheet report.\n                </div>\n              )}\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 472,
            "endLine": 476,
            "content": "\n            {/* Balance Sheet Report */}\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 overflow-hidden\">\n              <div className=\"p-8 border-b border-slate-100\">\n                <div className=\"flex items-center justify-between\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 473,
            "endLine": 477,
            "content": "            {/* Balance Sheet Report */}\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 overflow-hidden\">\n              <div className=\"p-8 border-b border-slate-100\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 497,
            "endLine": 501,
            "content": "                        <div className=\"space-y-3\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-purple-700 text-sm\">Current Assets</span>\n                            <span className=\"font-medium text-purple-800\">{formatCurrency(balanceSheetData.assets.totalCurrent)}</span>\n                          </div>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 518,
            "endLine": 522,
            "content": "                        <div className=\"space-y-3\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-orange-700 text-sm\">Current Liabilities</span>\n                            <span className=\"font-medium text-orange-800\">{formatCurrency(balanceSheetData.liabilities.totalCurrent)}</span>\n                          </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 514,
            "endLine": 518,
            "content": "\n                      {/* Liabilities Summary */}\n                      <div className=\"bg-orange-50 rounded-xl p-6\">\n                        <h3 className=\"font-semibold text-orange-800 mb-4\">Liabilities</h3>\n                        <div className=\"space-y-3\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 515,
            "endLine": 519,
            "content": "                      {/* Liabilities Summary */}\n                      <div className=\"bg-orange-50 rounded-xl p-6\">\n                        <h3 className=\"font-semibold text-orange-800 mb-4\">Liabilities</h3>\n                        <div className=\"space-y-3\">\n                          <div className=\"flex justify-between items-center\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 535,
            "endLine": 539,
            "content": "\n                      {/* Equity Summary */}\n                      <div className=\"bg-teal-50 rounded-xl p-6\">\n                        <h3 className=\"font-semibold text-teal-800 mb-4\">Equity</h3>\n                        <div className=\"space-y-3\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 536,
            "endLine": 540,
            "content": "                      {/* Equity Summary */}\n                      <div className=\"bg-teal-50 rounded-xl p-6\">\n                        <h3 className=\"font-semibold text-teal-800 mb-4\">Equity</h3>\n                        <div className=\"space-y-3\">\n                          {balanceSheetData.equity.items.slice(0, 2).map((item, index) => ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 554,
            "endLine": 558,
            "content": "\n                      {/* Balance Check */}\n                      <div className=\"bg-slate-50 rounded-xl p-6\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"font-bold text-slate-800\">Balance Check</span>"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 555,
            "endLine": 559,
            "content": "                      {/* Balance Check */}\n                      <div className=\"bg-slate-50 rounded-xl p-6\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"font-bold text-slate-800\">Balance Check</span>\n                          <span className={`font-bold text-lg ${"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 592,
            "endLine": 596,
            "content": "\n          {/* Features Section */}\n          <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8\">\n            <h3 className=\"text-xl font-bold text-slate-900 mb-6\">Professional Features</h3>\n            <div className=\"grid md:grid-cols-3 gap-6\">"
          },
          {
            "file": "src/app/reports/page.tsx",
            "startLine": 593,
            "endLine": 597,
            "content": "          {/* Features Section */}\n          <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8\">\n            <h3 className=\"text-xl font-bold text-slate-900 mb-6\">Professional Features</h3>\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              <div className=\"flex items-start space-x-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 5,
            "endLine": 9,
            "content": "\nexport default function SettingsPage() {\n  const [showKeywordManager, setShowKeywordManager] = useState(false);\n\n  return ("
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 6,
            "endLine": 10,
            "content": "export default function SettingsPage() {\n  const [showKeywordManager, setShowKeywordManager] = useState(false);\n\n  return (\n    <div className=\"min-h-screen\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 30,
            "endLine": 34,
            "content": "\n          {/* Settings Grid */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Account Settings */}\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8\">"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 31,
            "endLine": 35,
            "content": "          {/* Settings Grid */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Account Settings */}\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8\">\n              <div className=\"flex items-center space-x-3 mb-6\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 34,
            "endLine": 38,
            "content": "            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8\">\n              <div className=\"flex items-center space-x-3 mb-6\">\n                <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 60,
            "endLine": 64,
            "content": "            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8\">\n              <div className=\"flex items-center space-x-3 mb-6\">\n                <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\" />"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 90,
            "endLine": 94,
            "content": "            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8\">\n              <div className=\"flex items-center space-x-3 mb-6\">\n                <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v14a2 2 0 002 2z\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 42,
            "endLine": 46,
            "content": "              </div>\n              <div className=\"space-y-4\">\n                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <h3 className=\"font-medium text-slate-900 mb-1\">Profile Information</h3>\n                  <p className=\"text-sm text-slate-600\">Update your personal details</p>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 68,
            "endLine": 72,
            "content": "              </div>\n              <div className=\"space-y-4\">\n                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <h3 className=\"font-medium text-slate-900 mb-1\">AI Processing</h3>\n                  <p className=\"text-sm text-slate-600\">Configure AI categorization settings</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 43,
            "endLine": 47,
            "content": "              <div className=\"space-y-4\">\n                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <h3 className=\"font-medium text-slate-900 mb-1\">Profile Information</h3>\n                  <p className=\"text-sm text-slate-600\">Update your personal details</p>\n                </div>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 69,
            "endLine": 73,
            "content": "              <div className=\"space-y-4\">\n                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <h3 className=\"font-medium text-slate-900 mb-1\">AI Processing</h3>\n                  <p className=\"text-sm text-slate-600\">Configure AI categorization settings</p>\n                </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 47,
            "endLine": 51,
            "content": "                </div>\n                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <h3 className=\"font-medium text-slate-900 mb-1\">Security</h3>\n                  <p className=\"text-sm text-slate-600\">Password and authentication</p>\n                </div>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 51,
            "endLine": 55,
            "content": "                </div>\n                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <h3 className=\"font-medium text-slate-900 mb-1\">Billing</h3>\n                  <p className=\"text-sm text-slate-600\">Subscription and payments</p>\n                </div>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 77,
            "endLine": 81,
            "content": "                </div>\n                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <h3 className=\"font-medium text-slate-900 mb-1\">Export Formats</h3>\n                  <p className=\"text-sm text-slate-600\">Default export preferences</p>\n                </div>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 81,
            "endLine": 85,
            "content": "                </div>\n                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <h3 className=\"font-medium text-slate-900 mb-1\">Notifications</h3>\n                  <p className=\"text-sm text-slate-600\">Email and system alerts</p>\n                </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 58,
            "endLine": 62,
            "content": "\n            {/* System Settings */}\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8\">\n              <div className=\"flex items-center space-x-3 mb-6\">\n                <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center\">"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 59,
            "endLine": 63,
            "content": "            {/* System Settings */}\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8\">\n              <div className=\"flex items-center space-x-3 mb-6\">\n                <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 88,
            "endLine": 92,
            "content": "\n            {/* Integration Settings */}\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8\">\n              <div className=\"flex items-center space-x-3 mb-6\">\n                <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 89,
            "endLine": 93,
            "content": "            {/* Integration Settings */}\n            <div className=\"bg-white rounded-2xl shadow-sm border border-slate-200/60 p-8\">\n              <div className=\"flex items-center space-x-3 mb-6\">\n                <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 100,
            "endLine": 104,
            "content": "                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"font-medium text-slate-900\">Xero</h3>\n                    <span className=\"px-2 py-1 bg-green-100 text-green-700 text-xs font-medium rounded-full\">Connected</span>\n                  </div>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 107,
            "endLine": 111,
            "content": "                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"font-medium text-slate-900\">QuickBooks</h3>\n                    <span className=\"px-2 py-1 bg-slate-100 text-slate-600 text-xs font-medium rounded-full\">Available</span>\n                  </div>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 114,
            "endLine": 118,
            "content": "                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"font-medium text-slate-900\">Bank APIs</h3>\n                    <span className=\"px-2 py-1 bg-amber-100 text-amber-700 text-xs font-medium rounded-full\">Coming Soon</span>\n                  </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 101,
            "endLine": 105,
            "content": "                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"font-medium text-slate-900\">Xero</h3>\n                    <span className=\"px-2 py-1 bg-green-100 text-green-700 text-xs font-medium rounded-full\">Connected</span>\n                  </div>\n                  <p className=\"text-sm text-slate-600\">Accounting software integration</p>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 108,
            "endLine": 112,
            "content": "                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"font-medium text-slate-900\">QuickBooks</h3>\n                    <span className=\"px-2 py-1 bg-slate-100 text-slate-600 text-xs font-medium rounded-full\">Available</span>\n                  </div>\n                  <p className=\"text-sm text-slate-600\">Connect your QuickBooks account</p>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 115,
            "endLine": 119,
            "content": "                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"font-medium text-slate-900\">Bank APIs</h3>\n                    <span className=\"px-2 py-1 bg-amber-100 text-amber-700 text-xs font-medium rounded-full\">Coming Soon</span>\n                  </div>\n                  <p className=\"text-sm text-slate-600\">Direct bank data feeds</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 106,
            "endLine": 110,
            "content": "                </div>\n                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"font-medium text-slate-900\">QuickBooks</h3>\n                    <span className=\"px-2 py-1 bg-slate-100 text-slate-600 text-xs font-medium rounded-full\">Available</span>"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 113,
            "endLine": 117,
            "content": "                </div>\n                <div className=\"p-4 bg-slate-50 rounded-lg\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"font-medium text-slate-900\">Bank APIs</h3>\n                    <span className=\"px-2 py-1 bg-amber-100 text-amber-700 text-xs font-medium rounded-full\">Coming Soon</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 124,
            "endLine": 128,
            "content": "\n          {/* Coming Soon Notice */}\n          <div className=\"mt-12 bg-gradient-to-r from-purple-50 to-blue-50 rounded-2xl p-8 text-center border border-purple-100\">\n            <div className=\"w-16 h-16 bg-white rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-sm\">\n              <svg className=\"w-8 h-8 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 125,
            "endLine": 129,
            "content": "          {/* Coming Soon Notice */}\n          <div className=\"mt-12 bg-gradient-to-r from-purple-50 to-blue-50 rounded-2xl p-8 text-center border border-purple-100\">\n            <div className=\"w-16 h-16 bg-white rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-sm\">\n              <svg className=\"w-8 h-8 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 140,
            "endLine": 144,
            "content": "\n      {/* Custom Keyword Manager Modal */}\n      {showKeywordManager && (\n        <KeywordManager onClose={() => setShowKeywordManager(false)} />\n      )}"
          },
          {
            "file": "src/app/settings/page.tsx",
            "startLine": 141,
            "endLine": 145,
            "content": "      {/* Custom Keyword Manager Modal */}\n      {showKeywordManager && (\n        <KeywordManager onClose={() => setShowKeywordManager(false)} />\n      )}\n    </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 2,
            "endLine": 6,
            "content": "\nimport React, { useState, useEffect } from 'react';\nimport { Transaction } from '../lib/types';\nimport { aiCategorizationService, AICategorizationResult } from '../lib/aiCategorizationService';\nimport { CustomKeywordManager } from '../data/customKeywords';"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import React, { useState, useEffect } from 'react';\nimport { Transaction } from '../lib/types';\nimport { aiCategorizationService, AICategorizationResult } from '../lib/aiCategorizationService';\nimport { CustomKeywordManager } from '../data/customKeywords';\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 7,
            "endLine": 11,
            "content": "\ninterface Props {\n  transaction: Transaction;\n  onCategorize: (accountCode: string, confidence: number) => void;\n  province: string;"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 8,
            "endLine": 12,
            "content": "interface Props {\n  transaction: Transaction;\n  onCategorize: (accountCode: string, confidence: number) => void;\n  province: string;\n  disabled?: boolean;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 30,
            "endLine": 34,
            "content": "\n  useEffect(() => {\n    // Initialize the AI service\n    aiCategorizationService.initialize().then(() => {\n      setIsAvailable(aiCategorizationService.isAvailable());"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 31,
            "endLine": 35,
            "content": "  useEffect(() => {\n    // Initialize the AI service\n    aiCategorizationService.initialize().then(() => {\n      setIsAvailable(aiCategorizationService.isAvailable());\n    });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 37,
            "endLine": 41,
            "content": "\n  const handleAICategorize = async () => {\n    if (disabled || isLoading || !isAvailable) return;\n\n    setIsLoading(true);"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 38,
            "endLine": 42,
            "content": "  const handleAICategorize = async () => {\n    if (disabled || isLoading || !isAvailable) return;\n\n    setIsLoading(true);\n    setError(null);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 66,
            "endLine": 70,
            "content": "\n  const handleApplyResult = () => {\n    if (result) {\n      console.log('🎯 Applying AI categorization:', {\n        accountCode: result.accountCode,"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 67,
            "endLine": 71,
            "content": "  const handleApplyResult = () => {\n    if (result) {\n      console.log('🎯 Applying AI categorization:', {\n        accountCode: result.accountCode,\n        confidence: result.confidence,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 75,
            "endLine": 79,
            "content": "      \n      onCategorize(result.accountCode, result.confidence);\n      setShowResult(false);\n      \n      // Show keyword prompt if a keyword was suggested"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 76,
            "endLine": 80,
            "content": "      onCategorize(result.accountCode, result.confidence);\n      setShowResult(false);\n      \n      // Show keyword prompt if a keyword was suggested\n      if (result.suggestedKeyword) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 78,
            "endLine": 82,
            "content": "      \n      // Show keyword prompt if a keyword was suggested\n      if (result.suggestedKeyword) {\n        setShowKeywordPrompt(true);\n      }"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 79,
            "endLine": 83,
            "content": "      // Show keyword prompt if a keyword was suggested\n      if (result.suggestedKeyword) {\n        setShowKeywordPrompt(true);\n      }\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 85,
            "endLine": 89,
            "content": "\n  const handleAddKeyword = async () => {\n    if (result && result.suggestedKeyword) {\n      try {\n        await keywordManager.addKeyword(result.suggestedKeyword, result.accountCode);"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 86,
            "endLine": 90,
            "content": "  const handleAddKeyword = async () => {\n    if (result && result.suggestedKeyword) {\n      try {\n        await keywordManager.addKeyword(result.suggestedKeyword, result.accountCode);\n        // Clear all states immediately"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 90,
            "endLine": 94,
            "content": "        // Clear all states immediately\n        setShowKeywordPrompt(false);\n        setShowResult(false);\n        setResult(null);\n        setError(null);"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 107,
            "endLine": 111,
            "content": "    // Clear all states immediately\n    setShowKeywordPrompt(false);\n    setShowResult(false);\n    setResult(null);\n    setError(null);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 95,
            "endLine": 99,
            "content": "        \n        // Notify parent component\n        if (onKeywordAdded) {\n          onKeywordAdded(result.suggestedKeyword, result.accountCode);\n        }"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 96,
            "endLine": 100,
            "content": "        // Notify parent component\n        if (onKeywordAdded) {\n          onKeywordAdded(result.suggestedKeyword, result.accountCode);\n        }\n      } catch (error) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 105,
            "endLine": 109,
            "content": "\n  const handleSkipKeyword = () => {\n    // Clear all states immediately\n    setShowKeywordPrompt(false);\n    setShowResult(false);"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 106,
            "endLine": 110,
            "content": "  const handleSkipKeyword = () => {\n    // Clear all states immediately\n    setShowKeywordPrompt(false);\n    setShowResult(false);\n    setResult(null);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 113,
            "endLine": 117,
            "content": "\n  const handleDismiss = () => {\n    // Clear all states immediately\n    setShowResult(false);\n    setShowKeywordPrompt(false);"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 114,
            "endLine": 118,
            "content": "  const handleDismiss = () => {\n    // Clear all states immediately\n    setShowResult(false);\n    setShowKeywordPrompt(false);\n    setResult(null);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 121,
            "endLine": 125,
            "content": "\n  // Don't show button if AI is not available\n  if (!isAvailable) {\n    return null;\n  }"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 122,
            "endLine": 126,
            "content": "  // Don't show button if AI is not available\n  if (!isAvailable) {\n    return null;\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 150,
            "endLine": 154,
            "content": "\n      {/* AI Reasoning Popup */}\n      {showResult && result && (\n        <div className=\"absolute top-8 right-0 z-50 w-[420px] bg-white border border-slate-200 rounded-lg shadow-lg p-4\">\n          <div className=\"flex items-start justify-between mb-3\">"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 151,
            "endLine": 155,
            "content": "      {/* AI Reasoning Popup */}\n      {showResult && result && (\n        <div className=\"absolute top-8 right-0 z-50 w-[420px] bg-white border border-slate-200 rounded-lg shadow-lg p-4\">\n          <div className=\"flex items-start justify-between mb-3\">\n            <h4 className=\"font-semibold text-slate-900\">AI Categorization</h4>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 158,
            "endLine": 162,
            "content": "              className=\"text-slate-400 hover:text-slate-600\"\n            >\n              ×\n            </button>\n          </div>"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 213,
            "endLine": 217,
            "content": "                className=\"text-slate-400 hover:text-slate-600\"\n              >\n                ×\n              </button>\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 163,
            "endLine": 167,
            "content": "          \n          <div className=\"space-y-3 mb-4\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm text-slate-600\">Account:</span>\n              <span className=\"font-medium text-slate-900\">{result.accountCode}</span>"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 164,
            "endLine": 168,
            "content": "          <div className=\"space-y-3 mb-4\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm text-slate-600\">Account:</span>\n              <span className=\"font-medium text-slate-900\">{result.accountCode}</span>\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 169,
            "endLine": 173,
            "content": "            \n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm text-slate-600\">Confidence:</span>\n              <span className={`font-medium ${\n                result.confidence >= 80 ? 'text-green-600' :"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 170,
            "endLine": 174,
            "content": "            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm text-slate-600\">Confidence:</span>\n              <span className={`font-medium ${\n                result.confidence >= 80 ? 'text-green-600' :\n                result.confidence >= 60 ? 'text-yellow-600' : 'text-red-600'"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 179,
            "endLine": 183,
            "content": "            \n            <div className=\"text-sm text-slate-700 mt-3 p-3 bg-slate-50 rounded-lg\">\n              <div className=\"font-medium text-slate-800 mb-1\">AI Reasoning:</div>\n              <div className=\"text-slate-600 leading-relaxed text-xs max-h-24 overflow-y-auto\">\n                {result.reasoning}"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 180,
            "endLine": 184,
            "content": "            <div className=\"text-sm text-slate-700 mt-3 p-3 bg-slate-50 rounded-lg\">\n              <div className=\"font-medium text-slate-800 mb-1\">AI Reasoning:</div>\n              <div className=\"text-slate-600 leading-relaxed text-xs max-h-24 overflow-y-auto\">\n                {result.reasoning}\n              </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 187,
            "endLine": 191,
            "content": "          \n          <div className=\"flex gap-2\">\n            <button\n              onClick={handleApplyResult}\n              className=\"flex-1 px-3 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 transition-colors\""
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 188,
            "endLine": 192,
            "content": "          <div className=\"flex gap-2\">\n            <button\n              onClick={handleApplyResult}\n              className=\"flex-1 px-3 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 transition-colors\"\n            >"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 204,
            "endLine": 208,
            "content": "\n      {/* Keyword Suggestion Popup */}\n      {showKeywordPrompt && result && result.suggestedKeyword && (\n        <div className=\"fixed inset-0 z-[9999] flex items-center justify-center bg-black bg-opacity-50\" onClick={handleSkipKeyword}>\n          <div className=\"bg-white rounded-lg shadow-xl p-6 max-w-md w-full mx-4\" onClick={(e) => e.stopPropagation()}>"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 205,
            "endLine": 209,
            "content": "      {/* Keyword Suggestion Popup */}\n      {showKeywordPrompt && result && result.suggestedKeyword && (\n        <div className=\"fixed inset-0 z-[9999] flex items-center justify-center bg-black bg-opacity-50\" onClick={handleSkipKeyword}>\n          <div className=\"bg-white rounded-lg shadow-xl p-6 max-w-md w-full mx-4\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"flex items-center justify-between mb-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 209,
            "endLine": 213,
            "content": "            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-slate-900\">Add Custom Keyword?</h3>\n              <button\n                onClick={handleSkipKeyword}\n                className=\"text-slate-400 hover:text-slate-600\""
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 246,
            "endLine": 250,
            "content": "              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold text-slate-900\">Single Keywords</h3>\n                <button\n                  onClick={() => setShowAddKeyword(true)}\n                  className=\"flex items-center space-x-2 px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\""
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 334,
            "endLine": 338,
            "content": "              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold text-slate-900\">Multi-Keyword Rules</h3>\n                <button\n                  onClick={() => setShowAddRule(true)}\n                  className=\"flex items-center space-x-2 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 218,
            "endLine": 222,
            "content": "            \n            <div className=\"mb-4\">\n              <p className=\"text-slate-600 mb-3\">\n                Would you like to add <span className=\"font-medium text-slate-900\">\"{result.suggestedKeyword}\"</span> as a custom keyword?\n              </p>"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 219,
            "endLine": 223,
            "content": "            <div className=\"mb-4\">\n              <p className=\"text-slate-600 mb-3\">\n                Would you like to add <span className=\"font-medium text-slate-900\">\"{result.suggestedKeyword}\"</span> as a custom keyword?\n              </p>\n              <p className=\"text-sm text-slate-500\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 227,
            "endLine": 231,
            "content": "            \n            <div className=\"flex gap-3\">\n              <button\n                onClick={handleAddKeyword}\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\""
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 228,
            "endLine": 232,
            "content": "            <div className=\"flex gap-3\">\n              <button\n                onClick={handleAddKeyword}\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 229,
            "endLine": 233,
            "content": "              <button\n                onClick={handleAddKeyword}\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                Add Keyword"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 491,
            "endLine": 495,
            "content": "                  <button\n                    onClick={handleAddKeyword}\n                    className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                  >\n                    Add Keyword"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 230,
            "endLine": 234,
            "content": "                onClick={handleAddKeyword}\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                Add Keyword\n              </button>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 492,
            "endLine": 496,
            "content": "                    onClick={handleAddKeyword}\n                    className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                  >\n                    Add Keyword\n                  </button>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 245,
            "endLine": 249,
            "content": "\n      {/* Error Popup */}\n      {showResult && error && (\n        <div className=\"absolute top-8 right-0 z-50 w-80 bg-white border border-red-200 rounded-lg shadow-lg p-4\">\n          <div className=\"flex items-start justify-between mb-3\">"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 246,
            "endLine": 250,
            "content": "      {/* Error Popup */}\n      {showResult && error && (\n        <div className=\"absolute top-8 right-0 z-50 w-80 bg-white border border-red-200 rounded-lg shadow-lg p-4\">\n          <div className=\"flex items-start justify-between mb-3\">\n            <h4 className=\"font-semibold text-red-900\">AI Categorization Error</h4>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 260,
            "endLine": 264,
            "content": "          \n          <button\n            onClick={handleDismiss}\n            className=\"w-full px-3 py-2 bg-red-600 text-white text-sm rounded-lg hover:bg-red-700 transition-colors\"\n          >"
          },
          {
            "file": "src/components/AICategorizationButton.tsx",
            "startLine": 261,
            "endLine": 265,
            "content": "          <button\n            onClick={handleDismiss}\n            className=\"w-full px-3 py-2 bg-red-600 text-white text-sm rounded-lg hover:bg-red-700 transition-colors\"\n          >\n            Dismiss"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AuthButton.tsx",
            "startLine": 2,
            "endLine": 6,
            "content": "\nimport React, { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { getSupabaseClient, testDatabaseConnection } from '../lib/supabase';\nimport { RefreshCw, CheckCircle, AlertCircle, Database, User, LogOut, LogIn } from 'lucide-react';"
          },
          {
            "file": "src/components/AuthButton.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import React, { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { getSupabaseClient, testDatabaseConnection } from '../lib/supabase';\nimport { RefreshCw, CheckCircle, AlertCircle, Database, User, LogOut, LogIn } from 'lucide-react';\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AuthButton.tsx",
            "startLine": 7,
            "endLine": 11,
            "content": "\nexport const AuthButton: React.FC = () => {\n  const { user, loading, signOut } = useAuth();\n  const [isSigningIn, setIsSigningIn] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);"
          },
          {
            "file": "src/components/AuthButton.tsx",
            "startLine": 8,
            "endLine": 12,
            "content": "export const AuthButton: React.FC = () => {\n  const { user, loading, signOut } = useAuth();\n  const [isSigningIn, setIsSigningIn] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState<'idle' | 'success' | 'error'>('idle');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AuthButton.tsx",
            "startLine": 13,
            "endLine": 17,
            "content": "\n  const handleSignIn = async () => {\n    setIsSigningIn(true);\n    try {\n      const supabase = getSupabaseClient();"
          },
          {
            "file": "src/components/AuthButton.tsx",
            "startLine": 14,
            "endLine": 18,
            "content": "  const handleSignIn = async () => {\n    setIsSigningIn(true);\n    try {\n      const supabase = getSupabaseClient();\n      const { error } = await supabase.auth.signInWithOAuth({"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AuthButton.tsx",
            "startLine": 44,
            "endLine": 48,
            "content": "\n  const testConnection = async () => {\n    setTestingConnection(true);\n    try {\n      const isConnected = await testDatabaseConnection();"
          },
          {
            "file": "src/components/AuthButton.tsx",
            "startLine": 45,
            "endLine": 49,
            "content": "  const testConnection = async () => {\n    setTestingConnection(true);\n    try {\n      const isConnected = await testDatabaseConnection();\n      setConnectionStatus(isConnected ? 'success' : 'error');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AuthButton.tsx",
            "startLine": 65,
            "endLine": 69,
            "content": "\n  if (loading) {\n    return (\n      <div className=\"flex items-center space-x-2 text-sm text-slate-600\">\n        <div className=\"animate-spin\">"
          },
          {
            "file": "src/components/AuthButton.tsx",
            "startLine": 66,
            "endLine": 70,
            "content": "  if (loading) {\n    return (\n      <div className=\"flex items-center space-x-2 text-sm text-slate-600\">\n        <div className=\"animate-spin\">\n          <RefreshCw className=\"w-4 h-4\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/AuthButton.tsx",
            "startLine": 117,
            "endLine": 121,
            "content": "\n      {/* Authentication Button */}\n      {user ? (\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"flex items-center space-x-2 text-sm\">"
          },
          {
            "file": "src/components/AuthButton.tsx",
            "startLine": 118,
            "endLine": 122,
            "content": "      {/* Authentication Button */}\n      {user ? (\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"flex items-center space-x-2 text-sm\">\n            <User className=\"w-4 h-4 text-emerald-600\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 13,
            "endLine": 17,
            "content": "\ninterface BulkCategorySelectorProps {\n  transactions: Transaction[];\n  onBulkUpdate: (updates: { id: string; accountCode: string }[]) => void;\n  onClose: () => void;"
          },
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 14,
            "endLine": 18,
            "content": "interface BulkCategorySelectorProps {\n  transactions: Transaction[];\n  onBulkUpdate: (updates: { id: string; accountCode: string }[]) => void;\n  onClose: () => void;\n  province: string;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 20,
            "endLine": 24,
            "content": "\nconst BulkCategorySelector: React.FC<BulkCategorySelectorProps> = ({\n  transactions,\n  onBulkUpdate,\n  onClose,"
          },
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 21,
            "endLine": 25,
            "content": "const BulkCategorySelector: React.FC<BulkCategorySelectorProps> = ({\n  transactions,\n  onBulkUpdate,\n  onClose,\n  province"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 31,
            "endLine": 35,
            "content": "\n  // Create ChartOfAccounts instance for the province\n  const chartOfAccounts = useMemo(() => new ChartOfAccounts(province), [province]);\n\n  // Get available accounts for the province"
          },
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 32,
            "endLine": 36,
            "content": "  // Create ChartOfAccounts instance for the province\n  const chartOfAccounts = useMemo(() => new ChartOfAccounts(province), [province]);\n\n  // Get available accounts for the province\n  const accounts = useMemo(() => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 34,
            "endLine": 38,
            "content": "\n  // Get available accounts for the province\n  const accounts = useMemo(() => {\n    const allAccounts = chartOfAccounts.getAllAccounts();\n    return allAccounts.map(account => ({"
          },
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 35,
            "endLine": 39,
            "content": "  // Get available accounts for the province\n  const accounts = useMemo(() => {\n    const allAccounts = chartOfAccounts.getAllAccounts();\n    return allAccounts.map(account => ({\n      code: account.code,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 43,
            "endLine": 47,
            "content": "\n  // Filter transactions based on current filter\n  const filteredTransactions = useMemo(() => {\n    let filtered = transactions;\n    if (filterType === 'unassigned') {"
          },
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 44,
            "endLine": 48,
            "content": "  // Filter transactions based on current filter\n  const filteredTransactions = useMemo(() => {\n    let filtered = transactions;\n    if (filterType === 'unassigned') {\n      filtered = filtered.filter(t => !t.accountCode);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 57,
            "endLine": 61,
            "content": "\n  const handleSelectAll = () => {\n    if (selectedTransactions.size === filteredTransactions.length) {\n      setSelectedTransactions(new Set());\n    } else {"
          },
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 58,
            "endLine": 62,
            "content": "  const handleSelectAll = () => {\n    if (selectedTransactions.size === filteredTransactions.length) {\n      setSelectedTransactions(new Set());\n    } else {\n      setSelectedTransactions(new Set(filteredTransactions.map(t => t.id)));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 65,
            "endLine": 69,
            "content": "\n  const handleManualAssign = () => {\n    if (selectedTransactions.size === 0 || !selectedAccountCode) return;\n    const updates = Array.from(selectedTransactions).map(id => ({\n      id,"
          },
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 66,
            "endLine": 70,
            "content": "  const handleManualAssign = () => {\n    if (selectedTransactions.size === 0 || !selectedAccountCode) return;\n    const updates = Array.from(selectedTransactions).map(id => ({\n      id,\n      accountCode: selectedAccountCode"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 76,
            "endLine": 80,
            "content": "\n  const isAllSelected = filteredTransactions.length > 0 && selectedTransactions.size === filteredTransactions.length;\n  const isIndeterminate = selectedTransactions.size > 0 && selectedTransactions.size < filteredTransactions.length;\n\n  return ("
          },
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 77,
            "endLine": 81,
            "content": "  const isAllSelected = filteredTransactions.length > 0 && selectedTransactions.size === filteredTransactions.length;\n  const isIndeterminate = selectedTransactions.size > 0 && selectedTransactions.size < filteredTransactions.length;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 79,
            "endLine": 83,
            "content": "\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-2xl shadow-2xl max-w-6xl w-full max-h-[90vh] overflow-hidden\">\n        {/* Header */}"
          },
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 80,
            "endLine": 84,
            "content": "  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-2xl shadow-2xl max-w-6xl w-full max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 176,
            "endLine": 180,
            "content": "\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-2xl shadow-xl max-w-6xl w-full max-h-[90vh] overflow-hidden\">\n        {/* Header */}"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 177,
            "endLine": 181,
            "content": "  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-2xl shadow-xl max-w-6xl w-full max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 81,
            "endLine": 85,
            "content": "    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-2xl shadow-2xl max-w-6xl w-full max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">\n          <div>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 178,
            "endLine": 182,
            "content": "    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-2xl shadow-xl max-w-6xl w-full max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">\n          <div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 83,
            "endLine": 87,
            "content": "        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-slate-900\">Bulk Account Assignment</h2>\n            <p className=\"text-slate-600 mt-1\">"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 235,
            "endLine": 239,
            "content": "        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-slate-800\">Custom Keywords & Rules</h2>\n            <p className=\"text-slate-600 mt-1\">Manage your custom categorization rules</p>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 180,
            "endLine": 184,
            "content": "        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-slate-900\">Custom Keywords Manager</h2>\n            <p className=\"text-slate-600 mt-1\">Manage your custom transaction categorization rules</p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 84,
            "endLine": 88,
            "content": "        <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-slate-900\">Bulk Account Assignment</h2>\n            <p className=\"text-slate-600 mt-1\">\n              {selectedTransactions.size > 0 "
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 236,
            "endLine": 240,
            "content": "        <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-slate-800\">Custom Keywords & Rules</h2>\n            <p className=\"text-slate-600 mt-1\">Manage your custom categorization rules</p>\n          </div>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 181,
            "endLine": 185,
            "content": "        <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-slate-900\">Custom Keywords Manager</h2>\n            <p className=\"text-slate-600 mt-1\">Manage your custom transaction categorization rules</p>\n          </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 101,
            "endLine": 105,
            "content": "\n        <div className=\"flex h-[calc(90vh-120px)]\">\n          {/* Left Panel - Transaction List */}\n          <div className=\"flex-1 border-r border-slate-200 flex flex-col\">\n            {/* Filters */}"
          },
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 102,
            "endLine": 106,
            "content": "        <div className=\"flex h-[calc(90vh-120px)]\">\n          {/* Left Panel - Transaction List */}\n          <div className=\"flex-1 border-r border-slate-200 flex flex-col\">\n            {/* Filters */}\n            <div className=\"p-4 border-b border-slate-200\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 133,
            "endLine": 137,
            "content": "                    className=\"w-full pl-10 pr-4 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-slate-900 focus:border-transparent\"\n                  />\n                </div>\n                <button\n                  onClick={handleSelectAll}"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 302,
            "endLine": 306,
            "content": "                className=\"w-full pl-10 pr-4 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n              />\n            </div>\n            <div className=\"relative\">\n              <Filter size={16} className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/BulkCategorySelector.tsx",
            "startLine": 222,
            "endLine": 226,
            "content": "                      <option key={account.code} value={account.code}>\n                        {account.code} - {account.name}\n                      </option>\n                    ))}\n                  </select>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1103,
            "endLine": 1107,
            "content": "        <option key={account.code} value={account.code}>\n          {account.code} - {account.name}\n        </option>\n      ))}\n    </select>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1378,
            "endLine": 1382,
            "content": "                                              <option key={account.code} value={account.code}>\n                                                {account.code} - {account.name}\n                                              </option>\n                                            ))}\n                                          </select>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ClientLayout.tsx",
            "startLine": 4,
            "endLine": 8,
            "content": "\nexport default function ClientLayout({ children }: { children: React.ReactNode }) {\n  const [showPreloader, setShowPreloader] = useState(false);\n  const [isClient, setIsClient] = useState(false);\n"
          },
          {
            "file": "src/components/ClientLayout.tsx",
            "startLine": 5,
            "endLine": 9,
            "content": "export default function ClientLayout({ children }: { children: React.ReactNode }) {\n  const [showPreloader, setShowPreloader] = useState(false);\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ClientLayout.tsx",
            "startLine": 8,
            "endLine": 12,
            "content": "\n  useEffect(() => {\n    setIsClient(true);\n    setShowPreloader(true);\n  }, []);"
          },
          {
            "file": "src/components/ClientLayout.tsx",
            "startLine": 9,
            "endLine": 13,
            "content": "  useEffect(() => {\n    setIsClient(true);\n    setShowPreloader(true);\n  }, []);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ClientLayout.tsx",
            "startLine": 17,
            "endLine": 21,
            "content": "\n  // Render the same structure on both server and client to prevent hydration mismatch\n  return (\n    <>\n      {isClient && showPreloader && <Preloader onFinish={handleFinish} />}"
          },
          {
            "file": "src/components/ClientLayout.tsx",
            "startLine": 18,
            "endLine": 22,
            "content": "  // Render the same structure on both server and client to prevent hydration mismatch\n  return (\n    <>\n      {isClient && showPreloader && <Preloader onFinish={handleFinish} />}\n      <div "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 2,
            "endLine": 6,
            "content": "\nimport React, { useState, useEffect } from 'react';\nimport { Plus, Edit, Trash2, Download, Upload, Save, X, Search, Filter } from 'lucide-react';\nimport { CustomKeywordManager as KeywordManager, CustomKeyword, CustomKeywordRule } from '../data/customKeywords';\nimport { ChartOfAccounts } from '../lib/chartOfAccounts';"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import React, { useState, useEffect } from 'react';\nimport { Plus, Edit, Trash2, Download, Upload, Save, X, Search, Filter } from 'lucide-react';\nimport { CustomKeywordManager as KeywordManager, CustomKeyword, CustomKeywordRule } from '../data/customKeywords';\nimport { ChartOfAccounts } from '../lib/chartOfAccounts';\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 7,
            "endLine": 11,
            "content": "\ninterface CustomKeywordManagerProps {\n  onClose?: () => void;\n  onKeywordsUpdated?: () => void;\n}"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 8,
            "endLine": 12,
            "content": "interface CustomKeywordManagerProps {\n  onClose?: () => void;\n  onKeywordsUpdated?: () => void;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 12,
            "endLine": 16,
            "content": "\nexport default function CustomKeywordManager({ onClose, onKeywordsUpdated }: CustomKeywordManagerProps) {\n  const [manager] = useState(() => KeywordManager.getInstance());\n  const [keywords, setKeywords] = useState<CustomKeyword[]>([]);\n  const [rules, setRules] = useState<CustomKeywordRule[]>([]);"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 13,
            "endLine": 17,
            "content": "export default function CustomKeywordManager({ onClose, onKeywordsUpdated }: CustomKeywordManagerProps) {\n  const [manager] = useState(() => KeywordManager.getInstance());\n  const [keywords, setKeywords] = useState<CustomKeyword[]>([]);\n  const [rules, setRules] = useState<CustomKeywordRule[]>([]);\n  const [accounts, setAccounts] = useState<Array<{ code: string; name: string }>>([]);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 15,
            "endLine": 19,
            "content": "  const [keywords, setKeywords] = useState<CustomKeyword[]>([]);\n  const [rules, setRules] = useState<CustomKeywordRule[]>([]);\n  const [accounts, setAccounts] = useState<Array<{ code: string; name: string }>>([]);\n  const [activeTab, setActiveTab] = useState<'keywords' | 'rules'>('keywords');\n  const [searchTerm, setSearchTerm] = useState('');"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 11,
            "endLine": 15,
            "content": "  const [keywords, setKeywords] = useState<CustomKeyword[]>([]);\n  const [rules, setRules] = useState<CustomKeywordRule[]>([]);\n  const [stats, setStats] = useState({ totalKeywords: 0, totalRules: 0, accountCodes: [] as string[] });\n  \n  // Form states"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 24,
            "endLine": 28,
            "content": "    keyword: '',\n    keywords: [''],\n    accountCode: '',\n    confidence: 90,\n    description: ''"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 72,
            "endLine": 76,
            "content": "      keyword: '',\n      keywords: [''],\n      accountCode: '',\n      confidence: 90,\n      description: ''"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 25,
            "endLine": 29,
            "content": "    keywords: [''],\n    accountCode: '',\n    confidence: 90,\n    description: ''\n  });"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 73,
            "endLine": 77,
            "content": "      keywords: [''],\n      accountCode: '',\n      confidence: 90,\n      description: ''\n    });"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 31,
            "endLine": 35,
            "content": "    keywords: [''],\n    accountCode: '',\n    confidence: 90,\n    description: ''\n  });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 26,
            "endLine": 30,
            "content": "    accountCode: '',\n    confidence: 90,\n    description: ''\n  });\n"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 24,
            "endLine": 28,
            "content": "    accountCode: '',\n    confidence: 90,\n    description: ''\n  });\n  "
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 32,
            "endLine": 36,
            "content": "    accountCode: '',\n    confidence: 90,\n    description: ''\n  });\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 30,
            "endLine": 34,
            "content": "\n  useEffect(() => {\n    loadData();\n    loadAccounts();\n  }, []);"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 31,
            "endLine": 35,
            "content": "  useEffect(() => {\n    loadData();\n    loadAccounts();\n  }, []);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 34,
            "endLine": 38,
            "content": "  }, []);\n\n  const loadData = () => {\n    setKeywords(manager.getKeywords());\n    setRules(manager.getRules());"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 44,
            "endLine": 48,
            "content": "  }, []);\n\n  const loadData = () => {\n    setKeywords(manager.getKeywords());\n    setRules(manager.getRules());"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 35,
            "endLine": 39,
            "content": "\n  const loadData = () => {\n    setKeywords(manager.getKeywords());\n    setRules(manager.getRules());\n  };"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 36,
            "endLine": 40,
            "content": "  const loadData = () => {\n    setKeywords(manager.getKeywords());\n    setRules(manager.getRules());\n  };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 40,
            "endLine": 44,
            "content": "\n  const loadAccounts = async () => {\n    try {\n      const chart = new ChartOfAccounts('ON');\n      // Chart of Accounts is always ready"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 41,
            "endLine": 45,
            "content": "  const loadAccounts = async () => {\n    try {\n      const chart = new ChartOfAccounts('ON');\n      // Chart of Accounts is always ready\n      const accountList = chart.getAllAccounts().map((acc: any) => ({"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 54,
            "endLine": 58,
            "content": "\n  const filteredKeywords = keywords.filter(k => {\n    const matchesSearch = k.keyword.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         k.description?.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesAccount = !filterAccount || k.accountCode === filterAccount;"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 55,
            "endLine": 59,
            "content": "  const filteredKeywords = keywords.filter(k => {\n    const matchesSearch = k.keyword.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         k.description?.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesAccount = !filterAccount || k.accountCode === filterAccount;\n    return matchesSearch && matchesAccount;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 61,
            "endLine": 65,
            "content": "\n  const filteredRules = rules.filter(r => {\n    const matchesSearch = r.keywords.some(k => k.toLowerCase().includes(searchTerm.toLowerCase())) ||\n                         r.description?.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesAccount = !filterAccount || r.accountCode === filterAccount;"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 62,
            "endLine": 66,
            "content": "  const filteredRules = rules.filter(r => {\n    const matchesSearch = r.keywords.some(k => k.toLowerCase().includes(searchTerm.toLowerCase())) ||\n                         r.description?.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesAccount = !filterAccount || r.accountCode === filterAccount;\n    return matchesSearch && matchesAccount;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 80,
            "endLine": 84,
            "content": "\n  const handleEdit = (item: CustomKeyword | CustomKeywordRule) => {\n    setEditingItem(item);\n    if ('keyword' in item) {\n      // It's a keyword"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 81,
            "endLine": 85,
            "content": "  const handleEdit = (item: CustomKeyword | CustomKeywordRule) => {\n    setEditingItem(item);\n    if ('keyword' in item) {\n      // It's a keyword\n      setFormData({"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 88,
            "endLine": 92,
            "content": "        accountCode: item.accountCode,\n        confidence: item.confidence,\n        description: item.description || ''\n      });\n    } else {"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 97,
            "endLine": 101,
            "content": "        accountCode: item.accountCode,\n        confidence: item.confidence,\n        description: item.description || ''\n      });\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 104,
            "endLine": 108,
            "content": "\n  const handleDelete = (id: string) => {\n    if (confirm('Are you sure you want to delete this item?')) {\n      if (activeTab === 'keywords') {\n        manager.removeKeyword(id);"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 105,
            "endLine": 109,
            "content": "  const handleDelete = (id: string) => {\n    if (confirm('Are you sure you want to delete this item?')) {\n      if (activeTab === 'keywords') {\n        manager.removeKeyword(id);\n      } else {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 116,
            "endLine": 120,
            "content": "\n  const handleSave = () => {\n    if (!formData.accountCode) {\n      alert('Please select an account code');\n      return;"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 117,
            "endLine": 121,
            "content": "  const handleSave = () => {\n    if (!formData.accountCode) {\n      alert('Please select an account code');\n      return;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 122,
            "endLine": 126,
            "content": "\n    if (activeTab === 'keywords') {\n      if (!formData.keyword.trim()) {\n        alert('Please enter a keyword');\n        return;"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 123,
            "endLine": 127,
            "content": "    if (activeTab === 'keywords') {\n      if (!formData.keyword.trim()) {\n        alert('Please enter a keyword');\n        return;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 128,
            "endLine": 132,
            "content": "\n      if (editingItem && 'keyword' in editingItem) {\n        manager.updateKeyword(editingItem.id, {\n          keyword: formData.keyword.trim(),\n          accountCode: formData.accountCode,"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 129,
            "endLine": 133,
            "content": "      if (editingItem && 'keyword' in editingItem) {\n        manager.updateKeyword(editingItem.id, {\n          keyword: formData.keyword.trim(),\n          accountCode: formData.accountCode,\n          confidence: formData.confidence,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 132,
            "endLine": 136,
            "content": "          accountCode: formData.accountCode,\n          confidence: formData.confidence,\n          description: formData.description.trim() || undefined\n        });\n      } else {"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 154,
            "endLine": 158,
            "content": "          accountCode: formData.accountCode,\n          confidence: formData.confidence,\n          description: formData.description.trim() || undefined\n        });\n      } else {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 133,
            "endLine": 137,
            "content": "          confidence: formData.confidence,\n          description: formData.description.trim() || undefined\n        });\n      } else {\n        manager.addKeyword("
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 155,
            "endLine": 159,
            "content": "          confidence: formData.confidence,\n          description: formData.description.trim() || undefined\n        });\n      } else {\n        manager.addRule("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 139,
            "endLine": 143,
            "content": "          formData.accountCode,\n          formData.confidence,\n          formData.description.trim() || undefined\n        );\n      }"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 161,
            "endLine": 165,
            "content": "          formData.accountCode,\n          formData.confidence,\n          formData.description.trim() || undefined\n        );\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 150,
            "endLine": 154,
            "content": "\n      if (editingItem && !('keyword' in editingItem)) {\n        manager.updateRule(editingItem.id, {\n          keywords: validKeywords,\n          accountCode: formData.accountCode,"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 151,
            "endLine": 155,
            "content": "      if (editingItem && !('keyword' in editingItem)) {\n        manager.updateRule(editingItem.id, {\n          keywords: validKeywords,\n          accountCode: formData.accountCode,\n          confidence: formData.confidence,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 173,
            "endLine": 177,
            "content": "\n  const handleExport = () => {\n    const data = {\n      keywords: manager.getKeywords(),\n      rules: manager.getRules(),"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 174,
            "endLine": 178,
            "content": "  const handleExport = () => {\n    const data = {\n      keywords: manager.getKeywords(),\n      rules: manager.getRules(),\n      exportedAt: new Date().toISOString()"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 181,
            "endLine": 185,
            "content": "    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `meridian-keywords-${new Date().toISOString().split('T')[0]}.json`;\n    a.click();"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 149,
            "endLine": 153,
            "content": "    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `meridian-custom-keywords-${new Date().toISOString().split('T')[0]}.json`;\n    document.body.appendChild(a);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 188,
            "endLine": 192,
            "content": "\n  const handleImport = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 189,
            "endLine": 193,
            "content": "  const handleImport = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 192,
            "endLine": 196,
            "content": "\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const result = manager.importKeywords(e.target?.result as string);"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 193,
            "endLine": 197,
            "content": "    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const result = manager.importKeywords(e.target?.result as string);\n        if (result.success) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 217,
            "endLine": 221,
            "content": "\n  const removeKeywordField = (index: number) => {\n    setFormData(prev => ({\n      ...prev,\n      keywords: prev.keywords.filter((_, i) => i !== index)"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 218,
            "endLine": 222,
            "content": "  const removeKeywordField = (index: number) => {\n    setFormData(prev => ({\n      ...prev,\n      keywords: prev.keywords.filter((_, i) => i !== index)\n    }));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 224,
            "endLine": 228,
            "content": "\n  const updateKeywordField = (index: number, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      keywords: prev.keywords.map((k, i) => i === index ? value : k)"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 225,
            "endLine": 229,
            "content": "  const updateKeywordField = (index: number, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      keywords: prev.keywords.map((k, i) => i === index ? value : k)\n    }));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 230,
            "endLine": 234,
            "content": "  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[9999] p-4\" onClick={onClose}>\n      <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-6xl max-h-[90vh] overflow-hidden\" onClick={(e) => e.stopPropagation()}>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 175,
            "endLine": 179,
            "content": "  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-2xl shadow-xl max-w-6xl w-full max-h-[90vh] overflow-hidden\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 231,
            "endLine": 235,
            "content": "\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[9999] p-4\" onClick={onClose}>\n      <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-6xl max-h-[90vh] overflow-hidden\" onClick={(e) => e.stopPropagation()}>\n        {/* Header */}"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 232,
            "endLine": 236,
            "content": "  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[9999] p-4\" onClick={onClose}>\n      <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-6xl max-h-[90vh] overflow-hidden\" onClick={(e) => e.stopPropagation()}>\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 240,
            "endLine": 244,
            "content": "          </div>\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={handleExport}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-slate-100 text-slate-700 rounded-lg hover:bg-slate-200 transition-colors\""
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 185,
            "endLine": 189,
            "content": "          </div>\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={handleExport}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 241,
            "endLine": 245,
            "content": "          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={handleExport}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-slate-100 text-slate-700 rounded-lg hover:bg-slate-200 transition-colors\"\n            >"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 186,
            "endLine": 190,
            "content": "          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={handleExport}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors\"\n            >"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 261,
            "endLine": 265,
            "content": "              className=\"p-2 text-slate-400 hover:text-slate-600 transition-colors\"\n            >\n              <X size={20} />\n            </button>\n          </div>"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 427,
            "endLine": 431,
            "content": "                  className=\"p-2 text-slate-400 hover:text-slate-600 transition-colors\"\n                >\n                  <X size={20} />\n                </button>\n              </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 267,
            "endLine": 271,
            "content": "\n        {/* Tabs */}\n        <div className=\"flex border-b border-slate-200\">\n          <button\n            onClick={() => setActiveTab('keywords')}"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 268,
            "endLine": 272,
            "content": "        {/* Tabs */}\n        <div className=\"flex border-b border-slate-200\">\n          <button\n            onClick={() => setActiveTab('keywords')}\n            className={`px-6 py-3 font-medium transition-colors ${"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 291,
            "endLine": 295,
            "content": "\n        {/* Filters */}\n        <div className=\"p-6 border-b border-slate-200 bg-slate-50\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex-1 relative\">"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 292,
            "endLine": 296,
            "content": "        {/* Filters */}\n        <div className=\"p-6 border-b border-slate-200 bg-slate-50\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex-1 relative\">\n              <Search size={16} className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 313,
            "endLine": 317,
            "content": "                {accounts.map(acc => (\n                  <option key={acc.code} value={acc.code}>\n                    {acc.name}\n                  </option>\n                ))}"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 490,
            "endLine": 494,
            "content": "                    {accounts.map(acc => (\n                      <option key={acc.code} value={acc.code}>\n                        {acc.name}\n                      </option>\n                    ))}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 314,
            "endLine": 318,
            "content": "                  <option key={acc.code} value={acc.code}>\n                    {acc.name}\n                  </option>\n                ))}\n              </select>"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 491,
            "endLine": 495,
            "content": "                      <option key={acc.code} value={acc.code}>\n                        {acc.name}\n                      </option>\n                    ))}\n                  </select>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 322,
            "endLine": 326,
            "content": "              className=\"flex items-center space-x-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\"\n            >\n              <Plus size={16} />\n              <span>Add {activeTab === 'keywords' ? 'Keyword' : 'Rule'}</span>\n            </button>"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 534,
            "endLine": 538,
            "content": "                    className=\"flex items-center space-x-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\"\n                  >\n                    <Save size={16} />\n                    <span>Save</span>\n                  </button>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 327,
            "endLine": 331,
            "content": "          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 overflow-auto p-6\">"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 238,
            "endLine": 242,
            "content": "          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 overflow-auto p-6\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 329,
            "endLine": 333,
            "content": "\n        {/* Content */}\n        <div className=\"flex-1 overflow-auto p-6\">\n          {activeTab === 'keywords' ? (\n            <div className=\"space-y-4\">"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 330,
            "endLine": 334,
            "content": "        {/* Content */}\n        <div className=\"flex-1 overflow-auto p-6\">\n          {activeTab === 'keywords' ? (\n            <div className=\"space-y-4\">\n              {filteredKeywords.map(keyword => ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 336,
            "endLine": 340,
            "content": "                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-3\">\n                      <span className=\"font-medium text-slate-800\">{keyword.keyword}</span>\n                      <span className=\"text-sm text-slate-500\">→</span>\n                      <span className=\"font-medium text-purple-600\">{keyword.accountCode}</span>"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 376,
            "endLine": 380,
            "content": "                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-3\">\n                      <span className=\"font-medium text-slate-800\">\n                        {rule.keywords.join(' OR ')}\n                      </span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 353,
            "endLine": 357,
            "content": "                      className=\"p-2 text-slate-400 hover:text-slate-600 transition-colors\"\n                    >\n                      <Edit size={16} />\n                    </button>\n                    <button"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 395,
            "endLine": 399,
            "content": "                      className=\"p-2 text-slate-400 hover:text-slate-600 transition-colors\"\n                    >\n                      <Edit size={16} />\n                    </button>\n                    <button"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 359,
            "endLine": 363,
            "content": "                      className=\"p-2 text-slate-400 hover:text-red-600 transition-colors\"\n                    >\n                      <Trash2 size={16} />\n                    </button>\n                  </div>"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 401,
            "endLine": 405,
            "content": "                      className=\"p-2 text-slate-400 hover:text-red-600 transition-colors\"\n                    >\n                      <Trash2 size={16} />\n                    </button>\n                  </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 416,
            "endLine": 420,
            "content": "\n        {/* Add/Edit Form Modal */}\n        {showAddForm && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[99999] p-4\">\n            <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-md\">"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 417,
            "endLine": 421,
            "content": "        {/* Add/Edit Form Modal */}\n        {showAddForm && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[99999] p-4\">\n            <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-md\">\n              <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 432,
            "endLine": 436,
            "content": "\n              <div className=\"p-6 space-y-4\">\n                {activeTab === 'keywords' ? (\n                  <div>\n                    <label className=\"block text-sm font-medium text-slate-700 mb-2\">"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 433,
            "endLine": 437,
            "content": "              <div className=\"p-6 space-y-4\">\n                {activeTab === 'keywords' ? (\n                  <div>\n                    <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                      Keyword *"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 444,
            "endLine": 448,
            "content": "                      className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n                    />\n                  </div>\n                ) : (\n                  <div>"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 487,
            "endLine": 491,
            "content": "                    className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n                  >\n                    <option value=\"\">Select an account...</option>\n                    {accounts.map(acc => (\n                      <option key={acc.code} value={acc.code}>"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 521,
            "endLine": 525,
            "content": "                    className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-end space-x-3 pt-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 497,
            "endLine": 501,
            "content": "\n                <div>\n                  <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                    Confidence ({formData.confidence}%)\n                  </label>"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 498,
            "endLine": 502,
            "content": "                <div>\n                  <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                    Confidence ({formData.confidence}%)\n                  </label>\n                  <input"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 511,
            "endLine": 515,
            "content": "\n                <div>\n                  <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                    Description (optional)\n                  </label>"
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 512,
            "endLine": 516,
            "content": "                <div>\n                  <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                    Description (optional)\n                  </label>\n                  <textarea"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 524,
            "endLine": 528,
            "content": "\n                <div className=\"flex items-center justify-end space-x-3 pt-4\">\n                  <button\n                    onClick={() => setShowAddForm(false)}\n                    className=\"px-4 py-2 text-slate-600 hover:text-slate-800 transition-colors\""
          },
          {
            "file": "src/components/CustomKeywordManager.tsx",
            "startLine": 525,
            "endLine": 529,
            "content": "                <div className=\"flex items-center justify-end space-x-3 pt-4\">\n                  <button\n                    onClick={() => setShowAddForm(false)}\n                    className=\"px-4 py-2 text-slate-600 hover:text-slate-800 transition-colors\"\n                  >"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 2,
            "endLine": 6,
            "content": "\nimport React, { useState } from 'react';\nimport { AlertTriangle, X, Eye, EyeOff } from 'lucide-react';\nimport { DuplicateDetectionResult, DuplicateGroup } from '../lib/duplicateDetector';\nimport { Transaction } from '../lib/types';"
          },
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import React, { useState } from 'react';\nimport { AlertTriangle, X, Eye, EyeOff } from 'lucide-react';\nimport { DuplicateDetectionResult, DuplicateGroup } from '../lib/duplicateDetector';\nimport { Transaction } from '../lib/types';\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 7,
            "endLine": 11,
            "content": "\ninterface DuplicateWarningProps {\n  duplicateResult: DuplicateDetectionResult;\n  onResolveDuplicates: (cleanTransactions: Transaction[]) => void;\n  onDismiss: () => void;"
          },
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 8,
            "endLine": 12,
            "content": "interface DuplicateWarningProps {\n  duplicateResult: DuplicateDetectionResult;\n  onResolveDuplicates: (cleanTransactions: Transaction[]) => void;\n  onDismiss: () => void;\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 13,
            "endLine": 17,
            "content": "\nconst DuplicateWarning: React.FC<DuplicateWarningProps> = ({\n  duplicateResult,\n  onResolveDuplicates,\n  onDismiss"
          },
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 14,
            "endLine": 18,
            "content": "const DuplicateWarning: React.FC<DuplicateWarningProps> = ({\n  duplicateResult,\n  onResolveDuplicates,\n  onDismiss\n}) => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 25,
            "endLine": 29,
            "content": "\n  const toggleGroupExpansion = (groupIndex: number) => {\n    const newExpanded = new Set(expandedGroups);\n    if (newExpanded.has(groupIndex)) {\n      newExpanded.delete(groupIndex);"
          },
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 26,
            "endLine": 30,
            "content": "  const toggleGroupExpansion = (groupIndex: number) => {\n    const newExpanded = new Set(expandedGroups);\n    if (newExpanded.has(groupIndex)) {\n      newExpanded.delete(groupIndex);\n    } else {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 39,
            "endLine": 43,
            "content": "\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-CA', {\n      style: 'currency',\n      currency: 'CAD'"
          },
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 40,
            "endLine": 44,
            "content": "  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-CA', {\n      style: 'currency',\n      currency: 'CAD'\n    }).format(amount);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 46,
            "endLine": 50,
            "content": "\n  return (\n    <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4 mb-6\">\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex items-start space-x-3\">"
          },
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 47,
            "endLine": 51,
            "content": "  return (\n    <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4 mb-6\">\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex items-start space-x-3\">\n          <AlertTriangle className=\"w-5 h-5 text-amber-600 mt-0.5 flex-shrink-0\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 61,
            "endLine": 65,
            "content": "            \n            <div className=\"mt-3 flex flex-wrap gap-2\">\n              <button\n                onClick={() => setShowDetails(!showDetails)}\n                className=\"inline-flex items-center px-3 py-1 text-xs font-medium text-amber-800 bg-amber-100 rounded-md hover:bg-amber-200 transition-colors\""
          },
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 62,
            "endLine": 66,
            "content": "            <div className=\"mt-3 flex flex-wrap gap-2\">\n              <button\n                onClick={() => setShowDetails(!showDetails)}\n                className=\"inline-flex items-center px-3 py-1 text-xs font-medium text-amber-800 bg-amber-100 rounded-md hover:bg-amber-200 transition-colors\"\n              >"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 70,
            "endLine": 74,
            "content": "              \n              <button\n                onClick={handleRemoveDuplicates}\n                className=\"inline-flex items-center px-3 py-1 text-xs font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 transition-colors\"\n              >"
          },
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 71,
            "endLine": 75,
            "content": "              <button\n                onClick={handleRemoveDuplicates}\n                className=\"inline-flex items-center px-3 py-1 text-xs font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 transition-colors\"\n              >\n                Remove Duplicates"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 88,
            "endLine": 92,
            "content": "\n      {showDetails && (\n        <div className=\"mt-4 border-t border-amber-200 pt-4\">\n          <div className=\"space-y-3\">\n            {duplicateResult.duplicateGroups.map((group, groupIndex) => ("
          },
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 89,
            "endLine": 93,
            "content": "      {showDetails && (\n        <div className=\"mt-4 border-t border-amber-200 pt-4\">\n          <div className=\"space-y-3\">\n            {duplicateResult.duplicateGroups.map((group, groupIndex) => (\n              <div key={groupIndex} className=\"bg-white rounded-md border border-amber-200\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 105,
            "endLine": 109,
            "content": "                \n                {expandedGroups.has(groupIndex) && (\n                  <div className=\"px-3 pb-3 border-t border-gray-200\">\n                    <div className=\"space-y-2 mt-2\">\n                      {/* Original transaction */}"
          },
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 106,
            "endLine": 110,
            "content": "                {expandedGroups.has(groupIndex) && (\n                  <div className=\"px-3 pb-3 border-t border-gray-200\">\n                    <div className=\"space-y-2 mt-2\">\n                      {/* Original transaction */}\n                      <div className=\"p-2 bg-green-50 border border-green-200 rounded text-xs\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 118,
            "endLine": 122,
            "content": "                      \n                      {/* Duplicate transactions */}\n                      {group.duplicateIndexes.map((dupIndex, idx) => {\n                        // Note: In a real implementation, you'd need access to the original transactions array\n                        // For now, we'll show placeholder data"
          },
          {
            "file": "src/components/DuplicateWarning.tsx",
            "startLine": 119,
            "endLine": 123,
            "content": "                      {/* Duplicate transactions */}\n                      {group.duplicateIndexes.map((dupIndex, idx) => {\n                        // Note: In a real implementation, you'd need access to the original transactions array\n                        // For now, we'll show placeholder data\n                        return ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 10,
            "endLine": 14,
            "content": "\ninterface ErrorBoundaryProps {\n  children: React.ReactNode;\n  fallback?: React.ComponentType<{ error?: Error; resetError: () => void }>;\n}"
          },
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 11,
            "endLine": 15,
            "content": "interface ErrorBoundaryProps {\n  children: React.ReactNode;\n  fallback?: React.ComponentType<{ error?: Error; resetError: () => void }>;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 15,
            "endLine": 19,
            "content": "\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };"
          },
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 16,
            "endLine": 20,
            "content": "class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 28,
            "endLine": 32,
            "content": "\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\n    this.setState({\n      error,"
          },
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 29,
            "endLine": 33,
            "content": "  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\n    this.setState({\n      error,\n      errorInfo,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 40,
            "endLine": 44,
            "content": "\n  render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        const FallbackComponent = this.props.fallback;"
          },
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 41,
            "endLine": 45,
            "content": "  render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        const FallbackComponent = this.props.fallback;\n        return <FallbackComponent error={this.state.error} resetError={this.resetError} />;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 47,
            "endLine": 51,
            "content": "\n      return (\n        <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\n          <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-6\">\n            <div className=\"text-center\">"
          },
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 48,
            "endLine": 52,
            "content": "      return (\n        <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\n          <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-6\">\n            <div className=\"text-center\">\n              <div className=\"text-red-500 text-6xl mb-4\">⚠️</div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 57,
            "endLine": 61,
            "content": "              \n              <div className=\"space-y-3\">\n                <button\n                  onClick={this.resetError}\n                  className=\"w-full bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\""
          },
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 58,
            "endLine": 62,
            "content": "              <div className=\"space-y-3\">\n                <button\n                  onClick={this.resetError}\n                  className=\"w-full bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n                >"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 72,
            "endLine": 76,
            "content": "            \n            {process.env.NODE_ENV === 'development' && this.state.error && (\n                <details className=\"mt-6 text-left\">\n                  <summary className=\"cursor-pointer text-sm text-gray-500 hover:text-gray-700\">\n                    Show error details"
          },
          {
            "file": "src/components/ErrorBoundary.tsx",
            "startLine": 73,
            "endLine": 77,
            "content": "            {process.env.NODE_ENV === 'development' && this.state.error && (\n                <details className=\"mt-6 text-left\">\n                  <summary className=\"cursor-pointer text-sm text-gray-500 hover:text-gray-700\">\n                    Show error details\n                </summary>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 18,
            "endLine": 22,
            "content": "\ninterface ExportManagerProps {\n  transactions: Transaction[];\n  province?: string;\n}"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 19,
            "endLine": 23,
            "content": "interface ExportManagerProps {\n  transactions: Transaction[];\n  province?: string;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 23,
            "endLine": 27,
            "content": "\nexport default function ExportManagerComponent({ transactions, province = 'ON' }: ExportManagerProps) {\n  const [exportManager] = useState(() => new ExportManager(province));\n  const [isExporting, setIsExporting] = useState(false);\n  const [exportResult, setExportResult] = useState<ExportResult | null>(null);"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 24,
            "endLine": 28,
            "content": "export default function ExportManagerComponent({ transactions, province = 'ON' }: ExportManagerProps) {\n  const [exportManager] = useState(() => new ExportManager(province));\n  const [isExporting, setIsExporting] = useState(false);\n  const [exportResult, setExportResult] = useState<ExportResult | null>(null);\n  const [showAdvancedOptions, setShowAdvancedOptions] = useState(false);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 29,
            "endLine": 33,
            "content": "  \n  const [exportOptions, setExportOptions] = useState<ExportOptions>({\n    format: 'xero',\n    dateRange: {\n      start: '',"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 30,
            "endLine": 34,
            "content": "  const [exportOptions, setExportOptions] = useState<ExportOptions>({\n    format: 'xero',\n    dateRange: {\n      start: '',\n      end: ''"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 42,
            "endLine": 46,
            "content": "\n  // Available export formats\n  const availableFormats = useMemo(() => exportManager.getAvailableFormats(), [exportManager]);\n\n  // Calculate date range from transactions"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 43,
            "endLine": 47,
            "content": "  // Available export formats\n  const availableFormats = useMemo(() => exportManager.getAvailableFormats(), [exportManager]);\n\n  // Calculate date range from transactions\n  const transactionDateRange = useMemo(() => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 45,
            "endLine": 49,
            "content": "\n  // Calculate date range from transactions\n  const transactionDateRange = useMemo(() => {\n    if (transactions.length === 0) return { start: '', end: '' };\n    "
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 46,
            "endLine": 50,
            "content": "  // Calculate date range from transactions\n  const transactionDateRange = useMemo(() => {\n    if (transactions.length === 0) return { start: '', end: '' };\n    \n    const dates = transactions.map(t => t.date).sort();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 49,
            "endLine": 53,
            "content": "    \n    const dates = transactions.map(t => t.date).sort();\n    return {\n      start: dates[0],\n      end: dates[dates.length - 1]"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 50,
            "endLine": 54,
            "content": "    const dates = transactions.map(t => t.date).sort();\n    return {\n      start: dates[0],\n      end: dates[dates.length - 1]\n    };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 56,
            "endLine": 60,
            "content": "\n  // Set default date range\n  useState(() => {\n    if (transactionDateRange.start && transactionDateRange.end) {\n      setExportOptions(prev => ({"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 57,
            "endLine": 61,
            "content": "  // Set default date range\n  useState(() => {\n    if (transactionDateRange.start && transactionDateRange.end) {\n      setExportOptions(prev => ({\n        ...prev,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 77,
            "endLine": 81,
            "content": "    \n    return exportManager.validateForExport(transactions, exportOptions);\n  }, [transactions, exportOptions, exportManager]);\n\n  // Export statistics"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 78,
            "endLine": 82,
            "content": "    return exportManager.validateForExport(transactions, exportOptions);\n  }, [transactions, exportOptions, exportManager]);\n\n  // Export statistics\n  const exportStats = useMemo(() => "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 80,
            "endLine": 84,
            "content": "\n  // Export statistics\n  const exportStats = useMemo(() => \n    exportManager.getExportStats(transactions), \n    [transactions, exportManager]"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 81,
            "endLine": 85,
            "content": "  // Export statistics\n  const exportStats = useMemo(() => \n    exportManager.getExportStats(transactions), \n    [transactions, exportManager]\n  );"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 86,
            "endLine": 90,
            "content": "\n  // Handle export\n  const handleExport = async () => {\n    if (!validation.isValid || transactions.length === 0) return;\n"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 87,
            "endLine": 91,
            "content": "  // Handle export\n  const handleExport = async () => {\n    if (!validation.isValid || transactions.length === 0) return;\n\n    setIsExporting(true);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 90,
            "endLine": 94,
            "content": "\n    setIsExporting(true);\n    try {\n      const result = await exportManager.exportTransactions(transactions, exportOptions);\n      setExportResult(result);"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 91,
            "endLine": 95,
            "content": "    setIsExporting(true);\n    try {\n      const result = await exportManager.exportTransactions(transactions, exportOptions);\n      setExportResult(result);\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 98,
            "endLine": 102,
            "content": "      \n    } catch (error) {\n      console.error('Export failed:', error);\n      alert('Export failed: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    } finally {"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 99,
            "endLine": 103,
            "content": "    } catch (error) {\n      console.error('Export failed:', error);\n      alert('Export failed: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    } finally {\n      setIsExporting(false);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 106,
            "endLine": 110,
            "content": "\n  // Download file helper\n  const downloadFile = (content: string, filename: string) => {\n    const blob = new Blob([content], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 107,
            "endLine": 111,
            "content": "  // Download file helper\n  const downloadFile = (content: string, filename: string) => {\n    const blob = new Blob([content], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 111,
            "endLine": 115,
            "content": "    \n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', filename);"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 112,
            "endLine": 116,
            "content": "    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', filename);\n      link.style.visibility = 'hidden';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 122,
            "endLine": 126,
            "content": "\n  useEffect(() => {\n    exportManager.setProvince(exportOptions.province);\n  }, [exportOptions.province, exportManager]);\n"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 123,
            "endLine": 127,
            "content": "  useEffect(() => {\n    exportManager.setProvince(exportOptions.province);\n  }, [exportOptions.province, exportManager]);\n\n  return ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 126,
            "endLine": 130,
            "content": "\n  return (\n    <div className=\"space-y-8\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between bg-gradient-to-r from-purple-50 to-purple-100/50 rounded-xl p-6 border border-purple-200\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 127,
            "endLine": 131,
            "content": "  return (\n    <div className=\"space-y-8\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between bg-gradient-to-r from-purple-50 to-purple-100/50 rounded-xl p-6 border border-purple-200\">\n        <div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 142,
            "endLine": 146,
            "content": "\n      {/* Export Statistics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 143,
            "endLine": 147,
            "content": "      {/* Export Statistics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">\n            <div className=\"bg-blue-100 p-2 rounded-lg\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 7,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 145,
            "endLine": 149,
            "content": "        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">\n            <div className=\"bg-blue-100 p-2 rounded-lg\">\n            <FileText className=\"w-5 h-5 text-blue-600\" />\n            </div>"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 159,
            "endLine": 163,
            "content": "\n        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">\n            <div className=\"bg-green-100 p-2 rounded-lg\">\n            <CheckCircle className=\"w-5 h-5 text-green-600\" />"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 160,
            "endLine": 164,
            "content": "        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">\n            <div className=\"bg-green-100 p-2 rounded-lg\">\n            <CheckCircle className=\"w-5 h-5 text-green-600\" />\n            </div>"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 174,
            "endLine": 178,
            "content": "\n        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">\n            <div className=\"bg-purple-100 p-2 rounded-lg\">\n            <BarChart3 className=\"w-5 h-5 text-purple-600\" />"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 175,
            "endLine": 179,
            "content": "        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">\n            <div className=\"bg-purple-100 p-2 rounded-lg\">\n            <BarChart3 className=\"w-5 h-5 text-purple-600\" />\n            </div>"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 189,
            "endLine": 193,
            "content": "\n        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">\n            <div className=\"bg-orange-100 p-2 rounded-lg\">\n            <Calendar className=\"w-5 h-5 text-orange-600\" />"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 190,
            "endLine": 194,
            "content": "        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">\n            <div className=\"bg-orange-100 p-2 rounded-lg\">\n            <Calendar className=\"w-5 h-5 text-orange-600\" />\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 157,
            "endLine": 161,
            "content": "          </p>\n        </div>\n\n        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 172,
            "endLine": 176,
            "content": "          </p>\n        </div>\n\n        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 187,
            "endLine": 191,
            "content": "          </p>\n        </div>\n\n        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 158,
            "endLine": 162,
            "content": "        </div>\n\n        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">\n            <div className=\"bg-green-100 p-2 rounded-lg\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 173,
            "endLine": 177,
            "content": "        </div>\n\n        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">\n            <div className=\"bg-purple-100 p-2 rounded-lg\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 188,
            "endLine": 192,
            "content": "        </div>\n\n        <div className=\"bg-white border border-purple-100 rounded-xl p-6 hover:shadow-lg transition-all duration-300 hover:border-purple-200\">\n          <div className=\"flex items-center space-x-3 mb-3\">\n            <div className=\"bg-orange-100 p-2 rounded-lg\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 162,
            "endLine": 166,
            "content": "            <div className=\"bg-green-100 p-2 rounded-lg\">\n            <CheckCircle className=\"w-5 h-5 text-green-600\" />\n            </div>\n            <span className=\"text-sm font-semibold text-gray-700\">Approved</span>\n          </div>"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 488,
            "endLine": 492,
            "content": "            <div className=\"bg-green-100 p-2 rounded-lg\">\n            <CheckCircle className=\"w-5 h-5 text-green-600\" />\n            </div>\n            <h4 className=\"text-sm font-bold text-green-800\">Export Successful!</h4>\n          </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 208,
            "endLine": 212,
            "content": "\n      {/* Export Configuration */}\n      <div className=\"bg-white border border-purple-200 rounded-xl p-8 shadow-sm\">\n        <h4 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n          <div className=\"bg-purple-100 p-2 rounded-lg mr-3\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 209,
            "endLine": 213,
            "content": "      {/* Export Configuration */}\n      <div className=\"bg-white border border-purple-200 rounded-xl p-8 shadow-sm\">\n        <h4 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n          <div className=\"bg-purple-100 p-2 rounded-lg mr-3\">\n            <Settings className=\"w-5 h-5 text-purple-600\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 210,
            "endLine": 214,
            "content": "      <div className=\"bg-white border border-purple-200 rounded-xl p-8 shadow-sm\">\n        <h4 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n          <div className=\"bg-purple-100 p-2 rounded-lg mr-3\">\n            <Settings className=\"w-5 h-5 text-purple-600\" />\n          </div>"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 551,
            "endLine": 555,
            "content": "        <div className=\"bg-white border border-purple-200 rounded-xl p-8 shadow-sm\">\n          <h4 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n            <div className=\"bg-purple-100 p-2 rounded-lg mr-3\">\n              <BarChart3 className=\"w-5 h-5 text-purple-600\" />\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 211,
            "endLine": 215,
            "content": "        <h4 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n          <div className=\"bg-purple-100 p-2 rounded-lg mr-3\">\n            <Settings className=\"w-5 h-5 text-purple-600\" />\n          </div>\n          Export Configuration"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 552,
            "endLine": 556,
            "content": "          <h4 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n            <div className=\"bg-purple-100 p-2 rounded-lg mr-3\">\n              <BarChart3 className=\"w-5 h-5 text-purple-600\" />\n            </div>\n            Export Preview"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 217,
            "endLine": 221,
            "content": "        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {/* Export Format */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 218,
            "endLine": 222,
            "content": "        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {/* Export Format */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n              Export Format"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 227,
            "endLine": 231,
            "content": "              className=\"w-full px-4 py-3 border border-purple-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 bg-white text-black transition-all duration-300 hover:border-purple-300\"\n            >\n              {availableFormats.map(format => (\n                <option key={format.id} value={format.id}>\n                  {format.name}"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 258,
            "endLine": 262,
            "content": "              className=\"w-full px-4 py-3 border border-purple-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 bg-white text-black transition-all duration-300 hover:border-purple-300\"\n            >\n              {PROVINCES.map(province => (\n                <option key={province.code} value={province.code}>\n                  {province.name}"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 289,
            "endLine": 293,
            "content": "                  className=\"w-full px-4 py-3 border border-purple-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 bg-white text-black transition-all duration-300 hover:border-purple-300\"\n              />\n              <input\n                type=\"date\"\n                value={exportOptions.dateRange.end}"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 298,
            "endLine": 302,
            "content": "                  className=\"w-full px-4 py-3 border border-purple-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 bg-white text-black transition-all duration-300 hover:border-purple-300\"\n              />\n            </div>\n            )}\n          </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 249,
            "endLine": 253,
            "content": "\n          {/* Province */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n              Province/Territory"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 250,
            "endLine": 254,
            "content": "          {/* Province */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n              Province/Territory\n            </label>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 270,
            "endLine": 274,
            "content": "\n          {/* Date Range */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n              Date Range"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 271,
            "endLine": 275,
            "content": "          {/* Date Range */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n              Date Range\n            </label>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 288,
            "endLine": 292,
            "content": "                }))}\n                  className=\"w-full px-4 py-3 border border-purple-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 bg-white text-black transition-all duration-300 hover:border-purple-300\"\n              />\n              <input\n                type=\"date\""
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 297,
            "endLine": 301,
            "content": "                }))}\n                  className=\"w-full px-4 py-3 border border-purple-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 bg-white text-black transition-all duration-300 hover:border-purple-300\"\n              />\n            </div>\n            )}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 304,
            "endLine": 308,
            "content": "\n        {/* Advanced Options */}\n        <div className=\"mt-8\">\n          {exportOptions.format !== 'xero-chart-of-accounts' && (\n            <>"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 305,
            "endLine": 309,
            "content": "        {/* Advanced Options */}\n        <div className=\"mt-8\">\n          {exportOptions.format !== 'xero-chart-of-accounts' && (\n            <>\n          <button"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 316,
            "endLine": 320,
            "content": "\n          {showAdvancedOptions && (\n                <div className=\"mt-6 p-6 bg-purple-50/50 border border-purple-200 rounded-xl\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <label className=\"flex items-center space-x-3 cursor-pointer\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 317,
            "endLine": 321,
            "content": "          {showAdvancedOptions && (\n                <div className=\"mt-6 p-6 bg-purple-50/50 border border-purple-200 rounded-xl\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <label className=\"flex items-center space-x-3 cursor-pointer\">\n                  <input"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 7,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 320,
            "endLine": 324,
            "content": "                    <label className=\"flex items-center space-x-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={exportOptions.includeUncategorized}\n                    onChange={(e) => setExportOptions(prev => ({ ...prev, includeUncategorized: e.target.checked }))}"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 329,
            "endLine": 333,
            "content": "\n                    <label className=\"flex items-center space-x-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={exportOptions.onlyApproved}"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 330,
            "endLine": 334,
            "content": "                    <label className=\"flex items-center space-x-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={exportOptions.onlyApproved}\n                    onChange={(e) => setExportOptions(prev => ({ ...prev, onlyApproved: e.target.checked }))}"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 339,
            "endLine": 343,
            "content": "\n                    <label className=\"flex items-center space-x-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={exportOptions.includeConfidenceScores}"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 340,
            "endLine": 344,
            "content": "                    <label className=\"flex items-center space-x-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={exportOptions.includeConfidenceScores}\n                    onChange={(e) => setExportOptions(prev => ({ ...prev, includeConfidenceScores: e.target.checked }))}"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 349,
            "endLine": 353,
            "content": "\n                    <label className=\"flex items-center space-x-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={exportOptions.includeAuditTrail}"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 350,
            "endLine": 354,
            "content": "                    <label className=\"flex items-center space-x-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={exportOptions.includeAuditTrail}\n                    onChange={(e) => setExportOptions(prev => ({ ...prev, includeAuditTrail: e.target.checked }))}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 325,
            "endLine": 329,
            "content": "                        className=\"rounded border-purple-300 text-purple-600 focus:ring-purple-500 w-4 h-4\"\n                  />\n                      <span className=\"text-sm text-gray-700 font-medium\">Include uncategorized transactions</span>\n                </label>\n"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 335,
            "endLine": 339,
            "content": "                        className=\"rounded border-purple-300 text-purple-600 focus:ring-purple-500 w-4 h-4\"\n                  />\n                      <span className=\"text-sm text-gray-700 font-medium\">Only export approved transactions</span>\n                </label>\n"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 345,
            "endLine": 349,
            "content": "                        className=\"rounded border-purple-300 text-purple-600 focus:ring-purple-500 w-4 h-4\"\n                  />\n                      <span className=\"text-sm text-gray-700 font-medium\">Include AI confidence scores</span>\n                </label>\n"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 355,
            "endLine": 359,
            "content": "                        className=\"rounded border-purple-300 text-purple-600 focus:ring-purple-500 w-4 h-4\"\n                  />\n                      <span className=\"text-sm text-gray-700 font-medium\">Include audit trail</span>\n                </label>\n              </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 328,
            "endLine": 332,
            "content": "                </label>\n\n                    <label className=\"flex items-center space-x-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\""
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 338,
            "endLine": 342,
            "content": "                </label>\n\n                    <label className=\"flex items-center space-x-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\""
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 348,
            "endLine": 352,
            "content": "                </label>\n\n                    <label className=\"flex items-center space-x-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 366,
            "endLine": 370,
            "content": "\n      {/* Xero-specific validation */}\n      {exportOptions.format === 'xero-precoded' && validation.stats.missingAccounts > 0 && (\n        <div className=\"bg-orange-50 border border-orange-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 367,
            "endLine": 371,
            "content": "      {/* Xero-specific validation */}\n      {exportOptions.format === 'xero-precoded' && validation.stats.missingAccounts > 0 && (\n        <div className=\"bg-orange-50 border border-orange-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"bg-orange-100 p-2 rounded-lg\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 389,
            "endLine": 393,
            "content": "\n      {/* Xero Chart of Accounts guidance */}\n      {exportOptions.format === 'xero-chart-of-accounts' && (\n        <div className=\"bg-green-50 border border-green-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 390,
            "endLine": 394,
            "content": "      {/* Xero Chart of Accounts guidance */}\n      {exportOptions.format === 'xero-chart-of-accounts' && (\n        <div className=\"bg-green-50 border border-green-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"bg-green-100 p-2 rounded-lg\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 392,
            "endLine": 396,
            "content": "        <div className=\"bg-green-50 border border-green-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"bg-green-100 p-2 rounded-lg\">\n              <Info className=\"w-5 h-5 text-green-600\" />\n            </div>"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 486,
            "endLine": 490,
            "content": "        <div className=\"bg-green-50 border border-green-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"bg-green-100 p-2 rounded-lg\">\n            <CheckCircle className=\"w-5 h-5 text-green-600\" />\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 416,
            "endLine": 420,
            "content": "\n      {/* Xero format guidance */}\n      {(exportOptions.format === 'xero' || exportOptions.format === 'xero-precoded') && (\n        <div className=\"bg-purple-50 border border-purple-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 417,
            "endLine": 421,
            "content": "      {/* Xero format guidance */}\n      {(exportOptions.format === 'xero' || exportOptions.format === 'xero-precoded') && (\n        <div className=\"bg-purple-50 border border-purple-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"bg-purple-100 p-2 rounded-lg\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 418,
            "endLine": 422,
            "content": "      {(exportOptions.format === 'xero' || exportOptions.format === 'xero-precoded') && (\n        <div className=\"bg-purple-50 border border-purple-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"bg-purple-100 p-2 rounded-lg\">\n              <Info className=\"w-5 h-5 text-purple-600\" />"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 499,
            "endLine": 503,
            "content": "            {(exportOptions.format === 'xero' || exportOptions.format === 'xero-precoded') && (\n              <div className=\"mt-4 p-4 bg-green-100 border border-green-200 rounded-lg\">\n                <p className=\"text-xs font-bold text-green-800\">🎉 Ready for Xero!</p>\n                <p className=\"text-xs text-green-700 mt-1\">\n                  {exportOptions.format === 'xero' "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 444,
            "endLine": 448,
            "content": "\n      {/* Validation Results */}\n      {validation.errors.length > 0 && (\n        <div className=\"bg-red-50 border border-red-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 445,
            "endLine": 449,
            "content": "      {/* Validation Results */}\n      {validation.errors.length > 0 && (\n        <div className=\"bg-red-50 border border-red-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"bg-red-100 p-2 rounded-lg\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 464,
            "endLine": 468,
            "content": "\n      {validation.warnings.length > 0 && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"bg-yellow-100 p-2 rounded-lg\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 465,
            "endLine": 469,
            "content": "      {validation.warnings.length > 0 && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"bg-yellow-100 p-2 rounded-lg\">\n            <AlertTriangle className=\"w-5 h-5 text-yellow-600\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 483,
            "endLine": 487,
            "content": "\n      {/* Export Success */}\n      {exportResult && (\n        <div className=\"bg-green-50 border border-green-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 484,
            "endLine": 488,
            "content": "      {/* Export Success */}\n      {exportResult && (\n        <div className=\"bg-green-50 border border-green-200 rounded-xl p-6\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"bg-green-100 p-2 rounded-lg\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 513,
            "endLine": 517,
            "content": "\n      {/* Export Button */}\n      <div className=\"flex items-center justify-between bg-white border border-purple-200 rounded-xl p-6\">\n        <div className=\"text-sm text-gray-600\">\n          {validation.isValid ? ("
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 514,
            "endLine": 518,
            "content": "      {/* Export Button */}\n      <div className=\"flex items-center justify-between bg-white border border-purple-200 rounded-xl p-6\">\n        <div className=\"text-sm text-gray-600\">\n          {validation.isValid ? (\n            <span className=\"flex items-center space-x-2 text-green-600\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 529,
            "endLine": 533,
            "content": "\n        <button\n          onClick={handleExport}\n          disabled={!validation.isValid || isExporting || transactions.length === 0}\n          className=\"inline-flex items-center px-8 py-4 border border-transparent text-base font-semibold rounded-xl text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300 hover:shadow-lg hover:scale-105\""
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 530,
            "endLine": 534,
            "content": "        <button\n          onClick={handleExport}\n          disabled={!validation.isValid || isExporting || transactions.length === 0}\n          className=\"inline-flex items-center px-8 py-4 border border-transparent text-base font-semibold rounded-xl text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300 hover:shadow-lg hover:scale-105\"\n        >"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 548,
            "endLine": 552,
            "content": "\n      {/* Export Preview */}\n      {validation.isValid && !isExporting && (\n        <div className=\"bg-white border border-purple-200 rounded-xl p-8 shadow-sm\">\n          <h4 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 549,
            "endLine": 553,
            "content": "      {/* Export Preview */}\n      {validation.isValid && !isExporting && (\n        <div className=\"bg-white border border-purple-200 rounded-xl p-8 shadow-sm\">\n          <h4 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n            <div className=\"bg-purple-100 p-2 rounded-lg mr-3\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 558,
            "endLine": 562,
            "content": "          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {/* Categories Breakdown */}\n            <div>\n              <h5 className=\"text-sm font-bold text-gray-700 mb-4\">Categories ({exportStats.categoriesUsed.length})</h5>"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 559,
            "endLine": 563,
            "content": "          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {/* Categories Breakdown */}\n            <div>\n              <h5 className=\"text-sm font-bold text-gray-700 mb-4\">Categories ({exportStats.categoriesUsed.length})</h5>\n              <div className=\"space-y-2 max-h-40 overflow-y-auto\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 567,
            "endLine": 571,
            "content": "                    <span className=\"text-xs bg-purple-100 text-purple-700 px-2 py-1 rounded-full font-semibold\">\n                      {transactions.filter(t => t.category === category).length}\n                    </span>\n                  </div>\n                ))}"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 587,
            "endLine": 591,
            "content": "                    <span className=\"text-xs bg-purple-100 text-purple-700 px-2 py-1 rounded-full font-semibold\">\n                      {transactions.filter(t => t.accountCode === accountCode).length}\n                    </span>\n                  </div>\n                ))}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 579,
            "endLine": 583,
            "content": "\n            {/* Account Codes Breakdown */}\n            <div>\n              <h5 className=\"text-sm font-bold text-gray-700 mb-4\">Account Codes ({exportStats.accountCodesUsed.length})</h5>\n              <div className=\"space-y-2 max-h-40 overflow-y-auto\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 580,
            "endLine": 584,
            "content": "            {/* Account Codes Breakdown */}\n            <div>\n              <h5 className=\"text-sm font-bold text-gray-700 mb-4\">Account Codes ({exportStats.accountCodesUsed.length})</h5>\n              <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n                {exportStats.accountCodesUsed.slice(0, 8).map(accountCode => ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 599,
            "endLine": 603,
            "content": "\n            {/* Financial Summary */}\n            <div>\n              <h5 className=\"text-sm font-bold text-gray-700 mb-4\">Financial Summary</h5>\n              <div className=\"space-y-4\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 600,
            "endLine": 604,
            "content": "            {/* Financial Summary */}\n            <div>\n              <h5 className=\"text-sm font-bold text-gray-700 mb-4\">Financial Summary</h5>\n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between text-sm p-3 bg-red-50 rounded-lg\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 627,
            "endLine": 631,
            "content": "\n      {/* Help Information */}\n      <div className=\"bg-gradient-to-r from-purple-50 to-blue-50 border border-purple-200 rounded-xl p-6\">\n        <h4 className=\"text-sm font-bold text-purple-800 mb-4 flex items-center\">\n          <Info className=\"w-4 h-4 mr-2\" />"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 628,
            "endLine": 632,
            "content": "      {/* Help Information */}\n      <div className=\"bg-gradient-to-r from-purple-50 to-blue-50 border border-purple-200 rounded-xl p-6\">\n        <h4 className=\"text-sm font-bold text-purple-800 mb-4 flex items-center\">\n          <Info className=\"w-4 h-4 mr-2\" />\n          📋 Import Instructions:"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 650,
            "endLine": 654,
            "content": "            <div className=\"p-3 bg-white rounded-lg border border-purple-200\">\n              <p className=\"font-semibold text-purple-800\">Xero:</p>\n              <p className=\"text-xs\">Banking → Bank Accounts → Import a Statement</p>\n            </div>\n            <div className=\"p-3 bg-white rounded-lg border border-purple-200\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 654,
            "endLine": 658,
            "content": "            <div className=\"p-3 bg-white rounded-lg border border-purple-200\">\n              <p className=\"font-semibold text-purple-800\">QuickBooks:</p>\n              <p className=\"text-xs\">Banking → Banking → File Upload</p>\n            </div>\n            <div className=\"p-3 bg-white rounded-lg border border-purple-200\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 658,
            "endLine": 662,
            "content": "            <div className=\"p-3 bg-white rounded-lg border border-purple-200\">\n              <p className=\"font-semibold text-purple-800\">Sage 50:</p>\n              <p className=\"text-xs\">File → Import/Export → Import</p>\n            </div>\n            <div className=\"p-3 bg-white rounded-lg border border-purple-200\">"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 662,
            "endLine": 666,
            "content": "            <div className=\"p-3 bg-white rounded-lg border border-purple-200\">\n              <p className=\"font-semibold text-purple-800\">Other:</p>\n              <p className=\"text-xs\">Look for CSV import or bank statement import options</p>\n            </div>\n          </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 653,
            "endLine": 657,
            "content": "            </div>\n            <div className=\"p-3 bg-white rounded-lg border border-purple-200\">\n              <p className=\"font-semibold text-purple-800\">QuickBooks:</p>\n              <p className=\"text-xs\">Banking → Banking → File Upload</p>\n            </div>"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 657,
            "endLine": 661,
            "content": "            </div>\n            <div className=\"p-3 bg-white rounded-lg border border-purple-200\">\n              <p className=\"font-semibold text-purple-800\">Sage 50:</p>\n              <p className=\"text-xs\">File → Import/Export → Import</p>\n            </div>"
          },
          {
            "file": "src/components/ExportManager.tsx",
            "startLine": 661,
            "endLine": 665,
            "content": "            </div>\n            <div className=\"p-3 bg-white rounded-lg border border-purple-200\">\n              <p className=\"font-semibold text-purple-800\">Other:</p>\n              <p className=\"text-xs\">Look for CSV import or bank statement import options</p>\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 20,
            "endLine": 24,
            "content": "    \n    if (lowerError.includes('header') || lowerError.includes('column')) {\n      return {\n        title: 'File Headers Issue',\n        description: 'The CSV file headers don\\'t match expected formats.',"
          },
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 21,
            "endLine": 25,
            "content": "    if (lowerError.includes('header') || lowerError.includes('column')) {\n      return {\n        title: 'File Headers Issue',\n        description: 'The CSV file headers don\\'t match expected formats.',\n        suggestions: ["
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 32,
            "endLine": 36,
            "content": "    \n    if (lowerError.includes('date') || lowerError.includes('format')) {\n      return {\n        title: 'Date Format Issue',\n        description: 'The date format in your file isn\\'t recognized.',"
          },
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 33,
            "endLine": 37,
            "content": "    if (lowerError.includes('date') || lowerError.includes('format')) {\n      return {\n        title: 'Date Format Issue',\n        description: 'The date format in your file isn\\'t recognized.',\n        suggestions: ["
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 44,
            "endLine": 48,
            "content": "    \n    if (lowerError.includes('amount') || lowerError.includes('number')) {\n      return {\n        title: 'Amount Format Issue',\n        description: 'The amount/currency format isn\\'t recognized.',"
          },
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 45,
            "endLine": 49,
            "content": "    if (lowerError.includes('amount') || lowerError.includes('number')) {\n      return {\n        title: 'Amount Format Issue',\n        description: 'The amount/currency format isn\\'t recognized.',\n        suggestions: ["
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 56,
            "endLine": 60,
            "content": "    \n    if (lowerError.includes('empty') || lowerError.includes('no data')) {\n      return {\n        title: 'Empty File Issue',\n        description: 'The file appears to be empty or has no transaction data.',"
          },
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 57,
            "endLine": 61,
            "content": "    if (lowerError.includes('empty') || lowerError.includes('no data')) {\n      return {\n        title: 'Empty File Issue',\n        description: 'The file appears to be empty or has no transaction data.',\n        suggestions: ["
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 68,
            "endLine": 72,
            "content": "    \n    // Default case\n    return {\n      title: 'File Processing Error',\n      description: 'There was an issue processing your file.',"
          },
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 69,
            "endLine": 73,
            "content": "    // Default case\n    return {\n      title: 'File Processing Error',\n      description: 'There was an issue processing your file.',\n      suggestions: ["
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 80,
            "endLine": 84,
            "content": "\n  const errorDetails = getErrorDetails(error);\n\n  return (\n    <div className=\"bg-white rounded-3xl p-10 border border-red-200 shadow-xl shadow-red-500/5\">"
          },
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 81,
            "endLine": 85,
            "content": "  const errorDetails = getErrorDetails(error);\n\n  return (\n    <div className=\"bg-white rounded-3xl p-10 border border-red-200 shadow-xl shadow-red-500/5\">\n      {/* Error Header */}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 82,
            "endLine": 86,
            "content": "\n  return (\n    <div className=\"bg-white rounded-3xl p-10 border border-red-200 shadow-xl shadow-red-500/5\">\n      {/* Error Header */}\n      <div className=\"flex items-center space-x-4 mb-8\">"
          },
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 83,
            "endLine": 87,
            "content": "  return (\n    <div className=\"bg-white rounded-3xl p-10 border border-red-200 shadow-xl shadow-red-500/5\">\n      {/* Error Header */}\n      <div className=\"flex items-center space-x-4 mb-8\">\n        <div className=\"w-14 h-14 bg-gradient-to-br from-red-500 to-red-600 rounded-2xl flex items-center justify-center shadow-lg shadow-red-500/25\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 86,
            "endLine": 90,
            "content": "      <div className=\"flex items-center space-x-4 mb-8\">\n        <div className=\"w-14 h-14 bg-gradient-to-br from-red-500 to-red-600 rounded-2xl flex items-center justify-center shadow-lg shadow-red-500/25\">\n          <AlertTriangle className=\"w-7 h-7 text-white\" />\n        </div>\n        <div>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 219,
            "endLine": 223,
            "content": "          <div className=\"flex items-center space-x-4 mb-8\">\n            <div className=\"w-14 h-14 bg-gradient-to-br from-amber-500 to-amber-600 rounded-2xl flex items-center justify-center shadow-lg shadow-amber-500/25\">\n              <AlertTriangle className=\"w-7 h-7 text-white\" />\n            </div>\n            <div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 101,
            "endLine": 105,
            "content": "\n      {/* Error Description */}\n      <div className=\"bg-red-50 rounded-2xl p-6 mb-8 border border-red-100\">\n        <p className=\"text-red-800 font-medium leading-relaxed\">\n          {errorDetails.description}"
          },
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 102,
            "endLine": 106,
            "content": "      {/* Error Description */}\n      <div className=\"bg-red-50 rounded-2xl p-6 mb-8 border border-red-100\">\n        <p className=\"text-red-800 font-medium leading-relaxed\">\n          {errorDetails.description}\n        </p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 111,
            "endLine": 115,
            "content": "\n      {/* Suggestions */}\n      <div className=\"space-y-6 mb-8\">\n        <h4 className=\"text-lg font-bold text-slate-900 flex items-center space-x-2\">\n          <FileText className=\"w-5 h-5 text-purple-600\" />"
          },
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 112,
            "endLine": 116,
            "content": "      {/* Suggestions */}\n      <div className=\"space-y-6 mb-8\">\n        <h4 className=\"text-lg font-bold text-slate-900 flex items-center space-x-2\">\n          <FileText className=\"w-5 h-5 text-purple-600\" />\n          <span>How to Fix This:</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 139,
            "endLine": 143,
            "content": "        \n        {onDownloadTemplate && (\n          <button\n            onClick={onDownloadTemplate}\n            className=\"flex items-center justify-center space-x-2 bg-slate-100 hover:bg-slate-200 text-slate-700 px-6 py-3 rounded-xl font-medium transition-all duration-200\""
          },
          {
            "file": "src/components/FileFormatError.tsx",
            "startLine": 140,
            "endLine": 144,
            "content": "        {onDownloadTemplate && (\n          <button\n            onClick={onDownloadTemplate}\n            className=\"flex items-center justify-center space-x-2 bg-slate-100 hover:bg-slate-200 text-slate-700 px-6 py-3 rounded-xl font-medium transition-all duration-200\"\n          >"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 10,
            "endLine": 14,
            "content": "\ninterface FileUploadProps {\n  onFileProcessed: (data: {\n    transactions: Transaction[];\n    validation: ValidationResult;"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 11,
            "endLine": 15,
            "content": "interface FileUploadProps {\n  onFileProcessed: (data: {\n    transactions: Transaction[];\n    validation: ValidationResult;\n    bankFormat: BankFormat | 'Unknown';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 22,
            "endLine": 26,
            "content": "\nexport default function FileUpload({ onFileProcessed, onError, disabled }: FileUploadProps) {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [uploadedFile, setUploadedFile] = useState<File | null>(null);"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 23,
            "endLine": 27,
            "content": "export default function FileUpload({ onFileProcessed, onError, disabled }: FileUploadProps) {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [uploadedFile, setUploadedFile] = useState<File | null>(null);\n  const [processingStep, setProcessingStep] = useState<string>('');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 29,
            "endLine": 33,
            "content": "\n  const { setFinancialData, setIsSample } = useFinancialData();\n  const csvProcessor = new CSVProcessor();\n  const pdfProcessor = typeof window !== 'undefined' ? new PDFProcessor() : null;\n"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 30,
            "endLine": 34,
            "content": "  const { setFinancialData, setIsSample } = useFinancialData();\n  const csvProcessor = new CSVProcessor();\n  const pdfProcessor = typeof window !== 'undefined' ? new PDFProcessor() : null;\n\n  // Helper to map uploaded transactions to report Transaction type"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 33,
            "endLine": 37,
            "content": "\n  // Helper to map uploaded transactions to report Transaction type\n  function mapToReportTransaction(tx: any): import('../lib/reportGenerator').Transaction {\n    // Infer type from accountCode or category\n    let type: 'income' | 'expense' | 'asset' | 'liability' | 'equity' = 'expense';"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 34,
            "endLine": 38,
            "content": "  // Helper to map uploaded transactions to report Transaction type\n  function mapToReportTransaction(tx: any): import('../lib/reportGenerator').Transaction {\n    // Infer type from accountCode or category\n    let type: 'income' | 'expense' | 'asset' | 'liability' | 'equity' = 'expense';\n    if (tx.accountCode) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 58,
            "endLine": 62,
            "content": "\n  const processFile = useCallback(async (file: File) => {\n    const fileExtension = file.name.toLowerCase().split('.').pop();\n    \n    if (!fileExtension || (fileExtension !== 'csv' && fileExtension !== 'pdf')) {"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 59,
            "endLine": 63,
            "content": "  const processFile = useCallback(async (file: File) => {\n    const fileExtension = file.name.toLowerCase().split('.').pop();\n    \n    if (!fileExtension || (fileExtension !== 'csv' && fileExtension !== 'pdf')) {\n      onError('Please upload a CSV or PDF file only', file.name);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 61,
            "endLine": 65,
            "content": "    \n    if (!fileExtension || (fileExtension !== 'csv' && fileExtension !== 'pdf')) {\n      onError('Please upload a CSV or PDF file only', file.name);\n      return;\n    }"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 62,
            "endLine": 66,
            "content": "    if (!fileExtension || (fileExtension !== 'csv' && fileExtension !== 'pdf')) {\n      onError('Please upload a CSV or PDF file only', file.name);\n      return;\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 73,
            "endLine": 77,
            "content": "      \n      if (fileExtension === 'pdf') {\n        if (!pdfProcessor) {\n          throw new Error('PDF processing is not available in this environment');\n        }"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 74,
            "endLine": 78,
            "content": "      if (fileExtension === 'pdf') {\n        if (!pdfProcessor) {\n          throw new Error('PDF processing is not available in this environment');\n        }\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 78,
            "endLine": 82,
            "content": "        \n        setProcessingStep('Extracting text from PDF...');\n        const pdfResult = await pdfProcessor.convertPDFToCSV(file);\n        \n        if (!pdfResult.success) {"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 79,
            "endLine": 83,
            "content": "        setProcessingStep('Extracting text from PDF...');\n        const pdfResult = await pdfProcessor.convertPDFToCSV(file);\n        \n        if (!pdfResult.success) {\n          throw new Error(pdfResult.error || 'Failed to process PDF');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 85,
            "endLine": 89,
            "content": "        \n        setProcessingStep('Converting PDF to CSV format...');\n        // Create a CSV file from the extracted text\n        const csvBlob = new Blob([pdfResult.csvText], { type: 'text/csv' });\n        const csvFile = new (window as any).File([csvBlob], file.name.replace('.pdf', '.csv'), { type: 'text/csv' });"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 86,
            "endLine": 90,
            "content": "        setProcessingStep('Converting PDF to CSV format...');\n        // Create a CSV file from the extracted text\n        const csvBlob = new Blob([pdfResult.csvText], { type: 'text/csv' });\n        const csvFile = new (window as any).File([csvBlob], file.name.replace('.pdf', '.csv'), { type: 'text/csv' });\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 90,
            "endLine": 94,
            "content": "        \n        setProcessingStep('Processing transactions...');\n        if (typeof csvProcessor.parseAndCategorizeCSV === 'function' && csvProcessor.parseAndCategorizeCSV.length > 1) {\n          result = await csvProcessor.parseAndCategorizeCSV(csvFile, setProgress);\n        } else {"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 91,
            "endLine": 95,
            "content": "        setProcessingStep('Processing transactions...');\n        if (typeof csvProcessor.parseAndCategorizeCSV === 'function' && csvProcessor.parseAndCategorizeCSV.length > 1) {\n          result = await csvProcessor.parseAndCategorizeCSV(csvFile, setProgress);\n        } else {\n          result = await csvProcessor.parseAndCategorizeCSV(csvFile);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 92,
            "endLine": 96,
            "content": "        if (typeof csvProcessor.parseAndCategorizeCSV === 'function' && csvProcessor.parseAndCategorizeCSV.length > 1) {\n          result = await csvProcessor.parseAndCategorizeCSV(csvFile, setProgress);\n        } else {\n          result = await csvProcessor.parseAndCategorizeCSV(csvFile);\n        }"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 99,
            "endLine": 103,
            "content": "        if (typeof csvProcessor.parseAndCategorizeCSV === 'function' && csvProcessor.parseAndCategorizeCSV.length > 1) {\n          result = await csvProcessor.parseAndCategorizeCSV(file, setProgress);\n        } else {\n          result = await csvProcessor.parseAndCategorizeCSV(file);\n        }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 105,
            "endLine": 109,
            "content": "      \n      // Map transactions for reports\n      if (!result.transactions || result.transactions.length === 0) {\n        onError('No transactions found in file. Please check your headers and data.', file.name);\n        return;"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 106,
            "endLine": 110,
            "content": "      // Map transactions for reports\n      if (!result.transactions || result.transactions.length === 0) {\n        onError('No transactions found in file. Please check your headers and data.', file.name);\n        return;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 139,
            "endLine": 143,
            "content": "\n  const handleFileSelect = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      processMultipleFiles(Array.from(files));"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 140,
            "endLine": 144,
            "content": "  const handleFileSelect = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      processMultipleFiles(Array.from(files));\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 142,
            "endLine": 146,
            "content": "    if (files && files.length > 0) {\n      processMultipleFiles(Array.from(files));\n    }\n  }, [processFile]);\n"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 151,
            "endLine": 155,
            "content": "    if (files && files.length > 0) {\n      processMultipleFiles(Array.from(files));\n    }\n  }, [processFile]);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 146,
            "endLine": 150,
            "content": "\n  const handleDrop = useCallback((event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setIsDragOver(false);\n    const files = event.dataTransfer.files;"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 147,
            "endLine": 151,
            "content": "  const handleDrop = useCallback((event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setIsDragOver(false);\n    const files = event.dataTransfer.files;\n    if (files && files.length > 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 155,
            "endLine": 159,
            "content": "\n  const handleDragOver = useCallback((event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setIsDragOver(true);\n  }, []);"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 156,
            "endLine": 160,
            "content": "  const handleDragOver = useCallback((event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setIsDragOver(true);\n  }, []);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 160,
            "endLine": 164,
            "content": "\n  const handleDragLeave = useCallback((event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setIsDragOver(false);\n  }, []);"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 161,
            "endLine": 165,
            "content": "  const handleDragLeave = useCallback((event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setIsDragOver(false);\n  }, []);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 165,
            "endLine": 169,
            "content": "\n  // Multi-file processing logic\n  const processMultipleFiles = useCallback(async (files: File[]) => {\n    setIsProcessing(true);\n    setUploadedFile(null);"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 166,
            "endLine": 170,
            "content": "  // Multi-file processing logic\n  const processMultipleFiles = useCallback(async (files: File[]) => {\n    setIsProcessing(true);\n    setUploadedFile(null);\n    setProcessingStep('Processing multiple files...');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 187,
            "endLine": 191,
            "content": "\n  return (\n    <div className=\"space-y-8\">\n      {/* Progress Bar */}\n      {isProcessing && progress > 0 && progress < 100 && ("
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 188,
            "endLine": 192,
            "content": "  return (\n    <div className=\"space-y-8\">\n      {/* Progress Bar */}\n      {isProcessing && progress > 0 && progress < 100 && (\n        <div className=\"mb-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 282,
            "endLine": 286,
            "content": "\n      {/* Supported Formats */}\n      <div className=\"bg-slate-50 rounded-xl p-8\">\n        <div className=\"flex items-center space-x-4 mb-6\">\n          <div className=\"w-10 h-10 bg-white rounded-xl flex items-center justify-center\">"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 283,
            "endLine": 287,
            "content": "      {/* Supported Formats */}\n      <div className=\"bg-slate-50 rounded-xl p-8\">\n        <div className=\"flex items-center space-x-4 mb-6\">\n          <div className=\"w-10 h-10 bg-white rounded-xl flex items-center justify-center\">\n                            <AppIcons.files.file className=\"w-6 h-6 text-slate-600\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 293,
            "endLine": 297,
            "content": "        \n        {/* File Format Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n          <div className=\"bg-white rounded-xl p-6 border border-slate-200 hover:shadow-lg hover:shadow-purple-500/10 transition-all duration-300\">\n            <div className=\"flex items-center space-x-4 mb-4\">"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 294,
            "endLine": 298,
            "content": "        {/* File Format Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n          <div className=\"bg-white rounded-xl p-6 border border-slate-200 hover:shadow-lg hover:shadow-purple-500/10 transition-all duration-300\">\n            <div className=\"flex items-center space-x-4 mb-4\">\n              <div className=\"w-12 h-12 bg-green-50 rounded-xl flex items-center justify-center\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 296,
            "endLine": 300,
            "content": "          <div className=\"bg-white rounded-xl p-6 border border-slate-200 hover:shadow-lg hover:shadow-purple-500/10 transition-all duration-300\">\n            <div className=\"flex items-center space-x-4 mb-4\">\n              <div className=\"w-12 h-12 bg-green-50 rounded-xl flex items-center justify-center\">\n                <AppIcons.files.file className=\"w-6 h-6 text-green-600\" />\n              </div>"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 310,
            "endLine": 314,
            "content": "          \n          <div className=\"bg-white rounded-xl p-6 border border-slate-200 hover:shadow-lg hover:shadow-purple-500/10 transition-all duration-300\">\n            <div className=\"flex items-center space-x-4 mb-4\">\n              <div className=\"w-12 h-12 bg-red-50 rounded-xl flex items-center justify-center\">\n                <AppIcons.files.document className=\"w-6 h-6 text-red-600\" />"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 311,
            "endLine": 315,
            "content": "          <div className=\"bg-white rounded-xl p-6 border border-slate-200 hover:shadow-lg hover:shadow-purple-500/10 transition-all duration-300\">\n            <div className=\"flex items-center space-x-4 mb-4\">\n              <div className=\"w-12 h-12 bg-red-50 rounded-xl flex items-center justify-center\">\n                <AppIcons.files.document className=\"w-6 h-6 text-red-600\" />\n              </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 326,
            "endLine": 330,
            "content": "        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {[\n            { name: 'RBC', desc: 'Royal Bank of Canada' },\n            { name: 'TD', desc: 'TD Canada Trust' },"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 327,
            "endLine": 331,
            "content": "        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {[\n            { name: 'RBC', desc: 'Royal Bank of Canada' },\n            { name: 'TD', desc: 'TD Canada Trust' },\n            { name: 'Scotia', desc: 'Bank of Nova Scotia' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 344,
            "endLine": 348,
            "content": "\n        <div className=\"mt-8 p-6 bg-white rounded-xl border border-purple-100/50\">\n          <div className=\"flex items-start space-x-4\">\n            <div className=\"w-8 h-8 bg-purple-50 rounded-xl flex items-center justify-center flex-shrink-0 mt-1\">\n                              <AppIcons.status.info className=\"w-5 h-5 text-purple-600\" />"
          },
          {
            "file": "src/components/FileUpload.tsx",
            "startLine": 345,
            "endLine": 349,
            "content": "        <div className=\"mt-8 p-6 bg-white rounded-xl border border-purple-100/50\">\n          <div className=\"flex items-start space-x-4\">\n            <div className=\"w-8 h-8 bg-purple-50 rounded-xl flex items-center justify-center flex-shrink-0 mt-1\">\n                              <AppIcons.status.info className=\"w-5 h-5 text-purple-600\" />\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 11,
            "endLine": 15,
            "content": "\nexport default function FloatingChat() {\n  const [showChat, setShowChat] = useState(false);\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [inputMessage, setInputMessage] = useState('');"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 12,
            "endLine": 16,
            "content": "export default function FloatingChat() {\n  const [showChat, setShowChat] = useState(false);\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 71,
            "endLine": 75,
            "content": "\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 72,
            "endLine": 76,
            "content": "  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 115,
            "endLine": 119,
            "content": "          \n          {/* Tooltip */}\n          <div className=\"absolute bottom-16 right-0 bg-slate-800 text-white px-3 py-2 rounded-lg text-sm whitespace-nowrap opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none\">\n            Need help? Chat with AI\n            <div className=\"absolute top-full right-4 w-2 h-2 bg-slate-800 rotate-45 transform -translate-y-1\"></div>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 116,
            "endLine": 120,
            "content": "          {/* Tooltip */}\n          <div className=\"absolute bottom-16 right-0 bg-slate-800 text-white px-3 py-2 rounded-lg text-sm whitespace-nowrap opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none\">\n            Need help? Chat with AI\n            <div className=\"absolute top-full right-4 w-2 h-2 bg-slate-800 rotate-45 transform -translate-y-1\"></div>\n          </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 123,
            "endLine": 127,
            "content": "\n      {/* Chat Interface */}\n      {showChat && (\n        <div className=\"fixed bottom-6 right-6 z-50 w-96 h-[500px] bg-white rounded-2xl shadow-2xl border border-slate-200 flex flex-col animate-slideUp\">\n          {/* Chat Header */}"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 124,
            "endLine": 128,
            "content": "      {/* Chat Interface */}\n      {showChat && (\n        <div className=\"fixed bottom-6 right-6 z-50 w-96 h-[500px] bg-white rounded-2xl shadow-2xl border border-slate-200 flex flex-col animate-slideUp\">\n          {/* Chat Header */}\n          <div className=\"bg-gradient-to-r from-purple-600 to-blue-600 text-white p-4 rounded-t-2xl flex items-center justify-between\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 149,
            "endLine": 153,
            "content": "\n          {/* Quick Actions */}\n          {messages.length === 0 && (\n            <div className=\"p-4 border-b border-slate-200\">\n              <p className=\"text-xs text-slate-600 mb-3\">Quick actions:</p>"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 150,
            "endLine": 154,
            "content": "          {/* Quick Actions */}\n          {messages.length === 0 && (\n            <div className=\"p-4 border-b border-slate-200\">\n              <p className=\"text-xs text-slate-600 mb-3\">Quick actions:</p>\n              <div className=\"grid grid-cols-2 gap-2\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 157,
            "endLine": 161,
            "content": "                  className=\"text-xs bg-slate-100 hover:bg-slate-200 text-slate-700 px-3 py-2 rounded-lg transition-colors text-left\"\n                >\n                  Getting Started\n                </button>\n                <button"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 163,
            "endLine": 167,
            "content": "                  className=\"text-xs bg-slate-100 hover:bg-slate-200 text-slate-700 px-3 py-2 rounded-lg transition-colors text-left\"\n                >\n                  File Upload Help\n                </button>\n                <button"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 169,
            "endLine": 173,
            "content": "                  className=\"text-xs bg-slate-100 hover:bg-slate-200 text-slate-700 px-3 py-2 rounded-lg transition-colors text-left\"\n                >\n                  Export to Xero\n                </button>\n                <button"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 175,
            "endLine": 179,
            "content": "                  className=\"text-xs bg-slate-100 hover:bg-slate-200 text-slate-700 px-3 py-2 rounded-lg transition-colors text-left\"\n                >\n                  Bank Formats\n                </button>\n              </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 182,
            "endLine": 186,
            "content": "\n          {/* Chat Messages */}\n          <div className=\"flex-1 p-4 overflow-y-auto bg-gradient-to-b from-slate-50 to-white\">\n            {messages.length === 0 ? (\n              <div className=\"text-center text-slate-500 mt-8\">"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 183,
            "endLine": 187,
            "content": "          {/* Chat Messages */}\n          <div className=\"flex-1 p-4 overflow-y-auto bg-gradient-to-b from-slate-50 to-white\">\n            {messages.length === 0 ? (\n              <div className=\"text-center text-slate-500 mt-8\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-3\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 225,
            "endLine": 229,
            "content": "\n          {/* Chat Input */}\n          <div className=\"p-4 border-t border-slate-200 bg-white rounded-b-2xl\">\n            <div className=\"flex space-x-2\">\n              <input"
          },
          {
            "file": "src/components/FloatingChat.tsx",
            "startLine": 226,
            "endLine": 230,
            "content": "          {/* Chat Input */}\n          <div className=\"p-4 border-t border-slate-200 bg-white rounded-b-2xl\">\n            <div className=\"flex space-x-2\">\n              <input\n                type=\"text\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 8,
            "endLine": 12,
            "content": "\nexport default function KeywordManager({ onClose }: KeywordManagerProps) {\n  const [manager] = useState(() => CustomKeywordManager.getInstance());\n  const [keywords, setKeywords] = useState<CustomKeyword[]>([]);\n  const [rules, setRules] = useState<CustomKeywordRule[]>([]);"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 9,
            "endLine": 13,
            "content": "export default function KeywordManager({ onClose }: KeywordManagerProps) {\n  const [manager] = useState(() => CustomKeywordManager.getInstance());\n  const [keywords, setKeywords] = useState<CustomKeyword[]>([]);\n  const [rules, setRules] = useState<CustomKeywordRule[]>([]);\n  const [stats, setStats] = useState({ totalKeywords: 0, totalRules: 0, accountCodes: [] as string[] });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 14,
            "endLine": 18,
            "content": "  \n  // Form states\n  const [showAddKeyword, setShowAddKeyword] = useState(false);\n  const [showAddRule, setShowAddRule] = useState(false);\n  const [editingKeyword, setEditingKeyword] = useState<CustomKeyword | null>(null);"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 15,
            "endLine": 19,
            "content": "  // Form states\n  const [showAddKeyword, setShowAddKeyword] = useState(false);\n  const [showAddRule, setShowAddRule] = useState(false);\n  const [editingKeyword, setEditingKeyword] = useState<CustomKeyword | null>(null);\n  const [editingRule, setEditingRule] = useState<CustomKeywordRule | null>(null);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 36,
            "endLine": 40,
            "content": "  \n  // Import/Export\n  const [importData, setImportData] = useState('');\n  const [showImport, setShowImport] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 37,
            "endLine": 41,
            "content": "  // Import/Export\n  const [importData, setImportData] = useState('');\n  const [showImport, setShowImport] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 45,
            "endLine": 49,
            "content": "\n  const loadData = () => {\n    setKeywords(manager.getKeywords());\n    setRules(manager.getRules());\n    setStats(manager.getStats());"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 46,
            "endLine": 50,
            "content": "  const loadData = () => {\n    setKeywords(manager.getKeywords());\n    setRules(manager.getRules());\n    setStats(manager.getStats());\n  };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 51,
            "endLine": 55,
            "content": "\n  const showMessage = (type: 'success' | 'error', text: string) => {\n    setMessage({ type, text });\n    setTimeout(() => setMessage(null), 3000);\n  };"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 52,
            "endLine": 56,
            "content": "  const showMessage = (type: 'success' | 'error', text: string) => {\n    setMessage({ type, text });\n    setTimeout(() => setMessage(null), 3000);\n  };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 56,
            "endLine": 60,
            "content": "\n  const handleAddKeyword = () => {\n    if (!newKeyword.keyword.trim() || !newKeyword.accountCode) {\n      showMessage('error', 'Please fill in all required fields');\n      return;"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 57,
            "endLine": 61,
            "content": "  const handleAddKeyword = () => {\n    if (!newKeyword.keyword.trim() || !newKeyword.accountCode) {\n      showMessage('error', 'Please fill in all required fields');\n      return;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 69,
            "endLine": 73,
            "content": "    \n    setNewKeyword({ keyword: '', accountCode: '', confidence: 90, description: '' });\n    setShowAddKeyword(false);\n    loadData();\n    showMessage('success', 'Keyword added successfully');"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 70,
            "endLine": 74,
            "content": "    setNewKeyword({ keyword: '', accountCode: '', confidence: 90, description: '' });\n    setShowAddKeyword(false);\n    loadData();\n    showMessage('success', 'Keyword added successfully');\n  };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 75,
            "endLine": 79,
            "content": "\n  const handleAddRule = () => {\n    const validKeywords = newRule.keywords.filter(k => k.trim());\n    if (validKeywords.length === 0 || !newRule.accountCode) {\n      showMessage('error', 'Please add at least one keyword and select an account code');"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 76,
            "endLine": 80,
            "content": "  const handleAddRule = () => {\n    const validKeywords = newRule.keywords.filter(k => k.trim());\n    if (validKeywords.length === 0 || !newRule.accountCode) {\n      showMessage('error', 'Please add at least one keyword and select an account code');\n      return;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 89,
            "endLine": 93,
            "content": "    \n    setNewRule({ keywords: [''], accountCode: '', confidence: 90, description: '' });\n    setShowAddRule(false);\n    loadData();\n    showMessage('success', 'Rule added successfully');"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 90,
            "endLine": 94,
            "content": "    setNewRule({ keywords: [''], accountCode: '', confidence: 90, description: '' });\n    setShowAddRule(false);\n    loadData();\n    showMessage('success', 'Rule added successfully');\n  };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 95,
            "endLine": 99,
            "content": "\n  const handleUpdateKeyword = () => {\n    if (!editingKeyword) return;\n    \n    const updated = manager.updateKeyword(editingKeyword.id, {"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 96,
            "endLine": 100,
            "content": "  const handleUpdateKeyword = () => {\n    if (!editingKeyword) return;\n    \n    const updated = manager.updateKeyword(editingKeyword.id, {\n      keyword: editingKeyword.keyword,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 98,
            "endLine": 102,
            "content": "    \n    const updated = manager.updateKeyword(editingKeyword.id, {\n      keyword: editingKeyword.keyword,\n      accountCode: editingKeyword.accountCode,\n      confidence: editingKeyword.confidence,"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 99,
            "endLine": 103,
            "content": "    const updated = manager.updateKeyword(editingKeyword.id, {\n      keyword: editingKeyword.keyword,\n      accountCode: editingKeyword.accountCode,\n      confidence: editingKeyword.confidence,\n      description: editingKeyword.description"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 105,
            "endLine": 109,
            "content": "    \n    if (updated) {\n      setEditingKeyword(null);\n      loadData();\n      showMessage('success', 'Keyword updated successfully');"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 106,
            "endLine": 110,
            "content": "    if (updated) {\n      setEditingKeyword(null);\n      loadData();\n      showMessage('success', 'Keyword updated successfully');\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 112,
            "endLine": 116,
            "content": "\n  const handleUpdateRule = () => {\n    if (!editingRule) return;\n    \n    const updated = manager.updateRule(editingRule.id, {"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 113,
            "endLine": 117,
            "content": "  const handleUpdateRule = () => {\n    if (!editingRule) return;\n    \n    const updated = manager.updateRule(editingRule.id, {\n      keywords: editingRule.keywords,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 115,
            "endLine": 119,
            "content": "    \n    const updated = manager.updateRule(editingRule.id, {\n      keywords: editingRule.keywords,\n      accountCode: editingRule.accountCode,\n      confidence: editingRule.confidence,"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 116,
            "endLine": 120,
            "content": "    const updated = manager.updateRule(editingRule.id, {\n      keywords: editingRule.keywords,\n      accountCode: editingRule.accountCode,\n      confidence: editingRule.confidence,\n      description: editingRule.description"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 122,
            "endLine": 126,
            "content": "    \n    if (updated) {\n      setEditingRule(null);\n      loadData();\n      showMessage('success', 'Rule updated successfully');"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 123,
            "endLine": 127,
            "content": "    if (updated) {\n      setEditingRule(null);\n      loadData();\n      showMessage('success', 'Rule updated successfully');\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 129,
            "endLine": 133,
            "content": "\n  const handleDeleteKeyword = (id: string) => {\n    if (confirm('Are you sure you want to delete this keyword?')) {\n      manager.removeKeyword(id);\n      loadData();"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 130,
            "endLine": 134,
            "content": "  const handleDeleteKeyword = (id: string) => {\n    if (confirm('Are you sure you want to delete this keyword?')) {\n      manager.removeKeyword(id);\n      loadData();\n      showMessage('success', 'Keyword deleted successfully');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 137,
            "endLine": 141,
            "content": "\n  const handleDeleteRule = (id: string) => {\n    if (confirm('Are you sure you want to delete this rule?')) {\n      manager.removeRule(id);\n      loadData();"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 138,
            "endLine": 142,
            "content": "  const handleDeleteRule = (id: string) => {\n    if (confirm('Are you sure you want to delete this rule?')) {\n      manager.removeRule(id);\n      loadData();\n      showMessage('success', 'Rule deleted successfully');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 145,
            "endLine": 149,
            "content": "\n  const handleExport = () => {\n    const data = manager.exportKeywords();\n    const blob = new Blob([data], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 146,
            "endLine": 150,
            "content": "  const handleExport = () => {\n    const data = manager.exportKeywords();\n    const blob = new Blob([data], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 159,
            "endLine": 163,
            "content": "\n  const handleImport = () => {\n    if (!importData.trim()) {\n      showMessage('error', 'Please paste import data');\n      return;"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 160,
            "endLine": 164,
            "content": "  const handleImport = () => {\n    if (!importData.trim()) {\n      showMessage('error', 'Please paste import data');\n      return;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 165,
            "endLine": 169,
            "content": "\n    const result = manager.importKeywords(importData);\n    if (result.success) {\n      setImportData('');\n      setShowImport(false);"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 166,
            "endLine": 170,
            "content": "    const result = manager.importKeywords(importData);\n    if (result.success) {\n      setImportData('');\n      setShowImport(false);\n      loadData();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 209,
            "endLine": 213,
            "content": "\n        {/* Message */}\n        {message && (\n          <div className={`p-4 mx-6 mt-4 rounded-lg ${\n            message.type === 'success' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 210,
            "endLine": 214,
            "content": "        {/* Message */}\n        {message && (\n          <div className={`p-4 mx-6 mt-4 rounded-lg ${\n            message.type === 'success' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'\n          }`}>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 218,
            "endLine": 222,
            "content": "\n        {/* Stats */}\n        <div className=\"p-6 bg-slate-50 border-b border-slate-200\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"bg-white p-4 rounded-lg\">"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 219,
            "endLine": 223,
            "content": "        {/* Stats */}\n        <div className=\"p-6 bg-slate-50 border-b border-slate-200\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"bg-white p-4 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">{stats.totalKeywords}</div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 240,
            "endLine": 244,
            "content": "\n        {/* Content */}\n        <div className=\"flex-1 overflow-auto p-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* Keywords Section */}"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 241,
            "endLine": 245,
            "content": "        {/* Content */}\n        <div className=\"flex-1 overflow-auto p-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* Keywords Section */}\n            <div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 245,
            "endLine": 249,
            "content": "            <div>\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold text-slate-900\">Single Keywords</h3>\n                <button\n                  onClick={() => setShowAddKeyword(true)}"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 333,
            "endLine": 337,
            "content": "            <div>\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold text-slate-900\">Multi-Keyword Rules</h3>\n                <button\n                  onClick={() => setShowAddRule(true)}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 255,
            "endLine": 259,
            "content": "\n              <div className=\"space-y-3\">\n                {keywords.map((keyword) => (\n                  <div key={keyword.id} className=\"bg-white border border-slate-200 rounded-lg p-4\">\n                    {editingKeyword?.id === keyword.id ? ("
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 256,
            "endLine": 260,
            "content": "              <div className=\"space-y-3\">\n                {keywords.map((keyword) => (\n                  <div key={keyword.id} className=\"bg-white border border-slate-200 rounded-lg p-4\">\n                    {editingKeyword?.id === keyword.id ? (\n                      <div className=\"space-y-3\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 272,
            "endLine": 276,
            "content": "                          className=\"w-full px-3 py-2 border border-slate-300 rounded-lg\"\n                          placeholder=\"Account Code\"\n                        />\n                        <div className=\"flex items-center space-x-2\">\n                          <input"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 389,
            "endLine": 393,
            "content": "                          className=\"w-full px-3 py-2 border border-slate-300 rounded-lg\"\n                          placeholder=\"Account Code\"\n                        />\n                        <div className=\"flex items-center space-x-2\">\n                          <input"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 468,
            "endLine": 472,
            "content": "                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg\"\n                  placeholder=\"Account Code\"\n                />\n                <div className=\"flex items-center space-x-2\">\n                  <label className=\"text-sm text-slate-600\">Confidence:</label>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 555,
            "endLine": 559,
            "content": "                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg\"\n                  placeholder=\"Account Code\"\n                />\n                <div className=\"flex items-center space-x-2\">\n                  <label className=\"text-sm text-slate-600\">Confidence:</label>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 273,
            "endLine": 277,
            "content": "                          placeholder=\"Account Code\"\n                        />\n                        <div className=\"flex items-center space-x-2\">\n                          <input\n                            type=\"range\""
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 390,
            "endLine": 394,
            "content": "                          placeholder=\"Account Code\"\n                        />\n                        <div className=\"flex items-center space-x-2\">\n                          <input\n                            type=\"range\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 274,
            "endLine": 278,
            "content": "                        />\n                        <div className=\"flex items-center space-x-2\">\n                          <input\n                            type=\"range\"\n                            min=\"0\""
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 391,
            "endLine": 395,
            "content": "                        />\n                        <div className=\"flex items-center space-x-2\">\n                          <input\n                            type=\"range\"\n                            min=\"0\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 275,
            "endLine": 279,
            "content": "                        <div className=\"flex items-center space-x-2\">\n                          <input\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"100\""
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 392,
            "endLine": 396,
            "content": "                        <div className=\"flex items-center space-x-2\">\n                          <input\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"100\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 289,
            "endLine": 293,
            "content": "                            className=\"flex items-center space-x-2 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n                          >\n                            <span>Save</span>\n                          </button>\n                          <button"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 338,
            "endLine": 342,
            "content": "                  className=\"flex items-center space-x-2 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n                >\n                  <span>Add Rule</span>\n                </button>\n              </div>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 406,
            "endLine": 410,
            "content": "                            className=\"flex items-center space-x-2 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n                          >\n                            <span>Save</span>\n                          </button>\n                          <button"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 295,
            "endLine": 299,
            "content": "                            className=\"px-3 py-2 bg-slate-300 text-slate-700 rounded-lg hover:bg-slate-400\"\n                          >\n                            Cancel\n                          </button>\n                        </div>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 412,
            "endLine": 416,
            "content": "                            className=\"px-3 py-2 bg-slate-300 text-slate-700 rounded-lg hover:bg-slate-400\"\n                          >\n                            Cancel\n                          </button>\n                        </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 298,
            "endLine": 302,
            "content": "                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center justify-between\">"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 415,
            "endLine": 419,
            "content": "                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center justify-between\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 299,
            "endLine": 303,
            "content": "                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex-1\">"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 416,
            "endLine": 420,
            "content": "                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex-1\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 300,
            "endLine": 304,
            "content": "                      </div>\n                    ) : (\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"font-medium text-slate-900\">{keyword.keyword}</div>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 417,
            "endLine": 421,
            "content": "                      </div>\n                    ) : (\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"font-medium text-slate-900\">{rule.keywords.join(', ')}</div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 301,
            "endLine": 305,
            "content": "                    ) : (\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"font-medium text-slate-900\">{keyword.keyword}</div>\n                          <div className=\"text-sm text-slate-600\">{keyword.accountCode}</div>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 418,
            "endLine": 422,
            "content": "                    ) : (\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"font-medium text-slate-900\">{rule.keywords.join(', ')}</div>\n                          <div className=\"text-sm text-slate-600\">{rule.accountCode}</div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 302,
            "endLine": 306,
            "content": "                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"font-medium text-slate-900\">{keyword.keyword}</div>\n                          <div className=\"text-sm text-slate-600\">{keyword.accountCode}</div>\n                          <div className=\"text-xs text-slate-500\">Confidence: {keyword.confidence}%</div>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 419,
            "endLine": 423,
            "content": "                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"font-medium text-slate-900\">{rule.keywords.join(', ')}</div>\n                          <div className=\"text-sm text-slate-600\">{rule.accountCode}</div>\n                          <div className=\"text-xs text-slate-500\">Confidence: {rule.confidence}%</div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 314,
            "endLine": 318,
            "content": "                            className=\"p-2 text-blue-600 hover:bg-blue-100 rounded-lg\"\n                          >\n                            Edit\n                          </button>\n                          <button"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 431,
            "endLine": 435,
            "content": "                            className=\"p-2 text-blue-600 hover:bg-blue-100 rounded-lg\"\n                          >\n                            Edit\n                          </button>\n                          <button"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 320,
            "endLine": 324,
            "content": "                            className=\"p-2 text-red-600 hover:bg-red-100 rounded-lg\"\n                          >\n                            Delete\n                          </button>\n                        </div>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 437,
            "endLine": 441,
            "content": "                            className=\"p-2 text-red-600 hover:bg-red-100 rounded-lg\"\n                          >\n                            Delete\n                          </button>\n                        </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 331,
            "endLine": 335,
            "content": "\n            {/* Rules Section */}\n            <div>\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold text-slate-900\">Multi-Keyword Rules</h3>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 332,
            "endLine": 336,
            "content": "            {/* Rules Section */}\n            <div>\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold text-slate-900\">Multi-Keyword Rules</h3>\n                <button"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 343,
            "endLine": 347,
            "content": "\n              <div className=\"space-y-3\">\n                {rules.map((rule) => (\n                  <div key={rule.id} className=\"bg-white border border-slate-200 rounded-lg p-4\">\n                    {editingRule?.id === rule.id ? ("
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 344,
            "endLine": 348,
            "content": "              <div className=\"space-y-3\">\n                {rules.map((rule) => (\n                  <div key={rule.id} className=\"bg-white border border-slate-200 rounded-lg p-4\">\n                    {editingRule?.id === rule.id ? (\n                      <div className=\"space-y-3\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 351,
            "endLine": 355,
            "content": "                            <div key={index} className=\"flex space-x-2\">\n                              <input\n                                type=\"text\"\n                                value={keyword}\n                                onChange={(e) => {"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 517,
            "endLine": 521,
            "content": "                    <div key={index} className=\"flex space-x-2\">\n                      <input\n                        type=\"text\"\n                        value={keyword}\n                        onChange={(e) => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 368,
            "endLine": 372,
            "content": "                                  }}\n                                  className=\"px-3 py-2 bg-red-100 text-red-600 rounded-lg hover:bg-red-200\"\n                                >\n                                  Remove\n                                </button>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 534,
            "endLine": 538,
            "content": "                          }}\n                          className=\"px-3 py-2 bg-red-100 text-red-600 rounded-lg hover:bg-red-200\"\n                        >\n                          Remove\n                        </button>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 369,
            "endLine": 373,
            "content": "                                  className=\"px-3 py-2 bg-red-100 text-red-600 rounded-lg hover:bg-red-200\"\n                                >\n                                  Remove\n                                </button>\n                              )}"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 535,
            "endLine": 539,
            "content": "                          className=\"px-3 py-2 bg-red-100 text-red-600 rounded-lg hover:bg-red-200\"\n                        >\n                          Remove\n                        </button>\n                      )}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 450,
            "endLine": 454,
            "content": "\n        {/* Add Keyword Modal */}\n        {showAddKeyword && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 451,
            "endLine": 455,
            "content": "        {/* Add Keyword Modal */}\n        {showAddKeyword && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n              <h3 className=\"text-lg font-semibold mb-4\">Add New Keyword</h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 453,
            "endLine": 457,
            "content": "          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n              <h3 className=\"text-lg font-semibold mb-4\">Add New Keyword</h3>\n              <div className=\"space-y-4\">\n                <input"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 511,
            "endLine": 515,
            "content": "          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n              <h3 className=\"text-lg font-semibold mb-4\">Add New Rule</h3>\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 598,
            "endLine": 602,
            "content": "          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n              <h3 className=\"text-lg font-semibold mb-4\">Import Keywords</h3>\n              <div className=\"space-y-4\">\n                <textarea"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 454,
            "endLine": 458,
            "content": "            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n              <h3 className=\"text-lg font-semibold mb-4\">Add New Keyword</h3>\n              <div className=\"space-y-4\">\n                <input\n                  type=\"text\""
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 512,
            "endLine": 516,
            "content": "            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n              <h3 className=\"text-lg font-semibold mb-4\">Add New Rule</h3>\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  {newRule.keywords.map((keyword, index) => ("
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 599,
            "endLine": 603,
            "content": "            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n              <h3 className=\"text-lg font-semibold mb-4\">Import Keywords</h3>\n              <div className=\"space-y-4\">\n                <textarea\n                  value={importData}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 469,
            "endLine": 473,
            "content": "                  placeholder=\"Account Code\"\n                />\n                <div className=\"flex items-center space-x-2\">\n                  <label className=\"text-sm text-slate-600\">Confidence:</label>\n                  <input"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 556,
            "endLine": 560,
            "content": "                  placeholder=\"Account Code\"\n                />\n                <div className=\"flex items-center space-x-2\">\n                  <label className=\"text-sm text-slate-600\">Confidence:</label>\n                  <input"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 470,
            "endLine": 474,
            "content": "                />\n                <div className=\"flex items-center space-x-2\">\n                  <label className=\"text-sm text-slate-600\">Confidence:</label>\n                  <input\n                    type=\"range\""
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 557,
            "endLine": 561,
            "content": "                />\n                <div className=\"flex items-center space-x-2\">\n                  <label className=\"text-sm text-slate-600\">Confidence:</label>\n                  <input\n                    type=\"range\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 471,
            "endLine": 475,
            "content": "                <div className=\"flex items-center space-x-2\">\n                  <label className=\"text-sm text-slate-600\">Confidence:</label>\n                  <input\n                    type=\"range\"\n                    min=\"0\""
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 558,
            "endLine": 562,
            "content": "                <div className=\"flex items-center space-x-2\">\n                  <label className=\"text-sm text-slate-600\">Confidence:</label>\n                  <input\n                    type=\"range\"\n                    min=\"0\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 472,
            "endLine": 476,
            "content": "                  <label className=\"text-sm text-slate-600\">Confidence:</label>\n                  <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"100\""
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 559,
            "endLine": 563,
            "content": "                  <label className=\"text-sm text-slate-600\">Confidence:</label>\n                  <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"100\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 487,
            "endLine": 491,
            "content": "                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg\"\n                  placeholder=\"Description (optional)\"\n                />\n                <div className=\"flex space-x-2\">\n                  <button"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 574,
            "endLine": 578,
            "content": "                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg\"\n                  placeholder=\"Description (optional)\"\n                />\n                <div className=\"flex space-x-2\">\n                  <button"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 499,
            "endLine": 503,
            "content": "                    className=\"px-4 py-2 bg-slate-300 text-slate-700 rounded-lg hover:bg-slate-400\"\n                  >\n                    Cancel\n                  </button>\n                </div>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 586,
            "endLine": 590,
            "content": "                    className=\"px-4 py-2 bg-slate-300 text-slate-700 rounded-lg hover:bg-slate-400\"\n                  >\n                    Cancel\n                  </button>\n                </div>"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 617,
            "endLine": 621,
            "content": "                    className=\"px-4 py-2 bg-slate-300 text-slate-700 rounded-lg hover:bg-slate-400\"\n                  >\n                    Cancel\n                  </button>\n                </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 508,
            "endLine": 512,
            "content": "\n        {/* Add Rule Modal */}\n        {showAddRule && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 509,
            "endLine": 513,
            "content": "        {/* Add Rule Modal */}\n        {showAddRule && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n              <h3 className=\"text-lg font-semibold mb-4\">Add New Rule</h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 595,
            "endLine": 599,
            "content": "\n        {/* Import Modal */}\n        {showImport && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">"
          },
          {
            "file": "src/components/KeywordManager.tsx",
            "startLine": 596,
            "endLine": 600,
            "content": "        {/* Import Modal */}\n        {showImport && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n              <h3 className=\"text-lg font-semibold mb-4\">Import Keywords</h3>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 5,
            "endLine": 9,
            "content": "\ninterface NavigationBarProps {\n  currentStep?: 'upload' | 'review' | 'export';\n  activeSection?: 'dashboard' | 'reports' | 'settings' | 'help';\n  onNewFile?: () => void;"
          },
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 6,
            "endLine": 10,
            "content": "interface NavigationBarProps {\n  currentStep?: 'upload' | 'review' | 'export';\n  activeSection?: 'dashboard' | 'reports' | 'settings' | 'help';\n  onNewFile?: () => void;\n  showNewFileButton?: boolean;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 25,
            "endLine": 29,
            "content": "\n  return (\n    <header className=\"bg-white/95 backdrop-blur-sm border-b border-slate-200/60 sticky top-0 z-50 shadow-sm\">\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-20\">"
          },
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 26,
            "endLine": 30,
            "content": "  return (\n    <header className=\"bg-white/95 backdrop-blur-sm border-b border-slate-200/60 sticky top-0 z-50 shadow-sm\">\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-20\">\n          {/* Left: Logo and Company Info */}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 33,
            "endLine": 37,
            "content": "              <div className=\"w-10 h-10 bg-gradient-to-br from-purple-600 to-purple-700 rounded-xl flex items-center justify-center shadow-lg shadow-purple-600/20\">\n                <Image \n                  src=\"/meridian-logo-new.png\" \n                  alt=\"Meridian\" \n                  width={40} "
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 244,
            "endLine": 248,
            "content": "          <div className=\"w-10 h-10 bg-gradient-to-br from-purple-600 to-purple-700 rounded-xl flex items-center justify-center mr-4 shadow-lg shadow-purple-500/25\">\n            <span className=\"text-white font-bold\">→</span>\n          </div>\n          Next Steps\n        </h4>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 50,
            "endLine": 54,
            "content": "\n          {/* Center: Navigation Links */}\n          <nav className=\"hidden md:flex items-center space-x-1\">\n            {navigationItems.map((item) => (\n              <Link"
          },
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 51,
            "endLine": 55,
            "content": "          {/* Center: Navigation Links */}\n          <nav className=\"hidden md:flex items-center space-x-1\">\n            {navigationItems.map((item) => (\n              <Link\n                key={item.key}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 67,
            "endLine": 71,
            "content": "\n          {/* Right: Status and User Area */}\n          <div className=\"flex items-center space-x-4\">\n            {/* New File Button */}\n            {showNewFileButton && onNewFile && ("
          },
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 68,
            "endLine": 72,
            "content": "          {/* Right: Status and User Area */}\n          <div className=\"flex items-center space-x-4\">\n            {/* New File Button */}\n            {showNewFileButton && onNewFile && (\n              <button"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 80,
            "endLine": 84,
            "content": "\n            {/* CRA Compliant Badge */}\n            <div className=\"hidden sm:flex items-center space-x-2 px-3 py-1.5 bg-green-50 border border-green-200 rounded-full\">\n              <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n              <span className=\"text-xs font-medium text-green-700\">CRA Compliant</span>"
          },
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 81,
            "endLine": 85,
            "content": "            {/* CRA Compliant Badge */}\n            <div className=\"hidden sm:flex items-center space-x-2 px-3 py-1.5 bg-green-50 border border-green-200 rounded-full\">\n              <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n              <span className=\"text-xs font-medium text-green-700\">CRA Compliant</span>\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 86,
            "endLine": 90,
            "content": "\n            {/* Notifications */}\n            <button className=\"relative p-2 text-slate-600 hover:text-slate-900 hover:bg-slate-50 rounded-lg transition-colors\">\n              <AppIcons.communication.notification className={IconSizes.md} />\n              <div className=\"absolute top-1 right-1 w-2 h-2 bg-purple-500 rounded-full\"></div>"
          },
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 87,
            "endLine": 91,
            "content": "            {/* Notifications */}\n            <button className=\"relative p-2 text-slate-600 hover:text-slate-900 hover:bg-slate-50 rounded-lg transition-colors\">\n              <AppIcons.communication.notification className={IconSizes.md} />\n              <div className=\"absolute top-1 right-1 w-2 h-2 bg-purple-500 rounded-full\"></div>\n            </button>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 92,
            "endLine": 96,
            "content": "\n            {/* User Profile */}\n            <div className=\"flex items-center space-x-3 pl-3 border-l border-slate-200\">\n              <div className=\"w-8 h-8 bg-gradient-to-br from-purple-500 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white text-sm font-medium\">JD</span>"
          },
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 93,
            "endLine": 97,
            "content": "            {/* User Profile */}\n            <div className=\"flex items-center space-x-3 pl-3 border-l border-slate-200\">\n              <div className=\"w-8 h-8 bg-gradient-to-br from-purple-500 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white text-sm font-medium\">JD</span>\n              </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 106,
            "endLine": 110,
            "content": "\n            {/* Mobile Menu Button */}\n            <button className=\"md:hidden p-2 text-slate-600 hover:text-slate-900 hover:bg-slate-50 rounded-lg transition-colors\">\n              <AppIcons.navigation.menu className={IconSizes.md} />\n            </button>"
          },
          {
            "file": "src/components/NavigationBar.tsx",
            "startLine": 107,
            "endLine": 111,
            "content": "            {/* Mobile Menu Button */}\n            <button className=\"md:hidden p-2 text-slate-600 hover:text-slate-900 hover:bg-slate-50 rounded-lg transition-colors\">\n              <AppIcons.navigation.menu className={IconSizes.md} />\n            </button>\n          </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 2,
            "endLine": 6,
            "content": "\nimport React, { useEffect, useRef, useState } from 'react';\n\n// Stable random generator to prevent hydration mismatches\nconst stableRandom = (seed: number) => {"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import React, { useEffect, useRef, useState } from 'react';\n\n// Stable random generator to prevent hydration mismatches\nconst stableRandom = (seed: number) => {\n  const x = Math.sin(seed) * 10000;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 4,
            "endLine": 8,
            "content": "\n// Stable random generator to prevent hydration mismatches\nconst stableRandom = (seed: number) => {\n  const x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 5,
            "endLine": 9,
            "content": "// Stable random generator to prevent hydration mismatches\nconst stableRandom = (seed: number) => {\n  const x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n};"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 10,
            "endLine": 14,
            "content": "\nconst Preloader: React.FC<{ onFinish?: () => void }> = ({ onFinish }) => {\n  const [show, setShow] = useState(true);\n  const [zapActive, setZapActive] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 11,
            "endLine": 15,
            "content": "const Preloader: React.FC<{ onFinish?: () => void }> = ({ onFinish }) => {\n  const [show, setShow] = useState(true);\n  const [zapActive, setZapActive] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [fadeIn, setFadeIn] = useState(true);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 28,
            "endLine": 32,
            "content": "\n  // Generate data stream codes\n  const accountingCodes = [\n    \"GL-4001\", \"AR-2847\", \"AP-1205\", \"JE-9834\", \"PO-5621\", \"INV-7429\",\n    \"ACR-3301\", \"DEP-8845\", \"TAX-2156\", \"REV-6789\", \"EXP-4423\", \"BAL-9901\""
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 29,
            "endLine": 33,
            "content": "  // Generate data stream codes\n  const accountingCodes = [\n    \"GL-4001\", \"AR-2847\", \"AP-1205\", \"JE-9834\", \"PO-5621\", \"INV-7429\",\n    \"ACR-3301\", \"DEP-8845\", \"TAX-2156\", \"REV-6789\", \"EXP-4423\", \"BAL-9901\"\n  ];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 42,
            "endLine": 46,
            "content": "\n  // Mouse tracking for custom cursor\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      setMousePosition({ x: e.clientX, y: e.clientY });"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 43,
            "endLine": 47,
            "content": "  // Mouse tracking for custom cursor\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      setMousePosition({ x: e.clientX, y: e.clientY });\n    };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 48,
            "endLine": 52,
            "content": "\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, []);\n"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 49,
            "endLine": 53,
            "content": "    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, []);\n\n  // Initialize data streams with stable random values"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 52,
            "endLine": 56,
            "content": "\n  // Initialize data streams with stable random values\n  useEffect(() => {\n    const generateStreams = () => {\n      const streams = Array.from({ length: 8 }, (_, i) => {"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 53,
            "endLine": 57,
            "content": "  // Initialize data streams with stable random values\n  useEffect(() => {\n    const generateStreams = () => {\n      const streams = Array.from({ length: 8 }, (_, i) => {\n        // Use a stable seed based on component mount time, not current timestamp"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 74,
            "endLine": 78,
            "content": "\n    generateStreams();\n    const interval = setInterval(generateStreams, 8000); // Regenerate every 8 seconds\n    return () => clearInterval(interval);\n  }, []);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 75,
            "endLine": 79,
            "content": "    generateStreams();\n    const interval = setInterval(generateStreams, 8000); // Regenerate every 8 seconds\n    return () => clearInterval(interval);\n  }, []);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 79,
            "endLine": 83,
            "content": "\n  useEffect(() => {\n    // Add pulse animation for scroll indicator\n    const style = document.createElement('style');\n    style.textContent = `"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 80,
            "endLine": 84,
            "content": "  useEffect(() => {\n    // Add pulse animation for scroll indicator\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes meridian-preloader-pulse {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 96,
            "endLine": 100,
            "content": "\n  // Electric zap effect every 5 seconds\n  useEffect(() => {\n    const zapInterval = setInterval(() => {\n      setZapActive(true);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 97,
            "endLine": 101,
            "content": "  // Electric zap effect every 5 seconds\n  useEffect(() => {\n    const zapInterval = setInterval(() => {\n      setZapActive(true);\n      setTimeout(() => setZapActive(false), 300); // Zap lasts 300ms"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 106,
            "endLine": 110,
            "content": "\n  useEffect(() => {\n    // Fade in from black on mount\n    const fadeTimer = setTimeout(() => setFadeIn(false), 400);\n    return () => clearTimeout(fadeTimer);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 107,
            "endLine": 111,
            "content": "  useEffect(() => {\n    // Fade in from black on mount\n    const fadeTimer = setTimeout(() => setFadeIn(false), 400);\n    return () => clearTimeout(fadeTimer);\n  }, []);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 112,
            "endLine": 116,
            "content": "\n  // Instant launch - no delay, no fade\n  const handleLaunch = () => {\n    setShow(false);\n    if (onFinish) onFinish();"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 113,
            "endLine": 117,
            "content": "  // Instant launch - no delay, no fade\n  const handleLaunch = () => {\n    setShow(false);\n    if (onFinish) onFinish();\n    // eslint-disable-next-line no-console"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 120,
            "endLine": 124,
            "content": "\n  if (!show) return null;\n\n  return (\n    <div className={`meridian-preloader-root${isLoaded ? ' meridian-preloader-loaded' : ''}`}>  "
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 121,
            "endLine": 125,
            "content": "  if (!show) return null;\n\n  return (\n    <div className={`meridian-preloader-root${isLoaded ? ' meridian-preloader-loaded' : ''}`}>  \n      {/* Black fade-in overlay */}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 122,
            "endLine": 126,
            "content": "\n  return (\n    <div className={`meridian-preloader-root${isLoaded ? ' meridian-preloader-loaded' : ''}`}>  \n      {/* Black fade-in overlay */}\n      {fadeIn && <div className=\"meridian-preloader-fadein-overlay\" />}"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 123,
            "endLine": 127,
            "content": "  return (\n    <div className={`meridian-preloader-root${isLoaded ? ' meridian-preloader-loaded' : ''}`}>  \n      {/* Black fade-in overlay */}\n      {fadeIn && <div className=\"meridian-preloader-fadein-overlay\" />}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 136,
            "endLine": 140,
            "content": "\n      {/* Flowing Ribbons */}\n      <div className=\"meridian-preloader-ribbon-container\">\n        <div className=\"meridian-preloader-flow-ribbon\">\n          <svg viewBox=\"0 0 1000 600\" xmlns=\"http://www.w3.org/2000/svg\">"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 137,
            "endLine": 141,
            "content": "      {/* Flowing Ribbons */}\n      <div className=\"meridian-preloader-ribbon-container\">\n        <div className=\"meridian-preloader-flow-ribbon\">\n          <svg viewBox=\"0 0 1000 600\" xmlns=\"http://www.w3.org/2000/svg\">\n            {/* Main flowing ribbons - more intricate */}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 144,
            "endLine": 148,
            "content": "            \n            <path d=\"M200,30 Q350,10 500,60 T800,100 Q650,160 500,200 T200,240 Q350,280 500,320 T800,360 Q650,400 500,440 T200,480 Q350,520 500,560\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient2)\" strokeWidth=\"3\" opacity=\"0.6\"/>\n            \n            <path d=\"M100,80 Q250,50 400,110 T700,150 Q550,210 400,250 T100,290 Q250,330 400,370 T700,410 Q550,470 400,510 T100,550 Q250,590 400,630\" "
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 145,
            "endLine": 149,
            "content": "            <path d=\"M200,30 Q350,10 500,60 T800,100 Q650,160 500,200 T200,240 Q350,280 500,320 T800,360 Q650,400 500,440 T200,480 Q350,520 500,560\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient2)\" strokeWidth=\"3\" opacity=\"0.6\"/>\n            \n            <path d=\"M100,80 Q250,50 400,110 T700,150 Q550,210 400,250 T100,290 Q250,330 400,370 T700,410 Q550,470 400,510 T100,550 Q250,590 400,630\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient3)\" strokeWidth=\"5\" opacity=\"0.5\"/>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 147,
            "endLine": 151,
            "content": "            \n            <path d=\"M100,80 Q250,50 400,110 T700,150 Q550,210 400,250 T100,290 Q250,330 400,370 T700,410 Q550,470 400,510 T100,550 Q250,590 400,630\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient3)\" strokeWidth=\"5\" opacity=\"0.5\"/>\n            \n            {/* Secondary intricate patterns */}"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 148,
            "endLine": 152,
            "content": "            <path d=\"M100,80 Q250,50 400,110 T700,150 Q550,210 400,250 T100,290 Q250,330 400,370 T700,410 Q550,470 400,510 T100,550 Q250,590 400,630\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient3)\" strokeWidth=\"5\" opacity=\"0.5\"/>\n            \n            {/* Secondary intricate patterns */}\n            <path d=\"M180,40 Q320,15 470,70 T770,110 Q620,170 470,210 T180,250 Q320,290 470,330 T770,370 Q620,430 470,470 T180,510 Q320,550 470,590\" "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 150,
            "endLine": 154,
            "content": "            \n            {/* Secondary intricate patterns */}\n            <path d=\"M180,40 Q320,15 470,70 T770,110 Q620,170 470,210 T180,250 Q320,290 470,330 T770,370 Q620,430 470,470 T180,510 Q320,550 470,590\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient4)\" strokeWidth=\"2\" opacity=\"0.4\"/>\n            "
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 151,
            "endLine": 155,
            "content": "            {/* Secondary intricate patterns */}\n            <path d=\"M180,40 Q320,15 470,70 T770,110 Q620,170 470,210 T180,250 Q320,290 470,330 T770,370 Q620,430 470,470 T180,510 Q320,550 470,590\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient4)\" strokeWidth=\"2\" opacity=\"0.4\"/>\n            \n            <path d=\"M120,70 Q260,40 410,90 T710,130 Q560,190 410,230 T120,270 Q260,310 410,350 T710,390 Q560,450 410,490 T120,530 Q260,570 410,610\" "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 154,
            "endLine": 158,
            "content": "            \n            <path d=\"M120,70 Q260,40 410,90 T710,130 Q560,190 410,230 T120,270 Q260,310 410,350 T710,390 Q560,450 410,490 T120,530 Q260,570 410,610\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient5)\" strokeWidth=\"3\" opacity=\"0.3\"/>\n            \n            {/* Cosmic swirls and spirals */}"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 155,
            "endLine": 159,
            "content": "            <path d=\"M120,70 Q260,40 410,90 T710,130 Q560,190 410,230 T120,270 Q260,310 410,350 T710,390 Q560,450 410,490 T120,530 Q260,570 410,610\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient5)\" strokeWidth=\"3\" opacity=\"0.3\"/>\n            \n            {/* Cosmic swirls and spirals */}\n            <path d=\"M250,20 Q400,5 550,40 T850,80 Q700,140 550,180 T250,220 Q400,260 550,300 T850,340 Q700,400 550,440 T250,480 Q400,520 550,560\" "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 157,
            "endLine": 161,
            "content": "            \n            {/* Cosmic swirls and spirals */}\n            <path d=\"M250,20 Q400,5 550,40 T850,80 Q700,140 550,180 T250,220 Q400,260 550,300 T850,340 Q700,400 550,440 T250,480 Q400,520 550,560\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient6)\" strokeWidth=\"2\" opacity=\"0.4\"/>\n            "
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 158,
            "endLine": 162,
            "content": "            {/* Cosmic swirls and spirals */}\n            <path d=\"M250,20 Q400,5 550,40 T850,80 Q700,140 550,180 T250,220 Q400,260 550,300 T850,340 Q700,400 550,440 T250,480 Q400,520 550,560\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient6)\" strokeWidth=\"2\" opacity=\"0.4\"/>\n            \n            <path d=\"M300,10 Q450,0 600,30 T900,70 Q750,130 600,170 T300,210 Q450,250 600,290 T900,330 Q750,390 600,430 T300,470 Q450,510 600,550\" "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 161,
            "endLine": 165,
            "content": "            \n            <path d=\"M300,10 Q450,0 600,30 T900,70 Q750,130 600,170 T300,210 Q450,250 600,290 T900,330 Q750,390 600,430 T300,470 Q450,510 600,550\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient7)\" strokeWidth=\"1.5\" opacity=\"0.3\"/>\n            \n            {/* Nebula-like cloud patterns */}"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 162,
            "endLine": 166,
            "content": "            <path d=\"M300,10 Q450,0 600,30 T900,70 Q750,130 600,170 T300,210 Q450,250 600,290 T900,330 Q750,390 600,430 T300,470 Q450,510 600,550\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient7)\" strokeWidth=\"1.5\" opacity=\"0.3\"/>\n            \n            {/* Nebula-like cloud patterns */}\n            <path d=\"M50,100 Q200,80 350,120 T650,160 Q500,220 350,260 T50,300 Q200,340 350,380 T650,420 Q500,480 350,520 T50,560 Q200,600 350,640\" "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 164,
            "endLine": 168,
            "content": "            \n            {/* Nebula-like cloud patterns */}\n            <path d=\"M50,100 Q200,80 350,120 T650,160 Q500,220 350,260 T50,300 Q200,340 350,380 T650,420 Q500,480 350,520 T50,560 Q200,600 350,640\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient8)\" strokeWidth=\"6\" opacity=\"0.2\"/>\n            "
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 165,
            "endLine": 169,
            "content": "            {/* Nebula-like cloud patterns */}\n            <path d=\"M50,100 Q200,80 350,120 T650,160 Q500,220 350,260 T50,300 Q200,340 350,380 T650,420 Q500,480 350,520 T50,560 Q200,600 350,640\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient8)\" strokeWidth=\"6\" opacity=\"0.2\"/>\n            \n            {/* Ethereal wisps */}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 168,
            "endLine": 172,
            "content": "            \n            {/* Ethereal wisps */}\n            <path d=\"M80,60 Q230,35 380,85 T680,125 Q530,185 380,225 T80,265 Q230,305 380,345 T680,385 Q530,445 380,485 T80,525 Q230,565 380,605\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient9)\" strokeWidth=\"1\" opacity=\"0.25\"/>\n            "
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 169,
            "endLine": 173,
            "content": "            {/* Ethereal wisps */}\n            <path d=\"M80,60 Q230,35 380,85 T680,125 Q530,185 380,225 T80,265 Q230,305 380,345 T680,385 Q530,445 380,485 T80,525 Q230,565 380,605\" \n                  fill=\"none\" stroke=\"url(#meridian-preloader-gradient9)\" strokeWidth=\"1\" opacity=\"0.25\"/>\n            \n            {/* Cosmic stars and sparkles */}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 172,
            "endLine": 176,
            "content": "            \n            {/* Cosmic stars and sparkles */}\n            <circle cx=\"150\" cy=\"80\" r=\"2\" fill=\"url(#meridian-preloader-star1)\" opacity=\"0.8\">\n              <animate attributeName=\"opacity\" values=\"0.3;1;0.3\" dur=\"3s\" repeatCount=\"indefinite\"/>\n            </circle>"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 173,
            "endLine": 177,
            "content": "            {/* Cosmic stars and sparkles */}\n            <circle cx=\"150\" cy=\"80\" r=\"2\" fill=\"url(#meridian-preloader-star1)\" opacity=\"0.8\">\n              <animate attributeName=\"opacity\" values=\"0.3;1;0.3\" dur=\"3s\" repeatCount=\"indefinite\"/>\n            </circle>\n            <circle cx=\"350\" cy=\"120\" r=\"1.5\" fill=\"url(#meridian-preloader-star2)\" opacity=\"0.6\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 198,
            "endLine": 202,
            "content": "            \n            {/* Nebula clusters */}\n            <g opacity=\"0.3\">\n              <circle cx=\"200\" cy=\"150\" r=\"8\" fill=\"url(#meridian-preloader-nebula1)\"/>\n              <circle cx=\"400\" cy=\"190\" r=\"6\" fill=\"url(#meridian-preloader-nebula2)\"/>"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 199,
            "endLine": 203,
            "content": "            {/* Nebula clusters */}\n            <g opacity=\"0.3\">\n              <circle cx=\"200\" cy=\"150\" r=\"8\" fill=\"url(#meridian-preloader-nebula1)\"/>\n              <circle cx=\"400\" cy=\"190\" r=\"6\" fill=\"url(#meridian-preloader-nebula2)\"/>\n              <circle cx=\"600\" cy=\"230\" r=\"10\" fill=\"url(#meridian-preloader-nebula3)\"/>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 210,
            "endLine": 214,
            "content": "            \n            <defs>\n              <linearGradient id=\"meridian-preloader-gradient1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n                <stop offset=\"20%\" stopColor=\"#8b5cf6\" stopOpacity=\"0.9\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 211,
            "endLine": 215,
            "content": "            <defs>\n              <linearGradient id=\"meridian-preloader-gradient1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n                <stop offset=\"20%\" stopColor=\"#8b5cf6\" stopOpacity=\"0.9\" />\n                <stop offset=\"40%\" stopColor=\"#3b82f6\" stopOpacity=\"0.8\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 218,
            "endLine": 222,
            "content": "                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n              </linearGradient>\n              <linearGradient id=\"meridian-preloader-gradient2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n                <stop offset=\"30%\" stopColor=\"#8b5cf6\" stopOpacity=\"0.8\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 224,
            "endLine": 228,
            "content": "                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n              </linearGradient>\n              <linearGradient id=\"meridian-preloader-gradient3\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#06b6d4\" stopOpacity=\"0\" />\n                <stop offset=\"25%\" stopColor=\"#3b82f6\" stopOpacity=\"0.9\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 231,
            "endLine": 235,
            "content": "                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n              </linearGradient>\n              <linearGradient id=\"meridian-preloader-gradient4\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n                <stop offset=\"40%\" stopColor=\"#06b6d4\" stopOpacity=\"0.6\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 260,
            "endLine": 264,
            "content": "                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n              </linearGradient>\n              <linearGradient id=\"meridian-preloader-gradient9\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#06b6d4\" stopOpacity=\"0\" />\n                <stop offset=\"40%\" stopColor=\"#8b5cf6\" stopOpacity=\"0.4\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 221,
            "endLine": 225,
            "content": "                <stop offset=\"0%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n                <stop offset=\"30%\" stopColor=\"#8b5cf6\" stopOpacity=\"0.8\" />\n                <stop offset=\"70%\" stopColor=\"#06b6d4\" stopOpacity=\"0.7\" />\n                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n              </linearGradient>"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 257,
            "endLine": 261,
            "content": "                <stop offset=\"0%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n                <stop offset=\"30%\" stopColor=\"#8b5cf6\" stopOpacity=\"0.4\" />\n                <stop offset=\"70%\" stopColor=\"#06b6d4\" stopOpacity=\"0.3\" />\n                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n              </linearGradient>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 237,
            "endLine": 241,
            "content": "                <stop offset=\"100%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n              </linearGradient>\n              <linearGradient id=\"meridian-preloader-gradient5\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n                <stop offset=\"50%\" stopColor=\"#8b5cf6\" stopOpacity=\"0.7\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 254,
            "endLine": 258,
            "content": "                <stop offset=\"100%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n              </linearGradient>\n              <linearGradient id=\"meridian-preloader-gradient8\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n                <stop offset=\"30%\" stopColor=\"#8b5cf6\" stopOpacity=\"0.4\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 242,
            "endLine": 246,
            "content": "                <stop offset=\"100%\" stopColor=\"#06b6d4\" stopOpacity=\"0\" />\n              </linearGradient>\n              <linearGradient id=\"meridian-preloader-gradient6\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#06b6d4\" stopOpacity=\"0\" />\n                <stop offset=\"35%\" stopColor=\"#8b5cf6\" stopOpacity=\"0.6\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 248,
            "endLine": 252,
            "content": "                <stop offset=\"100%\" stopColor=\"#06b6d4\" stopOpacity=\"0\" />\n              </linearGradient>\n              <linearGradient id=\"meridian-preloader-gradient7\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n                <stop offset=\"45%\" stopColor=\"#06b6d4\" stopOpacity=\"0.5\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 268,
            "endLine": 272,
            "content": "              \n              {/* Star gradients */}\n              <radialGradient id=\"meridian-preloader-star1\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 269,
            "endLine": 273,
            "content": "              {/* Star gradients */}\n              <radialGradient id=\"meridian-preloader-star1\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n              </radialGradient>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 271,
            "endLine": 275,
            "content": "                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star2\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 283,
            "endLine": 287,
            "content": "                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star5\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 295,
            "endLine": 299,
            "content": "                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star8\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 272,
            "endLine": 276,
            "content": "                <stop offset=\"100%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star2\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 284,
            "endLine": 288,
            "content": "                <stop offset=\"100%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star5\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 296,
            "endLine": 300,
            "content": "                <stop offset=\"100%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star8\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 275,
            "endLine": 279,
            "content": "                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star3\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 287,
            "endLine": 291,
            "content": "                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star6\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 299,
            "endLine": 303,
            "content": "                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n              </radialGradient>\n              \n              {/* Nebula gradients */}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 276,
            "endLine": 280,
            "content": "                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star3\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#06b6d4\" stopOpacity=\"0\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 288,
            "endLine": 292,
            "content": "                <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star6\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#06b6d4\" stopOpacity=\"0\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 279,
            "endLine": 283,
            "content": "                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#06b6d4\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star4\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 291,
            "endLine": 295,
            "content": "                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#06b6d4\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star7\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 280,
            "endLine": 284,
            "content": "                <stop offset=\"100%\" stopColor=\"#06b6d4\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star4\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 292,
            "endLine": 296,
            "content": "                <stop offset=\"100%\" stopColor=\"#06b6d4\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-star7\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"1\" />\n                <stop offset=\"100%\" stopColor=\"#8b5cf6\" stopOpacity=\"0\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 302,
            "endLine": 306,
            "content": "              \n              {/* Nebula gradients */}\n              <radialGradient id=\"meridian-preloader-nebula1\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(139,92,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(59,130,246,0.2)\" stopOpacity=\"0.5\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 303,
            "endLine": 307,
            "content": "              {/* Nebula gradients */}\n              <radialGradient id=\"meridian-preloader-nebula1\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(139,92,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(59,130,246,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(6,182,212,0.1)\" stopOpacity=\"0\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 305,
            "endLine": 309,
            "content": "                <stop offset=\"0%\" stopColor=\"rgba(139,92,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(59,130,246,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(6,182,212,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula2\" cx=\"50%\" cy=\"50%\" r=\"50%\">"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 320,
            "endLine": 324,
            "content": "                <stop offset=\"0%\" stopColor=\"rgba(139,92,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(59,130,246,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(6,182,212,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula5\" cx=\"50%\" cy=\"50%\" r=\"50%\">"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 335,
            "endLine": 339,
            "content": "                <stop offset=\"0%\" stopColor=\"rgba(139,92,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(59,130,246,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(6,182,212,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula8\" cx=\"50%\" cy=\"50%\" r=\"50%\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 306,
            "endLine": 310,
            "content": "                <stop offset=\"50%\" stopColor=\"rgba(59,130,246,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(6,182,212,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula2\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(59,130,246,0.3)\" stopOpacity=\"1\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 321,
            "endLine": 325,
            "content": "                <stop offset=\"50%\" stopColor=\"rgba(59,130,246,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(6,182,212,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula5\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(59,130,246,0.3)\" stopOpacity=\"1\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 336,
            "endLine": 340,
            "content": "                <stop offset=\"50%\" stopColor=\"rgba(59,130,246,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(6,182,212,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula8\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(59,130,246,0.3)\" stopOpacity=\"1\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 307,
            "endLine": 311,
            "content": "                <stop offset=\"100%\" stopColor=\"rgba(6,182,212,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula2\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(59,130,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(6,182,212,0.2)\" stopOpacity=\"0.5\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 322,
            "endLine": 326,
            "content": "                <stop offset=\"100%\" stopColor=\"rgba(6,182,212,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula5\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(59,130,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(6,182,212,0.2)\" stopOpacity=\"0.5\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 337,
            "endLine": 341,
            "content": "                <stop offset=\"100%\" stopColor=\"rgba(6,182,212,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula8\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(59,130,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(6,182,212,0.2)\" stopOpacity=\"0.5\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 310,
            "endLine": 314,
            "content": "                <stop offset=\"0%\" stopColor=\"rgba(59,130,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(6,182,212,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(139,92,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula3\" cx=\"50%\" cy=\"50%\" r=\"50%\">"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 325,
            "endLine": 329,
            "content": "                <stop offset=\"0%\" stopColor=\"rgba(59,130,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(6,182,212,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(139,92,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula6\" cx=\"50%\" cy=\"50%\" r=\"50%\">"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 340,
            "endLine": 344,
            "content": "                <stop offset=\"0%\" stopColor=\"rgba(59,130,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(6,182,212,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(139,92,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n            </defs>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 311,
            "endLine": 315,
            "content": "                <stop offset=\"50%\" stopColor=\"rgba(6,182,212,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(139,92,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula3\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(6,182,212,0.3)\" stopOpacity=\"1\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 326,
            "endLine": 330,
            "content": "                <stop offset=\"50%\" stopColor=\"rgba(6,182,212,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(139,92,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula6\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(6,182,212,0.3)\" stopOpacity=\"1\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 341,
            "endLine": 345,
            "content": "                <stop offset=\"50%\" stopColor=\"rgba(6,182,212,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(139,92,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n            </defs>\n          </svg>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 312,
            "endLine": 316,
            "content": "                <stop offset=\"100%\" stopColor=\"rgba(139,92,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula3\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(6,182,212,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(139,92,246,0.2)\" stopOpacity=\"0.5\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 327,
            "endLine": 331,
            "content": "                <stop offset=\"100%\" stopColor=\"rgba(139,92,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula6\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(6,182,212,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(139,92,246,0.2)\" stopOpacity=\"0.5\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 315,
            "endLine": 319,
            "content": "                <stop offset=\"0%\" stopColor=\"rgba(6,182,212,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(139,92,246,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(59,130,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula4\" cx=\"50%\" cy=\"50%\" r=\"50%\">"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 330,
            "endLine": 334,
            "content": "                <stop offset=\"0%\" stopColor=\"rgba(6,182,212,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(139,92,246,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(59,130,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula7\" cx=\"50%\" cy=\"50%\" r=\"50%\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 316,
            "endLine": 320,
            "content": "                <stop offset=\"50%\" stopColor=\"rgba(139,92,246,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(59,130,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula4\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(139,92,246,0.3)\" stopOpacity=\"1\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 331,
            "endLine": 335,
            "content": "                <stop offset=\"50%\" stopColor=\"rgba(139,92,246,0.2)\" stopOpacity=\"0.5\" />\n                <stop offset=\"100%\" stopColor=\"rgba(59,130,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula7\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(139,92,246,0.3)\" stopOpacity=\"1\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 317,
            "endLine": 321,
            "content": "                <stop offset=\"100%\" stopColor=\"rgba(59,130,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula4\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(139,92,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(59,130,246,0.2)\" stopOpacity=\"0.5\" />"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 332,
            "endLine": 336,
            "content": "                <stop offset=\"100%\" stopColor=\"rgba(59,130,246,0.1)\" stopOpacity=\"0\" />\n              </radialGradient>\n              <radialGradient id=\"meridian-preloader-nebula7\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor=\"rgba(139,92,246,0.3)\" stopOpacity=\"1\" />\n                <stop offset=\"50%\" stopColor=\"rgba(59,130,246,0.2)\" stopOpacity=\"0.5\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 348,
            "endLine": 352,
            "content": "\n      {/* Data Stream Animation */}\n      <div className=\"meridian-preloader-data-stream-container\">\n        {dataStreams.map((stream) => (\n          <div"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 349,
            "endLine": 353,
            "content": "      {/* Data Stream Animation */}\n      <div className=\"meridian-preloader-data-stream-container\">\n        {dataStreams.map((stream) => (\n          <div\n            key={stream.id}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 369,
            "endLine": 373,
            "content": "\n      {/* Main Content */}\n      <div className=\"meridian-preloader-main-container\">\n        <div className=\"meridian-preloader-content-wrapper\">\n          <div className=\"meridian-preloader-left-content\">"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 370,
            "endLine": 374,
            "content": "      {/* Main Content */}\n      <div className=\"meridian-preloader-main-container\">\n        <div className=\"meridian-preloader-content-wrapper\">\n          <div className=\"meridian-preloader-left-content\">\n            <h1 className={`meridian-preloader-welcome-heading${zapActive ? ' meridian-preloader-zap' : ''}`}>Welcome.</h1>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 385,
            "endLine": 389,
            "content": "\n      {/* Scroll indicator (hidden visually, but logic included for completeness) */}\n      <div className=\"meridian-preloader-scroll-indicator\" style={{animation: 'meridian-preloader-pulse 2s ease-in-out infinite'}} />\n\n      {/* Styles */}"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 386,
            "endLine": 390,
            "content": "      {/* Scroll indicator (hidden visually, but logic included for completeness) */}\n      <div className=\"meridian-preloader-scroll-indicator\" style={{animation: 'meridian-preloader-pulse 2s ease-in-out infinite'}} />\n\n      {/* Styles */}\n      <style jsx global>{`"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 388,
            "endLine": 392,
            "content": "\n      {/* Styles */}\n      <style jsx global>{`\n        @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700;800;900&family=Times+New+Roman:wght@400;700&family=Outfit:wght@300;400;500;600;700;800;900&family=Cormorant+Garamond:wght@400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap');\n        .meridian-preloader-root {"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 389,
            "endLine": 393,
            "content": "      {/* Styles */}\n      <style jsx global>{`\n        @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700;800;900&family=Times+New+Roman:wght@400;700&family=Outfit:wght@300;400;500;600;700;800;900&family=Cormorant+Garamond:wght@400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap');\n        .meridian-preloader-root {\n          font-family: 'Outfit', -apple-system, BlinkMacSystemFont, sans-serif;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 420,
            "endLine": 424,
            "content": "          box-shadow: \n            0 0 0 2px rgba(139, 92, 246, 0.3),\n            0 0 20px rgba(139, 92, 246, 0.6),\n            0 0 40px rgba(0, 212, 255, 0.4);\n          animation: meridian-preloader-cursorPulse 2s ease-in-out infinite;"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 441,
            "endLine": 445,
            "content": "            box-shadow: \n              0 0 0 2px rgba(139, 92, 246, 0.3),\n              0 0 20px rgba(139, 92, 246, 0.6),\n              0 0 40px rgba(0, 212, 255, 0.4);\n          }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 421,
            "endLine": 425,
            "content": "            0 0 0 2px rgba(139, 92, 246, 0.3),\n            0 0 20px rgba(139, 92, 246, 0.6),\n            0 0 40px rgba(0, 212, 255, 0.4);\n          animation: meridian-preloader-cursorPulse 2s ease-in-out infinite;\n        }"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 442,
            "endLine": 446,
            "content": "              0 0 0 2px rgba(139, 92, 246, 0.3),\n              0 0 20px rgba(139, 92, 246, 0.6),\n              0 0 40px rgba(0, 212, 255, 0.4);\n          }\n          50% {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 457,
            "endLine": 461,
            "content": "          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          z-index: 1;"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 557,
            "endLine": 561,
            "content": "          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          z-index: 1;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 553,
            "endLine": 557,
            "content": "        \n        /* Data Stream Animation Styles */\n        .meridian-preloader-data-stream-container {\n          position: fixed;\n          top: 0;"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 554,
            "endLine": 558,
            "content": "        /* Data Stream Animation Styles */\n        .meridian-preloader-data-stream-container {\n          position: fixed;\n          top: 0;\n          left: 0;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 626,
            "endLine": 630,
            "content": "          background: linear-gradient(135deg, #ffffff 0%, #e2e8f0 100%);\n          -webkit-background-clip: text;\n          -webkit-text-fill-color: transparent;\n          background-clip: text;\n          position: relative;"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 645,
            "endLine": 649,
            "content": "            background: linear-gradient(135deg, #ffffff 0%, #e2e8f0 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1) drop-shadow(0 4px 8px rgba(0,0,0,0.4)) drop-shadow(0 8px 16px rgba(0,0,0,0.2));"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 725,
            "endLine": 729,
            "content": "            background: linear-gradient(135deg, #ffffff 0%, #e2e8f0 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1) drop-shadow(0 4px 8px rgba(0,0,0,0.4)) drop-shadow(0 8px 16px rgba(0,0,0,0.2));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 11,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 646,
            "endLine": 650,
            "content": "            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1) drop-shadow(0 4px 8px rgba(0,0,0,0.4)) drop-shadow(0 8px 16px rgba(0,0,0,0.2));\n            transform: perspective(1000px) rotateX(2deg);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 654,
            "endLine": 658,
            "content": "            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(2) drop-shadow(0 0 20px rgba(0, 255, 255, 0.8)) drop-shadow(0 0 40px rgba(255, 0, 255, 0.6)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));\n            transform: perspective(1000px) rotateX(2deg) scale(1.05) skewX(2deg);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 662,
            "endLine": 666,
            "content": "            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(3) drop-shadow(0 0 30px rgba(255, 255, 0, 0.9)) drop-shadow(0 0 60px rgba(255, 0, 128, 0.7)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));\n            transform: perspective(1000px) rotateX(2deg) scale(1.1) skewX(-1deg);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 670,
            "endLine": 674,
            "content": "            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(2.5) drop-shadow(0 0 25px rgba(0, 255, 128, 0.8)) drop-shadow(0 0 50px rgba(128, 0, 255, 0.6)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));\n            transform: perspective(1000px) rotateX(2deg) scale(1.08) skewX(1deg);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 678,
            "endLine": 682,
            "content": "            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(2) drop-shadow(0 0 20px rgba(255, 0, 128, 0.7)) drop-shadow(0 0 40px rgba(255, 128, 0, 0.5)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));\n            transform: perspective(1000px) rotateX(2deg) scale(1.05) skewX(-0.5deg);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 686,
            "endLine": 690,
            "content": "            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1.8) drop-shadow(0 0 15px rgba(128, 0, 255, 0.6)) drop-shadow(0 0 30px rgba(0, 255, 128, 0.4)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));\n            transform: perspective(1000px) rotateX(2deg) scale(1.02) skewX(0.2deg);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 694,
            "endLine": 698,
            "content": "            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1.5) drop-shadow(0 0 10px rgba(255, 255, 0, 0.5)) drop-shadow(0 0 20px rgba(255, 0, 128, 0.3)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));\n            transform: perspective(1000px) rotateX(2deg) scale(1.01) skewX(-0.1deg);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 702,
            "endLine": 706,
            "content": "            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1.3) drop-shadow(0 0 8px rgba(0, 255, 128, 0.4)) drop-shadow(0 0 15px rgba(128, 0, 255, 0.2)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));\n            transform: perspective(1000px) rotateX(2deg) scale(1.005) skewX(0.05deg);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 710,
            "endLine": 714,
            "content": "            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1.1) drop-shadow(0 0 5px rgba(255, 0, 128, 0.3)) drop-shadow(0 0 10px rgba(255, 128, 0, 0.1)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));\n            transform: perspective(1000px) rotateX(2deg) scale(1.002) skewX(-0.02deg);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 718,
            "endLine": 722,
            "content": "            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1.05) drop-shadow(0 0 3px rgba(128, 0, 255, 0.2)) drop-shadow(0 0 6px rgba(0, 255, 128, 0.1)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));\n            transform: perspective(1000px) rotateX(2deg) scale(1.001) skewX(0.01deg);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 726,
            "endLine": 730,
            "content": "            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1) drop-shadow(0 4px 8px rgba(0,0,0,0.4)) drop-shadow(0 8px 16px rgba(0,0,0,0.2));\n            transform: perspective(1000px) rotateX(2deg);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 647,
            "endLine": 651,
            "content": "            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1) drop-shadow(0 4px 8px rgba(0,0,0,0.4)) drop-shadow(0 8px 16px rgba(0,0,0,0.2));\n            transform: perspective(1000px) rotateX(2deg);\n          }"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 727,
            "endLine": 731,
            "content": "            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1) drop-shadow(0 4px 8px rgba(0,0,0,0.4)) drop-shadow(0 8px 16px rgba(0,0,0,0.2));\n            transform: perspective(1000px) rotateX(2deg);\n          }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 648,
            "endLine": 652,
            "content": "            background-clip: text;\n            filter: brightness(1) drop-shadow(0 4px 8px rgba(0,0,0,0.4)) drop-shadow(0 8px 16px rgba(0,0,0,0.2));\n            transform: perspective(1000px) rotateX(2deg);\n          }\n          10% {"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 728,
            "endLine": 732,
            "content": "            background-clip: text;\n            filter: brightness(1) drop-shadow(0 4px 8px rgba(0,0,0,0.4)) drop-shadow(0 8px 16px rgba(0,0,0,0.2));\n            transform: perspective(1000px) rotateX(2deg);\n          }\n        }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 649,
            "endLine": 653,
            "content": "            filter: brightness(1) drop-shadow(0 4px 8px rgba(0,0,0,0.4)) drop-shadow(0 8px 16px rgba(0,0,0,0.2));\n            transform: perspective(1000px) rotateX(2deg);\n          }\n          10% {\n            background: linear-gradient(135deg, #00ffff 0%, #0080ff 50%, #ff00ff 100%);"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 729,
            "endLine": 733,
            "content": "            filter: brightness(1) drop-shadow(0 4px 8px rgba(0,0,0,0.4)) drop-shadow(0 8px 16px rgba(0,0,0,0.2));\n            transform: perspective(1000px) rotateX(2deg);\n          }\n        }\n        .meridian-preloader-brand-text {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 655,
            "endLine": 659,
            "content": "            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(2) drop-shadow(0 0 20px rgba(0, 255, 255, 0.8)) drop-shadow(0 0 40px rgba(255, 0, 255, 0.6)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));\n            transform: perspective(1000px) rotateX(2deg) scale(1.05) skewX(2deg);\n          }"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 679,
            "endLine": 683,
            "content": "            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(2) drop-shadow(0 0 20px rgba(255, 0, 128, 0.7)) drop-shadow(0 0 40px rgba(255, 128, 0, 0.5)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));\n            transform: perspective(1000px) rotateX(2deg) scale(1.05) skewX(-0.5deg);\n          }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 661,
            "endLine": 665,
            "content": "            background: linear-gradient(135deg, #ffff00 0%, #ff8000 50%, #ff0080 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(3) drop-shadow(0 0 30px rgba(255, 255, 0, 0.9)) drop-shadow(0 0 60px rgba(255, 0, 128, 0.7)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 693,
            "endLine": 697,
            "content": "            background: linear-gradient(135deg, #ffff00 0%, #ff8000 50%, #ff0080 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1.5) drop-shadow(0 0 10px rgba(255, 255, 0, 0.5)) drop-shadow(0 0 20px rgba(255, 0, 128, 0.3)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 669,
            "endLine": 673,
            "content": "            background: linear-gradient(135deg, #00ff80 0%, #00ffff 50%, #8000ff 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(2.5) drop-shadow(0 0 25px rgba(0, 255, 128, 0.8)) drop-shadow(0 0 50px rgba(128, 0, 255, 0.6)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 701,
            "endLine": 705,
            "content": "            background: linear-gradient(135deg, #00ff80 0%, #00ffff 50%, #8000ff 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1.3) drop-shadow(0 0 8px rgba(0, 255, 128, 0.4)) drop-shadow(0 0 15px rgba(128, 0, 255, 0.2)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 677,
            "endLine": 681,
            "content": "            background: linear-gradient(135deg, #ff0080 0%, #ff8000 50%, #ffff00 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(2) drop-shadow(0 0 20px rgba(255, 0, 128, 0.7)) drop-shadow(0 0 40px rgba(255, 128, 0, 0.5)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 709,
            "endLine": 713,
            "content": "            background: linear-gradient(135deg, #ff0080 0%, #ff8000 50%, #ffff00 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1.1) drop-shadow(0 0 5px rgba(255, 0, 128, 0.3)) drop-shadow(0 0 10px rgba(255, 128, 0, 0.1)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 685,
            "endLine": 689,
            "content": "            background: linear-gradient(135deg, #8000ff 0%, #00ffff 50%, #00ff80 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1.8) drop-shadow(0 0 15px rgba(128, 0, 255, 0.6)) drop-shadow(0 0 30px rgba(0, 255, 128, 0.4)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));"
          },
          {
            "file": "src/components/Preloader.tsx",
            "startLine": 717,
            "endLine": 721,
            "content": "            background: linear-gradient(135deg, #8000ff 0%, #00ffff 50%, #00ff80 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            filter: brightness(1.05) drop-shadow(0 0 3px rgba(128, 0, 255, 0.2)) drop-shadow(0 0 6px rgba(0, 255, 128, 0.1)) drop-shadow(0 4px 8px rgba(0,0,0,0.4));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 6,
            "endLine": 10,
            "content": "\ninterface ProcessingResultsProps {\n  transactions: Transaction[];\n  validation: ValidationResult;\n  bankFormat: BankFormat | 'Unknown';"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 7,
            "endLine": 11,
            "content": "interface ProcessingResultsProps {\n  transactions: Transaction[];\n  validation: ValidationResult;\n  bankFormat: BankFormat | 'Unknown';\n  stats: {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 11,
            "endLine": 15,
            "content": "  stats: {\n    total: number;\n    categorized: number;\n    highConfidence: number;\n    needsReview: number;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 755,
            "endLine": 759,
            "content": "    stats: {\n      total: number;\n      categorized: number;\n      highConfidence: number;\n      needsReview: number;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 32,
            "endLine": 36,
            "content": "\n  // Calculate total amounts\n  const totalExpenses = transactions\n    .filter(t => t.amount < 0)\n    .reduce((sum, t) => sum + Math.abs(t.amount), 0);"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 33,
            "endLine": 37,
            "content": "  // Calculate total amounts\n  const totalExpenses = transactions\n    .filter(t => t.amount < 0)\n    .reduce((sum, t) => sum + Math.abs(t.amount), 0);\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 41,
            "endLine": 45,
            "content": "\n  return (\n    <div className=\"space-y-12\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-br from-purple-50 to-purple-100/50 rounded-2xl p-8 border border-purple-100/50 shadow-lg shadow-purple-500/5\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 42,
            "endLine": 46,
            "content": "  return (\n    <div className=\"space-y-12\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-br from-purple-50 to-purple-100/50 rounded-2xl p-8 border border-purple-100/50 shadow-lg shadow-purple-500/5\">\n        <div className=\"flex items-center space-x-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 47,
            "endLine": 51,
            "content": "          <div className=\"w-14 h-14 bg-gradient-to-br from-purple-600 to-purple-700 rounded-2xl flex items-center justify-center shadow-lg shadow-purple-500/25\">\n            <CheckCircle className=\"w-7 h-7 text-white\" />\n          </div>\n          <div>\n            <h3 className=\"text-2xl font-bold text-slate-900\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 140,
            "endLine": 144,
            "content": "          <div className=\"w-14 h-14 bg-gradient-to-br from-purple-600 to-purple-700 rounded-2xl flex items-center justify-center shadow-lg shadow-purple-500/25\">\n            <span className=\"text-white text-2xl\">📊</span>\n          </div>\n          <h4 className=\"text-2xl font-bold text-slate-900\">\n            Categorization Results"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 60,
            "endLine": 64,
            "content": "\n      {/* Stats Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n        {/* Total Transactions */}\n        <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-lg shadow-slate-500/5 hover:shadow-xl hover:shadow-purple-500/10 hover:border-purple-200 transition-all duration-300 hover:scale-[1.02]\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 61,
            "endLine": 65,
            "content": "      {/* Stats Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n        {/* Total Transactions */}\n        <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-lg shadow-slate-500/5 hover:shadow-xl hover:shadow-purple-500/10 hover:border-purple-200 transition-all duration-300 hover:scale-[1.02]\">\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 64,
            "endLine": 68,
            "content": "        <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-lg shadow-slate-500/5 hover:shadow-xl hover:shadow-purple-500/10 hover:border-purple-200 transition-all duration-300 hover:scale-[1.02]\">\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-12 h-12 bg-purple-100 rounded-2xl flex items-center justify-center\">\n              <FileText className=\"w-6 h-6 text-purple-600\" />\n            </div>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 80,
            "endLine": 84,
            "content": "        <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-lg shadow-slate-500/5 hover:shadow-xl hover:shadow-purple-500/10 hover:border-purple-200 transition-all duration-300 hover:scale-[1.02]\">\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-12 h-12 bg-purple-100 rounded-2xl flex items-center justify-center\">\n              <Calendar className=\"w-6 h-6 text-purple-600\" />\n            </div>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 101,
            "endLine": 105,
            "content": "        <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-lg shadow-slate-500/5 hover:shadow-xl hover:shadow-purple-500/10 hover:border-purple-200 transition-all duration-300 hover:scale-[1.02]\">\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-12 h-12 bg-red-100 rounded-2xl flex items-center justify-center\">\n              <DollarSign className=\"w-6 h-6 text-red-600\" />\n            </div>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 119,
            "endLine": 123,
            "content": "        <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-lg shadow-slate-500/5 hover:shadow-xl hover:shadow-purple-500/10 hover:border-purple-200 transition-all duration-300 hover:scale-[1.02]\">\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-12 h-12 bg-green-100 rounded-2xl flex items-center justify-center\">\n              <TrendingUp className=\"w-6 h-6 text-green-600\" />\n            </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 65,
            "endLine": 69,
            "content": "          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-12 h-12 bg-purple-100 rounded-2xl flex items-center justify-center\">\n              <FileText className=\"w-6 h-6 text-purple-600\" />\n            </div>\n          </div>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 81,
            "endLine": 85,
            "content": "          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-12 h-12 bg-purple-100 rounded-2xl flex items-center justify-center\">\n              <Calendar className=\"w-6 h-6 text-purple-600\" />\n            </div>\n          </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 68,
            "endLine": 72,
            "content": "            </div>\n          </div>\n          <div className=\"text-center\">\n            <span className=\"text-xs font-bold text-purple-600 uppercase tracking-wide block mb-2\">Total Transactions</span>\n            <p className=\"text-3xl font-bold text-slate-900 mb-2\">{stats.total}</p>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 84,
            "endLine": 88,
            "content": "            </div>\n          </div>\n          <div className=\"text-center\">\n            <span className=\"text-xs font-bold text-purple-600 uppercase tracking-wide block mb-2\">Date Range</span>\n            <p className=\"text-lg font-bold text-slate-900 leading-tight\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 69,
            "endLine": 73,
            "content": "          </div>\n          <div className=\"text-center\">\n            <span className=\"text-xs font-bold text-purple-600 uppercase tracking-wide block mb-2\">Total Transactions</span>\n            <p className=\"text-3xl font-bold text-slate-900 mb-2\">{stats.total}</p>\n            <p className=\"text-sm text-slate-500 font-medium\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 85,
            "endLine": 89,
            "content": "          </div>\n          <div className=\"text-center\">\n            <span className=\"text-xs font-bold text-purple-600 uppercase tracking-wide block mb-2\">Date Range</span>\n            <p className=\"text-lg font-bold text-slate-900 leading-tight\">\n              {startDate}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 70,
            "endLine": 74,
            "content": "          <div className=\"text-center\">\n            <span className=\"text-xs font-bold text-purple-600 uppercase tracking-wide block mb-2\">Total Transactions</span>\n            <p className=\"text-3xl font-bold text-slate-900 mb-2\">{stats.total}</p>\n            <p className=\"text-sm text-slate-500 font-medium\">\n            {bankFormat !== 'Unknown' ? `${bankFormat} format` : 'Unknown format'}"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 86,
            "endLine": 90,
            "content": "          <div className=\"text-center\">\n            <span className=\"text-xs font-bold text-purple-600 uppercase tracking-wide block mb-2\">Date Range</span>\n            <p className=\"text-lg font-bold text-slate-900 leading-tight\">\n              {startDate}\n            </p>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 78,
            "endLine": 82,
            "content": "\n        {/* Date Range */}\n        <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-lg shadow-slate-500/5 hover:shadow-xl hover:shadow-purple-500/10 hover:border-purple-200 transition-all duration-300 hover:scale-[1.02]\">\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-12 h-12 bg-purple-100 rounded-2xl flex items-center justify-center\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 79,
            "endLine": 83,
            "content": "        {/* Date Range */}\n        <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-lg shadow-slate-500/5 hover:shadow-xl hover:shadow-purple-500/10 hover:border-purple-200 transition-all duration-300 hover:scale-[1.02]\">\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-12 h-12 bg-purple-100 rounded-2xl flex items-center justify-center\">\n              <Calendar className=\"w-6 h-6 text-purple-600\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 99,
            "endLine": 103,
            "content": "\n        {/* Total Expenses */}\n        <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-lg shadow-slate-500/5 hover:shadow-xl hover:shadow-purple-500/10 hover:border-purple-200 transition-all duration-300 hover:scale-[1.02]\">\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-12 h-12 bg-red-100 rounded-2xl flex items-center justify-center\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 100,
            "endLine": 104,
            "content": "        {/* Total Expenses */}\n        <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-lg shadow-slate-500/5 hover:shadow-xl hover:shadow-purple-500/10 hover:border-purple-200 transition-all duration-300 hover:scale-[1.02]\">\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-12 h-12 bg-red-100 rounded-2xl flex items-center justify-center\">\n              <DollarSign className=\"w-6 h-6 text-red-600\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 117,
            "endLine": 121,
            "content": "\n        {/* Total Income */}\n        <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-lg shadow-slate-500/5 hover:shadow-xl hover:shadow-purple-500/10 hover:border-purple-200 transition-all duration-300 hover:scale-[1.02]\">\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-12 h-12 bg-green-100 rounded-2xl flex items-center justify-center\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 118,
            "endLine": 122,
            "content": "        {/* Total Income */}\n        <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-lg shadow-slate-500/5 hover:shadow-xl hover:shadow-purple-500/10 hover:border-purple-200 transition-all duration-300 hover:scale-[1.02]\">\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <div className=\"w-12 h-12 bg-green-100 rounded-2xl flex items-center justify-center\">\n              <TrendingUp className=\"w-6 h-6 text-green-600\" />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 136,
            "endLine": 140,
            "content": "\n      {/* Categorization Results */}\n      <div className=\"bg-white rounded-2xl p-12 border border-slate-200 shadow-lg shadow-slate-500/5\">\n        <div className=\"flex items-center space-x-4 mb-12\">\n          <div className=\"w-14 h-14 bg-gradient-to-br from-purple-600 to-purple-700 rounded-2xl flex items-center justify-center shadow-lg shadow-purple-500/25\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 137,
            "endLine": 141,
            "content": "      {/* Categorization Results */}\n      <div className=\"bg-white rounded-2xl p-12 border border-slate-200 shadow-lg shadow-slate-500/5\">\n        <div className=\"flex items-center space-x-4 mb-12\">\n          <div className=\"w-14 h-14 bg-gradient-to-br from-purple-600 to-purple-700 rounded-2xl flex items-center justify-center shadow-lg shadow-purple-500/25\">\n            <span className=\"text-white text-2xl\">📊</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 147,
            "endLine": 151,
            "content": "\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-16\">\n          {/* Categorized */}\n          <div className=\"text-center\">\n            <div className=\"relative inline-flex\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 148,
            "endLine": 152,
            "content": "        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-16\">\n          {/* Categorized */}\n          <div className=\"text-center\">\n            <div className=\"relative inline-flex\">\n              <div className=\"w-28 h-28 bg-gradient-to-br from-purple-100 to-purple-200 rounded-3xl flex items-center justify-center shadow-lg shadow-purple-500/10 border border-purple-200\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 150,
            "endLine": 154,
            "content": "          <div className=\"text-center\">\n            <div className=\"relative inline-flex\">\n              <div className=\"w-28 h-28 bg-gradient-to-br from-purple-100 to-purple-200 rounded-3xl flex items-center justify-center shadow-lg shadow-purple-500/10 border border-purple-200\">\n                <span className=\"text-4xl font-bold text-purple-700\">{stats.categorizedPercent}%</span>\n              </div>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 163,
            "endLine": 167,
            "content": "          <div className=\"text-center\">\n            <div className=\"relative inline-flex\">\n              <div className=\"w-28 h-28 bg-gradient-to-br from-green-100 to-green-200 rounded-3xl flex items-center justify-center shadow-lg shadow-green-500/10 border border-green-200\">\n                <span className=\"text-4xl font-bold text-green-700\">{stats.highConfidencePercent}%</span>\n              </div>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 176,
            "endLine": 180,
            "content": "          <div className=\"text-center\">\n            <div className=\"relative inline-flex\">\n              <div className=\"w-28 h-28 bg-gradient-to-br from-amber-100 to-amber-200 rounded-3xl flex items-center justify-center shadow-lg shadow-amber-500/10 border border-amber-200\">\n                <span className=\"text-4xl font-bold text-amber-700\">{stats.needsReviewPercent}%</span>\n              </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 161,
            "endLine": 165,
            "content": "\n          {/* High Confidence */}\n          <div className=\"text-center\">\n            <div className=\"relative inline-flex\">\n              <div className=\"w-28 h-28 bg-gradient-to-br from-green-100 to-green-200 rounded-3xl flex items-center justify-center shadow-lg shadow-green-500/10 border border-green-200\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 162,
            "endLine": 166,
            "content": "          {/* High Confidence */}\n          <div className=\"text-center\">\n            <div className=\"relative inline-flex\">\n              <div className=\"w-28 h-28 bg-gradient-to-br from-green-100 to-green-200 rounded-3xl flex items-center justify-center shadow-lg shadow-green-500/10 border border-green-200\">\n                <span className=\"text-4xl font-bold text-green-700\">{stats.highConfidencePercent}%</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 174,
            "endLine": 178,
            "content": "\n          {/* Needs Review */}\n          <div className=\"text-center\">\n            <div className=\"relative inline-flex\">\n              <div className=\"w-28 h-28 bg-gradient-to-br from-amber-100 to-amber-200 rounded-3xl flex items-center justify-center shadow-lg shadow-amber-500/10 border border-amber-200\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 175,
            "endLine": 179,
            "content": "          {/* Needs Review */}\n          <div className=\"text-center\">\n            <div className=\"relative inline-flex\">\n              <div className=\"w-28 h-28 bg-gradient-to-br from-amber-100 to-amber-200 rounded-3xl flex items-center justify-center shadow-lg shadow-amber-500/10 border border-amber-200\">\n                <span className=\"text-4xl font-bold text-amber-700\">{stats.needsReviewPercent}%</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 188,
            "endLine": 192,
            "content": "\n        {/* Progress Bar */}\n        <div className=\"mt-16\">\n          <div className=\"flex justify-between text-purple-700 mb-6\">\n            <span className=\"font-bold text-lg\">Categorization Progress</span>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 189,
            "endLine": 193,
            "content": "        {/* Progress Bar */}\n        <div className=\"mt-16\">\n          <div className=\"flex justify-between text-purple-700 mb-6\">\n            <span className=\"font-bold text-lg\">Categorization Progress</span>\n            <span className=\"font-bold text-lg\">{stats.categorizedPercent}% complete</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 215,
            "endLine": 219,
            "content": "\n      {/* Validation Warnings */}\n      {validation.warnings.length > 0 && (\n        <div className=\"bg-gradient-to-br from-amber-50 to-amber-100/50 rounded-2xl p-8 border border-amber-200/50 shadow-lg shadow-amber-500/5\">\n          <div className=\"flex items-center space-x-4 mb-8\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 216,
            "endLine": 220,
            "content": "      {/* Validation Warnings */}\n      {validation.warnings.length > 0 && (\n        <div className=\"bg-gradient-to-br from-amber-50 to-amber-100/50 rounded-2xl p-8 border border-amber-200/50 shadow-lg shadow-amber-500/5\">\n          <div className=\"flex items-center space-x-4 mb-8\">\n            <div className=\"w-14 h-14 bg-gradient-to-br from-amber-500 to-amber-600 rounded-2xl flex items-center justify-center shadow-lg shadow-amber-500/25\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 240,
            "endLine": 244,
            "content": "\n      {/* Next Steps */}\n      <div className=\"bg-gradient-to-br from-slate-50 to-slate-100/50 rounded-2xl p-10 border border-slate-200 shadow-lg shadow-slate-500/5\">\n        <h4 className=\"text-2xl font-bold text-slate-900 mb-8 flex items-center\">\n          <div className=\"w-10 h-10 bg-gradient-to-br from-purple-600 to-purple-700 rounded-xl flex items-center justify-center mr-4 shadow-lg shadow-purple-500/25\">"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 241,
            "endLine": 245,
            "content": "      {/* Next Steps */}\n      <div className=\"bg-gradient-to-br from-slate-50 to-slate-100/50 rounded-2xl p-10 border border-slate-200 shadow-lg shadow-slate-500/5\">\n        <h4 className=\"text-2xl font-bold text-slate-900 mb-8 flex items-center\">\n          <div className=\"w-10 h-10 bg-gradient-to-br from-purple-600 to-purple-700 rounded-xl flex items-center justify-center mr-4 shadow-lg shadow-purple-500/25\">\n            <span className=\"text-white font-bold\">→</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 250,
            "endLine": 254,
            "content": "          <div className=\"flex items-start space-x-6 p-6 bg-white rounded-2xl border border-purple-100 shadow-lg shadow-purple-500/5 hover:shadow-xl hover:shadow-purple-500/10 transition-all duration-300\">\n            <div className=\"w-12 h-12 bg-gradient-to-br from-purple-600 to-purple-700 rounded-2xl flex items-center justify-center flex-shrink-0 shadow-lg shadow-purple-500/25\">\n              <span className=\"text-white font-bold text-lg\">1</span>\n            </div>\n            <div>"
          },
          {
            "file": "src/components/ProcessingResults.tsx",
            "startLine": 259,
            "endLine": 263,
            "content": "          <div className=\"flex items-start space-x-6 p-6 bg-white rounded-2xl border border-purple-100 shadow-lg shadow-purple-500/5 hover:shadow-xl hover:shadow-purple-500/10 transition-all duration-300\">\n            <div className=\"w-12 h-12 bg-gradient-to-br from-purple-600 to-purple-700 rounded-2xl flex items-center justify-center flex-shrink-0 shadow-lg shadow-purple-500/25\">\n              <span className=\"text-white font-bold text-lg\">2</span>\n            </div>\n            <div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProgressBar.tsx",
            "startLine": 4,
            "endLine": 8,
            "content": "\ninterface ProgressBarProps {\n  progress: number;\n  className?: string;\n}"
          },
          {
            "file": "src/components/ProgressBar.tsx",
            "startLine": 5,
            "endLine": 9,
            "content": "interface ProgressBarProps {\n  progress: number;\n  className?: string;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/ProgressBar.tsx",
            "startLine": 9,
            "endLine": 13,
            "content": "\nexport function ProgressBar({ progress, className = '' }: ProgressBarProps) {\n  return (\n    <div className={`w-full bg-gray-200 rounded-full h-2 ${className}`}>\n      <div"
          },
          {
            "file": "src/components/ProgressBar.tsx",
            "startLine": 10,
            "endLine": 14,
            "content": "export function ProgressBar({ progress, className = '' }: ProgressBarProps) {\n  return (\n    <div className={`w-full bg-gray-200 rounded-full h-2 ${className}`}>\n      <div\n        className=\"bg-blue-600 h-2 rounded-full transition-all duration-300 ease-out\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/StorageIndicator.tsx",
            "startLine": 2,
            "endLine": 6,
            "content": "\nimport React, { useState, useEffect } from 'react';\nimport { useFinancialData } from '../context/FinancialDataContext';\n\nexport default function StorageIndicator() {"
          },
          {
            "file": "src/components/StorageIndicator.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import React, { useState, useEffect } from 'react';\nimport { useFinancialData } from '../context/FinancialDataContext';\n\nexport default function StorageIndicator() {\n  const { financialData } = useFinancialData();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/StorageIndicator.tsx",
            "startLine": 5,
            "endLine": 9,
            "content": "\nexport default function StorageIndicator() {\n  const { financialData } = useFinancialData();\n  const [showSaved, setShowSaved] = useState(false);\n  const [lastSaved, setLastSaved] = useState<string | null>(null);"
          },
          {
            "file": "src/components/StorageIndicator.tsx",
            "startLine": 6,
            "endLine": 10,
            "content": "export default function StorageIndicator() {\n  const { financialData } = useFinancialData();\n  const [showSaved, setShowSaved] = useState(false);\n  const [lastSaved, setLastSaved] = useState<string | null>(null);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/StorageIndicator.tsx",
            "startLine": 16,
            "endLine": 20,
            "content": "      \n      // Hide after 2 seconds\n      const timer = setTimeout(() => {\n        setShowSaved(false);\n      }, 2000);"
          },
          {
            "file": "src/components/StorageIndicator.tsx",
            "startLine": 17,
            "endLine": 21,
            "content": "      // Hide after 2 seconds\n      const timer = setTimeout(() => {\n        setShowSaved(false);\n      }, 2000);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/StorageIndicator.tsx",
            "startLine": 25,
            "endLine": 29,
            "content": "\n  // Don't show anything if no data\n  if (!financialData) {\n    return null;\n  }"
          },
          {
            "file": "src/components/StorageIndicator.tsx",
            "startLine": 26,
            "endLine": 30,
            "content": "  // Don't show anything if no data\n  if (!financialData) {\n    return null;\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/StorageIndicator.tsx",
            "startLine": 30,
            "endLine": 34,
            "content": "\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50\">\n      {showSaved && (\n        <div className=\"bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg flex items-center space-x-2 animate-fade-in\">"
          },
          {
            "file": "src/components/StorageIndicator.tsx",
            "startLine": 31,
            "endLine": 35,
            "content": "  return (\n    <div className=\"fixed bottom-4 right-4 z-50\">\n      {showSaved && (\n        <div className=\"bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg flex items-center space-x-2 animate-fade-in\">\n          <span className=\"text-sm\">💾</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/StorageIndicator.tsx",
            "startLine": 40,
            "endLine": 44,
            "content": "      \n      {/* Always show a subtle indicator when data exists */}\n      {!showSaved && financialData && (\n        <div className=\"bg-slate-100 text-slate-600 px-3 py-1 rounded-lg shadow-sm flex items-center space-x-1 opacity-75 hover:opacity-100 transition-opacity\">\n          <span className=\"text-xs\">💾</span>"
          },
          {
            "file": "src/components/StorageIndicator.tsx",
            "startLine": 41,
            "endLine": 45,
            "content": "      {/* Always show a subtle indicator when data exists */}\n      {!showSaved && financialData && (\n        <div className=\"bg-slate-100 text-slate-600 px-3 py-1 rounded-lg shadow-sm flex items-center space-x-1 opacity-75 hover:opacity-100 transition-opacity\">\n          <span className=\"text-xs\">💾</span>\n          <span className=\"text-xs\">Auto-save enabled</span>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 2,
            "endLine": 6,
            "content": "\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Transaction } from '../lib/types';\nimport { ChartOfAccounts } from '../lib/chartOfAccounts';\nimport { AIEngine } from '../lib/aiEngine';"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import React, { useState, useMemo, useEffect } from 'react';\nimport { Transaction } from '../lib/types';\nimport { ChartOfAccounts } from '../lib/chartOfAccounts';\nimport { AIEngine } from '../lib/aiEngine';\nimport BulkCategorySelector from './BulkCategorySelector';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 10,
            "endLine": 14,
            "content": "\ninterface Props {\n  transactions: Transaction[];\n  onTransactionUpdate: (id: string, updates: Partial<Transaction>) => void;\n  aiEngine?: AIEngine | null;"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 11,
            "endLine": 15,
            "content": "interface Props {\n  transactions: Transaction[];\n  onTransactionUpdate: (id: string, updates: Partial<Transaction>) => void;\n  aiEngine?: AIEngine | null;\n  province?: string;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 17,
            "endLine": 21,
            "content": "\ntype SortField = 'date' | 'description' | 'amount' | 'account' | 'confidence' | 'status' | 'feedback' | 'taxRate';\ntype SortDirection = 'asc' | 'desc';\n\n// Notification Popup Component"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 18,
            "endLine": 22,
            "content": "type SortField = 'date' | 'description' | 'amount' | 'account' | 'confidence' | 'status' | 'feedback' | 'taxRate';\ntype SortDirection = 'asc' | 'desc';\n\n// Notification Popup Component\nfunction NotificationToast({ message, onClose }: { message: string; onClose: () => void }) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 20,
            "endLine": 24,
            "content": "\n// Notification Popup Component\nfunction NotificationToast({ message, onClose }: { message: string; onClose: () => void }) {\n  const [visible, setVisible] = useState(true);\n  useEffect(() => {"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 21,
            "endLine": 25,
            "content": "// Notification Popup Component\nfunction NotificationToast({ message, onClose }: { message: string; onClose: () => void }) {\n  const [visible, setVisible] = useState(true);\n  useEffect(() => {\n    if (!visible) return;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 75,
            "endLine": 79,
            "content": "\nfunction TransactionTable({ transactions, onTransactionUpdate, aiEngine, province = 'ON' }: Props) {\n  const [filter, setFilter] = useState<'all' | 'needs-review' | 'high-confidence'>('all');\n  const [editingId, setEditingId] = useState<string | null>(null);\n  const [editingField, setEditingField] = useState<'account' | null>(null);"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 76,
            "endLine": 80,
            "content": "function TransactionTable({ transactions, onTransactionUpdate, aiEngine, province = 'ON' }: Props) {\n  const [filter, setFilter] = useState<'all' | 'needs-review' | 'high-confidence'>('all');\n  const [editingId, setEditingId] = useState<string | null>(null);\n  const [editingField, setEditingField] = useState<'account' | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 90,
            "endLine": 94,
            "content": "\n  // Use singleton Chart of Accounts instance\n  const chartOfAccounts = useMemo(() => ChartOfAccounts.getInstance(province), [province]);\n\n  // Sorting function"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 91,
            "endLine": 95,
            "content": "  // Use singleton Chart of Accounts instance\n  const chartOfAccounts = useMemo(() => ChartOfAccounts.getInstance(province), [province]);\n\n  // Sorting function\n  const handleSort = (field: SortField) => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 93,
            "endLine": 97,
            "content": "\n  // Sorting function\n  const handleSort = (field: SortField) => {\n    if (sortField === field) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 94,
            "endLine": 98,
            "content": "  // Sorting function\n  const handleSort = (field: SortField) => {\n    if (sortField === field) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 103,
            "endLine": 107,
            "content": "\n  // Sort arrow component\n  const SortArrow = ({ field }: { field: SortField }) => {\n    if (sortField !== field) {\n      return ("
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 104,
            "endLine": 108,
            "content": "  // Sort arrow component\n  const SortArrow = ({ field }: { field: SortField }) => {\n    if (sortField !== field) {\n      return (\n        <span className=\"inline-block w-3 h-3 ml-1 text-slate-300 hover:text-slate-400 transition-colors\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 121,
            "endLine": 125,
            "content": "\n  // Sortable header component\n  const SortableHeader = ({ field, children }: { field: SortField; children: React.ReactNode }) => (\n    <button\n      onClick={() => handleSort(field)}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 122,
            "endLine": 126,
            "content": "  // Sortable header component\n  const SortableHeader = ({ field, children }: { field: SortField; children: React.ReactNode }) => (\n    <button\n      onClick={() => handleSort(field)}\n      className=\"flex items-center text-xs font-semibold text-slate-500 uppercase tracking-wider hover:text-purple-600 transition-colors group\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 132,
            "endLine": 136,
            "content": "\n  // Chart of Accounts is always ready with hardcoded data\n  useEffect(() => {\n    console.log('✅ Chart of Accounts ready, accounts available:', chartOfAccounts.getAllAccounts().length);\n  }, [chartOfAccounts, province]);"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 133,
            "endLine": 137,
            "content": "  // Chart of Accounts is always ready with hardcoded data\n  useEffect(() => {\n    console.log('✅ Chart of Accounts ready, accounts available:', chartOfAccounts.getAllAccounts().length);\n  }, [chartOfAccounts, province]);\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 137,
            "endLine": 141,
            "content": "  \n  // Get available account codes (no longer using categories)\n  const accountCodes = useMemo(() => {\n    const availableAccounts = chartOfAccounts.getAllAccounts();\n    const codes = availableAccounts.map(account => account.code).sort();"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 138,
            "endLine": 142,
            "content": "  // Get available account codes (no longer using categories)\n  const accountCodes = useMemo(() => {\n    const availableAccounts = chartOfAccounts.getAllAccounts();\n    const codes = availableAccounts.map(account => account.code).sort();\n    return codes;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 144,
            "endLine": 148,
            "content": "\n  // Helper function to get account by code\n  const getAccountByCode = (code: string) => {\n    return chartOfAccounts.getAccount(code);\n  };"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 145,
            "endLine": 149,
            "content": "  // Helper function to get account by code\n  const getAccountByCode = (code: string) => {\n    return chartOfAccounts.getAccount(code);\n  };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 149,
            "endLine": 153,
            "content": "\n  const accounts = useMemo(() => {\n    const expenseAccounts = chartOfAccounts.getAccountsByType('Expense');\n    const revenueAccounts = chartOfAccounts.getAccountsByType('Revenue');\n    const assetAccounts = chartOfAccounts.getAccountsByType('Asset');"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 150,
            "endLine": 154,
            "content": "  const accounts = useMemo(() => {\n    const expenseAccounts = chartOfAccounts.getAccountsByType('Expense');\n    const revenueAccounts = chartOfAccounts.getAccountsByType('Revenue');\n    const assetAccounts = chartOfAccounts.getAccountsByType('Asset');\n    const combinedAccounts = expenseAccounts.concat(revenueAccounts).concat(assetAccounts).sort((a, b) => a.name.localeCompare(b.name));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 158,
            "endLine": 162,
            "content": "\n  // Helper function to get account name\n  const getAccountName = (accountCode: string | undefined): string => {\n    if (!accountCode) return 'Uncategorized';\n    const account = chartOfAccounts.getAccount(accountCode.trim());"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 159,
            "endLine": 163,
            "content": "  // Helper function to get account name\n  const getAccountName = (accountCode: string | undefined): string => {\n    if (!accountCode) return 'Uncategorized';\n    const account = chartOfAccounts.getAccount(accountCode.trim());\n    if (!account) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 171,
            "endLine": 175,
            "content": "\n  // Get tax rate based on province and transaction type\n  const getTaxRate = (transaction: Transaction): number | undefined => {\n    // If tax rate is already set, return it\n    if (transaction.taxRate !== undefined) {"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 172,
            "endLine": 176,
            "content": "  // Get tax rate based on province and transaction type\n  const getTaxRate = (transaction: Transaction): number | undefined => {\n    // If tax rate is already set, return it\n    if (transaction.taxRate !== undefined) {\n      return transaction.taxRate;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 178,
            "endLine": 182,
            "content": "\n    // Auto-assign tax rates based on province and transaction type\n    const provinceTaxRates: { [key: string]: number } = {\n      'ON': 13, // HST\n      'BC': 12, // HST"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 179,
            "endLine": 183,
            "content": "    // Auto-assign tax rates based on province and transaction type\n    const provinceTaxRates: { [key: string]: number } = {\n      'ON': 13, // HST\n      'BC': 12, // HST\n      'AB': 5,  // GST only"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 195,
            "endLine": 199,
            "content": "\n    const baseTaxRate = provinceTaxRates[province] || 0;\n\n    // Zero-rated or exempt categories\n    const zeroRatedCategories = ["
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 196,
            "endLine": 200,
            "content": "    const baseTaxRate = provinceTaxRates[province] || 0;\n\n    // Zero-rated or exempt categories\n    const zeroRatedCategories = [\n      'E-Transfer',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 232,
            "endLine": 236,
            "content": "\n    // Check if transaction should be zero-rated\n    if (zeroRatedCategories.includes(transaction.category || '')) {\n      return 0;\n    }"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 233,
            "endLine": 237,
            "content": "    // Check if transaction should be zero-rated\n    if (zeroRatedCategories.includes(transaction.category || '')) {\n      return 0;\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 237,
            "endLine": 241,
            "content": "\n    // For expenses, apply tax rate\n    if (transaction.amount < 0) {\n      return baseTaxRate;\n    }"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 238,
            "endLine": 242,
            "content": "    // For expenses, apply tax rate\n    if (transaction.amount < 0) {\n      return baseTaxRate;\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 246,
            "endLine": 250,
            "content": "\n  // Filter and sort transactions\n  const filteredTransactions = useMemo(() => {\n    let filtered = transactions;\n    "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 247,
            "endLine": 251,
            "content": "  // Filter and sort transactions\n  const filteredTransactions = useMemo(() => {\n    let filtered = transactions;\n    \n    // Apply confidence filter"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 250,
            "endLine": 254,
            "content": "    \n    // Apply confidence filter\n    if (filter === 'needs-review') {\n      filtered = filtered.filter(t => (t.confidence ?? 0) < 80 || !t.accountCode);\n    } else if (filter === 'high-confidence') {"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 251,
            "endLine": 255,
            "content": "    // Apply confidence filter\n    if (filter === 'needs-review') {\n      filtered = filtered.filter(t => (t.confidence ?? 0) < 80 || !t.accountCode);\n    } else if (filter === 'high-confidence') {\n      filtered = filtered.filter(t => (t.confidence ?? 0) >= 80 && t.accountCode);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 257,
            "endLine": 261,
            "content": "\n    // Apply search filter\n    if (searchTerm) {\n      filtered = filtered.filter(t => \n        t.description.toLowerCase().includes(searchTerm.toLowerCase()) ||"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 258,
            "endLine": 262,
            "content": "    // Apply search filter\n    if (searchTerm) {\n      filtered = filtered.filter(t => \n        t.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        // Category search removed - using account codes only"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 270,
            "endLine": 274,
            "content": "      \n      switch (sortField) {\n        case 'date':\n          aValue = new Date(a.date).getTime();\n          bValue = new Date(b.date).getTime();"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 271,
            "endLine": 275,
            "content": "      switch (sortField) {\n        case 'date':\n          aValue = new Date(a.date).getTime();\n          bValue = new Date(b.date).getTime();\n          break;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 308,
            "endLine": 312,
            "content": "      \n      if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\n      if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\n      return 0;\n    });"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 309,
            "endLine": 313,
            "content": "      if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\n      if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\n      return 0;\n    });\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 313,
            "endLine": 317,
            "content": "\n    return filtered;\n  }, [transactions, filter, searchTerm, sortField, sortDirection]);\n\n  // Smart selection functions"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 314,
            "endLine": 318,
            "content": "    return filtered;\n  }, [transactions, filter, searchTerm, sortField, sortDirection]);\n\n  // Smart selection functions\n  const handleSmartSelect = (criteria: string) => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 316,
            "endLine": 320,
            "content": "\n  // Smart selection functions\n  const handleSmartSelect = (criteria: string) => {\n    let transactionsToSelect: Transaction[] = [];\n    "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 317,
            "endLine": 321,
            "content": "  // Smart selection functions\n  const handleSmartSelect = (criteria: string) => {\n    let transactionsToSelect: Transaction[] = [];\n    \n    switch (criteria) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 320,
            "endLine": 324,
            "content": "    \n    switch (criteria) {\n      case 'uncategorized':\n        transactionsToSelect = filteredTransactions.filter(t => !t.accountCode);\n        break;"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 321,
            "endLine": 325,
            "content": "    switch (criteria) {\n      case 'uncategorized':\n        transactionsToSelect = filteredTransactions.filter(t => !t.accountCode);\n        break;\n      case 'low-confidence':"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 352,
            "endLine": 356,
            "content": "    \n    const newSelected = new Set(transactionsToSelect.map(t => t.id));\n    setSelectedTransactions(newSelected);\n    setShowBulkActions(newSelected.size > 0);\n    setShowSmartSelect(false);"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 353,
            "endLine": 357,
            "content": "    const newSelected = new Set(transactionsToSelect.map(t => t.id));\n    setSelectedTransactions(newSelected);\n    setShowBulkActions(newSelected.size > 0);\n    setShowSmartSelect(false);\n  };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 358,
            "endLine": 362,
            "content": "\n  const handleApplyToSimilar = (sourceTransaction: Transaction, updates: Partial<Transaction>) => {\n    // Find similar transactions based on description patterns\n    const similarTransactions = filteredTransactions.filter(t => {\n      if (t.id === sourceTransaction.id) return false;"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 359,
            "endLine": 363,
            "content": "  const handleApplyToSimilar = (sourceTransaction: Transaction, updates: Partial<Transaction>) => {\n    // Find similar transactions based on description patterns\n    const similarTransactions = filteredTransactions.filter(t => {\n      if (t.id === sourceTransaction.id) return false;\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 363,
            "endLine": 367,
            "content": "      \n      // Check for similar merchant/description patterns\n      const sourceDesc = sourceTransaction.description.toLowerCase();\n      const targetDesc = t.description.toLowerCase();\n      "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 364,
            "endLine": 368,
            "content": "      // Check for similar merchant/description patterns\n      const sourceDesc = sourceTransaction.description.toLowerCase();\n      const targetDesc = t.description.toLowerCase();\n      \n      // Simple similarity check - could be enhanced with fuzzy matching"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 365,
            "endLine": 369,
            "content": "      const sourceDesc = sourceTransaction.description.toLowerCase();\n      const targetDesc = t.description.toLowerCase();\n      \n      // Simple similarity check - could be enhanced with fuzzy matching\n      return ("
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 421,
            "endLine": 425,
            "content": "      const sourceDesc = sourceTransaction.description.toLowerCase();\n      const targetDesc = t.description.toLowerCase();\n      return (\n        (sourceTransaction.merchant && t.merchant && sourceTransaction.merchant === t.merchant) ||\n        (sourceDesc.split(' ')[0] && targetDesc.split(' ')[0] &&"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 367,
            "endLine": 371,
            "content": "      \n      // Simple similarity check - could be enhanced with fuzzy matching\n      return (\n        (sourceTransaction.merchant && t.merchant && sourceTransaction.merchant === t.merchant) ||\n        (sourceDesc.includes(targetDesc.split(' ')[0]) || targetDesc.includes(sourceDesc.split(' ')[0])) ||"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 368,
            "endLine": 372,
            "content": "      // Simple similarity check - could be enhanced with fuzzy matching\n      return (\n        (sourceTransaction.merchant && t.merchant && sourceTransaction.merchant === t.merchant) ||\n        (sourceDesc.includes(targetDesc.split(' ')[0]) || targetDesc.includes(sourceDesc.split(' ')[0])) ||\n        (Math.abs(t.amount - sourceTransaction.amount) < 0.01) // Same amount"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 369,
            "endLine": 373,
            "content": "      return (\n        (sourceTransaction.merchant && t.merchant && sourceTransaction.merchant === t.merchant) ||\n        (sourceDesc.includes(targetDesc.split(' ')[0]) || targetDesc.includes(sourceDesc.split(' ')[0])) ||\n        (Math.abs(t.amount - sourceTransaction.amount) < 0.01) // Same amount\n      );"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 423,
            "endLine": 427,
            "content": "      return (\n        (sourceTransaction.merchant && t.merchant && sourceTransaction.merchant === t.merchant) ||\n        (sourceDesc.split(' ')[0] && targetDesc.split(' ')[0] &&\n          (sourceDesc.includes(targetDesc.split(' ')[0]) || targetDesc.includes(sourceDesc.split(' ')[0]))) ||\n        (Math.abs(t.amount - sourceTransaction.amount) < 0.01)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 370,
            "endLine": 374,
            "content": "        (sourceTransaction.merchant && t.merchant && sourceTransaction.merchant === t.merchant) ||\n        (sourceDesc.includes(targetDesc.split(' ')[0]) || targetDesc.includes(sourceDesc.split(' ')[0])) ||\n        (Math.abs(t.amount - sourceTransaction.amount) < 0.01) // Same amount\n      );\n    });"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 424,
            "endLine": 428,
            "content": "        (sourceTransaction.merchant && t.merchant && sourceTransaction.merchant === t.merchant) ||\n        (sourceDesc.split(' ')[0] && targetDesc.split(' ')[0] &&\n          (sourceDesc.includes(targetDesc.split(' ')[0]) || targetDesc.includes(sourceDesc.split(' ')[0]))) ||\n        (Math.abs(t.amount - sourceTransaction.amount) < 0.01)\n      );"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 373,
            "endLine": 377,
            "content": "      );\n    });\n    \n    if (similarTransactions.length > 0) {\n      const shouldApply = confirm("
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 428,
            "endLine": 432,
            "content": "      );\n    });\n\n    if (similarTransactions.length > 0) {\n      const shouldApply = confirm("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 374,
            "endLine": 378,
            "content": "    });\n    \n    if (similarTransactions.length > 0) {\n      const shouldApply = confirm(\n        `Found ${similarTransactions.length} similar transactions. Apply the same categorization to all of them?`"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 429,
            "endLine": 433,
            "content": "    });\n\n    if (similarTransactions.length > 0) {\n      const shouldApply = confirm(\n        `Found ${similarTransactions.length} similar transactions. Apply the same account to all of them?`"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 375,
            "endLine": 379,
            "content": "    \n    if (similarTransactions.length > 0) {\n      const shouldApply = confirm(\n        `Found ${similarTransactions.length} similar transactions. Apply the same categorization to all of them?`\n      );"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 376,
            "endLine": 380,
            "content": "    if (similarTransactions.length > 0) {\n      const shouldApply = confirm(\n        `Found ${similarTransactions.length} similar transactions. Apply the same categorization to all of them?`\n      );\n      "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 430,
            "endLine": 434,
            "content": "\n    if (similarTransactions.length > 0) {\n      const shouldApply = confirm(\n        `Found ${similarTransactions.length} similar transactions. Apply the same account to all of them?`\n      );"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 431,
            "endLine": 435,
            "content": "    if (similarTransactions.length > 0) {\n      const shouldApply = confirm(\n        `Found ${similarTransactions.length} similar transactions. Apply the same account to all of them?`\n      );\n      if (shouldApply) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 377,
            "endLine": 381,
            "content": "      const shouldApply = confirm(\n        `Found ${similarTransactions.length} similar transactions. Apply the same categorization to all of them?`\n      );\n      \n      if (shouldApply) {"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 432,
            "endLine": 436,
            "content": "      const shouldApply = confirm(\n        `Found ${similarTransactions.length} similar transactions. Apply the same account to all of them?`\n      );\n      if (shouldApply) {\n        similarTransactions.forEach(t => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 380,
            "endLine": 384,
            "content": "      \n      if (shouldApply) {\n        // Apply updates to similar transactions\n        similarTransactions.forEach(t => {\n          onTransactionUpdate(t.id, updates);"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 381,
            "endLine": 385,
            "content": "      if (shouldApply) {\n        // Apply updates to similar transactions\n        similarTransactions.forEach(t => {\n          onTransactionUpdate(t.id, updates);\n        });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 386,
            "endLine": 390,
            "content": "\n        // Learn from this action for future uploads\n        if (aiEngine && updates.accountCode) {\n          const similarDescriptions = similarTransactions.map(t => t.description);\n          aiEngine.learnFromSimilarAction("
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 387,
            "endLine": 391,
            "content": "        // Learn from this action for future uploads\n        if (aiEngine && updates.accountCode) {\n          const similarDescriptions = similarTransactions.map(t => t.description);\n          aiEngine.learnFromSimilarAction(\n            sourceTransaction.description,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 389,
            "endLine": 393,
            "content": "          const similarDescriptions = similarTransactions.map(t => t.description);\n          aiEngine.learnFromSimilarAction(\n            sourceTransaction.description,\n            updates.accountCode,\n            similarDescriptions,"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 441,
            "endLine": 445,
            "content": "          const similarDescriptions = similarTransactions.map(t => t.description);\n          aiEngine.learnFromSimilarAction(\n            sourceTransaction.description,\n            accountCode,\n            similarDescriptions,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 397,
            "endLine": 401,
            "content": "\n        console.log(`🔄 Applied categorization to ${similarTransactions.length} similar transactions and learned for future uploads`);\n      }\n    }\n  };"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 398,
            "endLine": 402,
            "content": "        console.log(`🔄 Applied categorization to ${similarTransactions.length} similar transactions and learned for future uploads`);\n      }\n    }\n  };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 402,
            "endLine": 406,
            "content": "\n  // Category change function removed - using account codes only\n\n  const handleAccountChange = (id: string, accountCode: string) => {\n    onTransactionUpdate(id, { "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 403,
            "endLine": 407,
            "content": "  // Category change function removed - using account codes only\n\n  const handleAccountChange = (id: string, accountCode: string) => {\n    onTransactionUpdate(id, { \n      accountCode, "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 404,
            "endLine": 408,
            "content": "\n  const handleAccountChange = (id: string, accountCode: string) => {\n    onTransactionUpdate(id, { \n      accountCode, \n      isManuallyEdited: true,"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 405,
            "endLine": 409,
            "content": "  const handleAccountChange = (id: string, accountCode: string) => {\n    onTransactionUpdate(id, { \n      accountCode, \n      isManuallyEdited: true,\n      confidence: 95"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 413,
            "endLine": 417,
            "content": "\n    // Find the source transaction\n    const sourceTransaction = transactions.find(t => t.id === id);\n    if (!sourceTransaction) return;\n"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 414,
            "endLine": 418,
            "content": "    // Find the source transaction\n    const sourceTransaction = transactions.find(t => t.id === id);\n    if (!sourceTransaction) return;\n\n    // Find similar transactions (same merchant or similar description)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 417,
            "endLine": 421,
            "content": "\n    // Find similar transactions (same merchant or similar description)\n    const similarTransactions = transactions.filter(t => {\n      if (t.id === id) return false;\n      const sourceDesc = sourceTransaction.description.toLowerCase();"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 418,
            "endLine": 422,
            "content": "    // Find similar transactions (same merchant or similar description)\n    const similarTransactions = transactions.filter(t => {\n      if (t.id === id) return false;\n      const sourceDesc = sourceTransaction.description.toLowerCase();\n      const targetDesc = t.description.toLowerCase();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 452,
            "endLine": 456,
            "content": "\n  const invalidAccountCodeWarned: Record<string, boolean> = {};\n\n  const handleAICategorize = (id: string, accountCode: string, confidence: number) => {\n    // Defensive: Only allow valid account codes"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 453,
            "endLine": 457,
            "content": "  const invalidAccountCodeWarned: Record<string, boolean> = {};\n\n  const handleAICategorize = (id: string, accountCode: string, confidence: number) => {\n    // Defensive: Only allow valid account codes\n    const safeAccountCode = accountCodes.includes(accountCode) ? accountCode : undefined;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 454,
            "endLine": 458,
            "content": "\n  const handleAICategorize = (id: string, accountCode: string, confidence: number) => {\n    // Defensive: Only allow valid account codes\n    const safeAccountCode = accountCodes.includes(accountCode) ? accountCode : undefined;\n    if (!safeAccountCode) {"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 455,
            "endLine": 459,
            "content": "  const handleAICategorize = (id: string, accountCode: string, confidence: number) => {\n    // Defensive: Only allow valid account codes\n    const safeAccountCode = accountCodes.includes(accountCode) ? accountCode : undefined;\n    if (!safeAccountCode) {\n      setNotification(`AI suggested an invalid account code (${accountCode}). Please review.`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 469,
            "endLine": 473,
            "content": "\n  const handleApprove = (id: string) => {\n    const transaction = transactions.find(t => t.id === id);\n    if (!transaction) return;\n    if (!transaction.accountCode || !accountCodes.includes(transaction.accountCode)) {"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 470,
            "endLine": 474,
            "content": "  const handleApprove = (id: string) => {\n    const transaction = transactions.find(t => t.id === id);\n    if (!transaction) return;\n    if (!transaction.accountCode || !accountCodes.includes(transaction.accountCode)) {\n      setNotification('Cannot approve: Transaction does not have a valid account code.');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 479,
            "endLine": 483,
            "content": "\n  const handleFeedback = (id: string, isCorrect: boolean) => {\n    const transaction = transactions.find(t => t.id === id);\n    if (!transaction) return;\n"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 480,
            "endLine": 484,
            "content": "  const handleFeedback = (id: string, isCorrect: boolean) => {\n    const transaction = transactions.find(t => t.id === id);\n    if (!transaction) return;\n\n    console.log('🔄 Feedback received:', { "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 483,
            "endLine": 487,
            "content": "\n    console.log('🔄 Feedback received:', { \n      transactionId: id, \n      isCorrect, \n      accountCode: transaction.accountCode,"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 484,
            "endLine": 488,
            "content": "    console.log('🔄 Feedback received:', { \n      transactionId: id, \n      isCorrect, \n      accountCode: transaction.accountCode,\n      description: transaction.description,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 491,
            "endLine": 495,
            "content": "\n    const feedback = {\n      isCorrect,\n      timestamp: Date.now(),\n      correctedAccount: isCorrect ? undefined : transaction.accountCode"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 492,
            "endLine": 496,
            "content": "    const feedback = {\n      isCorrect,\n      timestamp: Date.now(),\n      correctedAccount: isCorrect ? undefined : transaction.accountCode\n    };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 497,
            "endLine": 501,
            "content": "\n    onTransactionUpdate(id, { feedback });\n\n    // Train AI engine if available (safe addition)\n    if (aiEngine && transaction.accountCode) {"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 498,
            "endLine": 502,
            "content": "    onTransactionUpdate(id, { feedback });\n\n    // Train AI engine if available (safe addition)\n    if (aiEngine && transaction.accountCode) {\n      if (isCorrect) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 499,
            "endLine": 503,
            "content": "\n    // Train AI engine if available (safe addition)\n    if (aiEngine && transaction.accountCode) {\n      if (isCorrect) {\n        console.log('✅ Training AI with correct account assignment:', {"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 500,
            "endLine": 504,
            "content": "    // Train AI engine if available (safe addition)\n    if (aiEngine && transaction.accountCode) {\n      if (isCorrect) {\n        console.log('✅ Training AI with correct account assignment:', {\n          description: transaction.originalDescription || transaction.description,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 520,
            "endLine": 524,
            "content": "\n    // If incorrect, allow user to make corrections\n    if (!isCorrect) {\n      setEditingId(id);\n                                  setEditingField('account');"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 521,
            "endLine": 525,
            "content": "    // If incorrect, allow user to make corrections\n    if (!isCorrect) {\n      setEditingId(id);\n                                  setEditingField('account');\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 531,
            "endLine": 535,
            "content": "\n  // Group transactions by account code\n  const groupedTransactions = useMemo(() => {\n    const groups: { [accountCode: string]: Transaction[] } = {};\n    "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 532,
            "endLine": 536,
            "content": "  // Group transactions by account code\n  const groupedTransactions = useMemo(() => {\n    const groups: { [accountCode: string]: Transaction[] } = {};\n    \n    filteredTransactions.forEach(transaction => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 535,
            "endLine": 539,
            "content": "    \n    filteredTransactions.forEach(transaction => {\n      const accountCode = transaction.accountCode || 'Uncategorized';\n      if (!groups[accountCode]) {\n        groups[accountCode] = [];"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 536,
            "endLine": 540,
            "content": "    filteredTransactions.forEach(transaction => {\n      const accountCode = transaction.accountCode || 'Uncategorized';\n      if (!groups[accountCode]) {\n        groups[accountCode] = [];\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 546,
            "endLine": 550,
            "content": "\n  // Toggle group expansion\n  const toggleGroup = (accountCode: string) => {\n    const newExpanded = new Set(expandedGroups);\n    if (newExpanded.has(accountCode)) {"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 547,
            "endLine": 551,
            "content": "  // Toggle group expansion\n  const toggleGroup = (accountCode: string) => {\n    const newExpanded = new Set(expandedGroups);\n    if (newExpanded.has(accountCode)) {\n      newExpanded.delete(accountCode);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 557,
            "endLine": 561,
            "content": "\n  const handleSelectTransaction = (id: string, checked: boolean) => {\n    const newSelected = new Set(selectedTransactions);\n    if (checked) {\n      newSelected.add(id);"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 558,
            "endLine": 562,
            "content": "  const handleSelectTransaction = (id: string, checked: boolean) => {\n    const newSelected = new Set(selectedTransactions);\n    if (checked) {\n      newSelected.add(id);\n    } else {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 568,
            "endLine": 572,
            "content": "\n  const handleSelectAll = (checked: boolean) => {\n    if (checked) {\n      setSelectedTransactions(new Set(filteredTransactions.map(t => t.id)));\n      setShowBulkActions(true);"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 569,
            "endLine": 573,
            "content": "  const handleSelectAll = (checked: boolean) => {\n    if (checked) {\n      setSelectedTransactions(new Set(filteredTransactions.map(t => t.id)));\n      setShowBulkActions(true);\n    } else {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 578,
            "endLine": 582,
            "content": "\n  const handleBulkApprove = () => {\n    selectedTransactions.forEach(id => {\n      onTransactionUpdate(id, { isApproved: true });\n    });"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 579,
            "endLine": 583,
            "content": "  const handleBulkApprove = () => {\n    selectedTransactions.forEach(id => {\n      onTransactionUpdate(id, { isApproved: true });\n    });\n    setSelectedTransactions(new Set());"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 586,
            "endLine": 590,
            "content": "\n  const handleBulkUpdate = (updates: { id: string; accountCode: string }[]) => {\n    updates.forEach(({ id, accountCode }) => {\n      onTransactionUpdate(id, {\n        accountCode,"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 587,
            "endLine": 591,
            "content": "  const handleBulkUpdate = (updates: { id: string; accountCode: string }[]) => {\n    updates.forEach(({ id, accountCode }) => {\n      onTransactionUpdate(id, {\n        accountCode,\n        confidence: 95,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 597,
            "endLine": 601,
            "content": "\n  const handleAutoApproveHighConfidence = () => {\n    const highConfidenceTransactions = filteredTransactions.filter(t => \n      (t.confidence ?? 0) >= 90 && t.accountCode && !t.isApproved\n    );"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 598,
            "endLine": 602,
            "content": "  const handleAutoApproveHighConfidence = () => {\n    const highConfidenceTransactions = filteredTransactions.filter(t => \n      (t.confidence ?? 0) >= 90 && t.accountCode && !t.isApproved\n    );\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 602,
            "endLine": 606,
            "content": "    \n    highConfidenceTransactions.forEach(t => {\n      onTransactionUpdate(t.id, { isApproved: true });\n    });\n  };"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 603,
            "endLine": 607,
            "content": "    highConfidenceTransactions.forEach(t => {\n      onTransactionUpdate(t.id, { isApproved: true });\n    });\n  };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 607,
            "endLine": 611,
            "content": "\n  const getConfidenceDisplay = (confidence: number) => {\n    if (confidence >= 90) return { label: 'High', color: 'text-slate-700' };\n    if (confidence >= 70) return { label: 'Medium', color: 'text-slate-500' };\n    return { label: 'Low', color: 'text-slate-400' };"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 608,
            "endLine": 612,
            "content": "  const getConfidenceDisplay = (confidence: number) => {\n    if (confidence >= 90) return { label: 'High', color: 'text-slate-700' };\n    if (confidence >= 70) return { label: 'Medium', color: 'text-slate-500' };\n    return { label: 'Low', color: 'text-slate-400' };\n  };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 613,
            "endLine": 617,
            "content": "\n  const stats = useMemo(() => {\n    const total = transactions.length;\n    const needsReview = transactions.filter(t => (t.confidence ?? 0) < 80 || !t.accountCode).length;\n    const highConfidence = transactions.filter(t => (t.confidence ?? 0) >= 80 && t.accountCode).length;"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 614,
            "endLine": 618,
            "content": "  const stats = useMemo(() => {\n    const total = transactions.length;\n    const needsReview = transactions.filter(t => (t.confidence ?? 0) < 80 || !t.accountCode).length;\n    const highConfidence = transactions.filter(t => (t.confidence ?? 0) >= 80 && t.accountCode).length;\n    const approved = transactions.filter(t => t.isApproved).length;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 620,
            "endLine": 624,
            "content": "    \n    // Calculate inflow vs outflow\n    const inflow = transactions.filter(t => t.amount > 0).reduce((sum, t) => sum + t.amount, 0);\n    const outflow = transactions.filter(t => t.amount < 0).reduce((sum, t) => sum + Math.abs(t.amount), 0);\n    "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 621,
            "endLine": 625,
            "content": "    // Calculate inflow vs outflow\n    const inflow = transactions.filter(t => t.amount > 0).reduce((sum, t) => sum + t.amount, 0);\n    const outflow = transactions.filter(t => t.amount < 0).reduce((sum, t) => sum + Math.abs(t.amount), 0);\n    \n    return { total, needsReview, highConfidence, approved, readyToApprove, inflow, outflow };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 624,
            "endLine": 628,
            "content": "    \n    return { total, needsReview, highConfidence, approved, readyToApprove, inflow, outflow };\n  }, [transactions]);\n\n  // Auto-assignment logic removed - using account codes only"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 625,
            "endLine": 629,
            "content": "    return { total, needsReview, highConfidence, approved, readyToApprove, inflow, outflow };\n  }, [transactions]);\n\n  // Auto-assignment logic removed - using account codes only\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 627,
            "endLine": 631,
            "content": "\n  // Auto-assignment logic removed - using account codes only\n\n  // Auto-trigger AI categorization for low confidence transactions\n  useEffect(() => {"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 628,
            "endLine": 632,
            "content": "  // Auto-assignment logic removed - using account codes only\n\n  // Auto-trigger AI categorization for low confidence transactions\n  useEffect(() => {\n    if (!aiEngine || !chartOfAccounts) return;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 629,
            "endLine": 633,
            "content": "\n  // Auto-trigger AI categorization for low confidence transactions\n  useEffect(() => {\n    if (!aiEngine || !chartOfAccounts) return;\n    "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 630,
            "endLine": 634,
            "content": "  // Auto-trigger AI categorization for low confidence transactions\n  useEffect(() => {\n    if (!aiEngine || !chartOfAccounts) return;\n    \n    const lowConfidenceTransactions = transactions.filter(t => "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 633,
            "endLine": 637,
            "content": "    \n    const lowConfidenceTransactions = transactions.filter(t => \n      (t.confidence ?? 0) < 50 && !t.accountCode && !t.isApproved\n    );\n    "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 634,
            "endLine": 638,
            "content": "    const lowConfidenceTransactions = transactions.filter(t => \n      (t.confidence ?? 0) < 50 && !t.accountCode && !t.isApproved\n    );\n    \n    if (lowConfidenceTransactions.length > 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 637,
            "endLine": 641,
            "content": "    \n    if (lowConfidenceTransactions.length > 0) {\n      console.log(`🤖 Auto-triggering AI categorization for ${lowConfidenceTransactions.length} low confidence transactions`);\n      \n      // Process them in batches to avoid overwhelming the API"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 638,
            "endLine": 642,
            "content": "    if (lowConfidenceTransactions.length > 0) {\n      console.log(`🤖 Auto-triggering AI categorization for ${lowConfidenceTransactions.length} low confidence transactions`);\n      \n      // Process them in batches to avoid overwhelming the API\n      const processBatch = async (batch: Transaction[]) => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 640,
            "endLine": 644,
            "content": "      \n      // Process them in batches to avoid overwhelming the API\n      const processBatch = async (batch: Transaction[]) => {\n        for (const transaction of batch) {\n          try {"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 641,
            "endLine": 645,
            "content": "      // Process them in batches to avoid overwhelming the API\n      const processBatch = async (batch: Transaction[]) => {\n        for (const transaction of batch) {\n          try {\n            const result = aiEngine.categorizeTransaction(transaction);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 656,
            "endLine": 660,
            "content": "      \n      // Process in batches of 5\n      const batchSize = 5;\n      for (let i = 0; i < lowConfidenceTransactions.length; i += batchSize) {\n        const batch = lowConfidenceTransactions.slice(i, i + batchSize);"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 657,
            "endLine": 661,
            "content": "      // Process in batches of 5\n      const batchSize = 5;\n      for (let i = 0; i < lowConfidenceTransactions.length; i += batchSize) {\n        const batch = lowConfidenceTransactions.slice(i, i + batchSize);\n        processBatch(batch);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 665,
            "endLine": 669,
            "content": "\n  // Defensive: Ensure all transactions have valid account codes\n  useEffect(() => {\n    if (!Array.isArray(transactions) || !accountCodes) return;\n    let foundInvalid = false;"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 666,
            "endLine": 670,
            "content": "  // Defensive: Ensure all transactions have valid account codes\n  useEffect(() => {\n    if (!Array.isArray(transactions) || !accountCodes) return;\n    let foundInvalid = false;\n    transactions.forEach((txn) => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 682,
            "endLine": 686,
            "content": "\n  // Component mounted successfully\n\n  useEffect(() => {\n    console.log(\"[DEBUG] TransactionTable updated\", filteredTransactions.length);"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 683,
            "endLine": 687,
            "content": "  // Component mounted successfully\n\n  useEffect(() => {\n    console.log(\"[DEBUG] TransactionTable updated\", filteredTransactions.length);\n  }, [filteredTransactions]);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 684,
            "endLine": 688,
            "content": "\n  useEffect(() => {\n    console.log(\"[DEBUG] TransactionTable updated\", filteredTransactions.length);\n  }, [filteredTransactions]);\n"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 685,
            "endLine": 689,
            "content": "  useEffect(() => {\n    console.log(\"[DEBUG] TransactionTable updated\", filteredTransactions.length);\n  }, [filteredTransactions]);\n\n  if (!chartOfAccounts) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 688,
            "endLine": 692,
            "content": "\n  if (!chartOfAccounts) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[200px] text-lg text-purple-600 font-semibold\">\n        Loading chart of accounts..."
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 689,
            "endLine": 693,
            "content": "  if (!chartOfAccounts) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[200px] text-lg text-purple-600 font-semibold\">\n        Loading chart of accounts...\n      </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 696,
            "endLine": 700,
            "content": "\n  if (filteredTransactions.length === 0) {\n    return (\n      <div className=\"p-8 text-center text-lg text-red-500 bg-red-50 border border-red-200 rounded-lg\">\n        [DEBUG] No transactions to display. Table not rendered."
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 697,
            "endLine": 701,
            "content": "  if (filteredTransactions.length === 0) {\n    return (\n      <div className=\"p-8 text-center text-lg text-red-500 bg-red-50 border border-red-200 rounded-lg\">\n        [DEBUG] No transactions to display. Table not rendered.\n      </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 704,
            "endLine": 708,
            "content": "\n  return (\n    <div className=\"w-full max-w-none space-y-6\">\n      {/* Notification Toast */}\n      {notification && ("
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 705,
            "endLine": 709,
            "content": "  return (\n    <div className=\"w-full max-w-none space-y-6\">\n      {/* Notification Toast */}\n      {notification && (\n        <NotificationToast message={notification} onClose={() => setNotification(null)} />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 750,
            "endLine": 754,
            "content": "\n        {/* Filters */}\n        <div className=\"flex items-center space-x-6 mb-6\">\n          <div className=\"flex space-x-3\">\n            {["
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 751,
            "endLine": 755,
            "content": "        {/* Filters */}\n        <div className=\"flex items-center space-x-6 mb-6\">\n          <div className=\"flex space-x-3\">\n            {[\n              { key: 'all', label: 'All Transactions' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 783,
            "endLine": 787,
            "content": "\n        {/* Smart Selection */}\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <button"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 784,
            "endLine": 788,
            "content": "        {/* Smart Selection */}\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={() => setShowSmartSelect(!showSmartSelect)}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 785,
            "endLine": 789,
            "content": "        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={() => setShowSmartSelect(!showSmartSelect)}\n              className=\"px-4 py-2 bg-white text-slate-600 rounded-lg text-sm font-medium hover:bg-purple-50 hover:text-purple-600 hover:border-purple-200 transition-all duration-300 border border-slate-200\""
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 827,
            "endLine": 831,
            "content": "            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                <AppIcons.actions.ai className=\"w-5 h-5\" />\n                <div>\n                  <span className=\"text-sm font-medium text-slate-900\">"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 931,
            "endLine": 935,
            "content": "      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <span className=\"text-sm font-medium text-slate-700\">View:</span>\n          <div className=\"flex items-center bg-slate-100 rounded-lg p-1\">\n            <button"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 823,
            "endLine": 827,
            "content": "\n        {/* Bulk Actions */}\n      {showBulkActions && (\n          <div className=\"bg-white rounded-xl p-6 mb-6 border-l-4 border-purple-500 shadow-lg shadow-purple-500/10\">\n            <div className=\"flex items-center justify-between mb-4\">"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 824,
            "endLine": 828,
            "content": "        {/* Bulk Actions */}\n      {showBulkActions && (\n          <div className=\"bg-white rounded-xl p-6 mb-6 border-l-4 border-purple-500 shadow-lg shadow-purple-500/10\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 849,
            "endLine": 853,
            "content": "            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {/* Quick Category Actions */}\n              <div>\n                <label className=\"block text-xs font-semibold text-slate-500 uppercase tracking-wider mb-2\">"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 850,
            "endLine": 854,
            "content": "            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {/* Quick Category Actions */}\n              <div>\n                <label className=\"block text-xs font-semibold text-slate-500 uppercase tracking-wider mb-2\">\n                  Quick Categories"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 861,
            "endLine": 865,
            "content": "                    }}\n                    className=\"w-full px-3 py-2 bg-slate-50 rounded-lg text-sm border border-slate-200 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-300\"\n                    defaultValue=\"\"\n                  >\n                    <option value=\"\">Select account...</option>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 912,
            "endLine": 916,
            "content": "                    }}\n                    className=\"w-full px-3 py-2 bg-slate-50 rounded-lg text-sm border border-slate-200 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-300\"\n                    defaultValue=\"\"\n                  >\n                    <option value=\"\">Bulk Account Assignment...</option>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 862,
            "endLine": 866,
            "content": "                    className=\"w-full px-3 py-2 bg-slate-50 rounded-lg text-sm border border-slate-200 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-300\"\n                    defaultValue=\"\"\n                  >\n                    <option value=\"\">Select account...</option>\n                    {accounts.map(account => ("
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 913,
            "endLine": 917,
            "content": "                    className=\"w-full px-3 py-2 bg-slate-50 rounded-lg text-sm border border-slate-200 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-300\"\n                    defaultValue=\"\"\n                  >\n                    <option value=\"\">Bulk Account Assignment...</option>\n                    {accounts.map(account => ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 864,
            "endLine": 868,
            "content": "                  >\n                    <option value=\"\">Select account...</option>\n                    {accounts.map(account => (\n                      <option key={account.code} value={`${account.code}|${account.name}`}>\n                        {account.code} - {account.name}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1100,
            "endLine": 1104,
            "content": "    >\n      <option value=\"\">Select account...</option>\n      {accounts.map(account => (\n        <option key={account.code} value={account.code}>\n          {account.code} - {account.name}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 865,
            "endLine": 869,
            "content": "                    <option value=\"\">Select account...</option>\n                    {accounts.map(account => (\n                      <option key={account.code} value={`${account.code}|${account.name}`}>\n                        {account.code} - {account.name}\n                      </option>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1101,
            "endLine": 1105,
            "content": "      <option value=\"\">Select account...</option>\n      {accounts.map(account => (\n        <option key={account.code} value={account.code}>\n          {account.code} - {account.name}\n        </option>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 866,
            "endLine": 870,
            "content": "                    {accounts.map(account => (\n                      <option key={account.code} value={`${account.code}|${account.name}`}>\n                        {account.code} - {account.name}\n                      </option>\n                    ))}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 917,
            "endLine": 921,
            "content": "                    {accounts.map(account => (\n                      <option key={account.code} value={`${account.code}|${account.name}`}>\n                        {account.code} - {account.name}\n                      </option>\n                    ))}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 867,
            "endLine": 871,
            "content": "                      <option key={account.code} value={`${account.code}|${account.name}`}>\n                        {account.code} - {account.name}\n                      </option>\n                    ))}\n                  </select>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 918,
            "endLine": 922,
            "content": "                      <option key={account.code} value={`${account.code}|${account.name}`}>\n                        {account.code} - {account.name}\n                      </option>\n                    ))}\n                  </select>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 868,
            "endLine": 872,
            "content": "                        {account.code} - {account.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 919,
            "endLine": 923,
            "content": "                        {account.code} - {account.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 874,
            "endLine": 878,
            "content": "\n              {/* Bulk Actions */}\n              <div>\n                <label className=\"block text-xs font-semibold text-slate-500 uppercase tracking-wider mb-2\">\n                  Actions"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 875,
            "endLine": 879,
            "content": "              {/* Bulk Actions */}\n              <div>\n                <label className=\"block text-xs font-semibold text-slate-500 uppercase tracking-wider mb-2\">\n                  Actions\n                </label>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 929,
            "endLine": 933,
            "content": "\n      {/* View Toggle */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <span className=\"text-sm font-medium text-slate-700\">View:</span>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 930,
            "endLine": 934,
            "content": "      {/* View Toggle */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <span className=\"text-sm font-medium text-slate-700\">View:</span>\n          <div className=\"flex items-center bg-slate-100 rounded-lg p-1\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 937,
            "endLine": 941,
            "content": "              className={`px-3 py-1.5 text-sm font-medium rounded-md transition-all duration-200 ${\n                viewMode === 'table'\n                  ? 'bg-white text-purple-600 shadow-sm'\n                  : 'text-slate-600 hover:text-slate-900'\n              }`}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 948,
            "endLine": 952,
            "content": "              className={`px-3 py-1.5 text-sm font-medium rounded-md transition-all duration-200 ${\n                viewMode === 'grouped'\n                  ? 'bg-white text-purple-600 shadow-sm'\n                  : 'text-slate-600 hover:text-slate-900'\n              }`}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 976,
            "endLine": 980,
            "content": "\n      {/* Transaction Table */}\n      <div className=\"bg-white rounded-2xl overflow-hidden border border-slate-100 shadow-sm\">\n        {viewMode === 'table' ? (\n          <div className=\"overflow-x-auto min-w-full\">"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 977,
            "endLine": 981,
            "content": "      {/* Transaction Table */}\n      <div className=\"bg-white rounded-2xl overflow-hidden border border-slate-100 shadow-sm\">\n        {viewMode === 'table' ? (\n          <div className=\"overflow-x-auto min-w-full\">\n          <table className=\"w-full min-w-[1400px] divide-y divide-slate-100\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 989,
            "endLine": 993,
            "content": "                    className=\"w-4 h-4 rounded border-slate-300 text-slate-600 focus:ring-slate-500 focus:ring-offset-0\"\n                  />\n                </th>\n                <th className=\"w-24 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"date\">Date</SortableHeader>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1065,
            "endLine": 1069,
            "content": "                          className=\"w-4 h-4 rounded border-slate-300 text-slate-600 focus:ring-slate-500 focus:ring-offset-0\"\n                        />\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-slate-500 font-mono\">\n                        {new Date(transaction.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 991,
            "endLine": 995,
            "content": "                </th>\n                <th className=\"w-24 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"date\">Date</SortableHeader>\n                </th>\n                <th className=\"w-80 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1012,
            "endLine": 1016,
            "content": "                </th>\n                <th className=\"w-24 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"taxRate\">Tax</SortableHeader>\n                </th>\n                <th className=\"w-28 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 992,
            "endLine": 996,
            "content": "                <th className=\"w-24 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"date\">Date</SortableHeader>\n                </th>\n                <th className=\"w-80 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"description\">Description</SortableHeader>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1013,
            "endLine": 1017,
            "content": "                <th className=\"w-24 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"taxRate\">Tax</SortableHeader>\n                </th>\n                <th className=\"w-28 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"confidence\">AI Score</SortableHeader>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 997,
            "endLine": 1001,
            "content": "                </th>\n                <th className=\"w-32 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"amount\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span>Amount</span>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1018,
            "endLine": 1022,
            "content": "                </th>\n                <th className=\"w-32 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"status\">Status</SortableHeader>\n                </th>\n                <th className=\"w-32 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1021,
            "endLine": 1025,
            "content": "                </th>\n                <th className=\"w-32 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"feedback\">Feedback</SortableHeader>\n                </th>\n              </tr>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 998,
            "endLine": 1002,
            "content": "                <th className=\"w-32 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"amount\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span>Amount</span>\n                      <div className=\"flex items-center space-x-1\">"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1019,
            "endLine": 1023,
            "content": "                <th className=\"w-32 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"status\">Status</SortableHeader>\n                </th>\n                <th className=\"w-32 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"feedback\">Feedback</SortableHeader>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1022,
            "endLine": 1026,
            "content": "                <th className=\"w-32 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"feedback\">Feedback</SortableHeader>\n                </th>\n              </tr>\n            </thead>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1009,
            "endLine": 1013,
            "content": "                \n                <th className=\"w-64 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"account\">Account</SortableHeader>\n                </th>\n                <th className=\"w-24 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1010,
            "endLine": 1014,
            "content": "                <th className=\"w-64 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"account\">Account</SortableHeader>\n                </th>\n                <th className=\"w-24 px-6 py-5 text-left text-xs font-medium text-slate-600 tracking-wide\">\n                  <SortableHeader field=\"taxRate\">Tax</SortableHeader>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1050,
            "endLine": 1054,
            "content": "                      const isETransfer = transaction.description.toLowerCase().includes('e-transfer') || \n                                        transaction.description.toLowerCase().includes('e-tfr');\n                      const isBillPayment = transaction.description.toLowerCase().includes('bill payment') ||\n                                          transaction.description.toLowerCase().includes('bill pay');\n                      "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1330,
            "endLine": 1334,
            "content": "                                const isETransfer = transaction.description.toLowerCase().includes('e-transfer') || \n                                                  transaction.description.toLowerCase().includes('e-tfr');\n                                const isBillPayment = transaction.description.toLowerCase().includes('bill payment') ||\n                                                    transaction.description.toLowerCase().includes('bill pay');\n                                "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1051,
            "endLine": 1055,
            "content": "                                        transaction.description.toLowerCase().includes('e-tfr');\n                      const isBillPayment = transaction.description.toLowerCase().includes('bill payment') ||\n                                          transaction.description.toLowerCase().includes('bill pay');\n                      \n                      const rowClass = isBillPayment ? 'bg-green-50/40' : "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1331,
            "endLine": 1335,
            "content": "                                                  transaction.description.toLowerCase().includes('e-tfr');\n                                const isBillPayment = transaction.description.toLowerCase().includes('bill payment') ||\n                                                    transaction.description.toLowerCase().includes('bill pay');\n                                \n                                return ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1052,
            "endLine": 1056,
            "content": "                      const isBillPayment = transaction.description.toLowerCase().includes('bill payment') ||\n                                          transaction.description.toLowerCase().includes('bill pay');\n                      \n                      const rowClass = isBillPayment ? 'bg-green-50/40' : \n                                      'hover:bg-slate-50/50';"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1332,
            "endLine": 1336,
            "content": "                                const isBillPayment = transaction.description.toLowerCase().includes('bill payment') ||\n                                                    transaction.description.toLowerCase().includes('bill pay');\n                                \n                                return (\n                                  <div "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1057,
            "endLine": 1061,
            "content": "                      \n                      return (\n                        <tr key={transaction.id} className={`${rowClass} border-b border-slate-50 transition-all duration-200 hover:bg-slate-25`}>\n                      <td className=\"px-6 py-4\">\n                        <input"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1058,
            "endLine": 1062,
            "content": "                      return (\n                        <tr key={transaction.id} className={`${rowClass} border-b border-slate-50 transition-all duration-200 hover:bg-slate-25`}>\n                      <td className=\"px-6 py-4\">\n                        <input\n                          type=\"checkbox\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1061,
            "endLine": 1065,
            "content": "                        <input\n                          type=\"checkbox\"\n                          checked={selectedTransactions.has(transaction.id)}\n                          onChange={(e) => handleSelectTransaction(transaction.id, e.target.checked)}\n                          className=\"w-4 h-4 rounded border-slate-300 text-slate-600 focus:ring-slate-500 focus:ring-offset-0\""
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1341,
            "endLine": 1345,
            "content": "                                      <input\n                                        type=\"checkbox\"\n                                        checked={selectedTransactions.has(transaction.id)}\n                                        onChange={(e) => handleSelectTransaction(transaction.id, e.target.checked)}\n                                        className=\"rounded text-purple-600 focus:ring-purple-500 border-slate-300\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1062,
            "endLine": 1066,
            "content": "                          type=\"checkbox\"\n                          checked={selectedTransactions.has(transaction.id)}\n                          onChange={(e) => handleSelectTransaction(transaction.id, e.target.checked)}\n                          className=\"w-4 h-4 rounded border-slate-300 text-slate-600 focus:ring-slate-500 focus:ring-offset-0\"\n                        />"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1342,
            "endLine": 1346,
            "content": "                                        type=\"checkbox\"\n                                        checked={selectedTransactions.has(transaction.id)}\n                                        onChange={(e) => handleSelectTransaction(transaction.id, e.target.checked)}\n                                        className=\"rounded text-purple-600 focus:ring-purple-500 border-slate-300\"\n                                      />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1063,
            "endLine": 1067,
            "content": "                          checked={selectedTransactions.has(transaction.id)}\n                          onChange={(e) => handleSelectTransaction(transaction.id, e.target.checked)}\n                          className=\"w-4 h-4 rounded border-slate-300 text-slate-600 focus:ring-slate-500 focus:ring-offset-0\"\n                        />\n                      </td>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1343,
            "endLine": 1347,
            "content": "                                        checked={selectedTransactions.has(transaction.id)}\n                                        onChange={(e) => handleSelectTransaction(transaction.id, e.target.checked)}\n                                        className=\"rounded text-purple-600 focus:ring-purple-500 border-slate-300\"\n                                      />\n                                      <div className=\"flex-1\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1102,
            "endLine": 1106,
            "content": "      {accounts.map(account => (\n        <option key={account.code} value={account.code}>\n          {account.code} - {account.name}\n        </option>\n      ))}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1377,
            "endLine": 1381,
            "content": "                                            {accounts.map(account => (\n                                              <option key={account.code} value={account.code}>\n                                                {account.code} - {account.name}\n                                              </option>\n                                            ))}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1169,
            "endLine": 1173,
            "content": "                          {/* AI Categorization Button */}\n                          {!transaction.isApproved && (\n                            <AICategorizationButton\n                              transaction={transaction}\n                              onCategorize={(accountCode, confidence) => handleAICategorize(transaction.id, accountCode, confidence)}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1436,
            "endLine": 1440,
            "content": "                                      \n                                      {/* AI Categorization Button */}\n                                      {!transaction.isApproved && (\n                                        <AICategorizationButton\n                                          transaction={transaction}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1437,
            "endLine": 1441,
            "content": "                                      {/* AI Categorization Button */}\n                                      {!transaction.isApproved && (\n                                        <AICategorizationButton\n                                          transaction={transaction}\n                                          onCategorize={(accountCode, confidence) => handleAICategorize(transaction.id, accountCode, confidence)}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1170,
            "endLine": 1174,
            "content": "                          {!transaction.isApproved && (\n                            <AICategorizationButton\n                              transaction={transaction}\n                              onCategorize={(accountCode, confidence) => handleAICategorize(transaction.id, accountCode, confidence)}\n                              province={province}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1438,
            "endLine": 1442,
            "content": "                                      {!transaction.isApproved && (\n                                        <AICategorizationButton\n                                          transaction={transaction}\n                                          onCategorize={(accountCode, confidence) => handleAICategorize(transaction.id, accountCode, confidence)}\n                                          province={province}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1171,
            "endLine": 1175,
            "content": "                            <AICategorizationButton\n                              transaction={transaction}\n                              onCategorize={(accountCode, confidence) => handleAICategorize(transaction.id, accountCode, confidence)}\n                              province={province}\n                              onKeywordAdded={(keyword, accountCode) => {"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1439,
            "endLine": 1443,
            "content": "                                        <AICategorizationButton\n                                          transaction={transaction}\n                                          onCategorize={(accountCode, confidence) => handleAICategorize(transaction.id, accountCode, confidence)}\n                                          province={province}\n                                          onKeywordAdded={(keyword, accountCode) => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1172,
            "endLine": 1176,
            "content": "                              transaction={transaction}\n                              onCategorize={(accountCode, confidence) => handleAICategorize(transaction.id, accountCode, confidence)}\n                              province={province}\n                              onKeywordAdded={(keyword, accountCode) => {\n                                setNotification(`Added keyword \"${keyword}\" for account ${accountCode}`);"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1440,
            "endLine": 1444,
            "content": "                                          transaction={transaction}\n                                          onCategorize={(accountCode, confidence) => handleAICategorize(transaction.id, accountCode, confidence)}\n                                          province={province}\n                                          onKeywordAdded={(keyword, accountCode) => {\n                                            setNotification(`Added keyword \"${keyword}\" for account ${accountCode}`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1173,
            "endLine": 1177,
            "content": "                              onCategorize={(accountCode, confidence) => handleAICategorize(transaction.id, accountCode, confidence)}\n                              province={province}\n                              onKeywordAdded={(keyword, accountCode) => {\n                                setNotification(`Added keyword \"${keyword}\" for account ${accountCode}`);\n                              }}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1441,
            "endLine": 1445,
            "content": "                                          onCategorize={(accountCode, confidence) => handleAICategorize(transaction.id, accountCode, confidence)}\n                                          province={province}\n                                          onKeywordAdded={(keyword, accountCode) => {\n                                            setNotification(`Added keyword \"${keyword}\" for account ${accountCode}`);\n                                          }}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1174,
            "endLine": 1178,
            "content": "                              province={province}\n                              onKeywordAdded={(keyword, accountCode) => {\n                                setNotification(`Added keyword \"${keyword}\" for account ${accountCode}`);\n                              }}\n                            />"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1442,
            "endLine": 1446,
            "content": "                                          province={province}\n                                          onKeywordAdded={(keyword, accountCode) => {\n                                            setNotification(`Added keyword \"${keyword}\" for account ${accountCode}`);\n                                          }}\n                                        />"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1175,
            "endLine": 1179,
            "content": "                              onKeywordAdded={(keyword, accountCode) => {\n                                setNotification(`Added keyword \"${keyword}\" for account ${accountCode}`);\n                              }}\n                            />\n                          )}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1443,
            "endLine": 1447,
            "content": "                                          onKeywordAdded={(keyword, accountCode) => {\n                                            setNotification(`Added keyword \"${keyword}\" for account ${accountCode}`);\n                                          }}\n                                        />\n                                      )}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1176,
            "endLine": 1180,
            "content": "                                setNotification(`Added keyword \"${keyword}\" for account ${accountCode}`);\n                              }}\n                            />\n                          )}\n                          "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1444,
            "endLine": 1448,
            "content": "                                            setNotification(`Added keyword \"${keyword}\" for account ${accountCode}`);\n                                          }}\n                                        />\n                                      )}\n                                      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1180,
            "endLine": 1184,
            "content": "                          \n                          {/* Approval Button */}\n                          {!transaction.isApproved && (\n                            <button\n                              onClick={() => handleApprove(transaction.id)}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1181,
            "endLine": 1185,
            "content": "                          {/* Approval Button */}\n                          {!transaction.isApproved && (\n                            <button\n                              onClick={() => handleApprove(transaction.id)}\n                              disabled={!transaction.accountCode}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1182,
            "endLine": 1186,
            "content": "                          {!transaction.isApproved && (\n                            <button\n                              onClick={() => handleApprove(transaction.id)}\n                              disabled={!transaction.accountCode}\n                              className={`px-3 py-1.5 rounded-lg text-xs font-medium transition-colors ${"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1451,
            "endLine": 1455,
            "content": "                                        {!transaction.isApproved && (\n                                          <button\n                                            onClick={() => handleApprove(transaction.id)}\n                                            disabled={!transaction.accountCode}\n                                            className={`px-2 py-1 rounded text-xs font-medium transition-all duration-200 ${"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1183,
            "endLine": 1187,
            "content": "                            <button\n                              onClick={() => handleApprove(transaction.id)}\n                              disabled={!transaction.accountCode}\n                              className={`px-3 py-1.5 rounded-lg text-xs font-medium transition-colors ${\n                                transaction.accountCode"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1452,
            "endLine": 1456,
            "content": "                                          <button\n                                            onClick={() => handleApprove(transaction.id)}\n                                            disabled={!transaction.accountCode}\n                                            className={`px-2 py-1 rounded text-xs font-medium transition-all duration-200 ${\n                                              transaction.accountCode"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1205,
            "endLine": 1209,
            "content": "                        {transaction.accountCode && !transaction.feedback && (\n                          <div className=\"flex items-center space-x-1\">\n                            <button\n                              onClick={() => handleFeedback(transaction.id, true)}\n                              className=\"p-1.5 text-slate-400 hover:text-emerald-600 hover:bg-emerald-50 rounded transition-colors\""
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1473,
            "endLine": 1477,
            "content": "                                      {transaction.accountCode && !transaction.feedback && (\n                                        <div className=\"flex items-center space-x-1\">\n                                          <button\n                                            onClick={() => handleFeedback(transaction.id, true)}\n                                            className=\"p-1 bg-green-100 text-green-600 rounded hover:bg-green-200 transition-colors text-xs\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1206,
            "endLine": 1210,
            "content": "                          <div className=\"flex items-center space-x-1\">\n                            <button\n                              onClick={() => handleFeedback(transaction.id, true)}\n                              className=\"p-1.5 text-slate-400 hover:text-emerald-600 hover:bg-emerald-50 rounded transition-colors\"\n                              title=\"Correct\""
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1474,
            "endLine": 1478,
            "content": "                                        <div className=\"flex items-center space-x-1\">\n                                          <button\n                                            onClick={() => handleFeedback(transaction.id, true)}\n                                            className=\"p-1 bg-green-100 text-green-600 rounded hover:bg-green-200 transition-colors text-xs\"\n                                            title=\"Categorization is correct\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1211,
            "endLine": 1215,
            "content": "                            >\n                              <AppIcons.feedback.thumbsUp className=\"w-3 h-3\" />\n                            </button>\n                            <button\n                              onClick={() => handleFeedback(transaction.id, false)}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1479,
            "endLine": 1483,
            "content": "                                          >\n                                            <AppIcons.feedback.thumbsUp className=\"w-3 h-3\" />\n                                          </button>\n                                          <button\n                                            onClick={() => handleFeedback(transaction.id, false)}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1212,
            "endLine": 1216,
            "content": "                              <AppIcons.feedback.thumbsUp className=\"w-3 h-3\" />\n                            </button>\n                            <button\n                              onClick={() => handleFeedback(transaction.id, false)}\n                              className=\"p-1.5 text-slate-400 hover:text-rose-600 hover:bg-rose-50 rounded transition-colors\""
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1480,
            "endLine": 1484,
            "content": "                                            <AppIcons.feedback.thumbsUp className=\"w-3 h-3\" />\n                                          </button>\n                                          <button\n                                            onClick={() => handleFeedback(transaction.id, false)}\n                                            className=\"p-1 bg-red-100 text-red-600 rounded hover:bg-red-200 transition-colors text-xs\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1218,
            "endLine": 1222,
            "content": "                            >\n                              <AppIcons.feedback.thumbsDown className=\"w-3 h-3\" />\n                            </button>\n                          </div>\n                        )}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1486,
            "endLine": 1490,
            "content": "                                          >\n                                            <AppIcons.feedback.thumbsDown className=\"w-3 h-3\" />\n                                          </button>\n                                        </div>\n                                      )}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1219,
            "endLine": 1223,
            "content": "                              <AppIcons.feedback.thumbsDown className=\"w-3 h-3\" />\n                            </button>\n                          </div>\n                        )}\n                        {transaction.feedback && ("
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1487,
            "endLine": 1491,
            "content": "                                            <AppIcons.feedback.thumbsDown className=\"w-3 h-3\" />\n                                          </button>\n                                        </div>\n                                      )}\n                                      {transaction.feedback && ("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1220,
            "endLine": 1224,
            "content": "                            </button>\n                          </div>\n                        )}\n                        {transaction.feedback && (\n                          <div className=\"flex items-center space-x-1\">"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1488,
            "endLine": 1492,
            "content": "                                          </button>\n                                        </div>\n                                      )}\n                                      {transaction.feedback && (\n                                        <div className=\"flex items-center space-x-1\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1272,
            "endLine": 1276,
            "content": "              <div className=\"text-center py-16 text-slate-500\">\n                No transactions match the current filter.\n              </div>\n            ) : (\n              <div className=\"space-y-4\">"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1529,
            "endLine": 1533,
            "content": "          <div className=\"text-center py-16 text-slate-500\">\n            No transactions match the current filter.\n          </div>\n        )}\n      </div>"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1283,
            "endLine": 1287,
            "content": "                    \n                    return (\n                      <div key={accountCode} className=\"border border-slate-200 rounded-lg overflow-hidden\">\n                        {/* Group Header */}\n                        <div "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1284,
            "endLine": 1288,
            "content": "                    return (\n                      <div key={accountCode} className=\"border border-slate-200 rounded-lg overflow-hidden\">\n                        {/* Group Header */}\n                        <div \n                          className=\"flex items-center justify-between p-4 bg-slate-50 cursor-pointer hover:bg-slate-100 transition-colors\""
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1334,
            "endLine": 1338,
            "content": "                                \n                                return (\n                                  <div \n                                    key={transaction.id} \n                                    className=\"flex items-center justify-between p-3 bg-slate-50 rounded-lg hover:bg-slate-100 transition-colors\""
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1335,
            "endLine": 1339,
            "content": "                                return (\n                                  <div \n                                    key={transaction.id} \n                                    className=\"flex items-center justify-between p-3 bg-slate-50 rounded-lg hover:bg-slate-100 transition-colors\"\n                                  >"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1357,
            "endLine": 1361,
            "content": "                                    \n                                    <div className=\"flex items-center space-x-3\">\n                                      {/* Account Section */}\n                                      <div className=\"w-64 px-3 py-2\">\n                                        {editingId === transaction.id && editingField === 'account' ? ("
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1358,
            "endLine": 1362,
            "content": "                                    <div className=\"flex items-center space-x-3\">\n                                      {/* Account Section */}\n                                      <div className=\"w-64 px-3 py-2\">\n                                        {editingId === transaction.id && editingField === 'account' ? (\n                                          <select"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1414,
            "endLine": 1418,
            "content": "\n                                      {/* Amount Pill */}\n                                      <div className=\"relative px-3 py-1.5 rounded-lg font-bold text-sm backdrop-blur-xl border border-white/30 bg-white/10 shadow-sm\">\n                                        <div className={`relative z-10 font-semibold ${\n                                          transaction.amount >= 0 "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1415,
            "endLine": 1419,
            "content": "                                      {/* Amount Pill */}\n                                      <div className=\"relative px-3 py-1.5 rounded-lg font-bold text-sm backdrop-blur-xl border border-white/30 bg-white/10 shadow-sm\">\n                                        <div className={`relative z-10 font-semibold ${\n                                          transaction.amount >= 0 \n                                            ? 'text-green-700' "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1425,
            "endLine": 1429,
            "content": "                                      \n                                      {/* Confidence Badge */}\n                                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                                        (transaction.confidence ?? 0) >= 90 \n                                          ? 'bg-green-100 text-green-800' "
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1426,
            "endLine": 1430,
            "content": "                                      {/* Confidence Badge */}\n                                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                                        (transaction.confidence ?? 0) >= 90 \n                                          ? 'bg-green-100 text-green-800' \n                                          : (transaction.confidence ?? 0) >= 70 "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1471,
            "endLine": 1475,
            "content": "                                      \n                                      {/* Feedback Section */}\n                                      {transaction.accountCode && !transaction.feedback && (\n                                        <div className=\"flex items-center space-x-1\">\n                                          <button"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1472,
            "endLine": 1476,
            "content": "                                      {/* Feedback Section */}\n                                      {transaction.accountCode && !transaction.feedback && (\n                                        <div className=\"flex items-center space-x-1\">\n                                          <button\n                                            onClick={() => handleFeedback(transaction.id, true)}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1527,
            "endLine": 1531,
            "content": "        \n        {filteredTransactions.length === 0 && (\n          <div className=\"text-center py-16 text-slate-500\">\n            No transactions match the current filter.\n          </div>"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1528,
            "endLine": 1532,
            "content": "        {filteredTransactions.length === 0 && (\n          <div className=\"text-center py-16 text-slate-500\">\n            No transactions match the current filter.\n          </div>\n        )}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1534,
            "endLine": 1538,
            "content": "\n      {/* Pagination info */}\n      <div className=\"text-sm text-slate-500 text-center\">\n        Showing {filteredTransactions.length} of {transactions.length} transactions\n        {selectedTransactions.size > 0 && ("
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1535,
            "endLine": 1539,
            "content": "      {/* Pagination info */}\n      <div className=\"text-sm text-slate-500 text-center\">\n        Showing {filteredTransactions.length} of {transactions.length} transactions\n        {selectedTransactions.size > 0 && (\n          <span className=\"ml-4 text-slate-700 font-medium\">"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1544,
            "endLine": 1548,
            "content": "\n      {/* Bulk Category Selector Modal */}\n      {showBulkSelector && (\n        <BulkCategorySelector\n          transactions={transactions}"
          },
          {
            "file": "src/components/TransactionTable.tsx",
            "startLine": 1545,
            "endLine": 1549,
            "content": "      {/* Bulk Category Selector Modal */}\n      {showBulkSelector && (\n        <BulkCategorySelector\n          transactions={transactions}\n          onBulkUpdate={handleBulkUpdate}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 2,
            "endLine": 6,
            "content": "\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { Session, User } from '@supabase/supabase-js';\nimport { getSupabaseClient } from '../lib/supabase';\n"
          },
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { Session, User } from '@supabase/supabase-js';\nimport { getSupabaseClient } from '../lib/supabase';\n\ninterface AuthContextType {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 13,
            "endLine": 17,
            "content": "\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);"
          },
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 14,
            "endLine": 18,
            "content": "const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 15,
            "endLine": 19,
            "content": "\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);"
          },
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 16,
            "endLine": 20,
            "content": "export function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 20,
            "endLine": 24,
            "content": "\n  useEffect(() => {\n    const supabase = getSupabaseClient();\n    \n    // If Supabase is not available, set loading to false and continue"
          },
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 21,
            "endLine": 25,
            "content": "  useEffect(() => {\n    const supabase = getSupabaseClient();\n    \n    // If Supabase is not available, set loading to false and continue\n    if (!supabase) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 23,
            "endLine": 27,
            "content": "    \n    // If Supabase is not available, set loading to false and continue\n    if (!supabase) {\n      setLoading(false);\n      return;"
          },
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 24,
            "endLine": 28,
            "content": "    // If Supabase is not available, set loading to false and continue\n    if (!supabase) {\n      setLoading(false);\n      return;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 29,
            "endLine": 33,
            "content": "\n    // Get initial session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n      setUser(session?.user ?? null);"
          },
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 30,
            "endLine": 34,
            "content": "    // Get initial session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n      setLoading(false);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 32,
            "endLine": 36,
            "content": "      setSession(session);\n      setUser(session?.user ?? null);\n      setLoading(false);\n    });\n"
          },
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 41,
            "endLine": 45,
            "content": "      setSession(session);\n      setUser(session?.user ?? null);\n      setLoading(false);\n    });\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 36,
            "endLine": 40,
            "content": "\n    // Listen for auth changes\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((_event, session) => {"
          },
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 37,
            "endLine": 41,
            "content": "    // Listen for auth changes\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 48,
            "endLine": 52,
            "content": "\n  const signOut = async () => {\n    const supabase = getSupabaseClient();\n    if (supabase) {\n      await supabase.auth.signOut();"
          },
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 49,
            "endLine": 53,
            "content": "  const signOut = async () => {\n    const supabase = getSupabaseClient();\n    if (supabase) {\n      await supabase.auth.signOut();\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 55,
            "endLine": 59,
            "content": "\n  return (\n    <AuthContext.Provider value={{ user, session, loading, signOut }}>\n      {children}\n    </AuthContext.Provider>"
          },
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 56,
            "endLine": 60,
            "content": "  return (\n    <AuthContext.Provider value={{ user, session, loading, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 62,
            "endLine": 66,
            "content": "\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');"
          },
          {
            "file": "src/context/AuthContext.tsx",
            "startLine": 63,
            "endLine": 67,
            "content": "export function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 2,
            "endLine": 6,
            "content": "\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport type { FinancialData } from '../lib/reportGenerator';\nimport type { Transaction, ValidationResult } from '../lib/types';\nimport type { BankFormat } from '../data/bankFormats';"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 3,
            "endLine": 7,
            "content": "import React, { createContext, useContext, useState, useEffect } from 'react';\nimport type { FinancialData } from '../lib/reportGenerator';\nimport type { Transaction, ValidationResult } from '../lib/types';\nimport type { BankFormat } from '../data/bankFormats';\nimport type { DuplicateDetectionResult } from '../lib/duplicateDetector';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 8,
            "endLine": 12,
            "content": "\n// Extended interface for dashboard state\ninterface DashboardData {\n  transactions: Transaction[];\n  processingResults?: {"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 9,
            "endLine": 13,
            "content": "// Extended interface for dashboard state\ninterface DashboardData {\n  transactions: Transaction[];\n  processingResults?: {\n    validation: ValidationResult;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 21,
            "endLine": 25,
            "content": "\n// Combined interface for both report data and dashboard state\ninterface ExtendedFinancialData extends FinancialData {\n  dashboard?: DashboardData;\n}"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 22,
            "endLine": 26,
            "content": "// Combined interface for both report data and dashboard state\ninterface ExtendedFinancialData extends FinancialData {\n  dashboard?: DashboardData;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 26,
            "endLine": 30,
            "content": "\ntype FinancialDataContextType = {\n  financialData: ExtendedFinancialData | null;\n  setFinancialData: (data: ExtendedFinancialData | null) => void;\n  setDashboardData: (data: DashboardData) => void;"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 27,
            "endLine": 31,
            "content": "type FinancialDataContextType = {\n  financialData: ExtendedFinancialData | null;\n  setFinancialData: (data: ExtendedFinancialData | null) => void;\n  setDashboardData: (data: DashboardData) => void;\n  isSample: boolean;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 38,
            "endLine": 42,
            "content": "\nconst FinancialDataContext = createContext<FinancialDataContextType | undefined>(undefined);\n\n// Safe storage utilities with error handling\nconst safeStorage = {"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 39,
            "endLine": 43,
            "content": "const FinancialDataContext = createContext<FinancialDataContextType | undefined>(undefined);\n\n// Safe storage utilities with error handling\nconst safeStorage = {\n  set: (key: string, data: any) => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 40,
            "endLine": 44,
            "content": "\n// Safe storage utilities with error handling\nconst safeStorage = {\n  set: (key: string, data: any) => {\n    try {"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 41,
            "endLine": 45,
            "content": "// Safe storage utilities with error handling\nconst safeStorage = {\n  set: (key: string, data: any) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(data));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 56,
            "endLine": 60,
            "content": "      \n      const parsed = JSON.parse(item);\n      return parsed;\n    } catch (error) {\n      console.warn(`Failed to parse localStorage key \"${key}\":`, error);"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 57,
            "endLine": 61,
            "content": "      const parsed = JSON.parse(item);\n      return parsed;\n    } catch (error) {\n      console.warn(`Failed to parse localStorage key \"${key}\":`, error);\n      // Clear corrupted data"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 81,
            "endLine": 85,
            "content": "\nconst STORAGE_KEYS = {\n  FINANCIAL_DATA: 'meridian_financial_data',\n  IS_SAMPLE: 'meridian_is_sample',\n  LAST_UPDATED: 'meridian_last_updated'"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 82,
            "endLine": 86,
            "content": "const STORAGE_KEYS = {\n  FINANCIAL_DATA: 'meridian_financial_data',\n  IS_SAMPLE: 'meridian_is_sample',\n  LAST_UPDATED: 'meridian_last_updated'\n};"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 87,
            "endLine": 91,
            "content": "\nexport const FinancialDataProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [financialData, setFinancialData] = useState<ExtendedFinancialData | null>(null);\n  const [isSample, setIsSample] = useState<boolean>(false);\n"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 88,
            "endLine": 92,
            "content": "export const FinancialDataProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [financialData, setFinancialData] = useState<ExtendedFinancialData | null>(null);\n  const [isSample, setIsSample] = useState<boolean>(false);\n\n  const setDashboardData = (dashboardData: DashboardData) => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 91,
            "endLine": 95,
            "content": "\n  const setDashboardData = (dashboardData: DashboardData) => {\n    setFinancialData(prev => {\n      if (!prev) {\n        return {"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 92,
            "endLine": 96,
            "content": "  const setDashboardData = (dashboardData: DashboardData) => {\n    setFinancialData(prev => {\n      if (!prev) {\n        return {\n          transactions: [],"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 110,
            "endLine": 114,
            "content": "\n  // Load data from storage on mount (safe)\n  useEffect(() => {\n    try {\n      // Load existing data instead of clearing it"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 111,
            "endLine": 115,
            "content": "  // Load data from storage on mount (safe)\n  useEffect(() => {\n    try {\n      // Load existing data instead of clearing it\n      const savedData = safeStorage.get(STORAGE_KEYS.FINANCIAL_DATA);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 117,
            "endLine": 121,
            "content": "      \n      if (savedData) {\n        setFinancialData(savedData);\n        console.log('✅ Loaded financial data from storage');\n      }"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 118,
            "endLine": 122,
            "content": "      if (savedData) {\n        setFinancialData(savedData);\n        console.log('✅ Loaded financial data from storage');\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 126,
            "endLine": 130,
            "content": "      \n      console.log('✅ App initialized with existing data');\n    } catch (error) {\n      console.warn('Failed to load from localStorage:', error);\n      // Continue with default state - no breaking"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 127,
            "endLine": 131,
            "content": "      console.log('✅ App initialized with existing data');\n    } catch (error) {\n      console.warn('Failed to load from localStorage:', error);\n      // Continue with default state - no breaking\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 133,
            "endLine": 137,
            "content": "\n  // Auto-save when data changes (safe)\n  useEffect(() => {\n    if (financialData) {\n      safeStorage.set(STORAGE_KEYS.FINANCIAL_DATA, financialData);"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 134,
            "endLine": 138,
            "content": "  // Auto-save when data changes (safe)\n  useEffect(() => {\n    if (financialData) {\n      safeStorage.set(STORAGE_KEYS.FINANCIAL_DATA, financialData);\n      safeStorage.set(STORAGE_KEYS.LAST_UPDATED, new Date().toISOString());"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 145,
            "endLine": 149,
            "content": "\n  // Manual storage functions\n  const saveToStorage = () => {\n    if (financialData) {\n      const success = safeStorage.set(STORAGE_KEYS.FINANCIAL_DATA, financialData);"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 146,
            "endLine": 150,
            "content": "  // Manual storage functions\n  const saveToStorage = () => {\n    if (financialData) {\n      const success = safeStorage.set(STORAGE_KEYS.FINANCIAL_DATA, financialData);\n      if (success) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 155,
            "endLine": 159,
            "content": "\n  const loadFromStorage = () => {\n    const savedData = safeStorage.get(STORAGE_KEYS.FINANCIAL_DATA);\n    if (savedData) {\n      setFinancialData(savedData);"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 156,
            "endLine": 160,
            "content": "  const loadFromStorage = () => {\n    const savedData = safeStorage.get(STORAGE_KEYS.FINANCIAL_DATA);\n    if (savedData) {\n      setFinancialData(savedData);\n      console.log('✅ Data loaded from storage');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 163,
            "endLine": 167,
            "content": "\n  const clearStorage = () => {\n    safeStorage.remove(STORAGE_KEYS.FINANCIAL_DATA);\n    safeStorage.remove(STORAGE_KEYS.IS_SAMPLE);\n    safeStorage.remove(STORAGE_KEYS.LAST_UPDATED);"
          },
          {
            "file": "src/context/FinancialDataContext.tsx",
            "startLine": 164,
            "endLine": 168,
            "content": "  const clearStorage = () => {\n    safeStorage.remove(STORAGE_KEYS.FINANCIAL_DATA);\n    safeStorage.remove(STORAGE_KEYS.IS_SAMPLE);\n    safeStorage.remove(STORAGE_KEYS.LAST_UPDATED);\n    setFinancialData(null);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 9,
            "endLine": 13,
            "content": "\nexport const BANK_FORMATS: Record<string, BankFormatConfig> = {\n  Generic: {\n    dateColumn: 'Date',\n    descriptionColumn: 'Description',"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 10,
            "endLine": 14,
            "content": "export const BANK_FORMATS: Record<string, BankFormatConfig> = {\n  Generic: {\n    dateColumn: 'Date',\n    descriptionColumn: 'Description',\n    amountColumn: 'Amount',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 8,
        "blocks": [
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 12,
            "endLine": 16,
            "content": "    dateColumn: 'Date',\n    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount']"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 19,
            "endLine": 23,
            "content": "    dateColumn: 'Date',\n    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount']"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 38,
            "endLine": 42,
            "content": "    dateColumn: 'Date',\n    descriptionColumn: 'Description', \n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount']"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 52,
            "endLine": 56,
            "content": "    dateColumn: 'Date',\n    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount']"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 66,
            "endLine": 70,
            "content": "    dateColumn: 'Date',\n    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount']"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 82,
            "endLine": 86,
            "content": "    dateColumn: 'Date',\n    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount'],"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 98,
            "endLine": 102,
            "content": "    dateColumn: 'Date',\n    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount'],"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 113,
            "endLine": 117,
            "content": "    dateColumn: 'Date',\n    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount'],"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 8,
        "blocks": [
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 13,
            "endLine": 17,
            "content": "    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount']\n  },"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 20,
            "endLine": 24,
            "content": "    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount']\n  },"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 39,
            "endLine": 43,
            "content": "    descriptionColumn: 'Description', \n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount']\n  },"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 53,
            "endLine": 57,
            "content": "    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount']\n  },"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 67,
            "endLine": 71,
            "content": "    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount']\n  },"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 83,
            "endLine": 87,
            "content": "    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount'],\n    patterns: ["
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 99,
            "endLine": 103,
            "content": "    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount'],\n    patterns: ["
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 114,
            "endLine": 118,
            "content": "    descriptionColumn: 'Description',\n    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount'],\n    patterns: ["
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 84,
            "endLine": 88,
            "content": "    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount'],\n    patterns: [\n      /Electronic\\s*Funds\\s*Transfer/i,"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 100,
            "endLine": 104,
            "content": "    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount'],\n    patterns: [\n      /Internet\\s*Banking/i,"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 115,
            "endLine": 119,
            "content": "    amountColumn: 'Amount',\n    dateFormat: 'YYYY-MM-DD',\n    identifier: ['Date', 'Description', 'Amount'],\n    patterns: [\n      /^\\d{4}-\\d{2}-\\d{2}/, // Starts with date"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 125,
            "endLine": 129,
            "content": "\nexport type BankFormat = keyof typeof BANK_FORMATS;\n\n// Helper function to get format details\nexport const getBankFormatInfo = (format: BankFormat) => {"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 126,
            "endLine": 130,
            "content": "export type BankFormat = keyof typeof BANK_FORMATS;\n\n// Helper function to get format details\nexport const getBankFormatInfo = (format: BankFormat) => {\n  return BANK_FORMATS[format];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 127,
            "endLine": 131,
            "content": "\n// Helper function to get format details\nexport const getBankFormatInfo = (format: BankFormat) => {\n  return BANK_FORMATS[format];\n};"
          },
          {
            "file": "src/data/bankFormats.ts",
            "startLine": 128,
            "endLine": 132,
            "content": "// Helper function to get format details\nexport const getBankFormatInfo = (format: BankFormat) => {\n  return BANK_FORMATS[format];\n};\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 4,
            "endLine": 8,
            "content": "  accountCode: string;\n  confidence: number;\n  description?: string;\n  createdAt: Date;\n  updatedAt: Date;"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 14,
            "endLine": 18,
            "content": "  accountCode: string;\n  confidence: number;\n  description?: string;\n  createdAt: Date;\n  updatedAt: Date;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 5,
            "endLine": 9,
            "content": "  confidence: number;\n  description?: string;\n  createdAt: Date;\n  updatedAt: Date;\n}"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 15,
            "endLine": 19,
            "content": "  confidence: number;\n  description?: string;\n  createdAt: Date;\n  updatedAt: Date;\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 6,
            "endLine": 10,
            "content": "  description?: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 16,
            "endLine": 20,
            "content": "  description?: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 20,
            "endLine": 24,
            "content": "\nexport class CustomKeywordManager {\n  private static instance: CustomKeywordManager;\n  private keywords: CustomKeyword[] = [];\n  private rules: CustomKeywordRule[] = [];"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 21,
            "endLine": 25,
            "content": "export class CustomKeywordManager {\n  private static instance: CustomKeywordManager;\n  private keywords: CustomKeyword[] = [];\n  private rules: CustomKeywordRule[] = [];\n  private storageKey = 'meridian_custom_keywords';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 31,
            "endLine": 35,
            "content": "\n  public static getInstance(): CustomKeywordManager {\n    if (!CustomKeywordManager.instance) {\n      CustomKeywordManager.instance = new CustomKeywordManager();\n    }"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 32,
            "endLine": 36,
            "content": "  public static getInstance(): CustomKeywordManager {\n    if (!CustomKeywordManager.instance) {\n      CustomKeywordManager.instance = new CustomKeywordManager();\n    }\n    return CustomKeywordManager.instance;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 38,
            "endLine": 42,
            "content": "\n  // Add a single keyword\n  public addKeyword(keyword: string, accountCode: string, confidence: number = 90, description?: string): CustomKeyword {\n    const newKeyword: CustomKeyword = {\n      id: this.generateId(),"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 39,
            "endLine": 43,
            "content": "  // Add a single keyword\n  public addKeyword(keyword: string, accountCode: string, confidence: number = 90, description?: string): CustomKeyword {\n    const newKeyword: CustomKeyword = {\n      id: this.generateId(),\n      keyword: keyword.toLowerCase().trim(),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 44,
            "endLine": 48,
            "content": "      accountCode,\n      confidence: Math.min(100, Math.max(0, confidence)),\n      description,\n      createdAt: new Date(),\n      updatedAt: new Date()"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 72,
            "endLine": 76,
            "content": "      accountCode,\n      confidence: Math.min(100, Math.max(0, confidence)),\n      description,\n      createdAt: new Date(),\n      updatedAt: new Date()"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 45,
            "endLine": 49,
            "content": "      confidence: Math.min(100, Math.max(0, confidence)),\n      description,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 73,
            "endLine": 77,
            "content": "      confidence: Math.min(100, Math.max(0, confidence)),\n      description,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 46,
            "endLine": 50,
            "content": "      description,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 74,
            "endLine": 78,
            "content": "      description,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 47,
            "endLine": 51,
            "content": "      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n\n    // Check for duplicates"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 75,
            "endLine": 79,
            "content": "      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n\n    // Check for duplicates"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 50,
            "endLine": 54,
            "content": "\n    // Check for duplicates\n    const existingIndex = this.keywords.findIndex(k => \n      k.keyword === newKeyword.keyword && k.accountCode === newKeyword.accountCode\n    );"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 51,
            "endLine": 55,
            "content": "    // Check for duplicates\n    const existingIndex = this.keywords.findIndex(k => \n      k.keyword === newKeyword.keyword && k.accountCode === newKeyword.accountCode\n    );\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 55,
            "endLine": 59,
            "content": "\n    if (existingIndex >= 0) {\n      // Update existing keyword\n      this.keywords[existingIndex] = { ...newKeyword, id: this.keywords[existingIndex].id };\n    } else {"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 56,
            "endLine": 60,
            "content": "    if (existingIndex >= 0) {\n      // Update existing keyword\n      this.keywords[existingIndex] = { ...newKeyword, id: this.keywords[existingIndex].id };\n    } else {\n      this.keywords.push(newKeyword);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 66,
            "endLine": 70,
            "content": "\n  // Add a rule with multiple keywords\n  public addRule(keywords: string[], accountCode: string, confidence: number = 90, description?: string): CustomKeywordRule {\n    const newRule: CustomKeywordRule = {\n      id: this.generateId(),"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 67,
            "endLine": 71,
            "content": "  // Add a rule with multiple keywords\n  public addRule(keywords: string[], accountCode: string, confidence: number = 90, description?: string): CustomKeywordRule {\n    const newRule: CustomKeywordRule = {\n      id: this.generateId(),\n      keywords: keywords.map(k => k.toLowerCase().trim()),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 78,
            "endLine": 82,
            "content": "\n    // Check for duplicates\n    const existingIndex = this.rules.findIndex(r => \n      r.accountCode === newRule.accountCode && \n      JSON.stringify(r.keywords.sort()) === JSON.stringify(newRule.keywords.sort())"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 79,
            "endLine": 83,
            "content": "    // Check for duplicates\n    const existingIndex = this.rules.findIndex(r => \n      r.accountCode === newRule.accountCode && \n      JSON.stringify(r.keywords.sort()) === JSON.stringify(newRule.keywords.sort())\n    );"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 84,
            "endLine": 88,
            "content": "\n    if (existingIndex >= 0) {\n      // Update existing rule\n      this.rules[existingIndex] = { ...newRule, id: this.rules[existingIndex].id };\n    } else {"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 85,
            "endLine": 89,
            "content": "    if (existingIndex >= 0) {\n      // Update existing rule\n      this.rules[existingIndex] = { ...newRule, id: this.rules[existingIndex].id };\n    } else {\n      this.rules.push(newRule);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 95,
            "endLine": 99,
            "content": "\n  // Remove a keyword\n  public removeKeyword(id: string): boolean {\n    const initialLength = this.keywords.length;\n    this.keywords = this.keywords.filter(k => k.id !== id);"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 96,
            "endLine": 100,
            "content": "  // Remove a keyword\n  public removeKeyword(id: string): boolean {\n    const initialLength = this.keywords.length;\n    this.keywords = this.keywords.filter(k => k.id !== id);\n    const removed = this.keywords.length < initialLength;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 101,
            "endLine": 105,
            "content": "    if (removed) {\n      this.saveToStorage();\n    }\n    return removed;\n  }"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 112,
            "endLine": 116,
            "content": "    if (removed) {\n      this.saveToStorage();\n    }\n    return removed;\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 106,
            "endLine": 110,
            "content": "\n  // Remove a rule\n  public removeRule(id: string): boolean {\n    const initialLength = this.rules.length;\n    this.rules = this.rules.filter(r => r.id !== id);"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 107,
            "endLine": 111,
            "content": "  // Remove a rule\n  public removeRule(id: string): boolean {\n    const initialLength = this.rules.length;\n    this.rules = this.rules.filter(r => r.id !== id);\n    const removed = this.rules.length < initialLength;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 117,
            "endLine": 121,
            "content": "\n  // Update a keyword\n  public updateKeyword(id: string, updates: Partial<CustomKeyword>): CustomKeyword | null {\n    const index = this.keywords.findIndex(k => k.id === id);\n    if (index === -1) return null;"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 118,
            "endLine": 122,
            "content": "  // Update a keyword\n  public updateKeyword(id: string, updates: Partial<CustomKeyword>): CustomKeyword | null {\n    const index = this.keywords.findIndex(k => k.id === id);\n    if (index === -1) return null;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 125,
            "endLine": 129,
            "content": "      ...updates,\n      updatedAt: new Date()\n    };\n\n    this.saveToStorage();"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 140,
            "endLine": 144,
            "content": "      ...updates,\n      updatedAt: new Date()\n    };\n\n    this.saveToStorage();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 132,
            "endLine": 136,
            "content": "\n  // Update a rule\n  public updateRule(id: string, updates: Partial<CustomKeywordRule>): CustomKeywordRule | null {\n    const index = this.rules.findIndex(r => r.id === id);\n    if (index === -1) return null;"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 133,
            "endLine": 137,
            "content": "  // Update a rule\n  public updateRule(id: string, updates: Partial<CustomKeywordRule>): CustomKeywordRule | null {\n    const index = this.rules.findIndex(r => r.id === id);\n    if (index === -1) return null;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 147,
            "endLine": 151,
            "content": "\n  // Get all keywords\n  public getKeywords(): CustomKeyword[] {\n    return [...this.keywords].sort((a, b) => a.keyword.localeCompare(b.keyword));\n  }"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 148,
            "endLine": 152,
            "content": "  // Get all keywords\n  public getKeywords(): CustomKeyword[] {\n    return [...this.keywords].sort((a, b) => a.keyword.localeCompare(b.keyword));\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 152,
            "endLine": 156,
            "content": "\n  // Get all rules\n  public getRules(): CustomKeywordRule[] {\n    return [...this.rules].sort((a, b) => a.accountCode.localeCompare(b.accountCode));\n  }"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 153,
            "endLine": 157,
            "content": "  // Get all rules\n  public getRules(): CustomKeywordRule[] {\n    return [...this.rules].sort((a, b) => a.accountCode.localeCompare(b.accountCode));\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 157,
            "endLine": 161,
            "content": "\n  // Get keywords by account code\n  public getKeywordsByAccountCode(accountCode: string): CustomKeyword[] {\n    return this.keywords.filter(k => k.accountCode === accountCode);\n  }"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 158,
            "endLine": 162,
            "content": "  // Get keywords by account code\n  public getKeywordsByAccountCode(accountCode: string): CustomKeyword[] {\n    return this.keywords.filter(k => k.accountCode === accountCode);\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 162,
            "endLine": 166,
            "content": "\n  // Get rules by account code\n  public getRulesByAccountCode(accountCode: string): CustomKeywordRule[] {\n    return this.rules.filter(r => r.accountCode === accountCode);\n  }"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 163,
            "endLine": 167,
            "content": "  // Get rules by account code\n  public getRulesByAccountCode(accountCode: string): CustomKeywordRule[] {\n    return this.rules.filter(r => r.accountCode === accountCode);\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 167,
            "endLine": 171,
            "content": "\n  // Find matching keyword for a transaction description\n  public findMatchingKeyword(description: string): { keyword: CustomKeyword; confidence: number } | null {\n    const normalizedDesc = description.toLowerCase();\n    "
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 168,
            "endLine": 172,
            "content": "  // Find matching keyword for a transaction description\n  public findMatchingKeyword(description: string): { keyword: CustomKeyword; confidence: number } | null {\n    const normalizedDesc = description.toLowerCase();\n    \n    // Check single keywords first (higher priority)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 171,
            "endLine": 175,
            "content": "    \n    // Check single keywords first (higher priority)\n    for (const keyword of this.keywords) {\n      if (normalizedDesc.includes(keyword.keyword)) {\n        return { keyword, confidence: keyword.confidence };"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 172,
            "endLine": 176,
            "content": "    // Check single keywords first (higher priority)\n    for (const keyword of this.keywords) {\n      if (normalizedDesc.includes(keyword.keyword)) {\n        return { keyword, confidence: keyword.confidence };\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 178,
            "endLine": 182,
            "content": "\n    // Check rules (multiple keywords)\n    for (const rule of this.rules) {\n      const matchCount = rule.keywords.filter(k => normalizedDesc.includes(k)).length;\n      if (matchCount > 0) {"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 179,
            "endLine": 183,
            "content": "    // Check rules (multiple keywords)\n    for (const rule of this.rules) {\n      const matchCount = rule.keywords.filter(k => normalizedDesc.includes(k)).length;\n      if (matchCount > 0) {\n        // Calculate confidence based on how many keywords match"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 182,
            "endLine": 186,
            "content": "      if (matchCount > 0) {\n        // Calculate confidence based on how many keywords match\n        const matchRatio = matchCount / rule.keywords.length;\n        const adjustedConfidence = rule.confidence * matchRatio;\n        "
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 657,
            "endLine": 661,
            "content": "      if (matchCount > 0) {\n        // Calculate confidence based on how many keywords match\n        const matchRatio = matchCount / rule.keywords.length;\n        const adjustedConfidence = rule.confidence * matchRatio;\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 183,
            "endLine": 187,
            "content": "        // Calculate confidence based on how many keywords match\n        const matchRatio = matchCount / rule.keywords.length;\n        const adjustedConfidence = rule.confidence * matchRatio;\n        \n        if (adjustedConfidence >= 50) { // Minimum threshold"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 658,
            "endLine": 662,
            "content": "        // Calculate confidence based on how many keywords match\n        const matchRatio = matchCount / rule.keywords.length;\n        const adjustedConfidence = rule.confidence * matchRatio;\n        \n        if (adjustedConfidence >= 50) { // Minimum threshold"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 184,
            "endLine": 188,
            "content": "        const matchRatio = matchCount / rule.keywords.length;\n        const adjustedConfidence = rule.confidence * matchRatio;\n        \n        if (adjustedConfidence >= 50) { // Minimum threshold\n          return { "
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 659,
            "endLine": 663,
            "content": "        const matchRatio = matchCount / rule.keywords.length;\n        const adjustedConfidence = rule.confidence * matchRatio;\n        \n        if (adjustedConfidence >= 50) { // Minimum threshold\n          console.log(`✅ Rule match: \"${rule.keywords.join(', ')}\" -> ${rule.accountCode} (${adjustedConfidence.toFixed(1)}% confidence)`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 185,
            "endLine": 189,
            "content": "        const adjustedConfidence = rule.confidence * matchRatio;\n        \n        if (adjustedConfidence >= 50) { // Minimum threshold\n          return { \n            keyword: {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 660,
            "endLine": 664,
            "content": "        const adjustedConfidence = rule.confidence * matchRatio;\n        \n        if (adjustedConfidence >= 50) { // Minimum threshold\n          console.log(`✅ Rule match: \"${rule.keywords.join(', ')}\" -> ${rule.accountCode} (${adjustedConfidence.toFixed(1)}% confidence)`);\n          this.incrementCategoryUsage(rule.accountCode);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 206,
            "endLine": 210,
            "content": "\n  // Export keywords to JSON\n  public exportKeywords(): string {\n    return JSON.stringify({\n      keywords: this.keywords,"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 207,
            "endLine": 211,
            "content": "  // Export keywords to JSON\n  public exportKeywords(): string {\n    return JSON.stringify({\n      keywords: this.keywords,\n      rules: this.rules,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 215,
            "endLine": 219,
            "content": "\n  // Import keywords from JSON\n  public importKeywords(jsonData: string): { success: boolean; message: string } {\n    try {\n      const data = JSON.parse(jsonData);"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 216,
            "endLine": 220,
            "content": "  // Import keywords from JSON\n  public importKeywords(jsonData: string): { success: boolean; message: string } {\n    try {\n      const data = JSON.parse(jsonData);\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 220,
            "endLine": 224,
            "content": "      \n      if (data.keywords && Array.isArray(data.keywords)) {\n        this.keywords = data.keywords.map((k: any) => ({\n          ...k,\n          createdAt: new Date(k.createdAt),"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 221,
            "endLine": 225,
            "content": "      if (data.keywords && Array.isArray(data.keywords)) {\n        this.keywords = data.keywords.map((k: any) => ({\n          ...k,\n          createdAt: new Date(k.createdAt),\n          updatedAt: new Date(k.updatedAt)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 223,
            "endLine": 227,
            "content": "          ...k,\n          createdAt: new Date(k.createdAt),\n          updatedAt: new Date(k.updatedAt)\n        }));\n      }"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 277,
            "endLine": 281,
            "content": "            ...k,\n            createdAt: new Date(k.createdAt),\n            updatedAt: new Date(k.updatedAt)\n          }));\n        }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 224,
            "endLine": 228,
            "content": "          createdAt: new Date(k.createdAt),\n          updatedAt: new Date(k.updatedAt)\n        }));\n      }\n      "
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 278,
            "endLine": 282,
            "content": "            createdAt: new Date(k.createdAt),\n            updatedAt: new Date(k.updatedAt)\n          }));\n        }\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 228,
            "endLine": 232,
            "content": "      \n      if (data.rules && Array.isArray(data.rules)) {\n        this.rules = data.rules.map((r: any) => ({\n          ...r,\n          createdAt: new Date(r.createdAt),"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 229,
            "endLine": 233,
            "content": "      if (data.rules && Array.isArray(data.rules)) {\n        this.rules = data.rules.map((r: any) => ({\n          ...r,\n          createdAt: new Date(r.createdAt),\n          updatedAt: new Date(r.updatedAt)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 231,
            "endLine": 235,
            "content": "          ...r,\n          createdAt: new Date(r.createdAt),\n          updatedAt: new Date(r.updatedAt)\n        }));\n      }"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 285,
            "endLine": 289,
            "content": "            ...r,\n            createdAt: new Date(r.createdAt),\n            updatedAt: new Date(r.updatedAt)\n          }));\n        }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 236,
            "endLine": 240,
            "content": "      \n      this.saveToStorage();\n      return { success: true, message: 'Keywords imported successfully' };\n    } catch (error) {\n      return { success: false, message: 'Invalid import format' };"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 237,
            "endLine": 241,
            "content": "      this.saveToStorage();\n      return { success: true, message: 'Keywords imported successfully' };\n    } catch (error) {\n      return { success: false, message: 'Invalid import format' };\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 250,
            "endLine": 254,
            "content": "\n  // Get statistics\n  public getStats(): { totalKeywords: number; totalRules: number; accountCodes: string[] } {\n    const accountCodes = new Set([\n      ...this.keywords.map(k => k.accountCode),"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 251,
            "endLine": 255,
            "content": "  // Get statistics\n  public getStats(): { totalKeywords: number; totalRules: number; accountCodes: string[] } {\n    const accountCodes = new Set([\n      ...this.keywords.map(k => k.accountCode),\n      ...this.rules.map(r => r.accountCode)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 257,
            "endLine": 261,
            "content": "    \n    return {\n      totalKeywords: this.keywords.length,\n      totalRules: this.rules.length,\n      accountCodes: Array.from(accountCodes).sort()"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 258,
            "endLine": 262,
            "content": "    return {\n      totalKeywords: this.keywords.length,\n      totalRules: this.rules.length,\n      accountCodes: Array.from(accountCodes).sort()\n    };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 264,
            "endLine": 268,
            "content": "\n  private generateId(): string {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n  }\n"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 265,
            "endLine": 269,
            "content": "  private generateId(): string {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n  }\n\n  private loadFromStorage(): void {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 268,
            "endLine": 272,
            "content": "\n  private loadFromStorage(): void {\n    try {\n      if (typeof window !== 'undefined') {\n        const keywordsData = localStorage.getItem(this.storageKey);"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 269,
            "endLine": 273,
            "content": "  private loadFromStorage(): void {\n    try {\n      if (typeof window !== 'undefined') {\n        const keywordsData = localStorage.getItem(this.storageKey);\n        const rulesData = localStorage.getItem(this.rulesStorageKey);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 274,
            "endLine": 278,
            "content": "        \n        if (keywordsData) {\n          this.keywords = JSON.parse(keywordsData).map((k: any) => ({\n            ...k,\n            createdAt: new Date(k.createdAt),"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 275,
            "endLine": 279,
            "content": "        if (keywordsData) {\n          this.keywords = JSON.parse(keywordsData).map((k: any) => ({\n            ...k,\n            createdAt: new Date(k.createdAt),\n            updatedAt: new Date(k.updatedAt)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 282,
            "endLine": 286,
            "content": "        \n        if (rulesData) {\n          this.rules = JSON.parse(rulesData).map((r: any) => ({\n            ...r,\n            createdAt: new Date(r.createdAt),"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 283,
            "endLine": 287,
            "content": "        if (rulesData) {\n          this.rules = JSON.parse(rulesData).map((r: any) => ({\n            ...r,\n            createdAt: new Date(r.createdAt),\n            updatedAt: new Date(r.updatedAt)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 297,
            "endLine": 301,
            "content": "\n  private saveToStorage(): void {\n    try {\n      if (typeof window !== 'undefined') {\n        localStorage.setItem(this.storageKey, JSON.stringify(this.keywords));"
          },
          {
            "file": "src/data/customKeywords.ts",
            "startLine": 298,
            "endLine": 302,
            "content": "  private saveToStorage(): void {\n    try {\n      if (typeof window !== 'undefined') {\n        localStorage.setItem(this.storageKey, JSON.stringify(this.keywords));\n        localStorage.setItem(this.rulesStorageKey, JSON.stringify(this.rules));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 2,
            "endLine": 6,
            "content": "\n// Map of old categories to account codes (based on categoryMappings.ts)\nconst CATEGORY_TO_ACCOUNT_MAP: { [key: string]: string } = {\n  'Meals & Entertainment': '420',\n  'Motor Vehicle Expenses': '449',"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 3,
            "endLine": 7,
            "content": "// Map of old categories to account codes (based on categoryMappings.ts)\nconst CATEGORY_TO_ACCOUNT_MAP: { [key: string]: string } = {\n  'Meals & Entertainment': '420',\n  'Motor Vehicle Expenses': '449',\n  'Office Supplies': '455',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 44,
            "endLine": 48,
            "content": "\nexport const MERCHANT_PATTERNS: MerchantPattern[] = [\n  // =============================================================================\n  // FOOD & RESTAURANTS (High Confidence - Very Specific Patterns)\n  // ============================================================================="
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 45,
            "endLine": 49,
            "content": "export const MERCHANT_PATTERNS: MerchantPattern[] = [\n  // =============================================================================\n  // FOOD & RESTAURANTS (High Confidence - Very Specific Patterns)\n  // =============================================================================\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 49,
            "endLine": 53,
            "content": "  \n  // Canadian Coffee Chains\n  { pattern: /TIM\\s*HORTONS?/i, merchant: 'Tim Hortons', accountCode: '420', confidence: 96 },\n  { pattern: /TIMS\\s*HORTONS?/i, merchant: 'Tim Hortons', accountCode: '420', confidence: 94 },\n  { pattern: /STARBUCKS/i, merchant: 'Starbucks', accountCode: '420', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 50,
            "endLine": 54,
            "content": "  // Canadian Coffee Chains\n  { pattern: /TIM\\s*HORTONS?/i, merchant: 'Tim Hortons', accountCode: '420', confidence: 96 },\n  { pattern: /TIMS\\s*HORTONS?/i, merchant: 'Tim Hortons', accountCode: '420', confidence: 94 },\n  { pattern: /STARBUCKS/i, merchant: 'Starbucks', accountCode: '420', confidence: 96 },\n  { pattern: /SECOND\\s*CUP/i, merchant: 'Second Cup', accountCode: '420', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 56,
            "endLine": 60,
            "content": "  \n  // Fast Food Chains\n  { pattern: /MCDONALD'?S/i, merchant: 'McDonalds', accountCode: '420', confidence: 96 },\n  { pattern: /SUBWAY/i, merchant: 'Subway', accountCode: '420', confidence: 94 },\n  { pattern: /BURGER\\s*KING/i, merchant: 'Burger King', accountCode: '420', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 57,
            "endLine": 61,
            "content": "  // Fast Food Chains\n  { pattern: /MCDONALD'?S/i, merchant: 'McDonalds', accountCode: '420', confidence: 96 },\n  { pattern: /SUBWAY/i, merchant: 'Subway', accountCode: '420', confidence: 94 },\n  { pattern: /BURGER\\s*KING/i, merchant: 'Burger King', accountCode: '420', confidence: 95 },\n  { pattern: /KFC/i, merchant: 'KFC', accountCode: '420', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 65,
            "endLine": 69,
            "content": "  \n  // NEW: Specific A&W locations from training data\n  { pattern: /A&W\\s*1613/i, merchant: 'A&W', accountCode: '420', confidence: 96 },\n  { pattern: /A&W\\s*1393/i, merchant: 'A&W', accountCode: '420', confidence: 96 },\n  { pattern: /A&W\\s*STORE\\s*1729/i, merchant: 'A&W', accountCode: '420', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 66,
            "endLine": 70,
            "content": "  // NEW: Specific A&W locations from training data\n  { pattern: /A&W\\s*1613/i, merchant: 'A&W', accountCode: '420', confidence: 96 },\n  { pattern: /A&W\\s*1393/i, merchant: 'A&W', accountCode: '420', confidence: 96 },\n  { pattern: /A&W\\s*STORE\\s*1729/i, merchant: 'A&W', accountCode: '420', confidence: 96 },\n  { pattern: /BONNYVILLE\\s*A&W/i, merchant: 'A&W', accountCode: '420', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 71,
            "endLine": 75,
            "content": "  \n  // NEW: Wendy's locations from training data\n  { pattern: /WENDYS?\\s*6167/i, merchant: 'Wendys', accountCode: '420', confidence: 96 },\n  { pattern: /WENDY'?S\\s*LACOMBE/i, merchant: 'Wendys', accountCode: '420', confidence: 96 },\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 72,
            "endLine": 76,
            "content": "  // NEW: Wendy's locations from training data\n  { pattern: /WENDYS?\\s*6167/i, merchant: 'Wendys', accountCode: '420', confidence: 96 },\n  { pattern: /WENDY'?S\\s*LACOMBE/i, merchant: 'Wendys', accountCode: '420', confidence: 96 },\n  \n  // Canadian Restaurant Chains"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 75,
            "endLine": 79,
            "content": "  \n  // Canadian Restaurant Chains\n  { pattern: /SWISS\\s*CHALET/i, merchant: 'Swiss Chalet', accountCode: '420', confidence: 96 },\n  { pattern: /BOSTON\\s*PIZZA/i, merchant: 'Boston Pizza', accountCode: '420', confidence: 95 },\n  { pattern: /EAST\\s*SIDE\\s*MARIO'?S/i, merchant: 'East Side Marios', accountCode: '420', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 76,
            "endLine": 80,
            "content": "  // Canadian Restaurant Chains\n  { pattern: /SWISS\\s*CHALET/i, merchant: 'Swiss Chalet', accountCode: '420', confidence: 96 },\n  { pattern: /BOSTON\\s*PIZZA/i, merchant: 'Boston Pizza', accountCode: '420', confidence: 95 },\n  { pattern: /EAST\\s*SIDE\\s*MARIO'?S/i, merchant: 'East Side Marios', accountCode: '420', confidence: 95 },\n  { pattern: /KELSEY'?S/i, merchant: 'Kelseys', accountCode: '420', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 82,
            "endLine": 86,
            "content": "  \n  // NEW: Restaurant chains from training data\n  { pattern: /THE\\s*KEG/i, merchant: 'The Keg', accountCode: '420', confidence: 95 },\n  { pattern: /THE\\s*CANADIAN\\s*BR/i, merchant: 'The Canadian Brewhouse', accountCode: '420', confidence: 94 },\n  { pattern: /MR\\s*MIKES\\s*STEAKH/i, merchant: 'Mr. Mikes', accountCode: '420', confidence: 94 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 83,
            "endLine": 87,
            "content": "  // NEW: Restaurant chains from training data\n  { pattern: /THE\\s*KEG/i, merchant: 'The Keg', accountCode: '420', confidence: 95 },\n  { pattern: /THE\\s*CANADIAN\\s*BR/i, merchant: 'The Canadian Brewhouse', accountCode: '420', confidence: 94 },\n  { pattern: /MR\\s*MIKES\\s*STEAKH/i, merchant: 'Mr. Mikes', accountCode: '420', confidence: 94 },\n  { pattern: /OLIVE\\s*GARDEN/i, merchant: 'Olive Garden', accountCode: '420', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 89,
            "endLine": 93,
            "content": "  \n  // Pizza Chains\n  { pattern: /PIZZA\\s*HUT/i, merchant: 'Pizza Hut', accountCode: '420', confidence: 95 },\n  { pattern: /DOMINO'?S/i, merchant: 'Dominos', accountCode: '420', confidence: 95 },\n  { pattern: /PIZZA\\s*PIZZA/i, merchant: 'Pizza Pizza', accountCode: '420', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 90,
            "endLine": 94,
            "content": "  // Pizza Chains\n  { pattern: /PIZZA\\s*HUT/i, merchant: 'Pizza Hut', accountCode: '420', confidence: 95 },\n  { pattern: /DOMINO'?S/i, merchant: 'Dominos', accountCode: '420', confidence: 95 },\n  { pattern: /PIZZA\\s*PIZZA/i, merchant: 'Pizza Pizza', accountCode: '420', confidence: 95 },\n  { pattern: /LITTLE\\s*CAESARS/i, merchant: 'Little Caesars', accountCode: '420', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 95,
            "endLine": 99,
            "content": "  \n  // NEW: Pizza places from training data\n  { pattern: /BUSTER'?S\\s*PIZZA/i, merchant: 'Busters Pizza', accountCode: '420', confidence: 95 },\n  { pattern: /NORTH\\s*SIDE\\s*PIZZ/i, merchant: 'North Side Pizza', accountCode: '420', confidence: 94 },\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 96,
            "endLine": 100,
            "content": "  // NEW: Pizza places from training data\n  { pattern: /BUSTER'?S\\s*PIZZA/i, merchant: 'Busters Pizza', accountCode: '420', confidence: 95 },\n  { pattern: /NORTH\\s*SIDE\\s*PIZZ/i, merchant: 'North Side Pizza', accountCode: '420', confidence: 94 },\n  \n  // NEW: Dairy Queen locations from training data"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 99,
            "endLine": 103,
            "content": "  \n  // NEW: Dairy Queen locations from training data\n  { pattern: /DAIRY\\s*QUEEN/i, merchant: 'Dairy Queen', accountCode: '420', confidence: 95 },\n  \n  // NEW: Local restaurants and food places from training data"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 100,
            "endLine": 104,
            "content": "  // NEW: Dairy Queen locations from training data\n  { pattern: /DAIRY\\s*QUEEN/i, merchant: 'Dairy Queen', accountCode: '420', confidence: 95 },\n  \n  // NEW: Local restaurants and food places from training data\n  { pattern: /PHAT\\s*BOY\\s*CHEESE/i, merchant: 'Phat Boy Cheesesteak', accountCode: '420', confidence: 94 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 102,
            "endLine": 106,
            "content": "  \n  // NEW: Local restaurants and food places from training data\n  { pattern: /PHAT\\s*BOY\\s*CHEESE/i, merchant: 'Phat Boy Cheesesteak', accountCode: '420', confidence: 94 },\n  { pattern: /FRANKLIN\\s*DONAIR/i, merchant: 'Franklin Donair', accountCode: '420', confidence: 94 },\n  { pattern: /HA\\s*NOI\\s*PHO/i, merchant: 'Ha Noi Pho Restaurant', accountCode: '420', confidence: 94 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 103,
            "endLine": 107,
            "content": "  // NEW: Local restaurants and food places from training data\n  { pattern: /PHAT\\s*BOY\\s*CHEESE/i, merchant: 'Phat Boy Cheesesteak', accountCode: '420', confidence: 94 },\n  { pattern: /FRANKLIN\\s*DONAIR/i, merchant: 'Franklin Donair', accountCode: '420', confidence: 94 },\n  { pattern: /HA\\s*NOI\\s*PHO/i, merchant: 'Ha Noi Pho Restaurant', accountCode: '420', confidence: 94 },\n  { pattern: /BANH\\s*MI\\s*ZON/i, merchant: 'Banh Mi Zon', accountCode: '420', confidence: 94 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 118,
            "endLine": 122,
            "content": "  \n  // =============================================================================\n  // GAS STATIONS & AUTOMOTIVE (High Confidence)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 119,
            "endLine": 123,
            "content": "  // =============================================================================\n  // GAS STATIONS & AUTOMOTIVE (High Confidence)\n  // =============================================================================\n  \n  { pattern: /SHELL(?:\\s|$)/i, merchant: 'Shell', accountCode: '449', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 122,
            "endLine": 126,
            "content": "  \n  { pattern: /SHELL(?:\\s|$)/i, merchant: 'Shell', accountCode: '449', confidence: 96 },\n  { pattern: /PETRO[\\s-]?CANADA/i, merchant: 'Petro-Canada', accountCode: '449', confidence: 96 },\n  { pattern: /ESSO/i, merchant: 'Esso', accountCode: '449', confidence: 96 },\n  { pattern: /HUSKY/i, merchant: 'Husky', accountCode: '449', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 123,
            "endLine": 127,
            "content": "  { pattern: /SHELL(?:\\s|$)/i, merchant: 'Shell', accountCode: '449', confidence: 96 },\n  { pattern: /PETRO[\\s-]?CANADA/i, merchant: 'Petro-Canada', accountCode: '449', confidence: 96 },\n  { pattern: /ESSO/i, merchant: 'Esso', accountCode: '449', confidence: 96 },\n  { pattern: /HUSKY/i, merchant: 'Husky', accountCode: '449', confidence: 95 },\n  { pattern: /MOHAWK/i, merchant: 'Mohawk', accountCode: '449', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 133,
            "endLine": 137,
            "content": "  \n  // NEW: Specific gas station locations from training data\n  { pattern: /SHELL\\s*C\\d+/i, merchant: 'Shell', accountCode: '449', confidence: 96 },\n  { pattern: /PETRO\\s*CANADA\\d+/i, merchant: 'Petro-Canada', accountCode: '449', confidence: 96 },\n  { pattern: /CHEVRON\\s*\\d+/i, merchant: 'Chevron', accountCode: '449', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 134,
            "endLine": 138,
            "content": "  // NEW: Specific gas station locations from training data\n  { pattern: /SHELL\\s*C\\d+/i, merchant: 'Shell', accountCode: '449', confidence: 96 },\n  { pattern: /PETRO\\s*CANADA\\d+/i, merchant: 'Petro-Canada', accountCode: '449', confidence: 96 },\n  { pattern: /CHEVRON\\s*\\d+/i, merchant: 'Chevron', accountCode: '449', confidence: 96 },\n  { pattern: /FAS\\s*GAS/i, merchant: 'Fas Gas', accountCode: '449', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 141,
            "endLine": 145,
            "content": "  \n  // Auto Services\n  { pattern: /CANADIAN\\s*TIRE/i, merchant: 'Canadian Tire', accountCode: '449', confidence: 85 },\n  { pattern: /JIFFY\\s*LUBE/i, merchant: 'Jiffy Lube', accountCode: '449', confidence: 94 },\n  { pattern: /MR\\.?\\s*LUBE/i, merchant: 'Mr. Lube', accountCode: '449', confidence: 94 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 142,
            "endLine": 146,
            "content": "  // Auto Services\n  { pattern: /CANADIAN\\s*TIRE/i, merchant: 'Canadian Tire', accountCode: '449', confidence: 85 },\n  { pattern: /JIFFY\\s*LUBE/i, merchant: 'Jiffy Lube', accountCode: '449', confidence: 94 },\n  { pattern: /MR\\.?\\s*LUBE/i, merchant: 'Mr. Lube', accountCode: '449', confidence: 94 },\n  { pattern: /VALVOLINE/i, merchant: 'Valvoline', accountCode: '449', confidence: 92 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 143,
            "endLine": 147,
            "content": "  { pattern: /CANADIAN\\s*TIRE/i, merchant: 'Canadian Tire', accountCode: '449', confidence: 85 },\n  { pattern: /JIFFY\\s*LUBE/i, merchant: 'Jiffy Lube', accountCode: '449', confidence: 94 },\n  { pattern: /MR\\.?\\s*LUBE/i, merchant: 'Mr. Lube', accountCode: '449', confidence: 94 },\n  { pattern: /VALVOLINE/i, merchant: 'Valvoline', accountCode: '449', confidence: 92 },\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 203,
            "endLine": 207,
            "content": "  { pattern: /CANADIAN\\s*TIRE/i, merchant: 'Canadian Tire', accountCode: '449', confidence: 85 },\n  { pattern: /HOME\\s*DEPOT/i, merchant: 'Home Depot', accountCode: '455', confidence: 95 },\n  { pattern: /RONA/i, merchant: 'Rona', accountCode: '455', confidence: 95 },\n  { pattern: /LOWE'?S/i, merchant: 'Lowes', accountCode: '455', confidence: 95 },\n  { pattern: /HOMESENSE/i, merchant: 'Homesense', accountCode: '453', confidence: 94 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 147,
            "endLine": 151,
            "content": "  \n  // NEW: Auto services from training data\n  { pattern: /PARTSOURCE/i, merchant: 'PartsSource', accountCode: '449', confidence: 94 },\n  { pattern: /SHERWOOD\\s*FORD/i, merchant: 'Sherwood Ford', accountCode: '449', confidence: 94 },\n  { pattern: /MING\\s*AUTO/i, merchant: 'Ming Auto', accountCode: '449', confidence: 94 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 148,
            "endLine": 152,
            "content": "  // NEW: Auto services from training data\n  { pattern: /PARTSOURCE/i, merchant: 'PartsSource', accountCode: '449', confidence: 94 },\n  { pattern: /SHERWOOD\\s*FORD/i, merchant: 'Sherwood Ford', accountCode: '449', confidence: 94 },\n  { pattern: /MING\\s*AUTO/i, merchant: 'Ming Auto', accountCode: '449', confidence: 94 },\n  { pattern: /TIRES\\s*NOW/i, merchant: 'Tires Now', accountCode: '449', confidence: 94 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 159,
            "endLine": 163,
            "content": "  \n  // =============================================================================\n  // BANKING & FINANCIAL SERVICES (Very High Confidence)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 160,
            "endLine": 164,
            "content": "  // =============================================================================\n  // BANKING & FINANCIAL SERVICES (Very High Confidence)\n  // =============================================================================\n  \n  // E-Transfer Patterns REMOVED - now require manual entry"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 163,
            "endLine": 167,
            "content": "  \n  // E-Transfer Patterns REMOVED - now require manual entry\n  \n  // Deposit Patterns (Enhanced)\n  { pattern: /DEPOSIT/i, merchant: 'Deposit', accountCode: '200', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 164,
            "endLine": 168,
            "content": "  // E-Transfer Patterns REMOVED - now require manual entry\n  \n  // Deposit Patterns (Enhanced)\n  { pattern: /DEPOSIT/i, merchant: 'Deposit', accountCode: '200', confidence: 95 },\n  { pattern: /CASH\\s*DEPOSIT/i, merchant: 'Cash Deposit', accountCode: '200', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 165,
            "endLine": 169,
            "content": "  \n  // Deposit Patterns (Enhanced)\n  { pattern: /DEPOSIT/i, merchant: 'Deposit', accountCode: '200', confidence: 95 },\n  { pattern: /CASH\\s*DEPOSIT/i, merchant: 'Cash Deposit', accountCode: '200', confidence: 96 },\n  // REMOVED: Cheque patterns now require manual entry"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 166,
            "endLine": 170,
            "content": "  // Deposit Patterns (Enhanced)\n  { pattern: /DEPOSIT/i, merchant: 'Deposit', accountCode: '200', confidence: 95 },\n  { pattern: /CASH\\s*DEPOSIT/i, merchant: 'Cash Deposit', accountCode: '200', confidence: 96 },\n  // REMOVED: Cheque patterns now require manual entry\n  { pattern: /DIRECT\\s*DEPOSIT/i, merchant: 'Direct Deposit', accountCode: '200', confidence: 97 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 176,
            "endLine": 180,
            "content": "  \n  // ATM Transactions (Fixed: should be Accounts Receivable, not Bank Fees or Revenue)\n  { pattern: /ATM\\s*WITHDRAWAL/i, merchant: 'ATM Withdrawal', accountCode: '610', confidence: 97 },\n  { pattern: /ATM\\s*DEPOSIT/i, merchant: 'ATM Deposit', accountCode: '610', confidence: 97 },\n  { pattern: /ATM\\s*TRANSACTION/i, merchant: 'ATM Transaction', accountCode: '610', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 177,
            "endLine": 181,
            "content": "  // ATM Transactions (Fixed: should be Accounts Receivable, not Bank Fees or Revenue)\n  { pattern: /ATM\\s*WITHDRAWAL/i, merchant: 'ATM Withdrawal', accountCode: '610', confidence: 97 },\n  { pattern: /ATM\\s*DEPOSIT/i, merchant: 'ATM Deposit', accountCode: '610', confidence: 97 },\n  { pattern: /ATM\\s*TRANSACTION/i, merchant: 'ATM Transaction', accountCode: '610', confidence: 95 },\n  { pattern: /CASH\\s*WITHDRAWAL/i, merchant: 'Cash Withdrawal', accountCode: '610', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 182,
            "endLine": 186,
            "content": "  \n  // Bank Fees (Enhanced)\n  { pattern: /MONTHLY\\s*FEE/i, merchant: 'Bank Fee', accountCode: '404', confidence: 98 },\n  { pattern: /SERVICE\\s*CHARGE/i, merchant: 'Bank Fee', accountCode: '404', confidence: 97 },\n  { pattern: /OVERDRAFT/i, merchant: 'Bank Fee', accountCode: '404', confidence: 98 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 183,
            "endLine": 187,
            "content": "  // Bank Fees (Enhanced)\n  { pattern: /MONTHLY\\s*FEE/i, merchant: 'Bank Fee', accountCode: '404', confidence: 98 },\n  { pattern: /SERVICE\\s*CHARGE/i, merchant: 'Bank Fee', accountCode: '404', confidence: 97 },\n  { pattern: /OVERDRAFT/i, merchant: 'Bank Fee', accountCode: '404', confidence: 98 },\n  { pattern: /NSF\\s*FEE/i, merchant: 'Bank Fee', accountCode: '404', confidence: 98 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 195,
            "endLine": 199,
            "content": "  \n  // =============================================================================\n  // RETAIL & SHOPPING (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 196,
            "endLine": 200,
            "content": "  // =============================================================================\n  // RETAIL & SHOPPING (Enhanced)\n  // =============================================================================\n  \n  // Major Retail Chains"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 464,
            "endLine": 468,
            "content": "  \n  // =============================================================================\n  // RETAIL & SHOPPING (Medium-High Confidence)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 465,
            "endLine": 469,
            "content": "  // =============================================================================\n  // RETAIL & SHOPPING (Medium-High Confidence)\n  // =============================================================================\n  \n  // Major Canadian Retailers"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 199,
            "endLine": 203,
            "content": "  \n  // Major Retail Chains\n  { pattern: /WALMART/i, merchant: 'Walmart', accountCode: '453', confidence: 96 },\n  { pattern: /COSTCO/i, merchant: 'Costco', accountCode: '453', confidence: 96 },\n  { pattern: /CANADIAN\\s*TIRE/i, merchant: 'Canadian Tire', accountCode: '449', confidence: 85 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 200,
            "endLine": 204,
            "content": "  // Major Retail Chains\n  { pattern: /WALMART/i, merchant: 'Walmart', accountCode: '453', confidence: 96 },\n  { pattern: /COSTCO/i, merchant: 'Costco', accountCode: '453', confidence: 96 },\n  { pattern: /CANADIAN\\s*TIRE/i, merchant: 'Canadian Tire', accountCode: '449', confidence: 85 },\n  { pattern: /HOME\\s*DEPOT/i, merchant: 'Home Depot', accountCode: '455', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 211,
            "endLine": 215,
            "content": "  \n  // Grocery Stores\n  { pattern: /SAFEWAY/i, merchant: 'Safeway', accountCode: '453', confidence: 96 },\n  { pattern: /SOBEYS/i, merchant: 'Sobeys', accountCode: '453', confidence: 96 },\n  { pattern: /SUPERSTORE/i, merchant: 'Superstore', accountCode: '453', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 212,
            "endLine": 216,
            "content": "  // Grocery Stores\n  { pattern: /SAFEWAY/i, merchant: 'Safeway', accountCode: '453', confidence: 96 },\n  { pattern: /SOBEYS/i, merchant: 'Sobeys', accountCode: '453', confidence: 96 },\n  { pattern: /SUPERSTORE/i, merchant: 'Superstore', accountCode: '453', confidence: 96 },\n  { pattern: /NO\\s*FRILLS/i, merchant: 'No Frills', accountCode: '453', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 224,
            "endLine": 228,
            "content": "  \n  // Drug Stores\n  { pattern: /SHOPPERS\\s*DRUG\\s*MART/i, merchant: 'Shoppers Drug Mart', accountCode: '453', confidence: 96 },\n  { pattern: /REXALL/i, merchant: 'Rexall', accountCode: '453', confidence: 96 },\n  { pattern: /LONDON\\s*DRUGS/i, merchant: 'London Drugs', accountCode: '453', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 225,
            "endLine": 229,
            "content": "  // Drug Stores\n  { pattern: /SHOPPERS\\s*DRUG\\s*MART/i, merchant: 'Shoppers Drug Mart', accountCode: '453', confidence: 96 },\n  { pattern: /REXALL/i, merchant: 'Rexall', accountCode: '453', confidence: 96 },\n  { pattern: /LONDON\\s*DRUGS/i, merchant: 'London Drugs', accountCode: '453', confidence: 96 },\n  { pattern: /PHARMASAVE/i, merchant: 'Pharmasave', accountCode: '453', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 231,
            "endLine": 235,
            "content": "  \n  // =============================================================================\n  // TELECOMMUNICATIONS (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 232,
            "endLine": 236,
            "content": "  // =============================================================================\n  // TELECOMMUNICATIONS (Enhanced)\n  // =============================================================================\n  \n  { pattern: /BELL\\s*CANADA/i, merchant: 'Bell Canada', accountCode: '489', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 511,
            "endLine": 515,
            "content": "  \n  // =============================================================================\n  // TELECOMMUNICATIONS & UTILITIES (High Confidence)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 512,
            "endLine": 516,
            "content": "  // =============================================================================\n  // TELECOMMUNICATIONS & UTILITIES (High Confidence)\n  // =============================================================================\n  \n  // Telecommunications"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 235,
            "endLine": 239,
            "content": "  \n  { pattern: /BELL\\s*CANADA/i, merchant: 'Bell Canada', accountCode: '489', confidence: 96 },\n  { pattern: /ROGERS/i, merchant: 'Rogers', accountCode: '489', confidence: 96 },\n  { pattern: /TELUS/i, merchant: 'Telus', accountCode: '489', confidence: 96 },\n  { pattern: /SHAW/i, merchant: 'Shaw', accountCode: '489', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 236,
            "endLine": 240,
            "content": "  { pattern: /BELL\\s*CANADA/i, merchant: 'Bell Canada', accountCode: '489', confidence: 96 },\n  { pattern: /ROGERS/i, merchant: 'Rogers', accountCode: '489', confidence: 96 },\n  { pattern: /TELUS/i, merchant: 'Telus', accountCode: '489', confidence: 96 },\n  { pattern: /SHAW/i, merchant: 'Shaw', accountCode: '489', confidence: 96 },\n  { pattern: /COGECO/i, merchant: 'Cogeco', accountCode: '489', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 246,
            "endLine": 250,
            "content": "  \n  // =============================================================================\n  // INSURANCE (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 247,
            "endLine": 251,
            "content": "  // =============================================================================\n  // INSURANCE (Enhanced)\n  // =============================================================================\n  \n  { pattern: /WAWANESA/i, merchant: 'Wawanesa Insurance', accountCode: '433', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 250,
            "endLine": 254,
            "content": "  \n  { pattern: /WAWANESA/i, merchant: 'Wawanesa Insurance', accountCode: '433', confidence: 96 },\n  { pattern: /INTACT/i, merchant: 'Intact Insurance', accountCode: '433', confidence: 96 },\n  { pattern: /TD\\s*INSURANCE/i, merchant: 'TD Insurance', accountCode: '433', confidence: 96 },\n  { pattern: /RBC\\s*INSURANCE/i, merchant: 'RBC Insurance', accountCode: '433', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 251,
            "endLine": 255,
            "content": "  { pattern: /WAWANESA/i, merchant: 'Wawanesa Insurance', accountCode: '433', confidence: 96 },\n  { pattern: /INTACT/i, merchant: 'Intact Insurance', accountCode: '433', confidence: 96 },\n  { pattern: /TD\\s*INSURANCE/i, merchant: 'TD Insurance', accountCode: '433', confidence: 96 },\n  { pattern: /RBC\\s*INSURANCE/i, merchant: 'RBC Insurance', accountCode: '433', confidence: 96 },\n  { pattern: /COOPERATORS/i, merchant: 'Cooperators', accountCode: '433', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 259,
            "endLine": 263,
            "content": "  \n  // =============================================================================\n  // UTILITIES (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 260,
            "endLine": 264,
            "content": "  // =============================================================================\n  // UTILITIES (Enhanced)\n  // =============================================================================\n  \n  { pattern: /ENBRIDGE/i, merchant: 'Enbridge', accountCode: '442', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 263,
            "endLine": 267,
            "content": "  \n  { pattern: /ENBRIDGE/i, merchant: 'Enbridge', accountCode: '442', confidence: 96 },\n  { pattern: /UNION\\s*GAS/i, merchant: 'Union Gas', accountCode: '442', confidence: 96 },\n  { pattern: /ATCO\\s*GAS/i, merchant: 'ATCO Gas', accountCode: '442', confidence: 96 },\n  { pattern: /FORTIS\\s*BC/i, merchant: 'Fortis BC', accountCode: '442', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 264,
            "endLine": 268,
            "content": "  { pattern: /ENBRIDGE/i, merchant: 'Enbridge', accountCode: '442', confidence: 96 },\n  { pattern: /UNION\\s*GAS/i, merchant: 'Union Gas', accountCode: '442', confidence: 96 },\n  { pattern: /ATCO\\s*GAS/i, merchant: 'ATCO Gas', accountCode: '442', confidence: 96 },\n  { pattern: /FORTIS\\s*BC/i, merchant: 'Fortis BC', accountCode: '442', confidence: 96 },\n  { pattern: /HYDRO\\s*ONE/i, merchant: 'Hydro One', accountCode: '442', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 272,
            "endLine": 276,
            "content": "  \n  // =============================================================================\n  // ENTERTAINMENT & SUBSCRIPTIONS (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 273,
            "endLine": 277,
            "content": "  // =============================================================================\n  // ENTERTAINMENT & SUBSCRIPTIONS (Enhanced)\n  // =============================================================================\n  \n  { pattern: /NETFLIX/i, merchant: 'Netflix', accountCode: '420', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 276,
            "endLine": 280,
            "content": "  \n  { pattern: /NETFLIX/i, merchant: 'Netflix', accountCode: '420', confidence: 96 },\n  { pattern: /SPOTIFY/i, merchant: 'Spotify', accountCode: '420', confidence: 96 },\n  { pattern: /AMAZON\\s*PRIME/i, merchant: 'Amazon Prime', accountCode: '485', confidence: 96 },\n  { pattern: /DISNEY\\s*PLUS/i, merchant: 'Disney Plus', accountCode: '420', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 277,
            "endLine": 281,
            "content": "  { pattern: /NETFLIX/i, merchant: 'Netflix', accountCode: '420', confidence: 96 },\n  { pattern: /SPOTIFY/i, merchant: 'Spotify', accountCode: '420', confidence: 96 },\n  { pattern: /AMAZON\\s*PRIME/i, merchant: 'Amazon Prime', accountCode: '485', confidence: 96 },\n  { pattern: /DISNEY\\s*PLUS/i, merchant: 'Disney Plus', accountCode: '420', confidence: 96 },\n  { pattern: /APPLE\\s*TV/i, merchant: 'Apple TV', accountCode: '420', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 286,
            "endLine": 290,
            "content": "  \n  // =============================================================================\n  // GOVERNMENT & TAXES (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 287,
            "endLine": 291,
            "content": "  // =============================================================================\n  // GOVERNMENT & TAXES (Enhanced)\n  // =============================================================================\n  \n  { pattern: /CRA/i, merchant: 'Canada Revenue Agency', accountCode: '505', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 290,
            "endLine": 294,
            "content": "  \n  { pattern: /CRA/i, merchant: 'Canada Revenue Agency', accountCode: '505', confidence: 96 },\n  { pattern: /CANADA\\s*REVENUE\\s*AGENCY/i, merchant: 'Canada Revenue Agency', accountCode: '505', confidence: 96 },\n  { pattern: /SERVICE\\s*CANADA/i, merchant: 'Service Canada', accountCode: '505', confidence: 96 },\n  { pattern: /SERVICE\\s*ONTARIO/i, merchant: 'Service Ontario', accountCode: '505', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 291,
            "endLine": 295,
            "content": "  { pattern: /CRA/i, merchant: 'Canada Revenue Agency', accountCode: '505', confidence: 96 },\n  { pattern: /CANADA\\s*REVENUE\\s*AGENCY/i, merchant: 'Canada Revenue Agency', accountCode: '505', confidence: 96 },\n  { pattern: /SERVICE\\s*CANADA/i, merchant: 'Service Canada', accountCode: '505', confidence: 96 },\n  { pattern: /SERVICE\\s*ONTARIO/i, merchant: 'Service Ontario', accountCode: '505', confidence: 96 },\n  { pattern: /GOVERNMENT\\s*OF\\s*CANADA/i, merchant: 'Government of Canada', accountCode: '505', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 299,
            "endLine": 303,
            "content": "  \n  // =============================================================================\n  // ONLINE SERVICES & SOFTWARE (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 300,
            "endLine": 304,
            "content": "  // =============================================================================\n  // ONLINE SERVICES & SOFTWARE (Enhanced)\n  // =============================================================================\n  \n  { pattern: /GOOGLE/i, merchant: 'Google', accountCode: '485', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 303,
            "endLine": 307,
            "content": "  \n  { pattern: /GOOGLE/i, merchant: 'Google', accountCode: '485', confidence: 95 },\n  { pattern: /MICROSOFT/i, merchant: 'Microsoft', accountCode: '485', confidence: 95 },\n  { pattern: /ADOBE/i, merchant: 'Adobe', accountCode: '485', confidence: 95 },\n  { pattern: /ZOOM/i, merchant: 'Zoom', accountCode: '485', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 304,
            "endLine": 308,
            "content": "  { pattern: /GOOGLE/i, merchant: 'Google', accountCode: '485', confidence: 95 },\n  { pattern: /MICROSOFT/i, merchant: 'Microsoft', accountCode: '485', confidence: 95 },\n  { pattern: /ADOBE/i, merchant: 'Adobe', accountCode: '485', confidence: 95 },\n  { pattern: /ZOOM/i, merchant: 'Zoom', accountCode: '485', confidence: 95 },\n  { pattern: /SLACK/i, merchant: 'Slack', accountCode: '485', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 316,
            "endLine": 320,
            "content": "  \n  // =============================================================================\n  // TRAVEL & ACCOMMODATION (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 317,
            "endLine": 321,
            "content": "  // =============================================================================\n  // TRAVEL & ACCOMMODATION (Enhanced)\n  // =============================================================================\n  \n  { pattern: /AIR\\s*CANADA/i, merchant: 'Air Canada', accountCode: '493', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 320,
            "endLine": 324,
            "content": "  \n  { pattern: /AIR\\s*CANADA/i, merchant: 'Air Canada', accountCode: '493', confidence: 96 },\n  { pattern: /WESTJET/i, merchant: 'WestJet', accountCode: '493', confidence: 96 },\n  { pattern: /PORTER/i, merchant: 'Porter Airlines', accountCode: '493', confidence: 96 },\n  { pattern: /EXPEDIA/i, merchant: 'Expedia', accountCode: '493', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 321,
            "endLine": 325,
            "content": "  { pattern: /AIR\\s*CANADA/i, merchant: 'Air Canada', accountCode: '493', confidence: 96 },\n  { pattern: /WESTJET/i, merchant: 'WestJet', accountCode: '493', confidence: 96 },\n  { pattern: /PORTER/i, merchant: 'Porter Airlines', accountCode: '493', confidence: 96 },\n  { pattern: /EXPEDIA/i, merchant: 'Expedia', accountCode: '493', confidence: 95 },\n  { pattern: /BOOKING\\.COM/i, merchant: 'Booking.com', accountCode: '493', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 331,
            "endLine": 335,
            "content": "  \n  // =============================================================================\n  // EDUCATION & TRAINING (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 332,
            "endLine": 336,
            "content": "  // =============================================================================\n  // EDUCATION & TRAINING (Enhanced)\n  // =============================================================================\n  \n  { pattern: /UNIVERSITY\\s*OF\\s*TORONTO/i, merchant: 'University of Toronto', accountCode: '487', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 335,
            "endLine": 339,
            "content": "  \n  { pattern: /UNIVERSITY\\s*OF\\s*TORONTO/i, merchant: 'University of Toronto', accountCode: '487', confidence: 96 },\n  { pattern: /UNIVERSITY\\s*OF\\s*BRITISH\\s*COLUMBIA/i, merchant: 'University of British Columbia', accountCode: '487', confidence: 96 },\n  { pattern: /UNIVERSITY\\s*OF\\s*ALBERTA/i, merchant: 'University of Alberta', accountCode: '487', confidence: 96 },\n  { pattern: /UNIVERSITY\\s*OF\\s*CALGARY/i, merchant: 'University of Calgary', accountCode: '487', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 336,
            "endLine": 340,
            "content": "  { pattern: /UNIVERSITY\\s*OF\\s*TORONTO/i, merchant: 'University of Toronto', accountCode: '487', confidence: 96 },\n  { pattern: /UNIVERSITY\\s*OF\\s*BRITISH\\s*COLUMBIA/i, merchant: 'University of British Columbia', accountCode: '487', confidence: 96 },\n  { pattern: /UNIVERSITY\\s*OF\\s*ALBERTA/i, merchant: 'University of Alberta', accountCode: '487', confidence: 96 },\n  { pattern: /UNIVERSITY\\s*OF\\s*CALGARY/i, merchant: 'University of Calgary', accountCode: '487', confidence: 96 },\n  { pattern: /UNIVERSITY\\s*OF\\s*WATERLOO/i, merchant: 'University of Waterloo', accountCode: '487', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 346,
            "endLine": 350,
            "content": "  \n  // =============================================================================\n  // PROFESSIONAL SERVICES (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 347,
            "endLine": 351,
            "content": "  // =============================================================================\n  // PROFESSIONAL SERVICES (Enhanced)\n  // =============================================================================\n  \n  { pattern: /LAWYER/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 543,
            "endLine": 547,
            "content": "  \n  // =============================================================================\n  // PROFESSIONAL SERVICES (High Confidence)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 544,
            "endLine": 548,
            "content": "  // =============================================================================\n  // PROFESSIONAL SERVICES (High Confidence)\n  // =============================================================================\n  \n  { pattern: /LAWYER/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 349,
            "endLine": 353,
            "content": "  // =============================================================================\n  \n  { pattern: /LAWYER/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },\n  { pattern: /ATTORNEY/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },\n  { pattern: /LAW\\s*FIRM/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 546,
            "endLine": 550,
            "content": "  // =============================================================================\n  \n  { pattern: /LAWYER/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },\n  { pattern: /ACCOUNTANT/i, merchant: 'Accounting Services', accountCode: '412', confidence: 95 },\n  { pattern: /CONSULTANT/i, merchant: 'Consulting Services', accountCode: '412', confidence: 90 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 350,
            "endLine": 354,
            "content": "  \n  { pattern: /LAWYER/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },\n  { pattern: /ATTORNEY/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },\n  { pattern: /LAW\\s*FIRM/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },\n  { pattern: /ACCOUNTANT/i, merchant: 'Accounting Services', accountCode: '412', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 351,
            "endLine": 355,
            "content": "  { pattern: /LAWYER/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },\n  { pattern: /ATTORNEY/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },\n  { pattern: /LAW\\s*FIRM/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },\n  { pattern: /ACCOUNTANT/i, merchant: 'Accounting Services', accountCode: '412', confidence: 95 },\n  { pattern: /CPA/i, merchant: 'Accounting Services', accountCode: '412', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 547,
            "endLine": 551,
            "content": "  \n  { pattern: /LAWYER/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },\n  { pattern: /ACCOUNTANT/i, merchant: 'Accounting Services', accountCode: '412', confidence: 95 },\n  { pattern: /CONSULTANT/i, merchant: 'Consulting Services', accountCode: '412', confidence: 90 },\n  { pattern: /DENTIST/i, merchant: 'Dental Services', accountCode: '453', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 548,
            "endLine": 552,
            "content": "  { pattern: /LAWYER/i, merchant: 'Legal Services', accountCode: '412', confidence: 95 },\n  { pattern: /ACCOUNTANT/i, merchant: 'Accounting Services', accountCode: '412', confidence: 95 },\n  { pattern: /CONSULTANT/i, merchant: 'Consulting Services', accountCode: '412', confidence: 90 },\n  { pattern: /DENTIST/i, merchant: 'Dental Services', accountCode: '453', confidence: 95 },\n  { pattern: /DOCTOR/i, merchant: 'Medical Services', accountCode: '453', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 354,
            "endLine": 358,
            "content": "  { pattern: /ACCOUNTANT/i, merchant: 'Accounting Services', accountCode: '412', confidence: 95 },\n  { pattern: /CPA/i, merchant: 'Accounting Services', accountCode: '412', confidence: 95 },\n  { pattern: /CONSULTANT/i, merchant: 'Consulting Services', accountCode: '412', confidence: 90 },\n  { pattern: /CONSULTING/i, merchant: 'Consulting Services', accountCode: '412', confidence: 90 },\n  { pattern: /MARKETING/i, merchant: 'Marketing Services', accountCode: '400', confidence: 90 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 549,
            "endLine": 553,
            "content": "  { pattern: /ACCOUNTANT/i, merchant: 'Accounting Services', accountCode: '412', confidence: 95 },\n  { pattern: /CONSULTANT/i, merchant: 'Consulting Services', accountCode: '412', confidence: 90 },\n  { pattern: /DENTIST/i, merchant: 'Dental Services', accountCode: '453', confidence: 95 },\n  { pattern: /DOCTOR/i, merchant: 'Medical Services', accountCode: '453', confidence: 95 },\n  { pattern: /PHARMACY/i, merchant: 'Pharmacy', accountCode: '453', confidence: 82 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 356,
            "endLine": 360,
            "content": "  { pattern: /CONSULTANT/i, merchant: 'Consulting Services', accountCode: '412', confidence: 90 },\n  { pattern: /CONSULTING/i, merchant: 'Consulting Services', accountCode: '412', confidence: 90 },\n  { pattern: /MARKETING/i, merchant: 'Marketing Services', accountCode: '400', confidence: 90 },\n  { pattern: /ADVERTISING/i, merchant: 'Advertising Services', accountCode: '400', confidence: 90 },\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 550,
            "endLine": 554,
            "content": "  { pattern: /CONSULTANT/i, merchant: 'Consulting Services', accountCode: '412', confidence: 90 },\n  { pattern: /DENTIST/i, merchant: 'Dental Services', accountCode: '453', confidence: 95 },\n  { pattern: /DOCTOR/i, merchant: 'Medical Services', accountCode: '453', confidence: 95 },\n  { pattern: /PHARMACY/i, merchant: 'Pharmacy', accountCode: '453', confidence: 82 },\n  { pattern: /DRUGSTORE/i, merchant: 'Drugstore', accountCode: '453', confidence: 80 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 360,
            "endLine": 364,
            "content": "  \n  // =============================================================================\n  // HEALTH & MEDICAL (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 361,
            "endLine": 365,
            "content": "  // =============================================================================\n  // HEALTH & MEDICAL (Enhanced)\n  // =============================================================================\n  \n  { pattern: /PHARMACY/i, merchant: 'Pharmacy', accountCode: '453', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 364,
            "endLine": 368,
            "content": "  \n  { pattern: /PHARMACY/i, merchant: 'Pharmacy', accountCode: '453', confidence: 95 },\n  { pattern: /DRUG\\s*STORE/i, merchant: 'Drug Store', accountCode: '453', confidence: 95 },\n  { pattern: /MEDICAL/i, merchant: 'Medical Services', accountCode: '453', confidence: 90 },\n  { pattern: /DENTAL/i, merchant: 'Dental Services', accountCode: '453', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 365,
            "endLine": 369,
            "content": "  { pattern: /PHARMACY/i, merchant: 'Pharmacy', accountCode: '453', confidence: 95 },\n  { pattern: /DRUG\\s*STORE/i, merchant: 'Drug Store', accountCode: '453', confidence: 95 },\n  { pattern: /MEDICAL/i, merchant: 'Medical Services', accountCode: '453', confidence: 90 },\n  { pattern: /DENTAL/i, merchant: 'Dental Services', accountCode: '453', confidence: 95 },\n  { pattern: /DENTIST/i, merchant: 'Dental Services', accountCode: '453', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 369,
            "endLine": 373,
            "content": "  { pattern: /DENTIST/i, merchant: 'Dental Services', accountCode: '453', confidence: 95 },\n  { pattern: /DOCTOR/i, merchant: 'Medical Services', accountCode: '453', confidence: 90 },\n  { pattern: /HOSPITAL/i, merchant: 'Hospital', accountCode: '453', confidence: 95 },\n  { pattern: /CLINIC/i, merchant: 'Medical Clinic', accountCode: '453', confidence: 90 },\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 551,
            "endLine": 555,
            "content": "  { pattern: /DENTIST/i, merchant: 'Dental Services', accountCode: '453', confidence: 95 },\n  { pattern: /DOCTOR/i, merchant: 'Medical Services', accountCode: '453', confidence: 95 },\n  { pattern: /PHARMACY/i, merchant: 'Pharmacy', accountCode: '453', confidence: 82 },\n  { pattern: /DRUGSTORE/i, merchant: 'Drugstore', accountCode: '453', confidence: 80 },\n  { pattern: /GROCERY/i, merchant: 'Grocery Store', accountCode: '453', confidence: 78 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 373,
            "endLine": 377,
            "content": "  \n  // =============================================================================\n  // AUTOMOTIVE & TRANSPORTATION (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 374,
            "endLine": 378,
            "content": "  // =============================================================================\n  // AUTOMOTIVE & TRANSPORTATION (Enhanced)\n  // =============================================================================\n  \n  { pattern: /UBER/i, merchant: 'Uber', accountCode: '493', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 377,
            "endLine": 381,
            "content": "  \n  { pattern: /UBER/i, merchant: 'Uber', accountCode: '493', confidence: 95 },\n  { pattern: /LYFT/i, merchant: 'Lyft', accountCode: '493', confidence: 95 },\n  { pattern: /TAXI/i, merchant: 'Taxi', accountCode: '493', confidence: 95 },\n  { pattern: /TRANSIT/i, merchant: 'Public Transit', accountCode: '493', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 378,
            "endLine": 382,
            "content": "  { pattern: /UBER/i, merchant: 'Uber', accountCode: '493', confidence: 95 },\n  { pattern: /LYFT/i, merchant: 'Lyft', accountCode: '493', confidence: 95 },\n  { pattern: /TAXI/i, merchant: 'Taxi', accountCode: '493', confidence: 95 },\n  { pattern: /TRANSIT/i, merchant: 'Public Transit', accountCode: '493', confidence: 95 },\n  { pattern: /GO\\s*TRANSIT/i, merchant: 'GO Transit', accountCode: '493', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 387,
            "endLine": 391,
            "content": "  \n  // =============================================================================\n  // HOME & GARDEN (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 388,
            "endLine": 392,
            "content": "  // =============================================================================\n  // HOME & GARDEN (Enhanced)\n  // =============================================================================\n  \n  { pattern: /IKEA/i, merchant: 'IKEA', accountCode: '455', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 391,
            "endLine": 395,
            "content": "  \n  { pattern: /IKEA/i, merchant: 'IKEA', accountCode: '455', confidence: 96 },\n  { pattern: /BED\\s*BATH\\s*&?\\s*BEYOND/i, merchant: 'Bed Bath & Beyond', accountCode: '455', confidence: 95 },\n  { pattern: /WILLIAMS\\s*SONOMA/i, merchant: 'Williams Sonoma', accountCode: '455', confidence: 95 },\n  { pattern: /POTTERY\\s*BARN/i, merchant: 'Pottery Barn', accountCode: '455', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 392,
            "endLine": 396,
            "content": "  { pattern: /IKEA/i, merchant: 'IKEA', accountCode: '455', confidence: 96 },\n  { pattern: /BED\\s*BATH\\s*&?\\s*BEYOND/i, merchant: 'Bed Bath & Beyond', accountCode: '455', confidence: 95 },\n  { pattern: /WILLIAMS\\s*SONOMA/i, merchant: 'Williams Sonoma', accountCode: '455', confidence: 95 },\n  { pattern: /POTTERY\\s*BARN/i, merchant: 'Pottery Barn', accountCode: '455', confidence: 95 },\n  { pattern: /CRATE\\s*&?\\s*BARREL/i, merchant: 'Crate & Barrel', accountCode: '455', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 398,
            "endLine": 402,
            "content": "  \n  // =============================================================================\n  // SPORTS & FITNESS (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 399,
            "endLine": 403,
            "content": "  // =============================================================================\n  // SPORTS & FITNESS (Enhanced)\n  // =============================================================================\n  \n  { pattern: /GOODLIFE/i, merchant: 'GoodLife Fitness', accountCode: '420', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 402,
            "endLine": 406,
            "content": "  \n  { pattern: /GOODLIFE/i, merchant: 'GoodLife Fitness', accountCode: '420', confidence: 95 },\n  { pattern: /FITNESS\\s*WORLD/i, merchant: 'Fitness World', accountCode: '420', confidence: 95 },\n  { pattern: /YMCA/i, merchant: 'YMCA', accountCode: '420', confidence: 95 },\n  { pattern: /YWCA/i, merchant: 'YWCA', accountCode: '420', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 403,
            "endLine": 407,
            "content": "  { pattern: /GOODLIFE/i, merchant: 'GoodLife Fitness', accountCode: '420', confidence: 95 },\n  { pattern: /FITNESS\\s*WORLD/i, merchant: 'Fitness World', accountCode: '420', confidence: 95 },\n  { pattern: /YMCA/i, merchant: 'YMCA', accountCode: '420', confidence: 95 },\n  { pattern: /YWCA/i, merchant: 'YWCA', accountCode: '420', confidence: 95 },\n  { pattern: /PLANET\\s*FITNESS/i, merchant: 'Planet Fitness', accountCode: '420', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 410,
            "endLine": 414,
            "content": "  \n  // =============================================================================\n  // FINANCIAL SERVICES (Enhanced)\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 411,
            "endLine": 415,
            "content": "  // =============================================================================\n  // FINANCIAL SERVICES (Enhanced)\n  // =============================================================================\n  \n  { pattern: /TD\\s*CANADA\\s*TRUST/i, merchant: 'TD Canada Trust', accountCode: '404', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 414,
            "endLine": 418,
            "content": "  \n  { pattern: /TD\\s*CANADA\\s*TRUST/i, merchant: 'TD Canada Trust', accountCode: '404', confidence: 96 },\n  { pattern: /RBC\\s*ROYAL\\s*BANK/i, merchant: 'RBC Royal Bank', accountCode: '404', confidence: 96 },\n  { pattern: /BMO\\s*BANK\\s*OF\\s*MONTREAL/i, merchant: 'BMO Bank of Montreal', accountCode: '404', confidence: 96 },\n  { pattern: /SCOTIABANK/i, merchant: 'Scotiabank', accountCode: '404', confidence: 96 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 415,
            "endLine": 419,
            "content": "  { pattern: /TD\\s*CANADA\\s*TRUST/i, merchant: 'TD Canada Trust', accountCode: '404', confidence: 96 },\n  { pattern: /RBC\\s*ROYAL\\s*BANK/i, merchant: 'RBC Royal Bank', accountCode: '404', confidence: 96 },\n  { pattern: /BMO\\s*BANK\\s*OF\\s*MONTREAL/i, merchant: 'BMO Bank of Montreal', accountCode: '404', confidence: 96 },\n  { pattern: /SCOTIABANK/i, merchant: 'Scotiabank', accountCode: '404', confidence: 96 },\n  { pattern: /CIBC/i, merchant: 'CIBC', accountCode: '404', confidence: 96 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 429,
            "endLine": 433,
            "content": "  \n  // NEW: Specific bank fees from training data\n  { pattern: /ACC\\s*FEE[-\\s]*SELF\\s*SERV/i, merchant: 'Bank Fee', accountCode: '404', confidence: 98 },\n  { pattern: /LOAN\\s*ADMIN\\s*FEE/i, merchant: 'Loan Fee', accountCode: '404', confidence: 97 },\n  { pattern: /OVERDRAFT\\s*INTEREST/i, merchant: 'Overdraft Interest', accountCode: '404', confidence: 98 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 430,
            "endLine": 434,
            "content": "  // NEW: Specific bank fees from training data\n  { pattern: /ACC\\s*FEE[-\\s]*SELF\\s*SERV/i, merchant: 'Bank Fee', accountCode: '404', confidence: 98 },\n  { pattern: /LOAN\\s*ADMIN\\s*FEE/i, merchant: 'Loan Fee', accountCode: '404', confidence: 97 },\n  { pattern: /OVERDRAFT\\s*INTEREST/i, merchant: 'Overdraft Interest', accountCode: '404', confidence: 98 },\n  { pattern: /E-TRANSFER\\s*(?:NWK\\s*)?FEE(?!\\s*FREE)/i, merchant: 'E-Transfer Fee', accountCode: '404', confidence: 97 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 436,
            "endLine": 440,
            "content": "  \n  // Interest & Investment (Enhanced)\n  { pattern: /INTEREST\\s*INCOME/i, merchant: 'Interest Income', accountCode: '270', confidence: 98 },\n  { pattern: /DIVIDEND/i, merchant: 'Dividend', accountCode: '270', confidence: 95 },\n  { pattern: /INVESTMENT/i, merchant: 'Investment', accountCode: '270', confidence: 90 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 437,
            "endLine": 441,
            "content": "  // Interest & Investment (Enhanced)\n  { pattern: /INTEREST\\s*INCOME/i, merchant: 'Interest Income', accountCode: '270', confidence: 98 },\n  { pattern: /DIVIDEND/i, merchant: 'Dividend', accountCode: '270', confidence: 95 },\n  { pattern: /INVESTMENT/i, merchant: 'Investment', accountCode: '270', confidence: 90 },\n  { pattern: /INTEREST\\s*PAID/i, merchant: 'Interest Paid', accountCode: '437', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 445,
            "endLine": 449,
            "content": "  \n  // Credit Card Payments (Fixed: should be Loan account, not Bank Fees)\n  { pattern: /CREDIT\\s*CARD\\s*PAYMENT/i, merchant: 'Credit Card Payment', accountCode: '900', confidence: 95 },\n  { pattern: /CC\\s*PAYMENT/i, merchant: 'Credit Card Payment', accountCode: '900', confidence: 95 },\n  { pattern: /VISA\\s*PAYMENT/i, merchant: 'Visa Payment', accountCode: '900', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 446,
            "endLine": 450,
            "content": "  // Credit Card Payments (Fixed: should be Loan account, not Bank Fees)\n  { pattern: /CREDIT\\s*CARD\\s*PAYMENT/i, merchant: 'Credit Card Payment', accountCode: '900', confidence: 95 },\n  { pattern: /CC\\s*PAYMENT/i, merchant: 'Credit Card Payment', accountCode: '900', confidence: 95 },\n  { pattern: /VISA\\s*PAYMENT/i, merchant: 'Visa Payment', accountCode: '900', confidence: 95 },\n  { pattern: /MASTERCARD\\s*PAYMENT/i, merchant: 'Mastercard Payment', accountCode: '900', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 451,
            "endLine": 455,
            "content": "  \n  // Loan Payments (Fixed: should be Loan account, not Bank Fees)\n  { pattern: /LOAN\\s*PAYMENT/i, merchant: 'Loan Payment', accountCode: '900', confidence: 95 },\n  { pattern: /MORTGAGE\\s*PAYMENT/i, merchant: 'Mortgage Payment', accountCode: '900', confidence: 95 },\n  { pattern: /CAR\\s*LOAN\\s*PAYMENT/i, merchant: 'Car Loan Payment', accountCode: '900', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 452,
            "endLine": 456,
            "content": "  // Loan Payments (Fixed: should be Loan account, not Bank Fees)\n  { pattern: /LOAN\\s*PAYMENT/i, merchant: 'Loan Payment', accountCode: '900', confidence: 95 },\n  { pattern: /MORTGAGE\\s*PAYMENT/i, merchant: 'Mortgage Payment', accountCode: '900', confidence: 95 },\n  { pattern: /CAR\\s*LOAN\\s*PAYMENT/i, merchant: 'Car Loan Payment', accountCode: '900', confidence: 95 },\n  { pattern: /PRINCIPAL\\s*PAYMENT/i, merchant: 'Principal Payment', accountCode: '900', confidence: 90 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 457,
            "endLine": 461,
            "content": "  \n  // Bank Transfers (Fixed: should be Accounts Receivable, not Bank Fees or Revenue)\n  { pattern: /TRANSFER\\s*TO\\s*SAVINGS/i, merchant: 'Transfer to Savings', accountCode: '610', confidence: 95 },\n  { pattern: /TRANSFER\\s*FROM\\s*SAVINGS/i, merchant: 'Transfer from Savings', accountCode: '610', confidence: 95 },\n  { pattern: /TRANSFER\\s*TO\\s*CHEQUING/i, merchant: 'Transfer to Chequing', accountCode: '610', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 458,
            "endLine": 462,
            "content": "  // Bank Transfers (Fixed: should be Accounts Receivable, not Bank Fees or Revenue)\n  { pattern: /TRANSFER\\s*TO\\s*SAVINGS/i, merchant: 'Transfer to Savings', accountCode: '610', confidence: 95 },\n  { pattern: /TRANSFER\\s*FROM\\s*SAVINGS/i, merchant: 'Transfer from Savings', accountCode: '610', confidence: 95 },\n  { pattern: /TRANSFER\\s*TO\\s*CHEQUING/i, merchant: 'Transfer to Chequing', accountCode: '610', confidence: 95 },\n  { pattern: /TRANSFER\\s*FROM\\s*CHEQUING/i, merchant: 'Transfer from Chequing', accountCode: '610', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 468,
            "endLine": 472,
            "content": "  \n  // Major Canadian Retailers\n  { pattern: /WALMART/i, merchant: 'Walmart', accountCode: '453', confidence: 88 },\n  { pattern: /COSTCO/i, merchant: 'Costco', accountCode: '453', confidence: 88 },\n  { pattern: /LOBLAWS/i, merchant: 'Loblaws', accountCode: '453', confidence: 87 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 469,
            "endLine": 473,
            "content": "  // Major Canadian Retailers\n  { pattern: /WALMART/i, merchant: 'Walmart', accountCode: '453', confidence: 88 },\n  { pattern: /COSTCO/i, merchant: 'Costco', accountCode: '453', confidence: 88 },\n  { pattern: /LOBLAWS/i, merchant: 'Loblaws', accountCode: '453', confidence: 87 },\n  { pattern: /REAL\\s*CANADIAN\\s*SUPERSTORE/i, merchant: 'Real Canadian Superstore', accountCode: '453', confidence: 88 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 479,
            "endLine": 483,
            "content": "  \n  // NEW: Specific grocery store locations from training data\n  { pattern: /COLD\\s*LAKE\\s*SOBEY/i, merchant: 'Sobeys', accountCode: '453', confidence: 88 },\n  { pattern: /SOBEYS\\s*LAKELAND/i, merchant: 'Sobeys', accountCode: '453', confidence: 88 },\n  { pattern: /BONNYVILLE\\s*SOBE/i, merchant: 'Sobeys', accountCode: '453', confidence: 88 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 480,
            "endLine": 484,
            "content": "  // NEW: Specific grocery store locations from training data\n  { pattern: /COLD\\s*LAKE\\s*SOBEY/i, merchant: 'Sobeys', accountCode: '453', confidence: 88 },\n  { pattern: /SOBEYS\\s*LAKELAND/i, merchant: 'Sobeys', accountCode: '453', confidence: 88 },\n  { pattern: /BONNYVILLE\\s*SOBE/i, merchant: 'Sobeys', accountCode: '453', confidence: 88 },\n  { pattern: /SAVE\\s*ON\\s*FOODS/i, merchant: 'Save-On-Foods', accountCode: '453', confidence: 88 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 490,
            "endLine": 494,
            "content": "  \n  // Department Stores\n  { pattern: /THE\\s*BAY/i, merchant: 'The Bay', accountCode: '453', confidence: 87 },\n  { pattern: /SEARS/i, merchant: 'Sears', accountCode: '453', confidence: 87 },\n  { pattern: /WINNERS/i, merchant: 'Winners', accountCode: '453', confidence: 87 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 491,
            "endLine": 495,
            "content": "  // Department Stores\n  { pattern: /THE\\s*BAY/i, merchant: 'The Bay', accountCode: '453', confidence: 87 },\n  { pattern: /SEARS/i, merchant: 'Sears', accountCode: '453', confidence: 87 },\n  { pattern: /WINNERS/i, merchant: 'Winners', accountCode: '453', confidence: 87 },\n  { pattern: /MARSHALL'?S/i, merchant: 'Marshalls', accountCode: '453', confidence: 87 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 496,
            "endLine": 500,
            "content": "  \n  // NEW: Home improvement stores from training data (Fixed: removed duplicate, kept higher confidence)\n  { pattern: /LOWE'?S/i, merchant: 'Lowes', accountCode: '455', confidence: 88 },\n  { pattern: /RONA/i, merchant: 'Rona', accountCode: '455', confidence: 87 },\n  { pattern: /WINDSOR\\s*PLYWOOD/i, merchant: 'Windsor Plywood', accountCode: '455', confidence: 87 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 497,
            "endLine": 501,
            "content": "  // NEW: Home improvement stores from training data (Fixed: removed duplicate, kept higher confidence)\n  { pattern: /LOWE'?S/i, merchant: 'Lowes', accountCode: '455', confidence: 88 },\n  { pattern: /RONA/i, merchant: 'Rona', accountCode: '455', confidence: 87 },\n  { pattern: /WINDSOR\\s*PLYWOOD/i, merchant: 'Windsor Plywood', accountCode: '455', confidence: 87 },\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 501,
            "endLine": 505,
            "content": "  \n  // Office Supplies\n  { pattern: /STAPLES/i, merchant: 'Staples', accountCode: '455', confidence: 92 },\n  { pattern: /OFFICE\\s*DEPOT/i, merchant: 'Office Depot', accountCode: '455', confidence: 92 },\n  { pattern: /BEST\\s*BUY/i, merchant: 'Best Buy', accountCode: '455', confidence: 85 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 502,
            "endLine": 506,
            "content": "  // Office Supplies\n  { pattern: /STAPLES/i, merchant: 'Staples', accountCode: '455', confidence: 92 },\n  { pattern: /OFFICE\\s*DEPOT/i, merchant: 'Office Depot', accountCode: '455', confidence: 92 },\n  { pattern: /BEST\\s*BUY/i, merchant: 'Best Buy', accountCode: '455', confidence: 85 },\n  { pattern: /FUTURE\\s*SHOP/i, merchant: 'Future Shop', accountCode: '455', confidence: 85 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 507,
            "endLine": 511,
            "content": "  \n  // NEW: Office supplies from training data\n  { pattern: /SHERWOOD\\s*PARK\\s*ST/i, merchant: 'Staples', accountCode: '455', confidence: 92 },\n  { pattern: /STAPLES\\s*CANADA/i, merchant: 'Staples', accountCode: '455', confidence: 92 },\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 508,
            "endLine": 512,
            "content": "  // NEW: Office supplies from training data\n  { pattern: /SHERWOOD\\s*PARK\\s*ST/i, merchant: 'Staples', accountCode: '455', confidence: 92 },\n  { pattern: /STAPLES\\s*CANADA/i, merchant: 'Staples', accountCode: '455', confidence: 92 },\n  \n  // ============================================================================="
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 515,
            "endLine": 519,
            "content": "  \n  // Telecommunications\n  { pattern: /ROGERS/i, merchant: 'Rogers', accountCode: '489', confidence: 95 },\n  { pattern: /BELL/i, merchant: 'Bell', accountCode: '489', confidence: 95 },\n  { pattern: /TELUS/i, merchant: 'Telus', accountCode: '489', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 516,
            "endLine": 520,
            "content": "  // Telecommunications\n  { pattern: /ROGERS/i, merchant: 'Rogers', accountCode: '489', confidence: 95 },\n  { pattern: /BELL/i, merchant: 'Bell', accountCode: '489', confidence: 95 },\n  { pattern: /TELUS/i, merchant: 'Telus', accountCode: '489', confidence: 95 },\n  { pattern: /SHAW/i, merchant: 'Shaw', accountCode: '489', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 529,
            "endLine": 533,
            "content": "  \n  // Utilities\n  { pattern: /ENMAX/i, merchant: 'Enmax', accountCode: '442', confidence: 95 },\n  { pattern: /EPCOR/i, merchant: 'Epcor', accountCode: '442', confidence: 95 },\n  { pattern: /ATCO\\s*GAS/i, merchant: 'ATCO Gas', accountCode: '442', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 530,
            "endLine": 534,
            "content": "  // Utilities\n  { pattern: /ENMAX/i, merchant: 'Enmax', accountCode: '442', confidence: 95 },\n  { pattern: /EPCOR/i, merchant: 'Epcor', accountCode: '442', confidence: 95 },\n  { pattern: /ATCO\\s*GAS/i, merchant: 'ATCO Gas', accountCode: '442', confidence: 95 },\n  { pattern: /DIRECT\\s*ENERGY/i, merchant: 'Direct Energy', accountCode: '442', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 538,
            "endLine": 542,
            "content": "  \n  // NEW: Utilities from training data\n  { pattern: /COLD\\s*LAKE\\s*UTIL/i, merchant: 'Cold Lake Utilities', accountCode: '442', confidence: 95 },\n  { pattern: /BONNYVILLE\\s*UTIL/i, merchant: 'Bonnyville Utilities', accountCode: '442', confidence: 95 },\n  { pattern: /ST\\s*PAUL\\s*UTIL/i, merchant: 'St. Paul Utilities', accountCode: '442', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 539,
            "endLine": 543,
            "content": "  // NEW: Utilities from training data\n  { pattern: /COLD\\s*LAKE\\s*UTIL/i, merchant: 'Cold Lake Utilities', accountCode: '442', confidence: 95 },\n  { pattern: /BONNYVILLE\\s*UTIL/i, merchant: 'Bonnyville Utilities', accountCode: '442', confidence: 95 },\n  { pattern: /ST\\s*PAUL\\s*UTIL/i, merchant: 'St. Paul Utilities', accountCode: '442', confidence: 95 },\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 557,
            "endLine": 561,
            "content": "  \n  // Generic Services\n  { pattern: /INSURANCE/i, merchant: 'Insurance', accountCode: '433', confidence: 85 },\n  { pattern: /LEGAL/i, merchant: 'Legal Services', accountCode: '412', confidence: 80 },\n  { pattern: /ACCOUNTING/i, merchant: 'Accounting Services', accountCode: '412', confidence: 85 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 558,
            "endLine": 562,
            "content": "  // Generic Services\n  { pattern: /INSURANCE/i, merchant: 'Insurance', accountCode: '433', confidence: 85 },\n  { pattern: /LEGAL/i, merchant: 'Legal Services', accountCode: '412', confidence: 80 },\n  { pattern: /ACCOUNTING/i, merchant: 'Accounting Services', accountCode: '412', confidence: 85 },\n  { pattern: /CONSULTING/i, merchant: 'Consulting', accountCode: '412', confidence: 80 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 563,
            "endLine": 567,
            "content": "\n  // =============================================================================\n  // CUSTOM BUSINESS PATTERNS - ADD YOUR OWN HERE!\n  // =============================================================================\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 564,
            "endLine": 568,
            "content": "  // =============================================================================\n  // CUSTOM BUSINESS PATTERNS - ADD YOUR OWN HERE!\n  // =============================================================================\n  \n  // Example: Local businesses you frequently use"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 567,
            "endLine": 571,
            "content": "  \n  // Example: Local businesses you frequently use\n  { pattern: /YOUR\\s*LOCAL\\s*RESTAURANT/i, merchant: 'Local Restaurant', accountCode: '420', confidence: 95 },\n  { pattern: /FAVORITE\\s*MECHANIC/i, merchant: 'Auto Repair Shop', accountCode: '449', confidence: 90 },\n  { pattern: /OFFICE\\s*RENT/i, merchant: 'Office Landlord', accountCode: '469', confidence: 98 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 568,
            "endLine": 572,
            "content": "  // Example: Local businesses you frequently use\n  { pattern: /YOUR\\s*LOCAL\\s*RESTAURANT/i, merchant: 'Local Restaurant', accountCode: '420', confidence: 95 },\n  { pattern: /FAVORITE\\s*MECHANIC/i, merchant: 'Auto Repair Shop', accountCode: '449', confidence: 90 },\n  { pattern: /OFFICE\\s*RENT/i, merchant: 'Office Landlord', accountCode: '469', confidence: 98 },\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 572,
            "endLine": 576,
            "content": "  \n  // Example: Subscription services\n  { pattern: /ZOOM/i, merchant: 'Zoom', accountCode: '485', confidence: 92 },\n  { pattern: /SLACK/i, merchant: 'Slack', accountCode: '485', confidence: 92 },\n  { pattern: /QUICKBOOKS/i, merchant: 'QuickBooks', accountCode: '485', confidence: 95 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 573,
            "endLine": 577,
            "content": "  // Example: Subscription services\n  { pattern: /ZOOM/i, merchant: 'Zoom', accountCode: '485', confidence: 92 },\n  { pattern: /SLACK/i, merchant: 'Slack', accountCode: '485', confidence: 92 },\n  { pattern: /QUICKBOOKS/i, merchant: 'QuickBooks', accountCode: '485', confidence: 95 },\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 577,
            "endLine": 581,
            "content": "  \n  // Example: Professional services\n  { pattern: /LAWYER\\s*FEES/i, merchant: 'Legal Fees', accountCode: '412', confidence: 95 },\n  { pattern: /ACCOUNTANT/i, merchant: 'Accountant', accountCode: '412', confidence: 90 },\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 578,
            "endLine": 582,
            "content": "  // Example: Professional services\n  { pattern: /LAWYER\\s*FEES/i, merchant: 'Legal Fees', accountCode: '412', confidence: 95 },\n  { pattern: /ACCOUNTANT/i, merchant: 'Accountant', accountCode: '412', confidence: 90 },\n  \n  // Example: Travel & accommodation"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 581,
            "endLine": 585,
            "content": "  \n  // Example: Travel & accommodation\n  { pattern: /HOTEL/i, merchant: 'Hotel', accountCode: '493', confidence: 85 },\n  { pattern: /AIRBNB/i, merchant: 'Airbnb', accountCode: '493', confidence: 90 },\n  { pattern: /BOOKING\\.COM/i, merchant: 'Booking.com', accountCode: '493', confidence: 88 },"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 582,
            "endLine": 586,
            "content": "  // Example: Travel & accommodation\n  { pattern: /HOTEL/i, merchant: 'Hotel', accountCode: '493', confidence: 85 },\n  { pattern: /AIRBNB/i, merchant: 'Airbnb', accountCode: '493', confidence: 90 },\n  { pattern: /BOOKING\\.COM/i, merchant: 'Booking.com', accountCode: '493', confidence: 88 },\n];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 587,
            "endLine": 591,
            "content": "\n// Add named export for merchants\nexport const merchants = MERCHANT_PATTERNS;\n\n// Helper functions for pattern matching"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 588,
            "endLine": 592,
            "content": "// Add named export for merchants\nexport const merchants = MERCHANT_PATTERNS;\n\n// Helper functions for pattern matching\nexport const findMerchantPattern = (description: string): MerchantPattern | null => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 590,
            "endLine": 594,
            "content": "\n// Helper functions for pattern matching\nexport const findMerchantPattern = (description: string): MerchantPattern | null => {\n  const cleanDescription = description.toUpperCase().trim();\n  "
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 591,
            "endLine": 595,
            "content": "// Helper functions for pattern matching\nexport const findMerchantPattern = (description: string): MerchantPattern | null => {\n  const cleanDescription = description.toUpperCase().trim();\n  \n  // Sort by confidence (highest first) to get best match"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 594,
            "endLine": 598,
            "content": "  \n  // Sort by confidence (highest first) to get best match\n  const sortedPatterns = [...MERCHANT_PATTERNS].sort((a, b) => b.confidence - a.confidence);\n  \n  for (const pattern of sortedPatterns) {"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 595,
            "endLine": 599,
            "content": "  // Sort by confidence (highest first) to get best match\n  const sortedPatterns = [...MERCHANT_PATTERNS].sort((a, b) => b.confidence - a.confidence);\n  \n  for (const pattern of sortedPatterns) {\n    if (pattern.pattern.test(cleanDescription)) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 597,
            "endLine": 601,
            "content": "  \n  for (const pattern of sortedPatterns) {\n    if (pattern.pattern.test(cleanDescription)) {\n      return pattern;\n    }"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 598,
            "endLine": 602,
            "content": "  for (const pattern of sortedPatterns) {\n    if (pattern.pattern.test(cleanDescription)) {\n      return pattern;\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 606,
            "endLine": 610,
            "content": "\nexport const getMerchantAccountCodes = (): string[] => {\n  const accountCodes = new Set(MERCHANT_PATTERNS.map(p => p.accountCode));\n  return Array.from(accountCodes).sort();\n};"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 607,
            "endLine": 611,
            "content": "export const getMerchantAccountCodes = (): string[] => {\n  const accountCodes = new Set(MERCHANT_PATTERNS.map(p => p.accountCode));\n  return Array.from(accountCodes).sort();\n};\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/data/merchants.ts",
            "startLine": 611,
            "endLine": 615,
            "content": "\nexport const getPatternsByAccountCode = (accountCode: string): MerchantPattern[] => {\n  return MERCHANT_PATTERNS.filter(p => p.accountCode === accountCode);\n};\n"
          },
          {
            "file": "src/data/merchants.ts",
            "startLine": 612,
            "endLine": 616,
            "content": "export const getPatternsByAccountCode = (accountCode: string): MerchantPattern[] => {\n  return MERCHANT_PATTERNS.filter(p => p.accountCode === accountCode);\n};\n\n// Default export for backwards compatibility"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 4,
            "endLine": 8,
            "content": "\nexport interface AICategorizationResult {\n  accountCode: string;\n  confidence: number;\n  reasoning: string;"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 5,
            "endLine": 9,
            "content": "export interface AICategorizationResult {\n  accountCode: string;\n  confidence: number;\n  reasoning: string;\n  suggestedKeyword?: string;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 11,
            "endLine": 15,
            "content": "\nexport class AICategorizationService {\n  private aiEngine: AIEngine | null = null;\n  private chartOfAccounts: ChartOfAccounts | null = null;\n  private isInitialized = false;"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 12,
            "endLine": 16,
            "content": "export class AICategorizationService {\n  private aiEngine: AIEngine | null = null;\n  private chartOfAccounts: ChartOfAccounts | null = null;\n  private isInitialized = false;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 16,
            "endLine": 20,
            "content": "\n  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n    try {\n      this.chartOfAccounts = new ChartOfAccounts('ON');"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 17,
            "endLine": 21,
            "content": "  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n    try {\n      this.chartOfAccounts = new ChartOfAccounts('ON');\n      this.aiEngine = new AIEngine('ON');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 32,
            "endLine": 36,
            "content": "\n  async categorizeTransaction(params: {\n    transaction: Transaction;\n    province?: string;\n  }): Promise<AICategorizationResult | null> {"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 33,
            "endLine": 37,
            "content": "  async categorizeTransaction(params: {\n    transaction: Transaction;\n    province?: string;\n  }): Promise<AICategorizationResult | null> {\n    if (!this.isAvailable()) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 34,
            "endLine": 38,
            "content": "    transaction: Transaction;\n    province?: string;\n  }): Promise<AICategorizationResult | null> {\n    if (!this.isAvailable()) {\n      console.warn('AI Categorization Service not available');"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 64,
            "endLine": 68,
            "content": "    transaction: Transaction;\n    province?: string;\n  }): Promise<AICategorizationResult | null> {\n    if (!this.isAvailable()) {\n      console.warn('AI Categorization Service not available');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 35,
            "endLine": 39,
            "content": "    province?: string;\n  }): Promise<AICategorizationResult | null> {\n    if (!this.isAvailable()) {\n      console.warn('AI Categorization Service not available');\n      return null;"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 65,
            "endLine": 69,
            "content": "    province?: string;\n  }): Promise<AICategorizationResult | null> {\n    if (!this.isAvailable()) {\n      console.warn('AI Categorization Service not available');\n      return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 36,
            "endLine": 40,
            "content": "  }): Promise<AICategorizationResult | null> {\n    if (!this.isAvailable()) {\n      console.warn('AI Categorization Service not available');\n      return null;\n    }"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 66,
            "endLine": 70,
            "content": "  }): Promise<AICategorizationResult | null> {\n    if (!this.isAvailable()) {\n      console.warn('AI Categorization Service not available');\n      return null;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 37,
            "endLine": 41,
            "content": "    if (!this.isAvailable()) {\n      console.warn('AI Categorization Service not available');\n      return null;\n    }\n"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 67,
            "endLine": 71,
            "content": "    if (!this.isAvailable()) {\n      console.warn('AI Categorization Service not available');\n      return null;\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 38,
            "endLine": 42,
            "content": "      console.warn('AI Categorization Service not available');\n      return null;\n    }\n\n    const { transaction, province = 'ON' } = params;"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 68,
            "endLine": 72,
            "content": "      console.warn('AI Categorization Service not available');\n      return null;\n    }\n\n    const { transaction, province = 'ON' } = params;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 39,
            "endLine": 43,
            "content": "      return null;\n    }\n\n    const { transaction, province = 'ON' } = params;\n"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 69,
            "endLine": 73,
            "content": "      return null;\n    }\n\n    const { transaction, province = 'ON' } = params;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 40,
            "endLine": 44,
            "content": "    }\n\n    const { transaction, province = 'ON' } = params;\n\n    try {"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 70,
            "endLine": 74,
            "content": "    }\n\n    const { transaction, province = 'ON' } = params;\n\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 41,
            "endLine": 45,
            "content": "\n    const { transaction, province = 'ON' } = params;\n\n    try {\n      // Get AI categorization with reasoning (uses learned patterns first)"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 42,
            "endLine": 46,
            "content": "    const { transaction, province = 'ON' } = params;\n\n    try {\n      // Get AI categorization with reasoning (uses learned patterns first)\n      const result = await this.getAICategorizationWithReasoning(transaction);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 43,
            "endLine": 47,
            "content": "\n    try {\n      // Get AI categorization with reasoning (uses learned patterns first)\n      const result = await this.getAICategorizationWithReasoning(transaction);\n      "
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 44,
            "endLine": 48,
            "content": "    try {\n      // Get AI categorization with reasoning (uses learned patterns first)\n      const result = await this.getAICategorizationWithReasoning(transaction);\n      \n      if (result) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 48,
            "endLine": 52,
            "content": "      if (result) {\n        return result;\n      }\n\n      // Fallback to local AI engine"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 78,
            "endLine": 82,
            "content": "      if (result) {\n        return result;\n      }\n\n      // Fallback to local AI engine"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 49,
            "endLine": 53,
            "content": "        return result;\n      }\n\n      // Fallback to local AI engine\n      return this.getLocalCategorization(transaction);"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 79,
            "endLine": 83,
            "content": "        return result;\n      }\n\n      // Fallback to local AI engine\n      return this.getLocalCategorization(transaction);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 50,
            "endLine": 54,
            "content": "      }\n\n      // Fallback to local AI engine\n      return this.getLocalCategorization(transaction);\n    } catch (error) {"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 80,
            "endLine": 84,
            "content": "      }\n\n      // Fallback to local AI engine\n      return this.getLocalCategorization(transaction);\n    } catch (error) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 51,
            "endLine": 55,
            "content": "\n      // Fallback to local AI engine\n      return this.getLocalCategorization(transaction);\n    } catch (error) {\n      console.error('Error in AI categorization:', error);"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 52,
            "endLine": 56,
            "content": "      // Fallback to local AI engine\n      return this.getLocalCategorization(transaction);\n    } catch (error) {\n      console.error('Error in AI categorization:', error);\n      return null;"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 81,
            "endLine": 85,
            "content": "\n      // Fallback to local AI engine\n      return this.getLocalCategorization(transaction);\n    } catch (error) {\n      console.error('Error in forced AI categorization:', error);"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 82,
            "endLine": 86,
            "content": "      // Fallback to local AI engine\n      return this.getLocalCategorization(transaction);\n    } catch (error) {\n      console.error('Error in forced AI categorization:', error);\n      return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 71,
            "endLine": 75,
            "content": "\n    const { transaction, province = 'ON' } = params;\n\n    try {\n      // Force ChatGPT categorization (skip learned patterns)"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 72,
            "endLine": 76,
            "content": "    const { transaction, province = 'ON' } = params;\n\n    try {\n      // Force ChatGPT categorization (skip learned patterns)\n      const result = await this.getForceAICategorization(transaction);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 73,
            "endLine": 77,
            "content": "\n    try {\n      // Force ChatGPT categorization (skip learned patterns)\n      const result = await this.getForceAICategorization(transaction);\n      "
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 74,
            "endLine": 78,
            "content": "    try {\n      // Force ChatGPT categorization (skip learned patterns)\n      const result = await this.getForceAICategorization(transaction);\n      \n      if (result) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 89,
            "endLine": 93,
            "content": "\n  private async getAICategorizationWithReasoning(transaction: Transaction): Promise<AICategorizationResult | null> {\n    try {\n      // Get learned patterns from the global AI engine if available\n      let learnedPatterns = {};"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 90,
            "endLine": 94,
            "content": "  private async getAICategorizationWithReasoning(transaction: Transaction): Promise<AICategorizationResult | null> {\n    try {\n      // Get learned patterns from the global AI engine if available\n      let learnedPatterns = {};\n      if (typeof window !== 'undefined' && (window as any).aiEngine) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 94,
            "endLine": 98,
            "content": "      if (typeof window !== 'undefined' && (window as any).aiEngine) {\n        const aiEngine = (window as any).aiEngine;\n        const patterns = aiEngine.debugGetLearnedPatterns();\n        learnedPatterns = patterns.reduce((acc: any, pattern: any) => {\n          acc[pattern.pattern] = {"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 109,
            "endLine": 113,
            "content": "      if (typeof window !== 'undefined' && (window as any).aiEngine) {\n        const aiEngine = (window as any).aiEngine;\n        userId = aiEngine.userId; // This will be set by the AIEngine constructor\n      }\n"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 153,
            "endLine": 157,
            "content": "      if (typeof window !== 'undefined' && (window as any).aiEngine) {\n        const aiEngine = (window as any).aiEngine;\n        userId = aiEngine.userId; // This will be set by the AIEngine constructor\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 106,
            "endLine": 110,
            "content": "\n      // Get user ID from global AI engine if available\n      let userId: string | undefined;\n      if (typeof window !== 'undefined' && (window as any).aiEngine) {\n        const aiEngine = (window as any).aiEngine;"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 107,
            "endLine": 111,
            "content": "      // Get user ID from global AI engine if available\n      let userId: string | undefined;\n      if (typeof window !== 'undefined' && (window as any).aiEngine) {\n        const aiEngine = (window as any).aiEngine;\n        userId = aiEngine.userId; // This will be set by the AIEngine constructor"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 151,
            "endLine": 155,
            "content": "      // Get user ID from global AI engine if available\n      let userId: string | undefined;\n      if (typeof window !== 'undefined' && (window as any).aiEngine) {\n        const aiEngine = (window as any).aiEngine;\n        userId = aiEngine.userId; // This will be set by the AIEngine constructor"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 108,
            "endLine": 112,
            "content": "      let userId: string | undefined;\n      if (typeof window !== 'undefined' && (window as any).aiEngine) {\n        const aiEngine = (window as any).aiEngine;\n        userId = aiEngine.userId; // This will be set by the AIEngine constructor\n      }"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 152,
            "endLine": 156,
            "content": "      let userId: string | undefined;\n      if (typeof window !== 'undefined' && (window as any).aiEngine) {\n        const aiEngine = (window as any).aiEngine;\n        userId = aiEngine.userId; // This will be set by the AIEngine constructor\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 110,
            "endLine": 114,
            "content": "        const aiEngine = (window as any).aiEngine;\n        userId = aiEngine.userId; // This will be set by the AIEngine constructor\n      }\n\n      const headers: Record<string, string> = {"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 154,
            "endLine": 158,
            "content": "        const aiEngine = (window as any).aiEngine;\n        userId = aiEngine.userId; // This will be set by the AIEngine constructor\n      }\n\n      const headers: Record<string, string> = {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 111,
            "endLine": 115,
            "content": "        userId = aiEngine.userId; // This will be set by the AIEngine constructor\n      }\n\n      const headers: Record<string, string> = {\n        'Content-Type': 'application/json',"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 155,
            "endLine": 159,
            "content": "        userId = aiEngine.userId; // This will be set by the AIEngine constructor\n      }\n\n      const headers: Record<string, string> = {\n        'Content-Type': 'application/json',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 112,
            "endLine": 116,
            "content": "      }\n\n      const headers: Record<string, string> = {\n        'Content-Type': 'application/json',\n      };"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 156,
            "endLine": 160,
            "content": "      }\n\n      const headers: Record<string, string> = {\n        'Content-Type': 'application/json',\n      };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 113,
            "endLine": 117,
            "content": "\n      const headers: Record<string, string> = {\n        'Content-Type': 'application/json',\n      };\n"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 157,
            "endLine": 161,
            "content": "\n      const headers: Record<string, string> = {\n        'Content-Type': 'application/json',\n      };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 114,
            "endLine": 118,
            "content": "      const headers: Record<string, string> = {\n        'Content-Type': 'application/json',\n      };\n\n      // Add user ID header if available"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 158,
            "endLine": 162,
            "content": "      const headers: Record<string, string> = {\n        'Content-Type': 'application/json',\n      };\n\n      // Add user ID header if available"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 115,
            "endLine": 119,
            "content": "        'Content-Type': 'application/json',\n      };\n\n      // Add user ID header if available\n      if (userId) {"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 159,
            "endLine": 163,
            "content": "        'Content-Type': 'application/json',\n      };\n\n      // Add user ID header if available\n      if (userId) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 116,
            "endLine": 120,
            "content": "      };\n\n      // Add user ID header if available\n      if (userId) {\n        headers['x-user-id'] = userId;"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 160,
            "endLine": 164,
            "content": "      };\n\n      // Add user ID header if available\n      if (userId) {\n        headers['x-user-id'] = userId;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 117,
            "endLine": 121,
            "content": "\n      // Add user ID header if available\n      if (userId) {\n        headers['x-user-id'] = userId;\n      }"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 118,
            "endLine": 122,
            "content": "      // Add user ID header if available\n      if (userId) {\n        headers['x-user-id'] = userId;\n      }\n"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 161,
            "endLine": 165,
            "content": "\n      // Add user ID header if available\n      if (userId) {\n        headers['x-user-id'] = userId;\n      }"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 162,
            "endLine": 166,
            "content": "      // Add user ID header if available\n      if (userId) {\n        headers['x-user-id'] = userId;\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 119,
            "endLine": 123,
            "content": "      if (userId) {\n        headers['x-user-id'] = userId;\n      }\n\n      const response = await fetch('/api/ai-categorize', {"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 163,
            "endLine": 167,
            "content": "      if (userId) {\n        headers['x-user-id'] = userId;\n      }\n\n      const response = await fetch('/api/ai-categorize', {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 120,
            "endLine": 124,
            "content": "        headers['x-user-id'] = userId;\n      }\n\n      const response = await fetch('/api/ai-categorize', {\n        method: 'POST',"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 164,
            "endLine": 168,
            "content": "        headers['x-user-id'] = userId;\n      }\n\n      const response = await fetch('/api/ai-categorize', {\n        method: 'POST',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 121,
            "endLine": 125,
            "content": "      }\n\n      const response = await fetch('/api/ai-categorize', {\n        method: 'POST',\n        headers,"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 165,
            "endLine": 169,
            "content": "      }\n\n      const response = await fetch('/api/ai-categorize', {\n        method: 'POST',\n        headers,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 122,
            "endLine": 126,
            "content": "\n      const response = await fetch('/api/ai-categorize', {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 123,
            "endLine": 127,
            "content": "      const response = await fetch('/api/ai-categorize', {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          transaction: {"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 166,
            "endLine": 170,
            "content": "\n      const response = await fetch('/api/ai-categorize', {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 167,
            "endLine": 171,
            "content": "      const response = await fetch('/api/ai-categorize', {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          transaction: {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 124,
            "endLine": 128,
            "content": "        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          transaction: {\n            description: transaction.description,"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 168,
            "endLine": 172,
            "content": "        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          transaction: {\n            description: transaction.description,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 125,
            "endLine": 129,
            "content": "        headers,\n        body: JSON.stringify({\n          transaction: {\n            description: transaction.description,\n            amount: transaction.amount,"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 169,
            "endLine": 173,
            "content": "        headers,\n        body: JSON.stringify({\n          transaction: {\n            description: transaction.description,\n            amount: transaction.amount,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 126,
            "endLine": 130,
            "content": "        body: JSON.stringify({\n          transaction: {\n            description: transaction.description,\n            amount: transaction.amount,\n            date: transaction.date"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 170,
            "endLine": 174,
            "content": "        body: JSON.stringify({\n          transaction: {\n            description: transaction.description,\n            amount: transaction.amount,\n            date: transaction.date"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 127,
            "endLine": 131,
            "content": "          transaction: {\n            description: transaction.description,\n            amount: transaction.amount,\n            date: transaction.date\n          },"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 171,
            "endLine": 175,
            "content": "          transaction: {\n            description: transaction.description,\n            amount: transaction.amount,\n            date: transaction.date\n          },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 134,
            "endLine": 138,
            "content": "        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`);"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 177,
            "endLine": 181,
            "content": "        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 135,
            "endLine": 139,
            "content": "      });\n\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`);\n      }"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 178,
            "endLine": 182,
            "content": "      });\n\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`);\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 136,
            "endLine": 140,
            "content": "\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`);\n      }\n"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 179,
            "endLine": 183,
            "content": "\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`);\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 137,
            "endLine": 141,
            "content": "      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`);\n      }\n\n      const data = await response.json();"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 180,
            "endLine": 184,
            "content": "      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`);\n      }\n\n      const data = await response.json();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 138,
            "endLine": 142,
            "content": "        throw new Error(`API request failed: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data.result;"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 181,
            "endLine": 185,
            "content": "        throw new Error(`API request failed: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data.result;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 139,
            "endLine": 143,
            "content": "      }\n\n      const data = await response.json();\n      return data.result;\n    } catch (error) {"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 182,
            "endLine": 186,
            "content": "      }\n\n      const data = await response.json();\n      return data.result;\n    } catch (error) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 140,
            "endLine": 144,
            "content": "\n      const data = await response.json();\n      return data.result;\n    } catch (error) {\n      console.warn('AI API failed, falling back to local categorization:', error);"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 141,
            "endLine": 145,
            "content": "      const data = await response.json();\n      return data.result;\n    } catch (error) {\n      console.warn('AI API failed, falling back to local categorization:', error);\n      return null;"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 183,
            "endLine": 187,
            "content": "\n      const data = await response.json();\n      return data.result;\n    } catch (error) {\n      console.warn('AI API failed, falling back to local categorization:', error);"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 184,
            "endLine": 188,
            "content": "      const data = await response.json();\n      return data.result;\n    } catch (error) {\n      console.warn('AI API failed, falling back to local categorization:', error);\n      return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 142,
            "endLine": 146,
            "content": "      return data.result;\n    } catch (error) {\n      console.warn('AI API failed, falling back to local categorization:', error);\n      return null;\n    }"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 185,
            "endLine": 189,
            "content": "      return data.result;\n    } catch (error) {\n      console.warn('AI API failed, falling back to local categorization:', error);\n      return null;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 143,
            "endLine": 147,
            "content": "    } catch (error) {\n      console.warn('AI API failed, falling back to local categorization:', error);\n      return null;\n    }\n  }"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 186,
            "endLine": 190,
            "content": "    } catch (error) {\n      console.warn('AI API failed, falling back to local categorization:', error);\n      return null;\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 144,
            "endLine": 148,
            "content": "      console.warn('AI API failed, falling back to local categorization:', error);\n      return null;\n    }\n  }\n"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 187,
            "endLine": 191,
            "content": "      console.warn('AI API failed, falling back to local categorization:', error);\n      return null;\n    }\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 148,
            "endLine": 152,
            "content": "\n  private async getForceAICategorization(transaction: Transaction): Promise<AICategorizationResult | null> {\n    try {\n      // Get user ID from global AI engine if available\n      let userId: string | undefined;"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 149,
            "endLine": 153,
            "content": "  private async getForceAICategorization(transaction: Transaction): Promise<AICategorizationResult | null> {\n    try {\n      // Get user ID from global AI engine if available\n      let userId: string | undefined;\n      if (typeof window !== 'undefined' && (window as any).aiEngine) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 191,
            "endLine": 195,
            "content": "\n  private getLocalCategorization(transaction: Transaction): AICategorizationResult | null {\n    if (!this.aiEngine) return null;\n\n    try {"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 192,
            "endLine": 196,
            "content": "  private getLocalCategorization(transaction: Transaction): AICategorizationResult | null {\n    if (!this.aiEngine) return null;\n\n    try {\n      const result = this.aiEngine.categorizeTransaction(transaction);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 194,
            "endLine": 198,
            "content": "\n    try {\n      const result = this.aiEngine.categorizeTransaction(transaction);\n      \n      // Generate reasoning based on the categorization method"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 195,
            "endLine": 199,
            "content": "    try {\n      const result = this.aiEngine.categorizeTransaction(transaction);\n      \n      // Generate reasoning based on the categorization method\n      const reasoning = this.generateReasoning(transaction, result);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 197,
            "endLine": 201,
            "content": "      \n      // Generate reasoning based on the categorization method\n      const reasoning = this.generateReasoning(transaction, result);\n      \n      // Suggest keyword if it's a good candidate"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 198,
            "endLine": 202,
            "content": "      // Generate reasoning based on the categorization method\n      const reasoning = this.generateReasoning(transaction, result);\n      \n      // Suggest keyword if it's a good candidate\n      const suggestedKeyword = this.suggestKeyword(transaction, result);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 200,
            "endLine": 204,
            "content": "      \n      // Suggest keyword if it's a good candidate\n      const suggestedKeyword = this.suggestKeyword(transaction, result);\n\n      return {"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 201,
            "endLine": 205,
            "content": "      // Suggest keyword if it's a good candidate\n      const suggestedKeyword = this.suggestKeyword(transaction, result);\n\n      return {\n        accountCode: result.accountCode,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 215,
            "endLine": 219,
            "content": "\n  private generateReasoning(transaction: Transaction, result: any): string {\n    const { description, amount } = transaction;\n    const { accountCode, confidence } = result;\n"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 216,
            "endLine": 220,
            "content": "  private generateReasoning(transaction: Transaction, result: any): string {\n    const { description, amount } = transaction;\n    const { accountCode, confidence } = result;\n\n    // Get account name"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 219,
            "endLine": 223,
            "content": "\n    // Get account name\n    const accountName = this.chartOfAccounts?.getAccount(accountCode)?.name || 'Unknown Account';\n\n    // Generate specific reasoning based on transaction type"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 220,
            "endLine": 224,
            "content": "    // Get account name\n    const accountName = this.chartOfAccounts?.getAccount(accountCode)?.name || 'Unknown Account';\n\n    // Generate specific reasoning based on transaction type\n    const lowerDesc = description.toLowerCase();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 222,
            "endLine": 226,
            "content": "\n    // Generate specific reasoning based on transaction type\n    const lowerDesc = description.toLowerCase();\n    \n    // Credit Card Payment reasoning"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 223,
            "endLine": 227,
            "content": "    // Generate specific reasoning based on transaction type\n    const lowerDesc = description.toLowerCase();\n    \n    // Credit Card Payment reasoning\n    if (lowerDesc.includes('visa') || lowerDesc.includes('mastercard') || lowerDesc.includes('credit card') || lowerDesc.includes('amex')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 225,
            "endLine": 229,
            "content": "    \n    // Credit Card Payment reasoning\n    if (lowerDesc.includes('visa') || lowerDesc.includes('mastercard') || lowerDesc.includes('credit card') || lowerDesc.includes('amex')) {\n      return `Credit Card Payment (${confidence}%): This is a payment to settle existing credit card debt. The description \"${description}\" indicates payment to a credit card account, which is an internal transfer to pay off previously incurred expenses.`;\n    }"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 226,
            "endLine": 230,
            "content": "    // Credit Card Payment reasoning\n    if (lowerDesc.includes('visa') || lowerDesc.includes('mastercard') || lowerDesc.includes('credit card') || lowerDesc.includes('amex')) {\n      return `Credit Card Payment (${confidence}%): This is a payment to settle existing credit card debt. The description \"${description}\" indicates payment to a credit card account, which is an internal transfer to pay off previously incurred expenses.`;\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 230,
            "endLine": 234,
            "content": "    \n    // Internal Transfer reasoning\n    if (lowerDesc.includes('internal transfer') || lowerDesc.includes('account transfer') || lowerDesc.includes('savings to chequing') || lowerDesc.includes('chequing to savings')) {\n      return `Internal Transfer (${confidence}%): This is a transfer between accounts at the same bank. The description \"${description}\" indicates movement of funds between your own accounts, not a payment to an external party.`;\n    }"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 231,
            "endLine": 235,
            "content": "    // Internal Transfer reasoning\n    if (lowerDesc.includes('internal transfer') || lowerDesc.includes('account transfer') || lowerDesc.includes('savings to chequing') || lowerDesc.includes('chequing to savings')) {\n      return `Internal Transfer (${confidence}%): This is a transfer between accounts at the same bank. The description \"${description}\" indicates movement of funds between your own accounts, not a payment to an external party.`;\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 235,
            "endLine": 239,
            "content": "    \n    // Bank Fee reasoning\n    if (lowerDesc.includes('fee') || lowerDesc.includes('charge') || lowerDesc.includes('service charge') || lowerDesc.includes('monthly fee')) {\n      return `Bank Fee (${confidence}%): This is a bank service charge. The description \"${description}\" indicates a fee charged by the bank for services, not a payment to an external vendor.`;\n    }"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 236,
            "endLine": 240,
            "content": "    // Bank Fee reasoning\n    if (lowerDesc.includes('fee') || lowerDesc.includes('charge') || lowerDesc.includes('service charge') || lowerDesc.includes('monthly fee')) {\n      return `Bank Fee (${confidence}%): This is a bank service charge. The description \"${description}\" indicates a fee charged by the bank for services, not a payment to an external vendor.`;\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 240,
            "endLine": 244,
            "content": "    \n    // E-Transfer reasoning\n    if (lowerDesc.includes('e-transfer') || lowerDesc.includes('etransfer') || lowerDesc.includes('interac')) {\n      return `E-Transfer (${confidence}%): This is an electronic money transfer. The description \"${description}\" indicates sending or receiving money electronically, which requires manual account assignment.`;\n    }"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 241,
            "endLine": 245,
            "content": "    // E-Transfer reasoning\n    if (lowerDesc.includes('e-transfer') || lowerDesc.includes('etransfer') || lowerDesc.includes('interac')) {\n      return `E-Transfer (${confidence}%): This is an electronic money transfer. The description \"${description}\" indicates sending or receiving money electronically, which requires manual account assignment.`;\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 245,
            "endLine": 249,
            "content": "    \n    // Bill Payment reasoning\n    if (lowerDesc.includes('bill payment') && !lowerDesc.includes('visa') && !lowerDesc.includes('mastercard')) {\n      return `Bill Payment (${confidence}%): This is a payment to an external vendor. The description \"${description}\" indicates paying a bill to a service provider or vendor.`;\n    }"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 246,
            "endLine": 250,
            "content": "    // Bill Payment reasoning\n    if (lowerDesc.includes('bill payment') && !lowerDesc.includes('visa') && !lowerDesc.includes('mastercard')) {\n      return `Bill Payment (${confidence}%): This is a payment to an external vendor. The description \"${description}\" indicates paying a bill to a service provider or vendor.`;\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 250,
            "endLine": 254,
            "content": "\n    // Generate general reasoning based on confidence level\n    if (confidence >= 90) {\n      return `High confidence categorization (${confidence}%): This transaction matches known patterns for \"${accountName}\". The description \"${description}\" and amount $${amount.toFixed(2)} align with typical ${accountName.toLowerCase()} transactions.`;\n    } else if (confidence >= 70) {"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 251,
            "endLine": 255,
            "content": "    // Generate general reasoning based on confidence level\n    if (confidence >= 90) {\n      return `High confidence categorization (${confidence}%): This transaction matches known patterns for \"${accountName}\". The description \"${description}\" and amount $${amount.toFixed(2)} align with typical ${accountName.toLowerCase()} transactions.`;\n    } else if (confidence >= 70) {\n      return `Good confidence categorization (${confidence}%): Based on similar transaction patterns, this appears to be \"${accountName}\". The description \"${description}\" suggests this type of transaction.`;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 262,
            "endLine": 266,
            "content": "\n  private suggestKeyword(transaction: Transaction, result: any): string | undefined {\n    const { description, amount } = transaction;\n    const { confidence } = result;\n"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 263,
            "endLine": 267,
            "content": "  private suggestKeyword(transaction: Transaction, result: any): string | undefined {\n    const { description, amount } = transaction;\n    const { confidence } = result;\n\n    // Only suggest keywords for high-confidence categorizations"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 266,
            "endLine": 270,
            "content": "\n    // Only suggest keywords for high-confidence categorizations\n    if (confidence < 80) return undefined;\n\n    // Extract potential merchant name from description"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 267,
            "endLine": 271,
            "content": "    // Only suggest keywords for high-confidence categorizations\n    if (confidence < 80) return undefined;\n\n    // Extract potential merchant name from description\n    const cleanDescription = description.toLowerCase()"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 269,
            "endLine": 273,
            "content": "\n    // Extract potential merchant name from description\n    const cleanDescription = description.toLowerCase()\n      .replace(/^\\d+\\s*/, '') // Remove leading numbers\n      .replace(/\\s+/g, ' ') // Normalize spaces"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 270,
            "endLine": 274,
            "content": "    // Extract potential merchant name from description\n    const cleanDescription = description.toLowerCase()\n      .replace(/^\\d+\\s*/, '') // Remove leading numbers\n      .replace(/\\s+/g, ' ') // Normalize spaces\n      .trim();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 275,
            "endLine": 279,
            "content": "\n    // Don't suggest keywords for generic descriptions\n    const genericPatterns = [\n      /^deposit$/,\n      /^credit$/,"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 276,
            "endLine": 280,
            "content": "    // Don't suggest keywords for generic descriptions\n    const genericPatterns = [\n      /^deposit$/,\n      /^credit$/,\n      /^debit$/,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 294,
            "endLine": 298,
            "content": "\n    // Extract merchant name (first few words, capitalized)\n    const words = cleanDescription.split(' ').slice(0, 3);\n    const merchantName = words\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))"
          },
          {
            "file": "src/lib/aiCategorizationService.ts",
            "startLine": 295,
            "endLine": 299,
            "content": "    // Extract merchant name (first few words, capitalized)\n    const words = cleanDescription.split(' ').slice(0, 3);\n    const merchantName = words\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 7,
            "endLine": 11,
            "content": "\n// Enhanced bank transaction patterns using account codes\nconst BANK_PATTERNS = [\n  // ACTUAL Bank Fees (Account Code: 404) - Only real bank charges\n  { pattern: /overdrawn\\s*handling\\s*charge/i, accountCode: '404', merchant: 'Bank Fee', confidence: 95 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 8,
            "endLine": 12,
            "content": "// Enhanced bank transaction patterns using account codes\nconst BANK_PATTERNS = [\n  // ACTUAL Bank Fees (Account Code: 404) - Only real bank charges\n  { pattern: /overdrawn\\s*handling\\s*charge/i, accountCode: '404', merchant: 'Bank Fee', confidence: 95 },\n  { pattern: /service\\s*charge/i, accountCode: '404', merchant: 'Bank Fee', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 35,
            "endLine": 39,
            "content": "\n  // Payment Processor Fees (Account Code: 888)\n  { pattern: /stripe\\s*fee|paypal\\s*fee|square\\s*fee|shopify\\s*fee|payment\\s*processing\\s*fee/i, accountCode: '888', merchant: 'Processing Fee', confidence: 97 },\n  \n  // General Service Fees (Account Code: 887)"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 36,
            "endLine": 40,
            "content": "  // Payment Processor Fees (Account Code: 888)\n  { pattern: /stripe\\s*fee|paypal\\s*fee|square\\s*fee|shopify\\s*fee|payment\\s*processing\\s*fee/i, accountCode: '888', merchant: 'Processing Fee', confidence: 97 },\n  \n  // General Service Fees (Account Code: 887)\n  { pattern: /service\\s*fee|platform\\s*fee|subscription\\s*fee|membership\\s*fee/i, accountCode: '887', merchant: 'Service Fee', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 38,
            "endLine": 42,
            "content": "  \n  // General Service Fees (Account Code: 887)\n  { pattern: /service\\s*fee|platform\\s*fee|subscription\\s*fee|membership\\s*fee/i, accountCode: '887', merchant: 'Service Fee', confidence: 95 },\n\n  // Interest and Investment Income (Account Code: 270)"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 39,
            "endLine": 43,
            "content": "  // General Service Fees (Account Code: 887)\n  { pattern: /service\\s*fee|platform\\s*fee|subscription\\s*fee|membership\\s*fee/i, accountCode: '887', merchant: 'Service Fee', confidence: 95 },\n\n  // Interest and Investment Income (Account Code: 270)\n  { pattern: /interest\\s*paid/i, accountCode: '270', merchant: 'Interest Income', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 41,
            "endLine": 45,
            "content": "\n  // Interest and Investment Income (Account Code: 270)\n  { pattern: /interest\\s*paid/i, accountCode: '270', merchant: 'Interest Income', confidence: 95 },\n  { pattern: /interest\\s*earned/i, accountCode: '270', merchant: 'Interest Income', confidence: 95 },\n  { pattern: /interest\\s*credit/i, accountCode: '270', merchant: 'Interest Income', confidence: 95 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 42,
            "endLine": 46,
            "content": "  // Interest and Investment Income (Account Code: 270)\n  { pattern: /interest\\s*paid/i, accountCode: '270', merchant: 'Interest Income', confidence: 95 },\n  { pattern: /interest\\s*earned/i, accountCode: '270', merchant: 'Interest Income', confidence: 95 },\n  { pattern: /interest\\s*credit/i, accountCode: '270', merchant: 'Interest Income', confidence: 95 },\n  { pattern: /interest\\s*on\\s*deposit/i, accountCode: '270', merchant: 'Interest Income', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 49,
            "endLine": 53,
            "content": "\n  // E-Transfers - REMOVED auto-categorization, now requires manual selection\n  // This allows users to properly categorize e-transfers based on their actual purpose\n\n  // Enhanced Deposits (Account Code: 200)"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 50,
            "endLine": 54,
            "content": "  // E-Transfers - REMOVED auto-categorization, now requires manual selection\n  // This allows users to properly categorize e-transfers based on their actual purpose\n\n  // Enhanced Deposits (Account Code: 200)\n  { pattern: /government\\s*canada/i, accountCode: '200', merchant: 'Government Deposit', confidence: 90 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 52,
            "endLine": 56,
            "content": "\n  // Enhanced Deposits (Account Code: 200)\n  { pattern: /government\\s*canada/i, accountCode: '200', merchant: 'Government Deposit', confidence: 90 },\n  { pattern: /gc\\s*\\d+[\\-\\s]*deposit/i, accountCode: '200', merchant: 'Government Deposit', confidence: 95 },\n  { pattern: /cra\\s*deposit/i, accountCode: '200', merchant: 'CRA Deposit', confidence: 95 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 53,
            "endLine": 57,
            "content": "  // Enhanced Deposits (Account Code: 200)\n  { pattern: /government\\s*canada/i, accountCode: '200', merchant: 'Government Deposit', confidence: 90 },\n  { pattern: /gc\\s*\\d+[\\-\\s]*deposit/i, accountCode: '200', merchant: 'Government Deposit', confidence: 95 },\n  { pattern: /cra\\s*deposit/i, accountCode: '200', merchant: 'CRA Deposit', confidence: 95 },\n  { pattern: /canada\\s*revenue\\s*agency/i, accountCode: '200', merchant: 'CRA Deposit', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 63,
            "endLine": 67,
            "content": "  \n  // Generic Deposits - Lower confidence for manual review\n  { pattern: /^deposit$/i, accountCode: '200', merchant: 'Deposit', confidence: 80 },\n  { pattern: /^credit$/i, accountCode: '200', merchant: 'Credit', confidence: 80 },\n"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 64,
            "endLine": 68,
            "content": "  // Generic Deposits - Lower confidence for manual review\n  { pattern: /^deposit$/i, accountCode: '200', merchant: 'Deposit', confidence: 80 },\n  { pattern: /^credit$/i, accountCode: '200', merchant: 'Credit', confidence: 80 },\n\n  // INTERNAL TRANSFERS (Account Code: 610 - Cash/Bank Account) - NOT Bank Fees"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 67,
            "endLine": 71,
            "content": "\n  // INTERNAL TRANSFERS (Account Code: 610 - Cash/Bank Account) - NOT Bank Fees\n  { pattern: /internal\\s*transfer/i, accountCode: '610', merchant: 'Internal Transfer', confidence: 95 },\n  { pattern: /account\\s*transfer/i, accountCode: '610', merchant: 'Account Transfer', confidence: 95 },\n  { pattern: /transfer\\s*between\\s*accounts/i, accountCode: '610', merchant: 'Internal Transfer', confidence: 95 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 68,
            "endLine": 72,
            "content": "  // INTERNAL TRANSFERS (Account Code: 610 - Cash/Bank Account) - NOT Bank Fees\n  { pattern: /internal\\s*transfer/i, accountCode: '610', merchant: 'Internal Transfer', confidence: 95 },\n  { pattern: /account\\s*transfer/i, accountCode: '610', merchant: 'Account Transfer', confidence: 95 },\n  { pattern: /transfer\\s*between\\s*accounts/i, accountCode: '610', merchant: 'Internal Transfer', confidence: 95 },\n  { pattern: /savings\\s*to\\s*chequing/i, accountCode: '610', merchant: 'Internal Transfer', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 81,
            "endLine": 85,
            "content": "\n  // LOAN PAYMENTS (Account Code: 900 - Loan) - NOT Bank Fees\n  { pattern: /term\\s*loans/i, accountCode: '900', merchant: 'Loan Payment', confidence: 95 },\n  { pattern: /santander\\s*consumer/i, accountCode: '900', merchant: 'Loan Payment', confidence: 95 },\n  { pattern: /res\\.\\s*mortgage/i, accountCode: '900', merchant: 'Mortgage Payment', confidence: 95 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 82,
            "endLine": 86,
            "content": "  // LOAN PAYMENTS (Account Code: 900 - Loan) - NOT Bank Fees\n  { pattern: /term\\s*loans/i, accountCode: '900', merchant: 'Loan Payment', confidence: 95 },\n  { pattern: /santander\\s*consumer/i, accountCode: '900', merchant: 'Loan Payment', confidence: 95 },\n  { pattern: /res\\.\\s*mortgage/i, accountCode: '900', merchant: 'Mortgage Payment', confidence: 95 },\n  { pattern: /mortgage\\s*payment/i, accountCode: '900', merchant: 'Mortgage Payment', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 88,
            "endLine": 92,
            "content": "\n  // CREDIT CARD PAYMENTS (Account Code: 900 - Loan) - NOT Bank Fees\n  { pattern: /mb[\\-\\s]*bill\\s*payment.*(?:visa|mastercard|credit\\s*card|amex)/i, accountCode: '900', merchant: 'Credit Card Payment', confidence: 95 },\n  { pattern: /bill\\s*payment.*(?:visa|mastercard|credit\\s*card|amex)/i, accountCode: '900', merchant: 'Credit Card Payment', confidence: 95 },\n  { pattern: /payment.*(?:visa|mastercard|credit\\s*card|amex)/i, accountCode: '900', merchant: 'Credit Card Payment', confidence: 90 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 89,
            "endLine": 93,
            "content": "  // CREDIT CARD PAYMENTS (Account Code: 900 - Loan) - NOT Bank Fees\n  { pattern: /mb[\\-\\s]*bill\\s*payment.*(?:visa|mastercard|credit\\s*card|amex)/i, accountCode: '900', merchant: 'Credit Card Payment', confidence: 95 },\n  { pattern: /bill\\s*payment.*(?:visa|mastercard|credit\\s*card|amex)/i, accountCode: '900', merchant: 'Credit Card Payment', confidence: 95 },\n  { pattern: /payment.*(?:visa|mastercard|credit\\s*card|amex)/i, accountCode: '900', merchant: 'Credit Card Payment', confidence: 90 },\n  { pattern: /td\\s*visa\\s*payment/i, accountCode: '900', merchant: 'TD Visa Payment', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 103,
            "endLine": 107,
            "content": "\n  // BILL PAYMENTS TO VENDORS (Specific account codes based on vendor type)\n  { pattern: /dominion\\s*prem\\s*msp/i, accountCode: '433', merchant: 'Insurance Payment', confidence: 95 },\n  { pattern: /wawanesa\\s*ins/i, accountCode: '433', merchant: 'Insurance Payment', confidence: 95 },\n  { pattern: /bell\\s*canada\\s*eft\\s*bpy/i, accountCode: '489', merchant: 'Bell Payment', confidence: 95 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 104,
            "endLine": 108,
            "content": "  // BILL PAYMENTS TO VENDORS (Specific account codes based on vendor type)\n  { pattern: /dominion\\s*prem\\s*msp/i, accountCode: '433', merchant: 'Insurance Payment', confidence: 95 },\n  { pattern: /wawanesa\\s*ins/i, accountCode: '433', merchant: 'Insurance Payment', confidence: 95 },\n  { pattern: /bell\\s*canada\\s*eft\\s*bpy/i, accountCode: '489', merchant: 'Bell Payment', confidence: 95 },\n  { pattern: /iol\\s*pay\\s*to:\\s*cra/i, accountCode: '505', merchant: 'CRA Payment', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 110,
            "endLine": 114,
            "content": "  \n  // Generic Bill Payments - Lower confidence for manual review\n  { pattern: /mb[\\-\\s]*bill\\s*payment(?!.*(?:visa|mastercard|credit\\s*card|amex))/i, accountCode: '453', merchant: 'Bill Payment', confidence: 80 },\n  { pattern: /bill\\s*payment(?!.*(?:visa|mastercard|credit\\s*card|amex))/i, accountCode: '453', merchant: 'Bill Payment', confidence: 80 },\n"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 111,
            "endLine": 115,
            "content": "  // Generic Bill Payments - Lower confidence for manual review\n  { pattern: /mb[\\-\\s]*bill\\s*payment(?!.*(?:visa|mastercard|credit\\s*card|amex))/i, accountCode: '453', merchant: 'Bill Payment', confidence: 80 },\n  { pattern: /bill\\s*payment(?!.*(?:visa|mastercard|credit\\s*card|amex))/i, accountCode: '453', merchant: 'Bill Payment', confidence: 80 },\n\n  // PAYROLL (Account Code: 477 for expenses, 200 for income)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 114,
            "endLine": 118,
            "content": "\n  // PAYROLL (Account Code: 477 for expenses, 200 for income)\n  { pattern: /payroll\\s*pay/i, accountCode: '477', merchant: 'Payroll Expense', confidence: 95 },\n  { pattern: /payroll/i, accountCode: '477', merchant: 'Payroll', confidence: 90 },\n  { pattern: /employee\\s*wages/i, accountCode: '477', merchant: 'Employee Wages', confidence: 95 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 115,
            "endLine": 119,
            "content": "  // PAYROLL (Account Code: 477 for expenses, 200 for income)\n  { pattern: /payroll\\s*pay/i, accountCode: '477', merchant: 'Payroll Expense', confidence: 95 },\n  { pattern: /payroll/i, accountCode: '477', merchant: 'Payroll', confidence: 90 },\n  { pattern: /employee\\s*wages/i, accountCode: '477', merchant: 'Employee Wages', confidence: 95 },\n  { pattern: /salary/i, accountCode: '200', merchant: 'Salary', confidence: 90 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 121,
            "endLine": 125,
            "content": "\n  // REVENUE TRANSACTIONS\n  { pattern: /stripe\\s*msp/i, accountCode: '200', merchant: 'Stripe Payment', confidence: 95 },\n  { pattern: /balance\\s*forward/i, accountCode: '200', merchant: 'Balance Forward', confidence: 95 },\n"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 122,
            "endLine": 126,
            "content": "  // REVENUE TRANSACTIONS\n  { pattern: /stripe\\s*msp/i, accountCode: '200', merchant: 'Stripe Payment', confidence: 95 },\n  { pattern: /balance\\s*forward/i, accountCode: '200', merchant: 'Balance Forward', confidence: 95 },\n\n  // BUSINESS EXPENSES (Specific categories)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 125,
            "endLine": 129,
            "content": "\n  // BUSINESS EXPENSES (Specific categories)\n  { pattern: /the\\s*garage\\s*part/i, accountCode: '449', merchant: 'Auto Parts', confidence: 90 },\n  { pattern: /jiffy\\s*lube/i, accountCode: '449', merchant: 'Jiffy Lube', confidence: 95 },\n  { pattern: /tim\\s*hortons/i, accountCode: '420', merchant: 'Tim Hortons', confidence: 95 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 126,
            "endLine": 130,
            "content": "  // BUSINESS EXPENSES (Specific categories)\n  { pattern: /the\\s*garage\\s*part/i, accountCode: '449', merchant: 'Auto Parts', confidence: 90 },\n  { pattern: /jiffy\\s*lube/i, accountCode: '449', merchant: 'Jiffy Lube', confidence: 95 },\n  { pattern: /tim\\s*hortons/i, accountCode: '420', merchant: 'Tim Hortons', confidence: 95 },\n  { pattern: /mcdonald/i, accountCode: '420', merchant: 'McDonalds', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 153,
            "endLine": 157,
            "content": "\n  // REJECTED/REVERSED TRANSACTIONS\n  { pattern: /gm\\s*reject\\s*item/i, accountCode: '404', merchant: 'Rejected Transaction', confidence: 95 },\n  { pattern: /rtd\\s*partial\\s*payment/i, accountCode: '453', merchant: 'Partial Payment', confidence: 95 },\n  { pattern: /debit\\s*memo/i, accountCode: '404', merchant: 'Debit Memo', confidence: 95 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 154,
            "endLine": 158,
            "content": "  // REJECTED/REVERSED TRANSACTIONS\n  { pattern: /gm\\s*reject\\s*item/i, accountCode: '404', merchant: 'Rejected Transaction', confidence: 95 },\n  { pattern: /rtd\\s*partial\\s*payment/i, accountCode: '453', merchant: 'Partial Payment', confidence: 95 },\n  { pattern: /debit\\s*memo/i, accountCode: '404', merchant: 'Debit Memo', confidence: 95 },\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 158,
            "endLine": 162,
            "content": "\n  // THIRD-PARTY SERVICES\n  { pattern: /sezzle/i, accountCode: '453', merchant: 'Sezzle', confidence: 95 },\n  { pattern: /afterpay/i, accountCode: '453', merchant: 'Afterpay', confidence: 95 },\n  { pattern: /capital\\s*one/i, accountCode: '900', merchant: 'Capital One', confidence: 95 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 159,
            "endLine": 163,
            "content": "  // THIRD-PARTY SERVICES\n  { pattern: /sezzle/i, accountCode: '453', merchant: 'Sezzle', confidence: 95 },\n  { pattern: /afterpay/i, accountCode: '453', merchant: 'Afterpay', confidence: 95 },\n  { pattern: /capital\\s*one/i, accountCode: '900', merchant: 'Capital One', confidence: 95 },\n  { pattern: /dacollect/i, accountCode: '453', merchant: 'DA Collect', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 164,
            "endLine": 168,
            "content": "\n  // BANK-SPECIFIC TRANSACTIONS (Lower confidence for manual review)\n  { pattern: /online\\s*banking\\s*transfer/i, accountCode: '610', merchant: 'Online Transfer', confidence: 85 },\n  { pattern: /online\\s*banking\\s*payment/i, accountCode: '453', merchant: 'Online Payment', confidence: 85 },\n  { pattern: /contactless\\s*interac\\s*purchase/i, accountCode: '453', merchant: 'Contactless Purchase', confidence: 85 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 165,
            "endLine": 169,
            "content": "  // BANK-SPECIFIC TRANSACTIONS (Lower confidence for manual review)\n  { pattern: /online\\s*banking\\s*transfer/i, accountCode: '610', merchant: 'Online Transfer', confidence: 85 },\n  { pattern: /online\\s*banking\\s*payment/i, accountCode: '453', merchant: 'Online Payment', confidence: 85 },\n  { pattern: /contactless\\s*interac\\s*purchase/i, accountCode: '453', merchant: 'Contactless Purchase', confidence: 85 },\n  { pattern: /visa\\s*debit\\s*purchase/i, accountCode: '453', merchant: 'Visa Debit Purchase', confidence: 85 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 173,
            "endLine": 177,
            "content": "\n  // ATM TRANSACTIONS (Account Code: 610 - Cash/Bank Account)\n  { pattern: /atm\\s*withdrawal/i, accountCode: '610', merchant: 'ATM Withdrawal', confidence: 95 },\n  { pattern: /atm\\s*deposit/i, accountCode: '610', merchant: 'ATM Deposit', confidence: 95 },\n  { pattern: /cash\\s*withdrawal/i, accountCode: '610', merchant: 'Cash Withdrawal', confidence: 95 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 174,
            "endLine": 178,
            "content": "  // ATM TRANSACTIONS (Account Code: 610 - Cash/Bank Account)\n  { pattern: /atm\\s*withdrawal/i, accountCode: '610', merchant: 'ATM Withdrawal', confidence: 95 },\n  { pattern: /atm\\s*deposit/i, accountCode: '610', merchant: 'ATM Deposit', confidence: 95 },\n  { pattern: /cash\\s*withdrawal/i, accountCode: '610', merchant: 'Cash Withdrawal', confidence: 95 },\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 178,
            "endLine": 182,
            "content": "\n  // GENERIC PATTERNS (Lower confidence for manual review)\n  { pattern: /misc\\s*payment/i, accountCode: '453', merchant: 'Misc Payment', confidence: 80 },\n  { pattern: /auto\\s*payment/i, accountCode: '453', merchant: 'Auto Payment', confidence: 80 },\n  { pattern: /^transfer$/i, accountCode: '610', merchant: 'Transfer', confidence: 80 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 179,
            "endLine": 183,
            "content": "  // GENERIC PATTERNS (Lower confidence for manual review)\n  { pattern: /misc\\s*payment/i, accountCode: '453', merchant: 'Misc Payment', confidence: 80 },\n  { pattern: /auto\\s*payment/i, accountCode: '453', merchant: 'Auto Payment', confidence: 80 },\n  { pattern: /^transfer$/i, accountCode: '610', merchant: 'Transfer', confidence: 80 },\n  { pattern: /^payment$/i, accountCode: '453', merchant: 'Payment', confidence: 80 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 192,
            "endLine": 196,
            "content": "\n// Utility to determine inflow/outflow\nexport function getInflowOutflow(transaction: Transaction, accountCode: string): 'inflow' | 'outflow' {\n  // If amount is positive and account code is income-related, treat as inflow\n  if (transaction.amount > 0) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 193,
            "endLine": 197,
            "content": "// Utility to determine inflow/outflow\nexport function getInflowOutflow(transaction: Transaction, accountCode: string): 'inflow' | 'outflow' {\n  // If amount is positive and account code is income-related, treat as inflow\n  if (transaction.amount > 0) {\n    if (['200', '220', '260', '270'].includes(accountCode)) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 207,
            "endLine": 211,
            "content": "  \n  // If amount is negative and account code is expense-related, treat as outflow\n  if (transaction.amount < 0) {\n    if (['310', '400', '404', '408', '412', '416', '420', '425', '433', '437', '442', '449', '453', '455', '469', '473', '477', '482', '485', '487', '489', '493', '505'].includes(accountCode)) {\n      return 'outflow';"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 208,
            "endLine": 212,
            "content": "  // If amount is negative and account code is expense-related, treat as outflow\n  if (transaction.amount < 0) {\n    if (['310', '400', '404', '408', '412', '416', '420', '425', '433', '437', '442', '449', '453', '455', '469', '473', '477', '482', '485', '487', '489', '493', '505'].includes(accountCode)) {\n      return 'outflow';\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 216,
            "endLine": 220,
            "content": "  \n  // Zero amount - determine based on account code\n  if (['200', '220', '260', '270'].includes(accountCode)) {\n    return 'inflow';\n  } else if (['310', '400', '404', '408', '412', '416', '420', '425', '433', '437', '442', '449', '453', '455', '469', '473', '477', '482', '485', '487', '489', '493', '505'].includes(accountCode)) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 217,
            "endLine": 221,
            "content": "  // Zero amount - determine based on account code\n  if (['200', '220', '260', '270'].includes(accountCode)) {\n    return 'inflow';\n  } else if (['310', '400', '404', '408', '412', '416', '420', '425', '433', '437', '442', '449', '453', '455', '469', '473', '477', '482', '485', '487', '489', '493', '505'].includes(accountCode)) {\n    return 'outflow';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 223,
            "endLine": 227,
            "content": "  \n  // Default fallback\n  return transaction.amount >= 0 ? 'inflow' : 'outflow';\n}\n"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 224,
            "endLine": 228,
            "content": "  // Default fallback\n  return transaction.amount >= 0 ? 'inflow' : 'outflow';\n}\n\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 229,
            "endLine": 233,
            "content": "\nexport class AIEngine {\n  private province: string;\n  private chartOfAccounts: ChartOfAccounts;\n  private databaseService: DatabaseService;"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 230,
            "endLine": 234,
            "content": "export class AIEngine {\n  private province: string;\n  private chartOfAccounts: ChartOfAccounts;\n  private databaseService: DatabaseService;\n  public userId?: string; // Make userId accessible for API calls"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 235,
            "endLine": 239,
            "content": "  \n  // Keep local patterns for performance, but sync with database\n  private learnedPatterns: Map<string, { category: string; confidence: number; usageCount: number; lastUsed: Date }> = new Map();\n  private userCorrections: Map<string, string> = new Map();\n  private similarTransactionRules: Map<string, { category: string; confidence: number; usageCount: number; lastUsed: Date }> = new Map();"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 236,
            "endLine": 240,
            "content": "  // Keep local patterns for performance, but sync with database\n  private learnedPatterns: Map<string, { category: string; confidence: number; usageCount: number; lastUsed: Date }> = new Map();\n  private userCorrections: Map<string, string> = new Map();\n  private similarTransactionRules: Map<string, { category: string; confidence: number; usageCount: number; lastUsed: Date }> = new Map();\n  private categoryUsage: Map<string, number> = new Map(); // Track category usage"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 243,
            "endLine": 247,
            "content": "\n  constructor(province: string = 'ON', userId?: string, organizationId?: string) {\n    this.province = province;\n    this.userId = userId; // Store userId for API calls\n    // Use singleton Chart of Accounts instance to prevent multiple initializations"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 244,
            "endLine": 248,
            "content": "  constructor(province: string = 'ON', userId?: string, organizationId?: string) {\n    this.province = province;\n    this.userId = userId; // Store userId for API calls\n    // Use singleton Chart of Accounts instance to prevent multiple initializations\n    this.chartOfAccounts = ChartOfAccounts.getInstance(province);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 247,
            "endLine": 251,
            "content": "    // Use singleton Chart of Accounts instance to prevent multiple initializations\n    this.chartOfAccounts = ChartOfAccounts.getInstance(province);\n    this.databaseService = DatabaseService.getInstance();\n    this.customKeywordManager = CustomKeywordManager.getInstance();\n    // Always try to load learned data (the service will handle authentication internally)"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 117,
            "endLine": 121,
            "content": "    // Use singleton Chart of Accounts instance to prevent multiple initializations\n    this.chartOfAccounts = ChartOfAccounts.getInstance(province);\n    console.log(`📊 ReportGenerator initialized with Chart of Accounts for province: ${province}`);\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 255,
            "endLine": 259,
            "content": "\n  /**\n   * Initialize the AI engine and wait for chart of accounts to load\n   */\n  async initialize(): Promise<void> {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 256,
            "endLine": 260,
            "content": "  /**\n   * Initialize the AI engine and wait for chart of accounts to load\n   */\n  async initialize(): Promise<void> {\n    // ChartOfAccounts is always ready, just load learned data"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 275,
            "endLine": 279,
            "content": "\n      const patterns = await this.databaseService.getLearnedPatterns();\n      \n      // Clear existing patterns\n      this.learnedPatterns.clear();"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 276,
            "endLine": 280,
            "content": "      const patterns = await this.databaseService.getLearnedPatterns();\n      \n      // Clear existing patterns\n      this.learnedPatterns.clear();\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 280,
            "endLine": 284,
            "content": "      \n      // Load patterns from database\n      for (const pattern of patterns) {\n        this.learnedPatterns.set(pattern.pattern, {\n          category: pattern.category_code,"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 281,
            "endLine": 285,
            "content": "      // Load patterns from database\n      for (const pattern of patterns) {\n        this.learnedPatterns.set(pattern.pattern, {\n          category: pattern.category_code,\n          confidence: pattern.confidence,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 290,
            "endLine": 294,
            "content": "      \n      console.log('✅ Loaded learned data from database:', patterns.length, 'patterns');\n    } catch (error) {\n      console.error('Failed to load learned data from database:', error);\n      // Fallback to localStorage if database fails"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 291,
            "endLine": 295,
            "content": "      console.log('✅ Loaded learned data from database:', patterns.length, 'patterns');\n    } catch (error) {\n      console.error('Failed to load learned data from database:', error);\n      // Fallback to localStorage if database fails\n      this.loadLearnedDataFromStorage();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 298,
            "endLine": 302,
            "content": "\n  /**\n   * Save learned data to database (called periodically)\n   */\n  private async saveLearnedData(): Promise<void> {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 299,
            "endLine": 303,
            "content": "  /**\n   * Save learned data to database (called periodically)\n   */\n  private async saveLearnedData(): Promise<void> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 310,
            "endLine": 314,
            "content": "\n      // Save all learned patterns to database\n      for (const [pattern, data] of this.learnedPatterns.entries()) {\n        await this.databaseService.saveLearnedPattern(pattern, data.category, data.confidence);\n      }"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 311,
            "endLine": 315,
            "content": "      // Save all learned patterns to database\n      for (const [pattern, data] of this.learnedPatterns.entries()) {\n        await this.databaseService.saveLearnedPattern(pattern, data.category, data.confidence);\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 315,
            "endLine": 319,
            "content": "      \n      console.log('✅ Saved learned data to database');\n    } catch (error) {\n      console.error('Failed to save learned data to database:', error);\n      // Fallback to localStorage"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 316,
            "endLine": 320,
            "content": "      console.log('✅ Saved learned data to database');\n    } catch (error) {\n      console.error('Failed to save learned data to database:', error);\n      // Fallback to localStorage\n      this.saveLearnedDataToStorage();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 323,
            "endLine": 327,
            "content": "\n  /**\n   * Categorize a transaction using AI patterns and heuristics\n   */\n  categorizeTransaction(transaction: Transaction): {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 324,
            "endLine": 328,
            "content": "  /**\n   * Categorize a transaction using AI patterns and heuristics\n   */\n  categorizeTransaction(transaction: Transaction): {\n    category: string;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 336,
            "endLine": 340,
            "content": "\n    console.log(`🔍 Categorizing: \"${description}\" (${amount})`);\n\n    // Helper function to determine inflow/outflow\n    const getInflowOutflow = (transaction: Transaction, accountCode: string): 'inflow' | 'outflow' => {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 337,
            "endLine": 341,
            "content": "    console.log(`🔍 Categorizing: \"${description}\" (${amount})`);\n\n    // Helper function to determine inflow/outflow\n    const getInflowOutflow = (transaction: Transaction, accountCode: string): 'inflow' | 'outflow' => {\n      if (isPositive) return 'inflow';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 338,
            "endLine": 342,
            "content": "\n    // Helper function to determine inflow/outflow\n    const getInflowOutflow = (transaction: Transaction, accountCode: string): 'inflow' | 'outflow' => {\n      if (isPositive) return 'inflow';\n      if (['200', '220', '260', '270'].includes(accountCode)) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 339,
            "endLine": 343,
            "content": "    // Helper function to determine inflow/outflow\n    const getInflowOutflow = (transaction: Transaction, accountCode: string): 'inflow' | 'outflow' => {\n      if (isPositive) return 'inflow';\n      if (['200', '220', '260', '270'].includes(accountCode)) {\n        return 'inflow';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 347,
            "endLine": 351,
            "content": "\n    // 1. Check custom keywords FIRST (highest priority)\n    const customKeywordMatch = this.findKeywordMatch(description);\n    if (customKeywordMatch) {\n      console.log(`🔑 Custom keyword match: ${customKeywordMatch.accountCode} (${customKeywordMatch.confidence}%)`);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 348,
            "endLine": 352,
            "content": "    // 1. Check custom keywords FIRST (highest priority)\n    const customKeywordMatch = this.findKeywordMatch(description);\n    if (customKeywordMatch) {\n      console.log(`🔑 Custom keyword match: ${customKeywordMatch.accountCode} (${customKeywordMatch.confidence}%)`);\n      return {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 359,
            "endLine": 363,
            "content": "\n    // 2. Check learned patterns (user corrections)\n    const learnedPattern = this.findLearnedPattern(description);\n    if (learnedPattern) {\n      console.log(`🧠 Learned pattern: ${learnedPattern.category} (${learnedPattern.confidence}%)`);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 360,
            "endLine": 364,
            "content": "    // 2. Check learned patterns (user corrections)\n    const learnedPattern = this.findLearnedPattern(description);\n    if (learnedPattern) {\n      console.log(`🧠 Learned pattern: ${learnedPattern.category} (${learnedPattern.confidence}%)`);\n      return {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 371,
            "endLine": 375,
            "content": "\n    // 3. Check similar transaction rules\n    const similarRule = this.findSimilarTransactionRule(description);\n    if (similarRule) {\n      console.log(`🔄 Similar transaction rule: ${similarRule.category} (${similarRule.confidence}%)`);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 372,
            "endLine": 376,
            "content": "    // 3. Check similar transaction rules\n    const similarRule = this.findSimilarTransactionRule(description);\n    if (similarRule) {\n      console.log(`🔄 Similar transaction rule: ${similarRule.category} (${similarRule.confidence}%)`);\n      return {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 383,
            "endLine": 387,
            "content": "\n    // 4. Try bank transaction patterns (high priority for bank-related)\n    const bankMatch = this.findBankPattern(description);\n    if (bankMatch) {\n      const inflowOutflow = getInflowOutflow(transaction, bankMatch.accountCode);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 384,
            "endLine": 388,
            "content": "    // 4. Try bank transaction patterns (high priority for bank-related)\n    const bankMatch = this.findBankPattern(description);\n    if (bankMatch) {\n      const inflowOutflow = getInflowOutflow(transaction, bankMatch.accountCode);\n      console.log(`✅ Bank pattern match: ${bankMatch.merchant} (${bankMatch.confidence}%)`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 396,
            "endLine": 400,
            "content": "\n    // 5. Try exact merchant pattern matching\n    const exactMatch = this.findExactPattern(description);\n    if (exactMatch) {\n      console.log(`✅ Exact merchant match: ${exactMatch.merchant} -> ${exactMatch.accountCode}`);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 397,
            "endLine": 401,
            "content": "    // 5. Try exact merchant pattern matching\n    const exactMatch = this.findExactPattern(description);\n    if (exactMatch) {\n      console.log(`✅ Exact merchant match: ${exactMatch.merchant} -> ${exactMatch.accountCode}`);\n      return {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 408,
            "endLine": 412,
            "content": "\n    // 6. Try fuzzy matching with merchant patterns (improved)\n    const fuzzyMatch = this.findFuzzyPattern(description);\n    if (fuzzyMatch && fuzzyMatch.score < 0.3) {\n      console.log(`✅ Fuzzy merchant match: ${fuzzyMatch.merchant} (score: ${fuzzyMatch.score})`);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 409,
            "endLine": 413,
            "content": "    // 6. Try fuzzy matching with merchant patterns (improved)\n    const fuzzyMatch = this.findFuzzyPattern(description);\n    if (fuzzyMatch && fuzzyMatch.score < 0.3) {\n      console.log(`✅ Fuzzy merchant match: ${fuzzyMatch.merchant} (score: ${fuzzyMatch.score})`);\n      return {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 420,
            "endLine": 424,
            "content": "\n    // 7. E-TRANSFER now requires manual entry - skip auto-categorization\n    if (/e[\\-\\s]*transfer(?!\\s*fee)/i.test(description.toLowerCase())) {\n      console.log(`⚠️ E-TRANSFER detected: \"${description}\" - requires manual account assignment`);\n      return {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 421,
            "endLine": 425,
            "content": "    // 7. E-TRANSFER now requires manual entry - skip auto-categorization\n    if (/e[\\-\\s]*transfer(?!\\s*fee)/i.test(description.toLowerCase())) {\n      console.log(`⚠️ E-TRANSFER detected: \"${description}\" - requires manual account assignment`);\n      return {\n        category: 'Uncategorized',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 431,
            "endLine": 435,
            "content": "\n    // 8. Try amount-based heuristics\n    const amountMatch = this.findAmountBasedCategory(amount);\n    if (amountMatch) {\n      console.log(`💰 Amount-based category: ${amountMatch.category} (${amountMatch.confidence}%)`);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 432,
            "endLine": 436,
            "content": "    // 8. Try amount-based heuristics\n    const amountMatch = this.findAmountBasedCategory(amount);\n    if (amountMatch) {\n      console.log(`💰 Amount-based category: ${amountMatch.category} (${amountMatch.confidence}%)`);\n      return {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 443,
            "endLine": 447,
            "content": "\n    // 9. Default fallback with low confidence\n    const defaultCategory = isPositive ? 'Revenue' : 'Uncategorized';\n    console.log(`❓ Default fallback: ${defaultCategory} (low confidence)`);\n    return {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 444,
            "endLine": 448,
            "content": "    // 9. Default fallback with low confidence\n    const defaultCategory = isPositive ? 'Revenue' : 'Uncategorized';\n    console.log(`❓ Default fallback: ${defaultCategory} (low confidence)`);\n    return {\n      category: defaultCategory,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 454,
            "endLine": 458,
            "content": "\n  /**\n   * Find bank transaction patterns (NEW - from training data)\n   */\n  private findBankPattern(description: string): { accountCode: string; merchant: string; confidence: number } | null {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 455,
            "endLine": 459,
            "content": "  /**\n   * Find bank transaction patterns (NEW - from training data)\n   */\n  private findBankPattern(description: string): { accountCode: string; merchant: string; confidence: number } | null {\n    const normalizedDesc = description.toLowerCase();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 460,
            "endLine": 464,
            "content": "    \n    console.log(`🔍 Testing bank patterns for: \"${normalizedDesc}\"`);\n    \n    // Special handling for E-TRANSFER - now requires manual entry\n    if (/e[\\-\\s]*transfer(?!\\s*fee)/i.test(normalizedDesc)) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 461,
            "endLine": 465,
            "content": "    console.log(`🔍 Testing bank patterns for: \"${normalizedDesc}\"`);\n    \n    // Special handling for E-TRANSFER - now requires manual entry\n    if (/e[\\-\\s]*transfer(?!\\s*fee)/i.test(normalizedDesc)) {\n      console.log(`⚠️ E-TRANSFER detected, skipping bank patterns - requires manual entry`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 462,
            "endLine": 466,
            "content": "    \n    // Special handling for E-TRANSFER - now requires manual entry\n    if (/e[\\-\\s]*transfer(?!\\s*fee)/i.test(normalizedDesc)) {\n      console.log(`⚠️ E-TRANSFER detected, skipping bank patterns - requires manual entry`);\n      return null;"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 463,
            "endLine": 467,
            "content": "    // Special handling for E-TRANSFER - now requires manual entry\n    if (/e[\\-\\s]*transfer(?!\\s*fee)/i.test(normalizedDesc)) {\n      console.log(`⚠️ E-TRANSFER detected, skipping bank patterns - requires manual entry`);\n      return null;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 468,
            "endLine": 472,
            "content": "    \n    for (const pattern of BANK_PATTERNS) {\n      if (pattern.pattern.test(normalizedDesc)) {\n        console.log(`✅ Bank pattern matched: ${pattern.pattern.source} -> ${pattern.merchant}`);\n        this.incrementCategoryUsage(pattern.accountCode);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 469,
            "endLine": 473,
            "content": "    for (const pattern of BANK_PATTERNS) {\n      if (pattern.pattern.test(normalizedDesc)) {\n        console.log(`✅ Bank pattern matched: ${pattern.pattern.source} -> ${pattern.merchant}`);\n        this.incrementCategoryUsage(pattern.accountCode);\n        return { "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 472,
            "endLine": 476,
            "content": "        this.incrementCategoryUsage(pattern.accountCode);\n        return { \n          accountCode: pattern.accountCode, \n          merchant: pattern.merchant, \n          confidence: pattern.confidence "
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 510,
            "endLine": 514,
            "content": "        this.incrementCategoryUsage(pattern.accountCode);\n        return { accountCode: pattern.accountCode, merchant: pattern.merchant };\n      }\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 484,
            "endLine": 488,
            "content": "\n  /**\n   * Categorize a batch of transactions\n   */\n  categorizeBatch(transactions: Transaction[]): Transaction[] {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 485,
            "endLine": 489,
            "content": "  /**\n   * Categorize a batch of transactions\n   */\n  categorizeBatch(transactions: Transaction[]): Transaction[] {\n    // Chart of accounts is always ready"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 501,
            "endLine": 505,
            "content": "\n  /**\n   * Find exact pattern match in merchant database\n   */\n  private findExactPattern(description: string): { accountCode: string; merchant: string } | null {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 502,
            "endLine": 506,
            "content": "  /**\n   * Find exact pattern match in merchant database\n   */\n  private findExactPattern(description: string): { accountCode: string; merchant: string } | null {\n    const normalizedDesc = description.toLowerCase();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 507,
            "endLine": 511,
            "content": "    \n    for (const pattern of MERCHANT_PATTERNS) {\n      if (pattern.pattern.test(normalizedDesc)) {\n        this.incrementCategoryUsage(pattern.accountCode);\n        return { accountCode: pattern.accountCode, merchant: pattern.merchant };"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 508,
            "endLine": 512,
            "content": "    for (const pattern of MERCHANT_PATTERNS) {\n      if (pattern.pattern.test(normalizedDesc)) {\n        this.incrementCategoryUsage(pattern.accountCode);\n        return { accountCode: pattern.accountCode, merchant: pattern.merchant };\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 517,
            "endLine": 521,
            "content": "\n  /**\n   * Find fuzzy pattern match using improved algorithms\n   */\n  private findFuzzyPattern(description: string): { merchant: string; score: number } | null {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 518,
            "endLine": 522,
            "content": "  /**\n   * Find fuzzy pattern match using improved algorithms\n   */\n  private findFuzzyPattern(description: string): { merchant: string; score: number } | null {\n    if (!this.fuse) return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 523,
            "endLine": 527,
            "content": "    \n    const results = this.fuse.search(description);\n    if (results.length === 0) return null;\n    \n    const bestMatch = results[0];"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 524,
            "endLine": 528,
            "content": "    const results = this.fuse.search(description);\n    if (results.length === 0) return null;\n    \n    const bestMatch = results[0];\n    const score = bestMatch.score || 1;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 526,
            "endLine": 530,
            "content": "    \n    const bestMatch = results[0];\n    const score = bestMatch.score || 1;\n    \n    // Only return if score is good enough"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 527,
            "endLine": 531,
            "content": "    const bestMatch = results[0];\n    const score = bestMatch.score || 1;\n    \n    // Only return if score is good enough\n    if (score < 0.3) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 529,
            "endLine": 533,
            "content": "    \n    // Only return if score is good enough\n    if (score < 0.3) {\n      this.incrementCategoryUsage(bestMatch.item.merchant);\n      return {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 530,
            "endLine": 534,
            "content": "    // Only return if score is good enough\n    if (score < 0.3) {\n      this.incrementCategoryUsage(bestMatch.item.merchant);\n      return {\n        merchant: bestMatch.item.merchant,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 541,
            "endLine": 545,
            "content": "\n  /**\n   * Calculate similarity between two strings using multiple algorithms\n   */\n  private calculateSimilarity(str1: string, str2: string): number {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 542,
            "endLine": 546,
            "content": "  /**\n   * Calculate similarity between two strings using multiple algorithms\n   */\n  private calculateSimilarity(str1: string, str2: string): number {\n    // Jaro-Winkler similarity"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 548,
            "endLine": 552,
            "content": "    \n    // Levenshtein distance\n    const levenshtein = this.levenshteinDistance(str1, str2);\n    const maxLength = Math.max(str1.length, str2.length);\n    const levenshteinSimilarity = maxLength > 0 ? 1 - (levenshtein / maxLength) : 0;"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 549,
            "endLine": 553,
            "content": "    // Levenshtein distance\n    const levenshtein = this.levenshteinDistance(str1, str2);\n    const maxLength = Math.max(str1.length, str2.length);\n    const levenshteinSimilarity = maxLength > 0 ? 1 - (levenshtein / maxLength) : 0;\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 557,
            "endLine": 561,
            "content": "\n  /**\n   * Jaro-Winkler similarity algorithm\n   */\n  private jaroWinklerSimilarity(s1: string, s2: string): number {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 558,
            "endLine": 562,
            "content": "  /**\n   * Jaro-Winkler similarity algorithm\n   */\n  private jaroWinklerSimilarity(s1: string, s2: string): number {\n    if (s1 === s2) return 1.0;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 564,
            "endLine": 568,
            "content": "    \n    const matchWindow = Math.floor(Math.max(s1.length, s2.length) / 2) - 1;\n    if (matchWindow < 0) return 0.0;\n    \n    const s1Matches = new Array(s1.length).fill(false);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 565,
            "endLine": 569,
            "content": "    const matchWindow = Math.floor(Math.max(s1.length, s2.length) / 2) - 1;\n    if (matchWindow < 0) return 0.0;\n    \n    const s1Matches = new Array(s1.length).fill(false);\n    const s2Matches = new Array(s2.length).fill(false);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 567,
            "endLine": 571,
            "content": "    \n    const s1Matches = new Array(s1.length).fill(false);\n    const s2Matches = new Array(s2.length).fill(false);\n    \n    let matches = 0;"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 568,
            "endLine": 572,
            "content": "    const s1Matches = new Array(s1.length).fill(false);\n    const s2Matches = new Array(s2.length).fill(false);\n    \n    let matches = 0;\n    let transpositions = 0;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 573,
            "endLine": 577,
            "content": "    \n    // Find matches\n    for (let i = 0; i < s1.length; i++) {\n      const start = Math.max(0, i - matchWindow);\n      const end = Math.min(i + matchWindow + 1, s2.length);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 574,
            "endLine": 578,
            "content": "    // Find matches\n    for (let i = 0; i < s1.length; i++) {\n      const start = Math.max(0, i - matchWindow);\n      const end = Math.min(i + matchWindow + 1, s2.length);\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 578,
            "endLine": 582,
            "content": "      \n      for (let j = start; j < end; j++) {\n        if (s2Matches[j] || s1[i] !== s2[j]) continue;\n        s1Matches[i] = true;\n        s2Matches[j] = true;"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 579,
            "endLine": 583,
            "content": "      for (let j = start; j < end; j++) {\n        if (s2Matches[j] || s1[i] !== s2[j]) continue;\n        s1Matches[i] = true;\n        s2Matches[j] = true;\n        matches++;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 589,
            "endLine": 593,
            "content": "    \n    // Find transpositions\n    let k = 0;\n    for (let i = 0; i < s1.length; i++) {\n      if (!s1Matches[i]) continue;"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 590,
            "endLine": 594,
            "content": "    // Find transpositions\n    let k = 0;\n    for (let i = 0; i < s1.length; i++) {\n      if (!s1Matches[i]) continue;\n      while (!s2Matches[k]) k++;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 598,
            "endLine": 602,
            "content": "    \n    const jaro = (matches / s1.length + matches / s2.length + (matches - transpositions / 2) / matches) / 3;\n    \n    // Winkler modification\n    let prefix = 0;"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 599,
            "endLine": 603,
            "content": "    const jaro = (matches / s1.length + matches / s2.length + (matches - transpositions / 2) / matches) / 3;\n    \n    // Winkler modification\n    let prefix = 0;\n    for (let i = 0; i < Math.min(4, Math.min(s1.length, s2.length)); i++) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 600,
            "endLine": 604,
            "content": "    \n    // Winkler modification\n    let prefix = 0;\n    for (let i = 0; i < Math.min(4, Math.min(s1.length, s2.length)); i++) {\n      if (s1[i] === s2[i]) prefix++;"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 601,
            "endLine": 605,
            "content": "    // Winkler modification\n    let prefix = 0;\n    for (let i = 0; i < Math.min(4, Math.min(s1.length, s2.length)); i++) {\n      if (s1[i] === s2[i]) prefix++;\n      else break;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 610,
            "endLine": 614,
            "content": "\n  /**\n   * Levenshtein distance algorithm\n   */\n  private levenshteinDistance(str1: string, str2: string): number {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 611,
            "endLine": 615,
            "content": "  /**\n   * Levenshtein distance algorithm\n   */\n  private levenshteinDistance(str1: string, str2: string): number {\n    const matrix = Array(str2.length + 1).fill(null).map(() => Array(str1.length + 1).fill(null));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 616,
            "endLine": 620,
            "content": "    \n    for (let i = 0; i <= str1.length; i++) matrix[0][i] = i;\n    for (let j = 0; j <= str2.length; j++) matrix[j][0] = j;\n    \n    for (let j = 1; j <= str2.length; j++) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 617,
            "endLine": 621,
            "content": "    for (let i = 0; i <= str1.length; i++) matrix[0][i] = i;\n    for (let j = 0; j <= str2.length; j++) matrix[j][0] = j;\n    \n    for (let j = 1; j <= str2.length; j++) {\n      for (let i = 1; i <= str1.length; i++) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 619,
            "endLine": 623,
            "content": "    \n    for (let j = 1; j <= str2.length; j++) {\n      for (let i = 1; i <= str1.length; i++) {\n        const indicator = str1[i - 1] === str2[j - 1] ? 0 : 1;\n        matrix[j][i] = Math.min("
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 620,
            "endLine": 624,
            "content": "    for (let j = 1; j <= str2.length; j++) {\n      for (let i = 1; i <= str1.length; i++) {\n        const indicator = str1[i - 1] === str2[j - 1] ? 0 : 1;\n        matrix[j][i] = Math.min(\n          matrix[j][i - 1] + 1, // deletion"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 633,
            "endLine": 637,
            "content": "\n  /**\n   * Enhanced keyword-based matches (IMPROVED with training data)\n   */\n  private findKeywordMatch(description: string): { accountCode: string; confidence: number } | null {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 634,
            "endLine": 638,
            "content": "  /**\n   * Enhanced keyword-based matches (IMPROVED with training data)\n   */\n  private findKeywordMatch(description: string): { accountCode: string; confidence: number } | null {\n    const normalizedDesc = description.toLowerCase();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 639,
            "endLine": 643,
            "content": "    \n    // Check single keywords first (higher priority)\n    const keywords = this.customKeywordManager.getKeywords();\n    for (const keyword of keywords) {\n      if (normalizedDesc.includes(keyword.keyword.toLowerCase())) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 640,
            "endLine": 644,
            "content": "    // Check single keywords first (higher priority)\n    const keywords = this.customKeywordManager.getKeywords();\n    for (const keyword of keywords) {\n      if (normalizedDesc.includes(keyword.keyword.toLowerCase())) {\n        console.log(`✅ Keyword match: \"${keyword.keyword}\" -> ${keyword.accountCode}`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 652,
            "endLine": 656,
            "content": "    \n    // Check multi-keyword rules\n    const rules = this.customKeywordManager.getRules();\n    for (const rule of rules) {\n      const matchCount = rule.keywords.filter((k: string) => normalizedDesc.includes(k.toLowerCase())).length;"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 653,
            "endLine": 657,
            "content": "    // Check multi-keyword rules\n    const rules = this.customKeywordManager.getRules();\n    for (const rule of rules) {\n      const matchCount = rule.keywords.filter((k: string) => normalizedDesc.includes(k.toLowerCase())).length;\n      if (matchCount > 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 661,
            "endLine": 665,
            "content": "        \n        if (adjustedConfidence >= 50) { // Minimum threshold\n          console.log(`✅ Rule match: \"${rule.keywords.join(', ')}\" -> ${rule.accountCode} (${adjustedConfidence.toFixed(1)}% confidence)`);\n          this.incrementCategoryUsage(rule.accountCode);\n          return { "
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 662,
            "endLine": 666,
            "content": "        if (adjustedConfidence >= 50) { // Minimum threshold\n          console.log(`✅ Rule match: \"${rule.keywords.join(', ')}\" -> ${rule.accountCode} (${adjustedConfidence.toFixed(1)}% confidence)`);\n          this.incrementCategoryUsage(rule.accountCode);\n          return { \n            accountCode: rule.accountCode, "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 675,
            "endLine": 679,
            "content": "\n  /**\n   * Enhanced amount-based categorization (IMPROVED)\n   */\n  private findAmountBasedCategory(amount: number): { category: string; confidence: number } | null {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 676,
            "endLine": 680,
            "content": "  /**\n   * Enhanced amount-based categorization (IMPROVED)\n   */\n  private findAmountBasedCategory(amount: number): { category: string; confidence: number } | null {\n    // Enhanced amount-based heuristics from training data analysis"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 697,
            "endLine": 701,
            "content": "\n  /**\n   * Get account code for a category with improved mapping\n   */\n  private getAccountCode(category: string, amount: number): string {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 698,
            "endLine": 702,
            "content": "  /**\n   * Get account code for a category with improved mapping\n   */\n  private getAccountCode(category: string, amount: number): string {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 709,
            "endLine": 713,
            "content": "\n      // Try to find account by category name first\n      const account = this.chartOfAccounts.findAccountByCategory(category);\n      if (account) {\n        console.log(`✅ Found account code ${account.code} for category: ${category}`);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 710,
            "endLine": 714,
            "content": "      // Try to find account by category name first\n      const account = this.chartOfAccounts.findAccountByCategory(category);\n      if (account) {\n        console.log(`✅ Found account code ${account.code} for category: ${category}`);\n        return account.code;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 716,
            "endLine": 720,
            "content": "\n      // Enhanced category to account mapping\n      const categoryMapping: { [key: string]: string } = {\n        // Revenue accounts\n        'Revenue': '200',"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 717,
            "endLine": 721,
            "content": "      // Enhanced category to account mapping\n      const categoryMapping: { [key: string]: string } = {\n        // Revenue accounts\n        'Revenue': '200',\n        'Sales Revenue': '200',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 726,
            "endLine": 730,
            "content": "        \n        // Expense accounts\n        'Office Supplies': '455',\n        'Software & Technology': '485',\n        'Telecommunications': '489',"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 727,
            "endLine": 731,
            "content": "        // Expense accounts\n        'Office Supplies': '455',\n        'Software & Technology': '485',\n        'Telecommunications': '489',\n        'Insurance': '433',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 746,
            "endLine": 750,
            "content": "        \n        // Liability accounts\n        'Accounts Payable': '800',\n        'Sales Tax': '803',\n        'Income Tax Payable': '803',"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 747,
            "endLine": 751,
            "content": "        // Liability accounts\n        'Accounts Payable': '800',\n        'Sales Tax': '803',\n        'Income Tax Payable': '803',\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 751,
            "endLine": 755,
            "content": "        \n        // Special categories\n        'E-Transfer': '610', // Cash account\n        'Cheques': '610', // Cash account\n        'Payroll': '477', // Payroll expense"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 752,
            "endLine": 756,
            "content": "        // Special categories\n        'E-Transfer': '610', // Cash account\n        'Cheques': '610', // Cash account\n        'Payroll': '477', // Payroll expense\n        'Tax Payments': '505', // Tax Payments"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 759,
            "endLine": 763,
            "content": "\n      // Check enhanced mapping\n      if (categoryMapping[category]) {\n        console.log(`✅ Using enhanced mapping: ${category} → ${categoryMapping[category]}`);\n        return categoryMapping[category];"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 760,
            "endLine": 764,
            "content": "      // Check enhanced mapping\n      if (categoryMapping[category]) {\n        console.log(`✅ Using enhanced mapping: ${category} → ${categoryMapping[category]}`);\n        return categoryMapping[category];\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 765,
            "endLine": 769,
            "content": "\n      // Try partial category matching\n      for (const [mappedCategory, accountCode] of Object.entries(categoryMapping)) {\n        if (category.toLowerCase().includes(mappedCategory.toLowerCase()) || \n            mappedCategory.toLowerCase().includes(category.toLowerCase())) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 766,
            "endLine": 770,
            "content": "      // Try partial category matching\n      for (const [mappedCategory, accountCode] of Object.entries(categoryMapping)) {\n        if (category.toLowerCase().includes(mappedCategory.toLowerCase()) || \n            mappedCategory.toLowerCase().includes(category.toLowerCase())) {\n          console.log(`✅ Partial match: ${category} → ${accountCode} (via ${mappedCategory})`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 774,
            "endLine": 778,
            "content": "\n      // Fallback based on amount and category type\n      return this.getFallbackAccountCode(category, amount);\n\n    } catch (error) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 775,
            "endLine": 779,
            "content": "      // Fallback based on amount and category type\n      return this.getFallbackAccountCode(category, amount);\n\n    } catch (error) {\n      console.error('❌ Error getting account code:', error);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 777,
            "endLine": 781,
            "content": "\n    } catch (error) {\n      console.error('❌ Error getting account code:', error);\n      return this.getFallbackAccountCode(category, amount);\n    }"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 778,
            "endLine": 782,
            "content": "    } catch (error) {\n      console.error('❌ Error getting account code:', error);\n      return this.getFallbackAccountCode(category, amount);\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 783,
            "endLine": 787,
            "content": "\n  /**\n   * Get fallback account code when chart is not available\n   */\n  private getFallbackAccountCode(category: string, amount: number): string {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 784,
            "endLine": 788,
            "content": "  /**\n   * Get fallback account code when chart is not available\n   */\n  private getFallbackAccountCode(category: string, amount: number): string {\n    const isPositive = amount > 0;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 789,
            "endLine": 793,
            "content": "    \n    if (isPositive) {\n      // Income/Revenue accounts\n      if (category.toLowerCase().includes('revenue') || category.toLowerCase().includes('income')) {\n        return '200'; // Sales Revenue"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 790,
            "endLine": 794,
            "content": "    if (isPositive) {\n      // Income/Revenue accounts\n      if (category.toLowerCase().includes('revenue') || category.toLowerCase().includes('income')) {\n        return '200'; // Sales Revenue\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 837,
            "endLine": 841,
            "content": "\n  /**\n   * Record user correction and save to database\n   */\n  async recordUserCorrection(originalDescription: string, correctedCategoryCode: string): Promise<void> {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 838,
            "endLine": 842,
            "content": "  /**\n   * Record user correction and save to database\n   */\n  async recordUserCorrection(originalDescription: string, correctedCategoryCode: string): Promise<void> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 841,
            "endLine": 845,
            "content": "  async recordUserCorrection(originalDescription: string, correctedCategoryCode: string): Promise<void> {\n    try {\n      // Save to database (the service will handle authentication internally)\n      await this.databaseService.recordUserCorrection(originalDescription, correctedCategoryCode);\n      "
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 150,
            "endLine": 154,
            "content": "\n  async recordUserCorrection(originalDescription: string, correctedCategoryCode: string): Promise<void> {\n    try {\n      const supabase = getSupabaseClient();\n      "
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 151,
            "endLine": 155,
            "content": "  async recordUserCorrection(originalDescription: string, correctedCategoryCode: string): Promise<void> {\n    try {\n      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 845,
            "endLine": 849,
            "content": "      \n      // Create learned pattern\n      const pattern = this.createPattern(originalDescription);\n      await this.databaseService.saveLearnedPattern(pattern, correctedCategoryCode, 90);\n      "
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 846,
            "endLine": 850,
            "content": "      // Create learned pattern\n      const pattern = this.createPattern(originalDescription);\n      await this.databaseService.saveLearnedPattern(pattern, correctedCategoryCode, 90);\n      \n      // Update local cache"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 849,
            "endLine": 853,
            "content": "      \n      // Update local cache\n      this.userCorrections.set(originalDescription, correctedCategoryCode);\n      this.learnedPatterns.set(pattern, {\n        category: correctedCategoryCode,"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 850,
            "endLine": 854,
            "content": "      // Update local cache\n      this.userCorrections.set(originalDescription, correctedCategoryCode);\n      this.learnedPatterns.set(pattern, {\n        category: correctedCategoryCode,\n        confidence: 90,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 852,
            "endLine": 856,
            "content": "      this.learnedPatterns.set(pattern, {\n        category: correctedCategoryCode,\n        confidence: 90,\n        usageCount: 1,\n        lastUsed: new Date()"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1292,
            "endLine": 1296,
            "content": "    this.learnedPatterns.set(pattern, {\n      category: correctedCategoryCode,\n      confidence: 90,\n      usageCount: 1,\n      lastUsed: new Date()"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 853,
            "endLine": 857,
            "content": "        category: correctedCategoryCode,\n        confidence: 90,\n        usageCount: 1,\n        lastUsed: new Date()\n      });"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1293,
            "endLine": 1297,
            "content": "      category: correctedCategoryCode,\n      confidence: 90,\n      usageCount: 1,\n      lastUsed: new Date()\n    });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 854,
            "endLine": 858,
            "content": "        confidence: 90,\n        usageCount: 1,\n        lastUsed: new Date()\n      });\n      "
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1294,
            "endLine": 1298,
            "content": "      confidence: 90,\n      usageCount: 1,\n      lastUsed: new Date()\n    });\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 858,
            "endLine": 862,
            "content": "      \n      console.log('📝 Recorded user correction:', originalDescription, '->', correctedCategoryCode);\n      console.log('📝 Added to learned patterns:', pattern, '->', correctedCategoryCode);\n    } catch (error) {\n      console.error('Failed to record user correction:', error);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 859,
            "endLine": 863,
            "content": "      console.log('📝 Recorded user correction:', originalDescription, '->', correctedCategoryCode);\n      console.log('📝 Added to learned patterns:', pattern, '->', correctedCategoryCode);\n    } catch (error) {\n      console.error('Failed to record user correction:', error);\n      // Fallback to localStorage"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 867,
            "endLine": 871,
            "content": "\n  /**\n   * Learn from cycle emoji action (apply to similar transactions)\n   */\n  learnFromSimilarAction(sourceDescription: string, category: string, similarTransactions: string[], accountCode?: string) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 868,
            "endLine": 872,
            "content": "  /**\n   * Learn from cycle emoji action (apply to similar transactions)\n   */\n  learnFromSimilarAction(sourceDescription: string, category: string, similarTransactions: string[], accountCode?: string) {\n    // Create a pattern from the source description"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 874,
            "endLine": 878,
            "content": "    \n    // Store the rule\n    const ruleKey = pattern;\n    const existingRule = this.similarTransactionRules.get(ruleKey);\n    "
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 875,
            "endLine": 879,
            "content": "    // Store the rule\n    const ruleKey = pattern;\n    const existingRule = this.similarTransactionRules.get(ruleKey);\n    \n    if (existingRule) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 878,
            "endLine": 882,
            "content": "    \n    if (existingRule) {\n      // Update existing rule\n      existingRule.usageCount += similarTransactions.length;\n      existingRule.confidence = Math.min(95, existingRule.confidence + 5);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 879,
            "endLine": 883,
            "content": "    if (existingRule) {\n      // Update existing rule\n      existingRule.usageCount += similarTransactions.length;\n      existingRule.confidence = Math.min(95, existingRule.confidence + 5);\n    } else {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 892,
            "endLine": 896,
            "content": "\n    // Also learn individual patterns for each similar transaction\n    similarTransactions.forEach(desc => {\n      const individualPattern = this.createPatternFromDescription(desc);\n      this.learnedPatterns.set(individualPattern, {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 893,
            "endLine": 897,
            "content": "    // Also learn individual patterns for each similar transaction\n    similarTransactions.forEach(desc => {\n      const individualPattern = this.createPatternFromDescription(desc);\n      this.learnedPatterns.set(individualPattern, {\n        category,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 903,
            "endLine": 907,
            "content": "\n    console.log(`🔄 Learned from similar action: ${similarTransactions.length} transactions -> ${category}`);\n    this.saveLearnedData();\n  }\n"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 904,
            "endLine": 908,
            "content": "    console.log(`🔄 Learned from similar action: ${similarTransactions.length} transactions -> ${category}`);\n    this.saveLearnedData();\n  }\n\n  /**"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 907,
            "endLine": 911,
            "content": "\n  /**\n   * Find learned pattern match\n   */\n  private findLearnedPattern(description: string): { category: string; confidence: number; accountCode?: string } | null {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 908,
            "endLine": 912,
            "content": "  /**\n   * Find learned pattern match\n   */\n  private findLearnedPattern(description: string): { category: string; confidence: number; accountCode?: string } | null {\n    const normalizedDesc = this.createPatternFromDescription(description);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 913,
            "endLine": 917,
            "content": "    \n    console.log(`🧠 Checking learned patterns for: \"${normalizedDesc}\"`);\n    console.log(`🧠 Available patterns: ${this.learnedPatterns.size}`);\n    \n    // Check for exact matches first"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 914,
            "endLine": 918,
            "content": "    console.log(`🧠 Checking learned patterns for: \"${normalizedDesc}\"`);\n    console.log(`🧠 Available patterns: ${this.learnedPatterns.size}`);\n    \n    // Check for exact matches first\n    for (const [pattern, data] of this.learnedPatterns) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 916,
            "endLine": 920,
            "content": "    \n    // Check for exact matches first\n    for (const [pattern, data] of this.learnedPatterns) {\n      console.log(`🧠 Checking pattern: \"${pattern}\" vs \"${normalizedDesc}\"`);\n      if (pattern === normalizedDesc) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 917,
            "endLine": 921,
            "content": "    // Check for exact matches first\n    for (const [pattern, data] of this.learnedPatterns) {\n      console.log(`🧠 Checking pattern: \"${pattern}\" vs \"${normalizedDesc}\"`);\n      if (pattern === normalizedDesc) {\n        console.log(`🧠 EXACT MATCH FOUND: ${data.category} (${data.confidence}%)`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 929,
            "endLine": 933,
            "content": "\n    // Check for partial matches\n    for (const [pattern, data] of this.learnedPatterns) {\n      if (normalizedDesc.includes(pattern) || pattern.includes(normalizedDesc)) {\n        console.log(`🧠 PARTIAL MATCH FOUND: ${data.category} (${data.confidence}%)`);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 930,
            "endLine": 934,
            "content": "    // Check for partial matches\n    for (const [pattern, data] of this.learnedPatterns) {\n      if (normalizedDesc.includes(pattern) || pattern.includes(normalizedDesc)) {\n        console.log(`🧠 PARTIAL MATCH FOUND: ${data.category} (${data.confidence}%)`);\n        return {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 945,
            "endLine": 949,
            "content": "\n  /**\n   * Find similar transaction rule match\n   */\n  private findSimilarTransactionRule(description: string): { category: string; confidence: number; accountCode?: string } | null {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 946,
            "endLine": 950,
            "content": "  /**\n   * Find similar transaction rule match\n   */\n  private findSimilarTransactionRule(description: string): { category: string; confidence: number; accountCode?: string } | null {\n    const normalizedDesc = this.createPatternFromDescription(description);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 951,
            "endLine": 955,
            "content": "    \n    for (const [pattern, rule] of this.similarTransactionRules) {\n      if (normalizedDesc.includes(pattern) || pattern.includes(normalizedDesc)) {\n        return {\n          category: rule.category,"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 952,
            "endLine": 956,
            "content": "    for (const [pattern, rule] of this.similarTransactionRules) {\n      if (normalizedDesc.includes(pattern) || pattern.includes(normalizedDesc)) {\n        return {\n          category: rule.category,\n          confidence: rule.confidence"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 988,
            "endLine": 992,
            "content": "\n  /**\n   * Get bank pattern statistics (NEW)\n   */\n  getBankPatternStats(): { totalPatterns: number; categories: string[] } {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 989,
            "endLine": 993,
            "content": "  /**\n   * Get bank pattern statistics (NEW)\n   */\n  getBankPatternStats(): { totalPatterns: number; categories: string[] } {\n    const categories = [...new Set(BANK_PATTERNS.map(p => p.merchant))];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1011,
            "endLine": 1015,
            "content": "\n    return {\n      userCorrections: this.userCorrections.size,\n      learnedPatterns: this.learnedPatterns.size,\n      similarRules: this.similarTransactionRules.size,"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1012,
            "endLine": 1016,
            "content": "    return {\n      userCorrections: this.userCorrections.size,\n      learnedPatterns: this.learnedPatterns.size,\n      similarRules: this.similarTransactionRules.size,\n      totalUsage"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1019,
            "endLine": 1023,
            "content": "\n  /**\n   * Debug method to get all learned patterns (for testing)\n   */\n  debugGetLearnedPatterns(): Array<{ pattern: string; category: string; confidence: number; usageCount: number }> {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1020,
            "endLine": 1024,
            "content": "  /**\n   * Debug method to get all learned patterns (for testing)\n   */\n  debugGetLearnedPatterns(): Array<{ pattern: string; category: string; confidence: number; usageCount: number }> {\n    return Array.from(this.learnedPatterns.entries()).map(([pattern, data]) => ({"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1031,
            "endLine": 1035,
            "content": "\n  /**\n   * Debug method to test pattern matching for a specific description\n   */\n  debugTestPattern(description: string): {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1032,
            "endLine": 1036,
            "content": "  /**\n   * Debug method to test pattern matching for a specific description\n   */\n  debugTestPattern(description: string): {\n    normalizedDescription: string;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1043,
            "endLine": 1047,
            "content": "\n    for (const patternData of allPatterns) {\n      if (patternData.pattern === normalizedDesc) {\n        matches.push({ ...patternData, matchType: 'EXACT' });\n      } else if (normalizedDesc.includes(patternData.pattern) || patternData.pattern.includes(normalizedDesc)) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1044,
            "endLine": 1048,
            "content": "    for (const patternData of allPatterns) {\n      if (patternData.pattern === normalizedDesc) {\n        matches.push({ ...patternData, matchType: 'EXACT' });\n      } else if (normalizedDesc.includes(patternData.pattern) || patternData.pattern.includes(normalizedDesc)) {\n        matches.push({ ...patternData, matchType: 'PARTIAL' });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1058,
            "endLine": 1062,
            "content": "\n  /**\n   * Test if a description matches bank patterns (NEW - for debugging)\n   */\n  testBankPattern(description: string): { matches: any[]; bestMatch: any | null } {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1059,
            "endLine": 1063,
            "content": "  /**\n   * Test if a description matches bank patterns (NEW - for debugging)\n   */\n  testBankPattern(description: string): { matches: any[]; bestMatch: any | null } {\n    const matches = BANK_PATTERNS.filter(p => p.pattern.test(description.toLowerCase()));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1082,
            "endLine": 1086,
            "content": "\n  /**\n   * Enhanced account code suggestions based on transaction amount patterns\n   */\n  private getAmountBasedAccountCode(amount: number): string | null {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1083,
            "endLine": 1087,
            "content": "  /**\n   * Enhanced account code suggestions based on transaction amount patterns\n   */\n  private getAmountBasedAccountCode(amount: number): string | null {\n    const absAmount = Math.abs(amount);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1088,
            "endLine": 1092,
            "content": "    \n    // Very small amounts (likely fees)\n    if (absAmount <= 5) {\n      return '404'; // Bank fees, service charges\n    }"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1089,
            "endLine": 1093,
            "content": "    // Very small amounts (likely fees)\n    if (absAmount <= 5) {\n      return '404'; // Bank fees, service charges\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1093,
            "endLine": 1097,
            "content": "    \n    // Common subscription amounts (exact matches)\n    const subscriptionAmounts = [9.99, 12.99, 14.99, 19.99, 24.99, 29.99, 39.99, 49.99, 59.99, 79.99, 99.99];\n    if (subscriptionAmounts.includes(absAmount)) {\n      return '485'; // Subscriptions"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1094,
            "endLine": 1098,
            "content": "    // Common subscription amounts (exact matches)\n    const subscriptionAmounts = [9.99, 12.99, 14.99, 19.99, 24.99, 29.99, 39.99, 49.99, 59.99, 79.99, 99.99];\n    if (subscriptionAmounts.includes(absAmount)) {\n      return '485'; // Subscriptions\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1099,
            "endLine": 1103,
            "content": "    \n    // Common gas amounts (usually between $20-$150, often round numbers or .99)\n    if (absAmount >= 20 && absAmount <= 150) {\n      // Check if it's a typical gas amount (often ends in .99 or is a round number)\n      const isRoundNumber = absAmount % 1 === 0;"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1100,
            "endLine": 1104,
            "content": "    // Common gas amounts (usually between $20-$150, often round numbers or .99)\n    if (absAmount >= 20 && absAmount <= 150) {\n      // Check if it's a typical gas amount (often ends in .99 or is a round number)\n      const isRoundNumber = absAmount % 1 === 0;\n      const endsIn99 = absAmount % 1 === 0.99;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1109,
            "endLine": 1113,
            "content": "    \n    // Common grocery amounts (usually between $30-$200)\n    if (absAmount >= 30 && absAmount <= 200) {\n      // Grocery amounts are often not round numbers\n      if (absAmount % 1 !== 0) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1110,
            "endLine": 1114,
            "content": "    // Common grocery amounts (usually between $30-$200)\n    if (absAmount >= 30 && absAmount <= 200) {\n      // Grocery amounts are often not round numbers\n      if (absAmount % 1 !== 0) {\n        return '453'; // Office Expenses (general purchases)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1117,
            "endLine": 1121,
            "content": "    \n    // Common restaurant amounts (usually between $15-$100)\n    if (absAmount >= 15 && absAmount <= 100) {\n      // Restaurant amounts often end in .00, .50, or .99\n      const lastTwoDigits = Math.round((absAmount % 1) * 100);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1118,
            "endLine": 1122,
            "content": "    // Common restaurant amounts (usually between $15-$100)\n    if (absAmount >= 15 && absAmount <= 100) {\n      // Restaurant amounts often end in .00, .50, or .99\n      const lastTwoDigits = Math.round((absAmount % 1) * 100);\n      if (lastTwoDigits === 0 || lastTwoDigits === 50 || lastTwoDigits === 99) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1126,
            "endLine": 1130,
            "content": "    \n    // Large amounts (likely transfers, payments, or deposits)\n    if (absAmount >= 1000) {\n      // Round numbers in large amounts are likely transfers\n      if (absAmount % 100 === 0) {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1127,
            "endLine": 1131,
            "content": "    // Large amounts (likely transfers, payments, or deposits)\n    if (absAmount >= 1000) {\n      // Round numbers in large amounts are likely transfers\n      if (absAmount % 100 === 0) {\n        return '404'; // Bank fees (transfers)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1136,
            "endLine": 1140,
            "content": "    \n    // Medium amounts (likely regular purchases)\n    if (absAmount >= 50 && absAmount < 1000) {\n      return '453'; // Office Expenses (general purchases)\n    }"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1137,
            "endLine": 1141,
            "content": "    // Medium amounts (likely regular purchases)\n    if (absAmount >= 50 && absAmount < 1000) {\n      return '453'; // Office Expenses (general purchases)\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1144,
            "endLine": 1148,
            "content": "\n  /**\n   * Enhanced pattern matching for Canadian banks\n   */\n  private findCanadianBankPattern(description: string): { accountCode: string; merchant: string; confidence: number } | null {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1145,
            "endLine": 1149,
            "content": "  /**\n   * Enhanced pattern matching for Canadian banks\n   */\n  private findCanadianBankPattern(description: string): { accountCode: string; merchant: string; confidence: number } | null {\n    const normalizedDesc = description.toLowerCase();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1150,
            "endLine": 1154,
            "content": "    \n    // Canadian bank patterns\n    const bankPatterns = [\n      { pattern: /td\\s*canada\\s*trust/i, accountCode: '404', merchant: 'TD Canada Trust', confidence: 95 },\n      { pattern: /royal\\s*bank\\s*of\\s*canada/i, accountCode: '404', merchant: 'RBC', confidence: 95 },"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1151,
            "endLine": 1155,
            "content": "    // Canadian bank patterns\n    const bankPatterns = [\n      { pattern: /td\\s*canada\\s*trust/i, accountCode: '404', merchant: 'TD Canada Trust', confidence: 95 },\n      { pattern: /royal\\s*bank\\s*of\\s*canada/i, accountCode: '404', merchant: 'RBC', confidence: 95 },\n      { pattern: /rbc/i, accountCode: '404', merchant: 'RBC', confidence: 95 },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1199,
            "endLine": 1203,
            "content": "    \n    for (const pattern of bankPatterns) {\n      if (pattern.pattern.test(normalizedDesc)) {\n        console.log(`🏦 Canadian bank pattern matched: ${pattern.merchant}`);\n        return pattern;"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1200,
            "endLine": 1204,
            "content": "    for (const pattern of bankPatterns) {\n      if (pattern.pattern.test(normalizedDesc)) {\n        console.log(`🏦 Canadian bank pattern matched: ${pattern.merchant}`);\n        return pattern;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1209,
            "endLine": 1213,
            "content": "\n  /**\n   * Load learned patterns from frontend for backend processing\n   */\n  loadLearnedPatternsFromFrontend(patterns: Record<string, any>): void {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1210,
            "endLine": 1214,
            "content": "  /**\n   * Load learned patterns from frontend for backend processing\n   */\n  loadLearnedPatternsFromFrontend(patterns: Record<string, any>): void {\n    console.log('🧠 Loading learned patterns from frontend:', Object.keys(patterns).length, 'patterns');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1215,
            "endLine": 1219,
            "content": "    \n    for (const [pattern, data] of Object.entries(patterns)) {\n      if (data && typeof data === 'object' && data.category && data.confidence) {\n        this.learnedPatterns.set(pattern, {\n          category: data.category,"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1216,
            "endLine": 1220,
            "content": "    for (const [pattern, data] of Object.entries(patterns)) {\n      if (data && typeof data === 'object' && data.category && data.confidence) {\n        this.learnedPatterns.set(pattern, {\n          category: data.category,\n          confidence: data.confidence,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1228,
            "endLine": 1232,
            "content": "\n  /**\n   * Load learned data from localStorage (fallback)\n   */\n  private loadLearnedDataFromStorage(): void {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1229,
            "endLine": 1233,
            "content": "  /**\n   * Load learned data from localStorage (fallback)\n   */\n  private loadLearnedDataFromStorage(): void {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1233,
            "endLine": 1237,
            "content": "    try {\n      // Only run on client side\n      if (typeof window === 'undefined') {\n        return;\n      }"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1263,
            "endLine": 1267,
            "content": "    try {\n      // Only run on client side\n      if (typeof window === 'undefined') {\n        return;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1234,
            "endLine": 1238,
            "content": "      // Only run on client side\n      if (typeof window === 'undefined') {\n        return;\n      }\n"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1264,
            "endLine": 1268,
            "content": "      // Only run on client side\n      if (typeof window === 'undefined') {\n        return;\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1238,
            "endLine": 1242,
            "content": "\n      // Load user corrections\n      const savedCorrections = localStorage.getItem('meridian_user_corrections');\n      if (savedCorrections) {\n        const corrections = JSON.parse(savedCorrections);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1239,
            "endLine": 1243,
            "content": "      // Load user corrections\n      const savedCorrections = localStorage.getItem('meridian_user_corrections');\n      if (savedCorrections) {\n        const corrections = JSON.parse(savedCorrections);\n        this.userCorrections = new Map(Object.entries(corrections));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1245,
            "endLine": 1249,
            "content": "\n      // Load learned patterns\n      const savedPatterns = localStorage.getItem('meridian_learned_patterns');\n      if (savedPatterns) {\n        const patterns = JSON.parse(savedPatterns);"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1246,
            "endLine": 1250,
            "content": "      // Load learned patterns\n      const savedPatterns = localStorage.getItem('meridian_learned_patterns');\n      if (savedPatterns) {\n        const patterns = JSON.parse(savedPatterns);\n        this.learnedPatterns = new Map(Object.entries(patterns));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1252,
            "endLine": 1256,
            "content": "\n      console.log('🧠 Loaded learned data from localStorage (fallback)');\n    } catch (error) {\n      console.warn('⚠️ Error loading learned data from localStorage:', error);\n    }"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1253,
            "endLine": 1257,
            "content": "      console.log('🧠 Loaded learned data from localStorage (fallback)');\n    } catch (error) {\n      console.warn('⚠️ Error loading learned data from localStorage:', error);\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1268,
            "endLine": 1272,
            "content": "\n      // Save user corrections\n      const correctionsObj = Object.fromEntries(this.userCorrections);\n      localStorage.setItem('meridian_user_corrections', JSON.stringify(correctionsObj));\n"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1269,
            "endLine": 1273,
            "content": "      // Save user corrections\n      const correctionsObj = Object.fromEntries(this.userCorrections);\n      localStorage.setItem('meridian_user_corrections', JSON.stringify(correctionsObj));\n\n      // Save learned patterns"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1272,
            "endLine": 1276,
            "content": "\n      // Save learned patterns\n      const patternsObj = Object.fromEntries(this.learnedPatterns);\n      localStorage.setItem('meridian_learned_patterns', JSON.stringify(patternsObj));\n"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1273,
            "endLine": 1277,
            "content": "      // Save learned patterns\n      const patternsObj = Object.fromEntries(this.learnedPatterns);\n      localStorage.setItem('meridian_learned_patterns', JSON.stringify(patternsObj));\n\n      console.log('💾 Saved learned data to localStorage (fallback)');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1276,
            "endLine": 1280,
            "content": "\n      console.log('💾 Saved learned data to localStorage (fallback)');\n    } catch (error) {\n      console.warn('⚠️ Error saving learned data to localStorage:', error);\n    }"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1277,
            "endLine": 1281,
            "content": "      console.log('💾 Saved learned data to localStorage (fallback)');\n    } catch (error) {\n      console.warn('⚠️ Error saving learned data to localStorage:', error);\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1282,
            "endLine": 1286,
            "content": "\n  /**\n   * Record user correction to localStorage (fallback)\n   */\n  private recordUserCorrectionToStorage(originalDescription: string, correctedCategoryCode: string): void {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1283,
            "endLine": 1287,
            "content": "  /**\n   * Record user correction to localStorage (fallback)\n   */\n  private recordUserCorrectionToStorage(originalDescription: string, correctedCategoryCode: string): void {\n    const key = originalDescription.toLowerCase();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1289,
            "endLine": 1293,
            "content": "    \n    // Create learned pattern\n    const pattern = this.createPatternFromDescription(originalDescription);\n    this.learnedPatterns.set(pattern, {\n      category: correctedCategoryCode,"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1290,
            "endLine": 1294,
            "content": "    // Create learned pattern\n    const pattern = this.createPatternFromDescription(originalDescription);\n    this.learnedPatterns.set(pattern, {\n      category: correctedCategoryCode,\n      confidence: 90,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1298,
            "endLine": 1302,
            "content": "    \n    console.log('📝 Recorded user correction to localStorage:', originalDescription, '->', correctedCategoryCode);\n    this.saveLearnedDataToStorage();\n  }\n"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1299,
            "endLine": 1303,
            "content": "    console.log('📝 Recorded user correction to localStorage:', originalDescription, '->', correctedCategoryCode);\n    this.saveLearnedDataToStorage();\n  }\n\n  /**"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1302,
            "endLine": 1306,
            "content": "\n  /**\n   * Create a pattern from a description for learning\n   */\n  private createPatternFromDescription(description: string): string {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1303,
            "endLine": 1307,
            "content": "  /**\n   * Create a pattern from a description for learning\n   */\n  private createPatternFromDescription(description: string): string {\n    // Normalize the description for pattern matching"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1314,
            "endLine": 1318,
            "content": "\n  /**\n   * Create pattern from description (alias for compatibility)\n   */\n  private createPattern(description: string): string {"
          },
          {
            "file": "src/lib/aiEngine.ts",
            "startLine": 1315,
            "endLine": 1319,
            "content": "  /**\n   * Create pattern from description (alias for compatibility)\n   */\n  private createPattern(description: string): string {\n    return this.createPatternFromDescription(description);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 7,
            "endLine": 11,
            "content": "\nexport interface RateLimitConfig {\n  windowMs: number; // Time window in milliseconds\n  maxRequests: number; // Maximum requests per window\n  skipSuccessfulRequests?: boolean;"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 8,
            "endLine": 12,
            "content": "export interface RateLimitConfig {\n  windowMs: number; // Time window in milliseconds\n  maxRequests: number; // Maximum requests per window\n  skipSuccessfulRequests?: boolean;\n  skipFailedRequests?: boolean;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 50,
            "endLine": 54,
            "content": "\nexport class APIGatewayService {\n  private static instance: APIGatewayService;\n  private rateLimitStore: Map<string, { count: number; resetTime: number }> = new Map();\n  private quotaStore: Map<string, APIQuota> = new Map();"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 51,
            "endLine": 55,
            "content": "export class APIGatewayService {\n  private static instance: APIGatewayService;\n  private rateLimitStore: Map<string, { count: number; resetTime: number }> = new Map();\n  private quotaStore: Map<string, APIQuota> = new Map();\n  private apiKeys: Map<string, APIKey> = new Map();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 57,
            "endLine": 61,
            "content": "\n  // Default rate limits by plan\n  private readonly DEFAULT_RATE_LIMITS = {\n    starter: { windowMs: 60000, maxRequests: 100 }, // 100 requests per minute\n    professional: { windowMs: 60000, maxRequests: 500 }, // 500 requests per minute"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 58,
            "endLine": 62,
            "content": "  // Default rate limits by plan\n  private readonly DEFAULT_RATE_LIMITS = {\n    starter: { windowMs: 60000, maxRequests: 100 }, // 100 requests per minute\n    professional: { windowMs: 60000, maxRequests: 500 }, // 500 requests per minute\n    enterprise: { windowMs: 60000, maxRequests: 2000 }, // 2000 requests per minute"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 64,
            "endLine": 68,
            "content": "\n  // Default quotas by plan (per month)\n  private readonly DEFAULT_QUOTAS = {\n    starter: { transactions: 10000, storage: 100 },\n    professional: { transactions: 50000, storage: 500 },"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 65,
            "endLine": 69,
            "content": "  // Default quotas by plan (per month)\n  private readonly DEFAULT_QUOTAS = {\n    starter: { transactions: 10000, storage: 100 },\n    professional: { transactions: 50000, storage: 500 },\n    enterprise: { transactions: -1, storage: 2000 }, // unlimited"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 71,
            "endLine": 75,
            "content": "\n  public static getInstance(): APIGatewayService {\n    if (!APIGatewayService.instance) {\n      APIGatewayService.instance = new APIGatewayService();\n    }"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 72,
            "endLine": 76,
            "content": "  public static getInstance(): APIGatewayService {\n    if (!APIGatewayService.instance) {\n      APIGatewayService.instance = new APIGatewayService();\n    }\n    return APIGatewayService.instance;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 91,
            "endLine": 95,
            "content": "\n    // Clean up old request logs every hour\n    setInterval(() => {\n      this.cleanupRequestLogs();\n    }, 60 * 60 * 1000);"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 92,
            "endLine": 96,
            "content": "    // Clean up old request logs every hour\n    setInterval(() => {\n      this.cleanupRequestLogs();\n    }, 60 * 60 * 1000);\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 97,
            "endLine": 101,
            "content": "\n  /**\n   * Middleware for API authentication and rate limiting\n   */\n  async middleware(request: NextRequest): Promise<NextResponse | null> {"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 98,
            "endLine": 102,
            "content": "  /**\n   * Middleware for API authentication and rate limiting\n   */\n  async middleware(request: NextRequest): Promise<NextResponse | null> {\n    const startTime = Date.now();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 103,
            "endLine": 107,
            "content": "    \n    try {\n      // Skip middleware for non-API routes\n      if (!request.nextUrl.pathname.startsWith('/api/')) {\n        return null;"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 104,
            "endLine": 108,
            "content": "    try {\n      // Skip middleware for non-API routes\n      if (!request.nextUrl.pathname.startsWith('/api/')) {\n        return null;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 109,
            "endLine": 113,
            "content": "\n      // Skip middleware for health checks and webhooks\n      if (request.nextUrl.pathname.includes('/health') || \n          request.nextUrl.pathname.includes('/webhook')) {\n        return null;"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 110,
            "endLine": 114,
            "content": "      // Skip middleware for health checks and webhooks\n      if (request.nextUrl.pathname.includes('/health') || \n          request.nextUrl.pathname.includes('/webhook')) {\n        return null;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 115,
            "endLine": 119,
            "content": "\n      // Extract API key or user authentication\n      const apiKey = this.extractAPIKey(request);\n      const user = await getCurrentUser();\n"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 116,
            "endLine": 120,
            "content": "      // Extract API key or user authentication\n      const apiKey = this.extractAPIKey(request);\n      const user = await getCurrentUser();\n\n      let tenantId: string | null = null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 122,
            "endLine": 126,
            "content": "\n      if (apiKey) {\n        // API key authentication\n        const keyData = await this.validateAPIKey(apiKey);\n        if (!keyData) {"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 123,
            "endLine": 127,
            "content": "      if (apiKey) {\n        // API key authentication\n        const keyData = await this.validateAPIKey(apiKey);\n        if (!keyData) {\n          return this.createErrorResponse(401, 'Invalid API key');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 142,
            "endLine": 146,
            "content": "\n      // Check rate limits\n      const rateLimitCheck = await this.checkRateLimit(request, tenantId, rateLimitConfig);\n      if (!rateLimitCheck.allowed) {\n        return this.createRateLimitResponse(rateLimitCheck);"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 143,
            "endLine": 147,
            "content": "      // Check rate limits\n      const rateLimitCheck = await this.checkRateLimit(request, tenantId, rateLimitConfig);\n      if (!rateLimitCheck.allowed) {\n        return this.createRateLimitResponse(rateLimitCheck);\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 148,
            "endLine": 152,
            "content": "\n      // Check API quotas\n      const quotaCheck = await this.checkQuota(tenantId, request.nextUrl.pathname);\n      if (!quotaCheck.allowed) {\n        return this.createQuotaResponse(quotaCheck);"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 149,
            "endLine": 153,
            "content": "      // Check API quotas\n      const quotaCheck = await this.checkQuota(tenantId, request.nextUrl.pathname);\n      if (!quotaCheck.allowed) {\n        return this.createQuotaResponse(quotaCheck);\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 154,
            "endLine": 158,
            "content": "\n      // Log request\n      await this.logRequest(request, tenantId, apiKey, startTime);\n\n      return null; // Allow request to continue"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 155,
            "endLine": 159,
            "content": "      // Log request\n      await this.logRequest(request, tenantId, apiKey, startTime);\n\n      return null; // Allow request to continue\n    } catch (error) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 157,
            "endLine": 161,
            "content": "\n      return null; // Allow request to continue\n    } catch (error) {\n      monitoringService.captureError(error, {\n        component: 'api_gateway',"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 158,
            "endLine": 162,
            "content": "      return null; // Allow request to continue\n    } catch (error) {\n      monitoringService.captureError(error, {\n        component: 'api_gateway',\n        action: 'middleware',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 179,
            "endLine": 183,
            "content": "\n    // Check X-API-Key header\n    const apiKeyHeader = request.headers.get('X-API-Key');\n    if (apiKeyHeader) {\n      return apiKeyHeader;"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 180,
            "endLine": 184,
            "content": "    // Check X-API-Key header\n    const apiKeyHeader = request.headers.get('X-API-Key');\n    if (apiKeyHeader) {\n      return apiKeyHeader;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 185,
            "endLine": 189,
            "content": "\n    // Check query parameter\n    const url = new URL(request.url);\n    const apiKeyParam = url.searchParams.get('api_key');\n    if (apiKeyParam) {"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 186,
            "endLine": 190,
            "content": "    // Check query parameter\n    const url = new URL(request.url);\n    const apiKeyParam = url.searchParams.get('api_key');\n    if (apiKeyParam) {\n      return apiKeyParam;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 211,
            "endLine": 215,
            "content": "\n    // Check database\n    try {\n      const query = multiTenantService.getTenantQuery('api_keys');\n      const { data, error } = await query"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 212,
            "endLine": 216,
            "content": "    // Check database\n    try {\n      const query = multiTenantService.getTenantQuery('api_keys');\n      const { data, error } = await query\n        .eq('key', key)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 214,
            "endLine": 218,
            "content": "      const query = multiTenantService.getTenantQuery('api_keys');\n      const { data, error } = await query\n        .eq('key', key)\n        .eq('status', 'active')\n        .single();"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 468,
            "endLine": 472,
            "content": "    const query = multiTenantService.getTenantQuery('api_keys');\n    const { data, error } = await query\n      .eq('tenant_id', tenantId)\n      .order('created_at', { ascending: false });\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 217,
            "endLine": 221,
            "content": "        .eq('status', 'active')\n        .single();\n\n      if (error || !data) {\n        return null;"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 243,
            "endLine": 247,
            "content": "        .eq('status', 'active')\n        .single();\n\n      if (error || !data) {\n        return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 236,
            "endLine": 240,
            "content": "\n  /**\n   * Get rate limit configuration for plan\n   */\n  private getRateLimitForPlan(plan: string): RateLimitConfig {"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 237,
            "endLine": 241,
            "content": "  /**\n   * Get rate limit configuration for plan\n   */\n  private getRateLimitForPlan(plan: string): RateLimitConfig {\n    const config = this.DEFAULT_RATE_LIMITS[plan as keyof typeof this.DEFAULT_RATE_LIMITS];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 257,
            "endLine": 261,
            "content": "    \n    if (!entry || now > entry.resetTime) {\n      // New window\n      const resetTime = now + config.windowMs;\n      this.rateLimitStore.set(key, { count: 1, resetTime });"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 258,
            "endLine": 262,
            "content": "    if (!entry || now > entry.resetTime) {\n      // New window\n      const resetTime = now + config.windowMs;\n      this.rateLimitStore.set(key, { count: 1, resetTime });\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 291,
            "endLine": 295,
            "content": "\n  /**\n   * Check API quota\n   */\n  private async checkQuota(tenantId: string, endpoint: string): Promise<{ allowed: boolean; quota: APIQuota }> {"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 292,
            "endLine": 296,
            "content": "  /**\n   * Check API quota\n   */\n  private async checkQuota(tenantId: string, endpoint: string): Promise<{ allowed: boolean; quota: APIQuota }> {\n    const quotaKey = `${tenantId}:${endpoint}`;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 297,
            "endLine": 301,
            "content": "    \n    // Get or create quota\n    let quota = this.quotaStore.get(quotaKey);\n    if (!quota) {\n      const tenant = multiTenantService.getCurrentTenant();"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 298,
            "endLine": 302,
            "content": "    // Get or create quota\n    let quota = this.quotaStore.get(quotaKey);\n    if (!quota) {\n      const tenant = multiTenantService.getCurrentTenant();\n      const planQuotas = this.DEFAULT_QUOTAS[tenant?.plan as keyof typeof this.DEFAULT_QUOTAS] || this.DEFAULT_QUOTAS.starter;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 314,
            "endLine": 318,
            "content": "    \n    // Check if quota period has reset\n    if (new Date(quota.resetDate) <= new Date()) {\n      quota.used = 0;\n      quota.resetDate = this.getNextMonthStart();"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 315,
            "endLine": 319,
            "content": "    // Check if quota period has reset\n    if (new Date(quota.resetDate) <= new Date()) {\n      quota.used = 0;\n      quota.resetDate = this.getNextMonthStart();\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 320,
            "endLine": 324,
            "content": "    \n    // Check if quota is exceeded\n    if (quota.limit !== -1 && quota.used >= quota.limit) {\n      return { allowed: false, quota };\n    }"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 321,
            "endLine": 325,
            "content": "    // Check if quota is exceeded\n    if (quota.limit !== -1 && quota.used >= quota.limit) {\n      return { allowed: false, quota };\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 353,
            "endLine": 357,
            "content": "\n    this.requestLogs.push(log);\n\n    // Send to monitoring service\n    monitoringService.recordMetric('api_request', 1, {"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 354,
            "endLine": 358,
            "content": "    this.requestLogs.push(log);\n\n    // Send to monitoring service\n    monitoringService.recordMetric('api_request', 1, {\n      tenantId,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 355,
            "endLine": 359,
            "content": "\n    // Send to monitoring service\n    monitoringService.recordMetric('api_request', 1, {\n      tenantId,\n      endpoint: request.nextUrl.pathname,"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 356,
            "endLine": 360,
            "content": "    // Send to monitoring service\n    monitoringService.recordMetric('api_request', 1, {\n      tenantId,\n      endpoint: request.nextUrl.pathname,\n      method: request.method,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 363,
            "endLine": 367,
            "content": "\n  /**\n   * Create error response\n   */\n  private createErrorResponse(status: number, message: string): NextResponse {"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 364,
            "endLine": 368,
            "content": "  /**\n   * Create error response\n   */\n  private createErrorResponse(status: number, message: string): NextResponse {\n    return NextResponse.json("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 373,
            "endLine": 377,
            "content": "\n  /**\n   * Create rate limit response\n   */\n  private createRateLimitResponse(rateLimitCheck: any): NextResponse {"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 374,
            "endLine": 378,
            "content": "  /**\n   * Create rate limit response\n   */\n  private createRateLimitResponse(rateLimitCheck: any): NextResponse {\n    return NextResponse.json("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 421,
            "endLine": 425,
            "content": "    \n    const tenant = multiTenantService.getCurrentTenant();\n    const rateLimitConfig = this.getRateLimitForPlan(tenant?.plan || 'starter');\n\n    const apiKey: APIKey = {"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 422,
            "endLine": 426,
            "content": "    const tenant = multiTenantService.getCurrentTenant();\n    const rateLimitConfig = this.getRateLimitForPlan(tenant?.plan || 'starter');\n\n    const apiKey: APIKey = {\n      id: `key_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 424,
            "endLine": 428,
            "content": "\n    const apiKey: APIKey = {\n      id: `key_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      tenantId,\n      key,"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 425,
            "endLine": 429,
            "content": "    const apiKey: APIKey = {\n      id: `key_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      tenantId,\n      key,\n      name,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 454,
            "endLine": 458,
            "content": "\n    // Remove from cache\n    for (const [key, apiKey] of this.apiKeys.entries()) {\n      if (apiKey.id === keyId) {\n        this.apiKeys.delete(key);"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 455,
            "endLine": 459,
            "content": "    // Remove from cache\n    for (const [key, apiKey] of this.apiKeys.entries()) {\n      if (apiKey.id === keyId) {\n        this.apiKeys.delete(key);\n        break;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 494,
            "endLine": 498,
            "content": "\n    const requestsByEndpoint = tenantLogs.reduce((acc, log) => {\n      acc[log.endpoint] = (acc[log.endpoint] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 495,
            "endLine": 499,
            "content": "    const requestsByEndpoint = tenantLogs.reduce((acc, log) => {\n      acc[log.endpoint] = (acc[log.endpoint] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 499,
            "endLine": 503,
            "content": "\n    const requestsByDay = tenantLogs.reduce((acc, log) => {\n      const day = log.timestamp.substring(0, 10);\n      acc[day] = (acc[day] || 0) + 1;\n      return acc;"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 500,
            "endLine": 504,
            "content": "    const requestsByDay = tenantLogs.reduce((acc, log) => {\n      const day = log.timestamp.substring(0, 10);\n      acc[day] = (acc[day] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 505,
            "endLine": 509,
            "content": "\n    const totalRequests = tenantLogs.length;\n    const averageResponseTime = tenantLogs.reduce((sum, log) => sum + log.responseTime, 0) / totalRequests || 0;\n    const errorRequests = tenantLogs.filter(log => log.statusCode >= 400).length;\n    const errorRate = totalRequests > 0 ? errorRequests / totalRequests : 0;"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 506,
            "endLine": 510,
            "content": "    const totalRequests = tenantLogs.length;\n    const averageResponseTime = tenantLogs.reduce((sum, log) => sum + log.responseTime, 0) / totalRequests || 0;\n    const errorRequests = tenantLogs.filter(log => log.statusCode >= 400).length;\n    const errorRate = totalRequests > 0 ? errorRequests / totalRequests : 0;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 548,
            "endLine": 552,
            "content": "\n  /**\n   * Validate request permissions\n   */\n  validatePermissions(apiKey: APIKey, requiredPermission: string): boolean {"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 549,
            "endLine": 553,
            "content": "  /**\n   * Validate request permissions\n   */\n  validatePermissions(apiKey: APIKey, requiredPermission: string): boolean {\n    return apiKey.permissions.includes('*') || apiKey.permissions.includes(requiredPermission);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 555,
            "endLine": 559,
            "content": "\n  /**\n   * Get rate limit headers for response\n   */\n  getRateLimitHeaders(tenantId: string, endpoint: string): Record<string, string> {"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 556,
            "endLine": 560,
            "content": "  /**\n   * Get rate limit headers for response\n   */\n  getRateLimitHeaders(tenantId: string, endpoint: string): Record<string, string> {\n    const key = `${tenantId}:${endpoint}`;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 564,
            "endLine": 568,
            "content": "\n    if (!entry) {\n      return {\n        'X-RateLimit-Limit': config.maxRequests.toString(),\n        'X-RateLimit-Remaining': config.maxRequests.toString(),"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 565,
            "endLine": 569,
            "content": "    if (!entry) {\n      return {\n        'X-RateLimit-Limit': config.maxRequests.toString(),\n        'X-RateLimit-Remaining': config.maxRequests.toString(),\n        'X-RateLimit-Reset': (Date.now() + config.windowMs).toString(),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 572,
            "endLine": 576,
            "content": "\n    return {\n      'X-RateLimit-Limit': config.maxRequests.toString(),\n      'X-RateLimit-Remaining': Math.max(0, config.maxRequests - entry.count).toString(),\n      'X-RateLimit-Reset': entry.resetTime.toString(),"
          },
          {
            "file": "src/lib/apiGateway.ts",
            "startLine": 573,
            "endLine": 577,
            "content": "    return {\n      'X-RateLimit-Limit': config.maxRequests.toString(),\n      'X-RateLimit-Remaining': Math.max(0, config.maxRequests - entry.count).toString(),\n      'X-RateLimit-Reset': entry.resetTime.toString(),\n    };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 3,
            "endLine": 7,
            "content": "import { multiTenantService } from './multiTenant';\nimport { getCurrentUser } from './supabase';\n\nexport interface Plan {\n  id: string;"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 2,
            "endLine": 6,
            "content": "import { multiTenantService } from './multiTenant';\nimport { getCurrentUser } from './supabase';\n\nexport interface MetricData {\n  name: string;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 55,
            "endLine": 59,
            "content": "\nexport interface UsageRecord {\n  id: string;\n  tenantId: string;\n  metric: 'users' | 'transactions' | 'storage';"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 56,
            "endLine": 60,
            "content": "export interface UsageRecord {\n  id: string;\n  tenantId: string;\n  metric: 'users' | 'transactions' | 'storage';\n  value: number;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 102,
            "endLine": 106,
            "content": "        aiCategorization: true,\n        bulkOperations: true,\n        customReports: true,\n        apiAccess: true,\n        prioritySupport: true,"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 123,
            "endLine": 127,
            "content": "        aiCategorization: true,\n        bulkOperations: true,\n        customReports: true,\n        apiAccess: true,\n        prioritySupport: true,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 103,
            "endLine": 107,
            "content": "        bulkOperations: true,\n        customReports: true,\n        apiAccess: true,\n        prioritySupport: true,\n      },"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 124,
            "endLine": 128,
            "content": "        bulkOperations: true,\n        customReports: true,\n        apiAccess: true,\n        prioritySupport: true,\n      },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 133,
            "endLine": 137,
            "content": "\n  public static getInstance(): BillingService {\n    if (!BillingService.instance) {\n      BillingService.instance = new BillingService();\n    }"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 134,
            "endLine": 138,
            "content": "  public static getInstance(): BillingService {\n    if (!BillingService.instance) {\n      BillingService.instance = new BillingService();\n    }\n    return BillingService.instance;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 140,
            "endLine": 144,
            "content": "\n  constructor() {\n    this.stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n      apiVersion: '2023-10-16',\n    });"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 141,
            "endLine": 145,
            "content": "  constructor() {\n    this.stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n      apiVersion: '2023-10-16',\n    });\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 160,
            "endLine": 164,
            "content": "\n  /**\n   * Create Stripe customer for tenant\n   */\n  async createCustomer(tenantId: string, email: string, name: string): Promise<string> {"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 161,
            "endLine": 165,
            "content": "  /**\n   * Create Stripe customer for tenant\n   */\n  async createCustomer(tenantId: string, email: string, name: string): Promise<string> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 173,
            "endLine": 177,
            "content": "\n      return customer.id;\n    } catch (error) {\n      console.error('Failed to create Stripe customer:', error);\n      throw new Error('Failed to create customer');"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 174,
            "endLine": 178,
            "content": "      return customer.id;\n    } catch (error) {\n      console.error('Failed to create Stripe customer:', error);\n      throw new Error('Failed to create customer');\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 190,
            "endLine": 194,
            "content": "    try {\n      const plan = this.getPlan(planId);\n      if (!plan) {\n        throw new Error('Invalid plan ID');\n      }"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 370,
            "endLine": 374,
            "content": "    try {\n      const plan = this.getPlan(planId);\n      if (!plan) {\n        throw new Error('Invalid plan ID');\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 191,
            "endLine": 195,
            "content": "      const plan = this.getPlan(planId);\n      if (!plan) {\n        throw new Error('Invalid plan ID');\n      }\n"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 371,
            "endLine": 375,
            "content": "      const plan = this.getPlan(planId);\n      if (!plan) {\n        throw new Error('Invalid plan ID');\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 217,
            "endLine": 221,
            "content": "        currentPeriodStart: new Date(subscription.current_period_start * 1000).toISOString(),\n        currentPeriodEnd: new Date(subscription.current_period_end * 1000).toISOString(),\n        trialEnd: subscription.trial_end ? new Date(subscription.trial_end * 1000).toISOString() : undefined,\n        cancelAtPeriodEnd: subscription.cancel_at_period_end,\n        createdAt: new Date().toISOString(),"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 454,
            "endLine": 458,
            "content": "      currentPeriodStart: new Date(subscription.current_period_start * 1000).toISOString(),\n      currentPeriodEnd: new Date(subscription.current_period_end * 1000).toISOString(),\n      cancelAtPeriodEnd: subscription.cancel_at_period_end,\n      updatedAt: new Date().toISOString(),\n    };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 224,
            "endLine": 228,
            "content": "\n      // Save to database\n      await multiTenantService.insertWithTenant('subscriptions', subscriptionData);\n\n      return subscriptionData;"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 225,
            "endLine": 229,
            "content": "      // Save to database\n      await multiTenantService.insertWithTenant('subscriptions', subscriptionData);\n\n      return subscriptionData;\n    } catch (error) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 227,
            "endLine": 231,
            "content": "\n      return subscriptionData;\n    } catch (error) {\n      console.error('Failed to create subscription:', error);\n      throw new Error('Failed to create subscription');"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 228,
            "endLine": 232,
            "content": "      return subscriptionData;\n    } catch (error) {\n      console.error('Failed to create subscription:', error);\n      throw new Error('Failed to create subscription');\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 234,
            "endLine": 238,
            "content": "\n  /**\n   * Get tenant's current subscription\n   */\n  async getTenantSubscription(tenantId: string): Promise<Subscription | null> {"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 235,
            "endLine": 239,
            "content": "  /**\n   * Get tenant's current subscription\n   */\n  async getTenantSubscription(tenantId: string): Promise<Subscription | null> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 249,
            "endLine": 253,
            "content": "\n      return data;\n    } catch (error) {\n      console.error('Failed to get tenant subscription:', error);\n      return null;"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 250,
            "endLine": 254,
            "content": "      return data;\n    } catch (error) {\n      console.error('Failed to get tenant subscription:', error);\n      return null;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 256,
            "endLine": 260,
            "content": "\n  /**\n   * Update subscription plan\n   */\n  async updateSubscription(tenantId: string, newPlanId: string): Promise<void> {"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 257,
            "endLine": 261,
            "content": "  /**\n   * Update subscription plan\n   */\n  async updateSubscription(tenantId: string, newPlanId: string): Promise<void> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 266,
            "endLine": 270,
            "content": "\n      const newPlan = this.getPlan(newPlanId);\n      if (!newPlan) {\n        throw new Error('Invalid plan ID');\n      }"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 267,
            "endLine": 271,
            "content": "      const newPlan = this.getPlan(newPlanId);\n      if (!newPlan) {\n        throw new Error('Invalid plan ID');\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 271,
            "endLine": 275,
            "content": "\n      // Update Stripe subscription\n      const stripeSubscription = await this.stripe.subscriptions.retrieve(\n        currentSubscription.stripeSubscriptionId\n      );"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 272,
            "endLine": 276,
            "content": "      // Update Stripe subscription\n      const stripeSubscription = await this.stripe.subscriptions.retrieve(\n        currentSubscription.stripeSubscriptionId\n      );\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 276,
            "endLine": 280,
            "content": "\n      await this.stripe.subscriptions.update(currentSubscription.stripeSubscriptionId, {\n        items: [\n          {\n            id: stripeSubscription.items.data[0].id,"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 277,
            "endLine": 281,
            "content": "      await this.stripe.subscriptions.update(currentSubscription.stripeSubscriptionId, {\n        items: [\n          {\n            id: stripeSubscription.items.data[0].id,\n            price: newPlan.stripePriceId,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 286,
            "endLine": 290,
            "content": "\n      // Update database\n      await multiTenantService.updateWithTenant('subscriptions', currentSubscription.id, {\n        planId: newPlanId,\n        updatedAt: new Date().toISOString(),"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 287,
            "endLine": 291,
            "content": "      // Update database\n      await multiTenantService.updateWithTenant('subscriptions', currentSubscription.id, {\n        planId: newPlanId,\n        updatedAt: new Date().toISOString(),\n      });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 292,
            "endLine": 296,
            "content": "\n      console.log('✅ Subscription updated successfully');\n    } catch (error) {\n      console.error('Failed to update subscription:', error);\n      throw new Error('Failed to update subscription');"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 293,
            "endLine": 297,
            "content": "      console.log('✅ Subscription updated successfully');\n    } catch (error) {\n      console.error('Failed to update subscription:', error);\n      throw new Error('Failed to update subscription');\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 299,
            "endLine": 303,
            "content": "\n  /**\n   * Cancel subscription\n   */\n  async cancelSubscription(tenantId: string, immediately: boolean = false): Promise<void> {"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 300,
            "endLine": 304,
            "content": "  /**\n   * Cancel subscription\n   */\n  async cancelSubscription(tenantId: string, immediately: boolean = false): Promise<void> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 304,
            "endLine": 308,
            "content": "    try {\n      const subscription = await this.getTenantSubscription(tenantId);\n      if (!subscription) {\n        throw new Error('No active subscription found');\n      }"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 343,
            "endLine": 347,
            "content": "    try {\n      const subscription = await this.getTenantSubscription(tenantId);\n      if (!subscription) {\n        throw new Error('No active subscription found');\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 305,
            "endLine": 309,
            "content": "      const subscription = await this.getTenantSubscription(tenantId);\n      if (!subscription) {\n        throw new Error('No active subscription found');\n      }\n"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 344,
            "endLine": 348,
            "content": "      const subscription = await this.getTenantSubscription(tenantId);\n      if (!subscription) {\n        throw new Error('No active subscription found');\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 309,
            "endLine": 313,
            "content": "\n      if (immediately) {\n        // Cancel immediately\n        await this.stripe.subscriptions.cancel(subscription.stripeSubscriptionId);\n        "
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 310,
            "endLine": 314,
            "content": "      if (immediately) {\n        // Cancel immediately\n        await this.stripe.subscriptions.cancel(subscription.stripeSubscriptionId);\n        \n        // Update database"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 313,
            "endLine": 317,
            "content": "        \n        // Update database\n        await multiTenantService.updateWithTenant('subscriptions', subscription.id, {\n          status: 'canceled',\n          updatedAt: new Date().toISOString(),"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 314,
            "endLine": 318,
            "content": "        // Update database\n        await multiTenantService.updateWithTenant('subscriptions', subscription.id, {\n          status: 'canceled',\n          updatedAt: new Date().toISOString(),\n        });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 315,
            "endLine": 319,
            "content": "        await multiTenantService.updateWithTenant('subscriptions', subscription.id, {\n          status: 'canceled',\n          updatedAt: new Date().toISOString(),\n        });\n      } else {"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 469,
            "endLine": 473,
            "content": "\n    await multiTenantService.updateWithTenant('subscriptions', subscription.id, {\n      status: 'canceled',\n      updatedAt: new Date().toISOString(),\n    });"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 470,
            "endLine": 474,
            "content": "    await multiTenantService.updateWithTenant('subscriptions', subscription.id, {\n      status: 'canceled',\n      updatedAt: new Date().toISOString(),\n    });\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 324,
            "endLine": 328,
            "content": "\n        // Update database\n        await multiTenantService.updateWithTenant('subscriptions', subscription.id, {\n          cancelAtPeriodEnd: true,\n          updatedAt: new Date().toISOString(),"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 325,
            "endLine": 329,
            "content": "        // Update database\n        await multiTenantService.updateWithTenant('subscriptions', subscription.id, {\n          cancelAtPeriodEnd: true,\n          updatedAt: new Date().toISOString(),\n        });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 331,
            "endLine": 335,
            "content": "\n      console.log('✅ Subscription canceled successfully');\n    } catch (error) {\n      console.error('Failed to cancel subscription:', error);\n      throw new Error('Failed to cancel subscription');"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 332,
            "endLine": 336,
            "content": "      console.log('✅ Subscription canceled successfully');\n    } catch (error) {\n      console.error('Failed to cancel subscription:', error);\n      throw new Error('Failed to cancel subscription');\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 338,
            "endLine": 342,
            "content": "\n  /**\n   * Create billing portal session\n   */\n  async createPortalSession(tenantId: string, returnUrl: string): Promise<string> {"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 339,
            "endLine": 343,
            "content": "  /**\n   * Create billing portal session\n   */\n  async createPortalSession(tenantId: string, returnUrl: string): Promise<string> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 348,
            "endLine": 352,
            "content": "\n      const session = await this.stripe.billingPortal.sessions.create({\n        customer: subscription.stripeCustomerId,\n        return_url: returnUrl,\n      });"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 349,
            "endLine": 353,
            "content": "      const session = await this.stripe.billingPortal.sessions.create({\n        customer: subscription.stripeCustomerId,\n        return_url: returnUrl,\n      });\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 353,
            "endLine": 357,
            "content": "\n      return session.url;\n    } catch (error) {\n      console.error('Failed to create portal session:', error);\n      throw new Error('Failed to create portal session');"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 354,
            "endLine": 358,
            "content": "      return session.url;\n    } catch (error) {\n      console.error('Failed to create portal session:', error);\n      throw new Error('Failed to create portal session');\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 375,
            "endLine": 379,
            "content": "\n      const tenant = multiTenantService.getCurrentTenant();\n      if (!tenant) {\n        throw new Error('No tenant context');\n      }"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 376,
            "endLine": 380,
            "content": "      const tenant = multiTenantService.getCurrentTenant();\n      if (!tenant) {\n        throw new Error('No tenant context');\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 380,
            "endLine": 384,
            "content": "\n      const session = await this.stripe.checkout.sessions.create({\n        mode: 'subscription',\n        payment_method_types: ['card'],\n        line_items: ["
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 381,
            "endLine": 385,
            "content": "      const session = await this.stripe.checkout.sessions.create({\n        mode: 'subscription',\n        payment_method_types: ['card'],\n        line_items: [\n          {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 405,
            "endLine": 409,
            "content": "\n      return session.url!;\n    } catch (error) {\n      console.error('Failed to create checkout session:', error);\n      throw new Error('Failed to create checkout session');"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 406,
            "endLine": 410,
            "content": "      return session.url!;\n    } catch (error) {\n      console.error('Failed to create checkout session:', error);\n      throw new Error('Failed to create checkout session');\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 423,
            "endLine": 427,
            "content": "\n        case 'customer.subscription.deleted':\n          await this.handleSubscriptionDeleted(event.data.object as Stripe.Subscription);\n          break;\n"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 424,
            "endLine": 428,
            "content": "        case 'customer.subscription.deleted':\n          await this.handleSubscriptionDeleted(event.data.object as Stripe.Subscription);\n          break;\n\n        case 'invoice.payment_succeeded':"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 427,
            "endLine": 431,
            "content": "\n        case 'invoice.payment_succeeded':\n          await this.handleInvoicePaymentSucceeded(event.data.object as Stripe.Invoice);\n          break;\n"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 428,
            "endLine": 432,
            "content": "        case 'invoice.payment_succeeded':\n          await this.handleInvoicePaymentSucceeded(event.data.object as Stripe.Invoice);\n          break;\n\n        case 'invoice.payment_failed':"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 431,
            "endLine": 435,
            "content": "\n        case 'invoice.payment_failed':\n          await this.handleInvoicePaymentFailed(event.data.object as Stripe.Invoice);\n          break;\n"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 432,
            "endLine": 436,
            "content": "        case 'invoice.payment_failed':\n          await this.handleInvoicePaymentFailed(event.data.object as Stripe.Invoice);\n          break;\n\n        default:"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 444,
            "endLine": 448,
            "content": "\n  /**\n   * Handle subscription update webhook\n   */\n  private async handleSubscriptionUpdate(subscription: Stripe.Subscription): Promise<void> {"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 445,
            "endLine": 449,
            "content": "  /**\n   * Handle subscription update webhook\n   */\n  private async handleSubscriptionUpdate(subscription: Stripe.Subscription): Promise<void> {\n    const tenantId = subscription.metadata.tenantId;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 451,
            "endLine": 455,
            "content": "\n    const subscriptionData = {\n      status: subscription.status,\n      currentPeriodStart: new Date(subscription.current_period_start * 1000).toISOString(),\n      currentPeriodEnd: new Date(subscription.current_period_end * 1000).toISOString(),"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 452,
            "endLine": 456,
            "content": "    const subscriptionData = {\n      status: subscription.status,\n      currentPeriodStart: new Date(subscription.current_period_start * 1000).toISOString(),\n      currentPeriodEnd: new Date(subscription.current_period_end * 1000).toISOString(),\n      cancelAtPeriodEnd: subscription.cancel_at_period_end,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 459,
            "endLine": 463,
            "content": "\n    await multiTenantService.updateWithTenant('subscriptions', subscription.id, subscriptionData);\n  }\n\n  /**"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 460,
            "endLine": 464,
            "content": "    await multiTenantService.updateWithTenant('subscriptions', subscription.id, subscriptionData);\n  }\n\n  /**\n   * Handle subscription deleted webhook"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 462,
            "endLine": 466,
            "content": "\n  /**\n   * Handle subscription deleted webhook\n   */\n  private async handleSubscriptionDeleted(subscription: Stripe.Subscription): Promise<void> {"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 463,
            "endLine": 467,
            "content": "  /**\n   * Handle subscription deleted webhook\n   */\n  private async handleSubscriptionDeleted(subscription: Stripe.Subscription): Promise<void> {\n    const tenantId = subscription.metadata.tenantId;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 475,
            "endLine": 479,
            "content": "\n  /**\n   * Handle invoice payment succeeded webhook\n   */\n  private async handleInvoicePaymentSucceeded(invoice: Stripe.Invoice): Promise<void> {"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 476,
            "endLine": 480,
            "content": "  /**\n   * Handle invoice payment succeeded webhook\n   */\n  private async handleInvoicePaymentSucceeded(invoice: Stripe.Invoice): Promise<void> {\n    // Update invoice status in database"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 483,
            "endLine": 487,
            "content": "\n  /**\n   * Handle invoice payment failed webhook\n   */\n  private async handleInvoicePaymentFailed(invoice: Stripe.Invoice): Promise<void> {"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 484,
            "endLine": 488,
            "content": "  /**\n   * Handle invoice payment failed webhook\n   */\n  private async handleInvoicePaymentFailed(invoice: Stripe.Invoice): Promise<void> {\n    // Handle failed payment (send notification, etc.)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 491,
            "endLine": 495,
            "content": "\n  /**\n   * Get usage-based pricing\n   */\n  async recordUsage(tenantId: string, metric: 'users' | 'transactions' | 'storage', value: number): Promise<void> {"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 492,
            "endLine": 496,
            "content": "  /**\n   * Get usage-based pricing\n   */\n  async recordUsage(tenantId: string, metric: 'users' | 'transactions' | 'storage', value: number): Promise<void> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 505,
            "endLine": 509,
            "content": "\n      await multiTenantService.insertWithTenant('usage_records', usageRecord);\n    } catch (error) {\n      console.error('Failed to record usage:', error);\n    }"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 506,
            "endLine": 510,
            "content": "      await multiTenantService.insertWithTenant('usage_records', usageRecord);\n    } catch (error) {\n      console.error('Failed to record usage:', error);\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 519,
            "endLine": 523,
            "content": "\n  /**\n   * Check if tenant can perform action based on plan limits\n   */\n  async canPerformAction(tenantId: string, action: 'add_user' | 'process_transaction' | 'use_storage'): Promise<boolean> {"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 520,
            "endLine": 524,
            "content": "  /**\n   * Check if tenant can perform action based on plan limits\n   */\n  async canPerformAction(tenantId: string, action: 'add_user' | 'process_transaction' | 'use_storage'): Promise<boolean> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 529,
            "endLine": 533,
            "content": "\n      const plan = this.getPlan(subscription.planId);\n      if (!plan) {\n        return false;\n      }"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 530,
            "endLine": 534,
            "content": "      const plan = this.getPlan(subscription.planId);\n      if (!plan) {\n        return false;\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 536,
            "endLine": 540,
            "content": "\n      switch (action) {\n        case 'add_user':\n          return usage.users < plan.features.users;\n        case 'process_transaction':"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 537,
            "endLine": 541,
            "content": "      switch (action) {\n        case 'add_user':\n          return usage.users < plan.features.users;\n        case 'process_transaction':\n          return plan.features.transactions === -1 || usage.transactions < plan.features.transactions;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/billing.ts",
            "startLine": 567,
            "endLine": 571,
            "content": "\n      let upcomingInvoice = null;\n      if (subscription) {\n        try {\n          upcomingInvoice = await this.stripe.invoices.retrieveUpcoming({"
          },
          {
            "file": "src/lib/billing.ts",
            "startLine": 568,
            "endLine": 572,
            "content": "      let upcomingInvoice = null;\n      if (subscription) {\n        try {\n          upcomingInvoice = await this.stripe.invoices.retrieveUpcoming({\n            customer: subscription.stripeCustomerId,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 3,
            "endLine": 7,
            "content": "\nexport interface AccountWithTax extends Account {\n  taxRate: number;\n  taxType: 'HST' | 'GST+PST' | 'GST+QST' | 'Exempt';\n  province: string;"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 4,
            "endLine": 8,
            "content": "export interface AccountWithTax extends Account {\n  taxRate: number;\n  taxType: 'HST' | 'GST+PST' | 'GST+QST' | 'Exempt';\n  province: string;\n  description?: string;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 16,
            "endLine": 20,
            "content": "\n// Hardcoded account lists for ON, BC, AB\nconst HARDCODED_ACCOUNTS: Record<string, Array<{ code: string; name: string; type: string; taxCode: string; description: string }>> = {\n  ON: [\n    { code: '200', name: 'Sales Revenue', type: 'Revenue', taxCode: 'ON - HST on Sales (13%)', description: 'Income from the sale of products.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 17,
            "endLine": 21,
            "content": "// Hardcoded account lists for ON, BC, AB\nconst HARDCODED_ACCOUNTS: Record<string, Array<{ code: string; name: string; type: string; taxCode: string; description: string }>> = {\n  ON: [\n    { code: '200', name: 'Sales Revenue', type: 'Revenue', taxCode: 'ON - HST on Sales (13%)', description: 'Income from the sale of products.' },\n    { code: '220', name: 'Service Revenue', type: 'Revenue', taxCode: 'ON - HST on Sales (13%)', description: 'Income from performing services.' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 22,
            "endLine": 26,
            "content": "    { code: '260', name: 'Other Revenue', type: 'Revenue', taxCode: 'Tax Exempt (0%)', description: 'Any other income that does not relate to normal business activities and is not recurring' },\n    { code: '270', name: 'Interest Income', type: 'Revenue', taxCode: 'Tax Exempt (0%)', description: 'Interest income' },\n    { code: '310', name: 'Cost of Goods Sold', type: 'Direct Costs', taxCode: 'ON - HST on Purchases (13%)', description: 'Cost of goods sold by the business' },\n    { code: '314', name: 'Cost of Goods Sold (Tax Exempt)', type: 'Direct Costs', taxCode: 'Tax Exempt (0%)', description: 'Cost of goods sold by the business that are tax exempt (overseas purchases)' },\n    { code: '315', name: 'Subcontractors', type: 'Direct Costs', taxCode: 'ON - HST on Purchases (13%)', description: 'Payments to subcontractors' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 103,
            "endLine": 107,
            "content": "    { code: '260', name: 'Other Revenue', type: 'Revenue', taxCode: 'Tax Exempt (0%)', description: 'Any other income that does not relate to normal business activities and is not recurring' },\n    { code: '270', name: 'Interest Income', type: 'Revenue', taxCode: 'Tax Exempt (0%)', description: 'Interest income' },\n    { code: '310', name: 'Cost of Goods Sold', type: 'Direct Costs', taxCode: 'BC - HST on Purchases (12%)', description: 'Cost of goods sold by the business' },\n    { code: '314', name: 'Cost of Goods Sold (Tax Exempt)', type: 'Direct Costs', taxCode: 'Tax Exempt (0%)', description: 'Cost of goods sold by the business that are tax exempt (overseas purchases)' },\n    { code: '315', name: 'Subcontractors', type: 'Direct Costs', taxCode: 'BC - HST on Purchases (12%)', description: 'Payments to subcontractors' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 184,
            "endLine": 188,
            "content": "    { code: '260', name: 'Other Revenue', type: 'Revenue', taxCode: 'Tax Exempt (0%)', description: 'Any other income that does not relate to normal business activities and is not recurring' },\n    { code: '270', name: 'Interest Income', type: 'Revenue', taxCode: 'Tax Exempt (0%)', description: 'Interest income' },\n    { code: '310', name: 'Cost of Goods Sold', type: 'Direct Costs', taxCode: 'AB - HST on Purchases (5%)', description: 'Cost of goods sold by the business' },\n    { code: '314', name: 'Cost of Goods Sold (Tax Exempt)', type: 'Direct Costs', taxCode: 'Tax Exempt (0%)', description: 'Cost of goods sold by the business that are tax exempt (overseas purchases)' },\n    { code: '315', name: 'Subcontractors', type: 'Direct Costs', taxCode: 'AB - HST on Purchases (5%)', description: 'Payments to subcontractors' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 23,
            "endLine": 27,
            "content": "    { code: '270', name: 'Interest Income', type: 'Revenue', taxCode: 'Tax Exempt (0%)', description: 'Interest income' },\n    { code: '310', name: 'Cost of Goods Sold', type: 'Direct Costs', taxCode: 'ON - HST on Purchases (13%)', description: 'Cost of goods sold by the business' },\n    { code: '314', name: 'Cost of Goods Sold (Tax Exempt)', type: 'Direct Costs', taxCode: 'Tax Exempt (0%)', description: 'Cost of goods sold by the business that are tax exempt (overseas purchases)' },\n    { code: '315', name: 'Subcontractors', type: 'Direct Costs', taxCode: 'ON - HST on Purchases (13%)', description: 'Payments to subcontractors' },\n    { code: '400', name: 'Advertising', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred for advertising while trying to increase sales' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 104,
            "endLine": 108,
            "content": "    { code: '270', name: 'Interest Income', type: 'Revenue', taxCode: 'Tax Exempt (0%)', description: 'Interest income' },\n    { code: '310', name: 'Cost of Goods Sold', type: 'Direct Costs', taxCode: 'BC - HST on Purchases (12%)', description: 'Cost of goods sold by the business' },\n    { code: '314', name: 'Cost of Goods Sold (Tax Exempt)', type: 'Direct Costs', taxCode: 'Tax Exempt (0%)', description: 'Cost of goods sold by the business that are tax exempt (overseas purchases)' },\n    { code: '315', name: 'Subcontractors', type: 'Direct Costs', taxCode: 'BC - HST on Purchases (12%)', description: 'Payments to subcontractors' },\n    { code: '400', name: 'Advertising', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred for advertising while trying to increase sales' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 185,
            "endLine": 189,
            "content": "    { code: '270', name: 'Interest Income', type: 'Revenue', taxCode: 'Tax Exempt (0%)', description: 'Interest income' },\n    { code: '310', name: 'Cost of Goods Sold', type: 'Direct Costs', taxCode: 'AB - HST on Purchases (5%)', description: 'Cost of goods sold by the business' },\n    { code: '314', name: 'Cost of Goods Sold (Tax Exempt)', type: 'Direct Costs', taxCode: 'Tax Exempt (0%)', description: 'Cost of goods sold by the business that are tax exempt (overseas purchases)' },\n    { code: '315', name: 'Subcontractors', type: 'Direct Costs', taxCode: 'AB - HST on Purchases (5%)', description: 'Payments to subcontractors' },\n    { code: '400', name: 'Advertising', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred for advertising while trying to increase sales' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 25,
            "endLine": 29,
            "content": "    { code: '314', name: 'Cost of Goods Sold (Tax Exempt)', type: 'Direct Costs', taxCode: 'Tax Exempt (0%)', description: 'Cost of goods sold by the business that are tax exempt (overseas purchases)' },\n    { code: '315', name: 'Subcontractors', type: 'Direct Costs', taxCode: 'ON - HST on Purchases (13%)', description: 'Payments to subcontractors' },\n    { code: '400', name: 'Advertising', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred for advertising while trying to increase sales' },\n    { code: '404', name: 'Bank Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Fees charged by your bank for transactions regarding your bank account(s).' },\n    { code: '408', name: 'Cleaning', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred for cleaning  business property.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 106,
            "endLine": 110,
            "content": "    { code: '314', name: 'Cost of Goods Sold (Tax Exempt)', type: 'Direct Costs', taxCode: 'Tax Exempt (0%)', description: 'Cost of goods sold by the business that are tax exempt (overseas purchases)' },\n    { code: '315', name: 'Subcontractors', type: 'Direct Costs', taxCode: 'BC - HST on Purchases (12%)', description: 'Payments to subcontractors' },\n    { code: '400', name: 'Advertising', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred for advertising while trying to increase sales' },\n    { code: '404', name: 'Bank Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Fees charged by your bank for transactions regarding your bank account(s).' },\n    { code: '408', name: 'Cleaning', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred for cleaning  business property.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 187,
            "endLine": 191,
            "content": "    { code: '314', name: 'Cost of Goods Sold (Tax Exempt)', type: 'Direct Costs', taxCode: 'Tax Exempt (0%)', description: 'Cost of goods sold by the business that are tax exempt (overseas purchases)' },\n    { code: '315', name: 'Subcontractors', type: 'Direct Costs', taxCode: 'AB - HST on Purchases (5%)', description: 'Payments to subcontractors' },\n    { code: '400', name: 'Advertising', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred for advertising while trying to increase sales' },\n    { code: '404', name: 'Bank Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Fees charged by your bank for transactions regarding your bank account(s).' },\n    { code: '408', name: 'Cleaning', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred for cleaning  business property.' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 28,
            "endLine": 32,
            "content": "    { code: '404', name: 'Bank Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Fees charged by your bank for transactions regarding your bank account(s).' },\n    { code: '408', name: 'Cleaning', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred for cleaning  business property.' },\n    { code: '412', name: 'Consulting & Accounting', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses related to paying consultants' },\n    { code: '416', name: 'Depreciation', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'The amount of the asset\\'s cost (based on the useful life) that was consumed during the period' },\n    { code: '420', name: 'Entertainment', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Business-related entertainment expenses that are 50% deductible for income tax purposes.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 109,
            "endLine": 113,
            "content": "    { code: '404', name: 'Bank Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Fees charged by your bank for transactions regarding your bank account(s).' },\n    { code: '408', name: 'Cleaning', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred for cleaning  business property.' },\n    { code: '412', name: 'Consulting & Accounting', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses related to paying consultants' },\n    { code: '416', name: 'Depreciation', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'The amount of the asset\\'s cost (based on the useful life) that was consumed during the period' },\n    { code: '420', name: 'Entertainment', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Business-related entertainment expenses that are 50% deductible for income tax purposes.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 190,
            "endLine": 194,
            "content": "    { code: '404', name: 'Bank Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Fees charged by your bank for transactions regarding your bank account(s).' },\n    { code: '408', name: 'Cleaning', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred for cleaning  business property.' },\n    { code: '412', name: 'Consulting & Accounting', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses related to paying consultants' },\n    { code: '416', name: 'Depreciation', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'The amount of the asset\\'s cost (based on the useful life) that was consumed during the period' },\n    { code: '420', name: 'Entertainment', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Business-related entertainment expenses that are 50% deductible for income tax purposes.' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 31,
            "endLine": 35,
            "content": "    { code: '416', name: 'Depreciation', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'The amount of the asset\\'s cost (based on the useful life) that was consumed during the period' },\n    { code: '420', name: 'Entertainment', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Business-related entertainment expenses that are 50% deductible for income tax purposes.' },\n    { code: '421', name: 'Entertainment - Alcohol Purchases', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Record business-related alcohol purchases; 50% tax deductible.' },\n    { code: '425', name: 'Freight & Courier', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred on courier & freight costs' },\n    { code: '433', name: 'Insurance', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred for insuring the business\\' assets' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 112,
            "endLine": 116,
            "content": "    { code: '416', name: 'Depreciation', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'The amount of the asset\\'s cost (based on the useful life) that was consumed during the period' },\n    { code: '420', name: 'Entertainment', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Business-related entertainment expenses that are 50% deductible for income tax purposes.' },\n    { code: '421', name: 'Entertainment - Alcohol Purchases', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Record business-related alcohol purchases; 50% tax deductible.' },\n    { code: '425', name: 'Freight & Courier', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred on courier & freight costs' },\n    { code: '433', name: 'Insurance', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred for insuring the business\\' assets' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 193,
            "endLine": 197,
            "content": "    { code: '416', name: 'Depreciation', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'The amount of the asset\\'s cost (based on the useful life) that was consumed during the period' },\n    { code: '420', name: 'Entertainment', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Business-related entertainment expenses that are 50% deductible for income tax purposes.' },\n    { code: '421', name: 'Entertainment - Alcohol Purchases', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Record business-related alcohol purchases; 50% tax deductible.' },\n    { code: '425', name: 'Freight & Courier', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred on courier & freight costs' },\n    { code: '433', name: 'Insurance', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred for insuring the business\\' assets' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 35,
            "endLine": 39,
            "content": "    { code: '433', name: 'Insurance', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred for insuring the business\\' assets' },\n    { code: '437', name: 'Interest Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Any interest expenses paid to your tax authority, business bank accounts or credit card accounts.' },\n    { code: '441', name: 'Legal expenses', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred on any legal matters' },\n    { code: '442', name: 'Electricity', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred for electricity use' },\n    { code: '445', name: 'Natural Gas Expense', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred for heating provided by natural gas' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 116,
            "endLine": 120,
            "content": "    { code: '433', name: 'Insurance', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred for insuring the business\\' assets' },\n    { code: '437', name: 'Interest Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Any interest expenses paid to your tax authority, business bank accounts or credit card accounts.' },\n    { code: '441', name: 'Legal expenses', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred on any legal matters' },\n    { code: '442', name: 'Electricity', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred for electricity use' },\n    { code: '445', name: 'Natural Gas Expense', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred for heating provided by natural gas' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 197,
            "endLine": 201,
            "content": "    { code: '433', name: 'Insurance', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred for insuring the business\\' assets' },\n    { code: '437', name: 'Interest Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Any interest expenses paid to your tax authority, business bank accounts or credit card accounts.' },\n    { code: '441', name: 'Legal expenses', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred on any legal matters' },\n    { code: '442', name: 'Electricity', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred for electricity use' },\n    { code: '445', name: 'Natural Gas Expense', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred for heating provided by natural gas' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 36,
            "endLine": 40,
            "content": "    { code: '437', name: 'Interest Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Any interest expenses paid to your tax authority, business bank accounts or credit card accounts.' },\n    { code: '441', name: 'Legal expenses', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred on any legal matters' },\n    { code: '442', name: 'Electricity', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred for electricity use' },\n    { code: '445', name: 'Natural Gas Expense', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred for heating provided by natural gas' },\n    { code: '447', name: 'Water Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred for delivery of fresh water to the business' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 117,
            "endLine": 121,
            "content": "    { code: '437', name: 'Interest Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Any interest expenses paid to your tax authority, business bank accounts or credit card accounts.' },\n    { code: '441', name: 'Legal expenses', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred on any legal matters' },\n    { code: '442', name: 'Electricity', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred for electricity use' },\n    { code: '445', name: 'Natural Gas Expense', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred for heating provided by natural gas' },\n    { code: '447', name: 'Water Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred for delivery of fresh water to the business' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 198,
            "endLine": 202,
            "content": "    { code: '437', name: 'Interest Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Any interest expenses paid to your tax authority, business bank accounts or credit card accounts.' },\n    { code: '441', name: 'Legal expenses', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred on any legal matters' },\n    { code: '442', name: 'Electricity', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred for electricity use' },\n    { code: '445', name: 'Natural Gas Expense', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred for heating provided by natural gas' },\n    { code: '447', name: 'Water Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred for delivery of fresh water to the business' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 40,
            "endLine": 44,
            "content": "    { code: '447', name: 'Water Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred for delivery of fresh water to the business' },\n    { code: '449', name: 'Motor Vehicle Expenses', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred on the running of company motor vehicles' },\n    { code: '450', name: 'Motor Vehicle Expenses - PST Exempt', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred on the running of company motor vehicles that are PST exempt' },\n    { code: '453', name: 'Office Expenses', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'General expenses related to the running of the business office.' },\n    { code: '455', name: 'Supplies and Small Tools', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Supplies and small tools purchases (less than $500 per item) for running the business' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 121,
            "endLine": 125,
            "content": "    { code: '447', name: 'Water Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred for delivery of fresh water to the business' },\n    { code: '449', name: 'Motor Vehicle Expenses', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred on the running of company motor vehicles' },\n    { code: '450', name: 'Motor Vehicle Expenses - PST Exempt', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred on the running of company motor vehicles that are PST exempt' },\n    { code: '453', name: 'Office Expenses', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'General expenses related to the running of the business office.' },\n    { code: '455', name: 'Supplies and Small Tools', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Supplies and small tools purchases (less than $500 per item) for running the business' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 202,
            "endLine": 206,
            "content": "    { code: '447', name: 'Water Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred for delivery of fresh water to the business' },\n    { code: '449', name: 'Motor Vehicle Expenses', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred on the running of company motor vehicles' },\n    { code: '450', name: 'Motor Vehicle Expenses - PST Exempt', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred on the running of company motor vehicles that are PST exempt' },\n    { code: '453', name: 'Office Expenses', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'General expenses related to the running of the business office.' },\n    { code: '455', name: 'Supplies and Small Tools', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Supplies and small tools purchases (less than $500 per item) for running the business' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 47,
            "endLine": 51,
            "content": "    { code: '469', name: 'Rent', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'The payment to lease a building or area.' },\n    { code: '470', name: 'Research and Development', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred performing research and development to bring a new product or service to market' },\n    { code: '473', name: 'Repairs and Maintenance', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred on a damaged or run down asset that will bring the asset back to its original condition.' },\n    { code: '477', name: 'Wages and Salaries', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment to employees in exchange for their resources' },\n    { code: '478', name: 'Employee Benefits Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for employee benefits' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 128,
            "endLine": 132,
            "content": "    { code: '469', name: 'Rent', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'The payment to lease a building or area.' },\n    { code: '470', name: 'Research and Development', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred performing research and development to bring a new product or service to market' },\n    { code: '473', name: 'Repairs and Maintenance', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred on a damaged or run down asset that will bring the asset back to its original condition.' },\n    { code: '477', name: 'Wages and Salaries', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment to employees in exchange for their resources' },\n    { code: '478', name: 'Employee Benefits Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for employee benefits' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 209,
            "endLine": 213,
            "content": "    { code: '469', name: 'Rent', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'The payment to lease a building or area.' },\n    { code: '470', name: 'Research and Development', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred performing research and development to bring a new product or service to market' },\n    { code: '473', name: 'Repairs and Maintenance', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred on a damaged or run down asset that will bring the asset back to its original condition.' },\n    { code: '477', name: 'Wages and Salaries', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment to employees in exchange for their resources' },\n    { code: '478', name: 'Employee Benefits Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for employee benefits' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 48,
            "endLine": 52,
            "content": "    { code: '470', name: 'Research and Development', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred performing research and development to bring a new product or service to market' },\n    { code: '473', name: 'Repairs and Maintenance', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred on a damaged or run down asset that will bring the asset back to its original condition.' },\n    { code: '477', name: 'Wages and Salaries', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment to employees in exchange for their resources' },\n    { code: '478', name: 'Employee Benefits Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for employee benefits' },\n    { code: '479', name: 'Uniforms', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Purchase and maintenance of uniforms' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 129,
            "endLine": 133,
            "content": "    { code: '470', name: 'Research and Development', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred performing research and development to bring a new product or service to market' },\n    { code: '473', name: 'Repairs and Maintenance', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred on a damaged or run down asset that will bring the asset back to its original condition.' },\n    { code: '477', name: 'Wages and Salaries', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment to employees in exchange for their resources' },\n    { code: '478', name: 'Employee Benefits Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for employee benefits' },\n    { code: '479', name: 'Uniforms', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Purchase and maintenance of uniforms' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 210,
            "endLine": 214,
            "content": "    { code: '470', name: 'Research and Development', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred performing research and development to bring a new product or service to market' },\n    { code: '473', name: 'Repairs and Maintenance', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred on a damaged or run down asset that will bring the asset back to its original condition.' },\n    { code: '477', name: 'Wages and Salaries', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment to employees in exchange for their resources' },\n    { code: '478', name: 'Employee Benefits Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for employee benefits' },\n    { code: '479', name: 'Uniforms', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Purchase and maintenance of uniforms' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 50,
            "endLine": 54,
            "content": "    { code: '477', name: 'Wages and Salaries', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment to employees in exchange for their resources' },\n    { code: '478', name: 'Employee Benefits Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for employee benefits' },\n    { code: '479', name: 'Uniforms', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Purchase and maintenance of uniforms' },\n    { code: '482', name: 'Business Licenses, Taxes, and Memberships', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Business licenses, municipal business taxes, and memberships to professional bodies (CPA , Law Society, etc.)' },\n    { code: '485', name: 'Subscriptions', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'E.g. Magazines, professional bodies' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 131,
            "endLine": 135,
            "content": "    { code: '477', name: 'Wages and Salaries', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment to employees in exchange for their resources' },\n    { code: '478', name: 'Employee Benefits Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for employee benefits' },\n    { code: '479', name: 'Uniforms', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Purchase and maintenance of uniforms' },\n    { code: '482', name: 'Business Licenses, Taxes, and Memberships', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Business licenses, municipal business taxes, and memberships to professional bodies (CPA , Law Society, etc.)' },\n    { code: '485', name: 'Subscriptions', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'E.g. Magazines, professional bodies' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 212,
            "endLine": 216,
            "content": "    { code: '477', name: 'Wages and Salaries', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment to employees in exchange for their resources' },\n    { code: '478', name: 'Employee Benefits Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for employee benefits' },\n    { code: '479', name: 'Uniforms', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Purchase and maintenance of uniforms' },\n    { code: '482', name: 'Business Licenses, Taxes, and Memberships', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Business licenses, municipal business taxes, and memberships to professional bodies (CPA , Law Society, etc.)' },\n    { code: '485', name: 'Subscriptions', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'E.g. Magazines, professional bodies' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 51,
            "endLine": 55,
            "content": "    { code: '478', name: 'Employee Benefits Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for employee benefits' },\n    { code: '479', name: 'Uniforms', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Purchase and maintenance of uniforms' },\n    { code: '482', name: 'Business Licenses, Taxes, and Memberships', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Business licenses, municipal business taxes, and memberships to professional bodies (CPA , Law Society, etc.)' },\n    { code: '485', name: 'Subscriptions', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'E.g. Magazines, professional bodies' },\n    { code: '487', name: 'Training and Continuing Education', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Training seminars and other professional continuing education programs' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 132,
            "endLine": 136,
            "content": "    { code: '478', name: 'Employee Benefits Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for employee benefits' },\n    { code: '479', name: 'Uniforms', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Purchase and maintenance of uniforms' },\n    { code: '482', name: 'Business Licenses, Taxes, and Memberships', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Business licenses, municipal business taxes, and memberships to professional bodies (CPA , Law Society, etc.)' },\n    { code: '485', name: 'Subscriptions', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'E.g. Magazines, professional bodies' },\n    { code: '487', name: 'Training and Continuing Education', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Training seminars and other professional continuing education programs' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 213,
            "endLine": 217,
            "content": "    { code: '478', name: 'Employee Benefits Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for employee benefits' },\n    { code: '479', name: 'Uniforms', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Purchase and maintenance of uniforms' },\n    { code: '482', name: 'Business Licenses, Taxes, and Memberships', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Business licenses, municipal business taxes, and memberships to professional bodies (CPA , Law Society, etc.)' },\n    { code: '485', name: 'Subscriptions', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'E.g. Magazines, professional bodies' },\n    { code: '487', name: 'Training and Continuing Education', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Training seminars and other professional continuing education programs' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 53,
            "endLine": 57,
            "content": "    { code: '482', name: 'Business Licenses, Taxes, and Memberships', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Business licenses, municipal business taxes, and memberships to professional bodies (CPA , Law Society, etc.)' },\n    { code: '485', name: 'Subscriptions', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'E.g. Magazines, professional bodies' },\n    { code: '487', name: 'Training and Continuing Education', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Training seminars and other professional continuing education programs' },\n    { code: '489', name: 'Telephone & Internet', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenditure incurred from any business-related phone calls, phone lines, or internet connections' },\n    { code: '493', name: 'Travel - National', type: 'Expense', taxCode: 'ON - HST on Purchases (13%)', description: 'Expenses incurred from domestic travel which has a business purpose' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 134,
            "endLine": 138,
            "content": "    { code: '482', name: 'Business Licenses, Taxes, and Memberships', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Business licenses, municipal business taxes, and memberships to professional bodies (CPA , Law Society, etc.)' },\n    { code: '485', name: 'Subscriptions', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'E.g. Magazines, professional bodies' },\n    { code: '487', name: 'Training and Continuing Education', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Training seminars and other professional continuing education programs' },\n    { code: '489', name: 'Telephone & Internet', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenditure incurred from any business-related phone calls, phone lines, or internet connections' },\n    { code: '493', name: 'Travel - National', type: 'Expense', taxCode: 'BC - HST on Purchases (12%)', description: 'Expenses incurred from domestic travel which has a business purpose' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 215,
            "endLine": 219,
            "content": "    { code: '482', name: 'Business Licenses, Taxes, and Memberships', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Business licenses, municipal business taxes, and memberships to professional bodies (CPA , Law Society, etc.)' },\n    { code: '485', name: 'Subscriptions', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'E.g. Magazines, professional bodies' },\n    { code: '487', name: 'Training and Continuing Education', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Training seminars and other professional continuing education programs' },\n    { code: '489', name: 'Telephone & Internet', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenditure incurred from any business-related phone calls, phone lines, or internet connections' },\n    { code: '493', name: 'Travel - National', type: 'Expense', taxCode: 'AB - HST on Purchases (5%)', description: 'Expenses incurred from domestic travel which has a business purpose' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 58,
            "endLine": 62,
            "content": "    { code: '494', name: 'Travel - International', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred from international travel which has a business purpose' },\n    { code: '495', name: 'Warranty Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred through fulfilling warranty coverage' },\n    { code: '497', name: 'Bank Revaluations', type: 'Bank Revaluations', taxCode: 'Tax Exempt (0%)', description: 'Bank account revaluations due for foreign exchange rate changes' },\n    { code: '498', name: 'Unrealised Currency Gains', type: 'Unrealized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Unrealised currency gains on outstanding items' },\n    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 139,
            "endLine": 143,
            "content": "    { code: '494', name: 'Travel - International', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred from international travel which has a business purpose' },\n    { code: '495', name: 'Warranty Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred through fulfilling warranty coverage' },\n    { code: '497', name: 'Bank Revaluations', type: 'Bank Revaluations', taxCode: 'Tax Exempt (0%)', description: 'Bank account revaluations due for foreign exchange rate changes' },\n    { code: '498', name: 'Unrealised Currency Gains', type: 'Unrealized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Unrealised currency gains on outstanding items' },\n    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 220,
            "endLine": 224,
            "content": "    { code: '494', name: 'Travel - International', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred from international travel which has a business purpose' },\n    { code: '495', name: 'Warranty Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred through fulfilling warranty coverage' },\n    { code: '497', name: 'Bank Revaluations', type: 'Bank Revaluations', taxCode: 'Tax Exempt (0%)', description: 'Bank account revaluations due for foreign exchange rate changes' },\n    { code: '498', name: 'Unrealised Currency Gains', type: 'Unrealized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Unrealised currency gains on outstanding items' },\n    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 59,
            "endLine": 63,
            "content": "    { code: '495', name: 'Warranty Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred through fulfilling warranty coverage' },\n    { code: '497', name: 'Bank Revaluations', type: 'Bank Revaluations', taxCode: 'Tax Exempt (0%)', description: 'Bank account revaluations due for foreign exchange rate changes' },\n    { code: '498', name: 'Unrealised Currency Gains', type: 'Unrealized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Unrealised currency gains on outstanding items' },\n    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },\n    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 140,
            "endLine": 144,
            "content": "    { code: '495', name: 'Warranty Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred through fulfilling warranty coverage' },\n    { code: '497', name: 'Bank Revaluations', type: 'Bank Revaluations', taxCode: 'Tax Exempt (0%)', description: 'Bank account revaluations due for foreign exchange rate changes' },\n    { code: '498', name: 'Unrealised Currency Gains', type: 'Unrealized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Unrealised currency gains on outstanding items' },\n    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },\n    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 221,
            "endLine": 225,
            "content": "    { code: '495', name: 'Warranty Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Expenses incurred through fulfilling warranty coverage' },\n    { code: '497', name: 'Bank Revaluations', type: 'Bank Revaluations', taxCode: 'Tax Exempt (0%)', description: 'Bank account revaluations due for foreign exchange rate changes' },\n    { code: '498', name: 'Unrealised Currency Gains', type: 'Unrealized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Unrealised currency gains on outstanding items' },\n    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },\n    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 60,
            "endLine": 64,
            "content": "    { code: '497', name: 'Bank Revaluations', type: 'Bank Revaluations', taxCode: 'Tax Exempt (0%)', description: 'Bank account revaluations due for foreign exchange rate changes' },\n    { code: '498', name: 'Unrealised Currency Gains', type: 'Unrealized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Unrealised currency gains on outstanding items' },\n    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },\n    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },\n    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 141,
            "endLine": 145,
            "content": "    { code: '497', name: 'Bank Revaluations', type: 'Bank Revaluations', taxCode: 'Tax Exempt (0%)', description: 'Bank account revaluations due for foreign exchange rate changes' },\n    { code: '498', name: 'Unrealised Currency Gains', type: 'Unrealized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Unrealised currency gains on outstanding items' },\n    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },\n    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },\n    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 222,
            "endLine": 226,
            "content": "    { code: '497', name: 'Bank Revaluations', type: 'Bank Revaluations', taxCode: 'Tax Exempt (0%)', description: 'Bank account revaluations due for foreign exchange rate changes' },\n    { code: '498', name: 'Unrealised Currency Gains', type: 'Unrealized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Unrealised currency gains on outstanding items' },\n    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },\n    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },\n    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 61,
            "endLine": 65,
            "content": "    { code: '498', name: 'Unrealised Currency Gains', type: 'Unrealized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Unrealised currency gains on outstanding items' },\n    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },\n    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },\n    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },\n    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 142,
            "endLine": 146,
            "content": "    { code: '498', name: 'Unrealised Currency Gains', type: 'Unrealized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Unrealised currency gains on outstanding items' },\n    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },\n    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },\n    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },\n    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 223,
            "endLine": 227,
            "content": "    { code: '498', name: 'Unrealised Currency Gains', type: 'Unrealized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Unrealised currency gains on outstanding items' },\n    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },\n    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },\n    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },\n    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 62,
            "endLine": 66,
            "content": "    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },\n    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },\n    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },\n    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },\n    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 143,
            "endLine": 147,
            "content": "    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },\n    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },\n    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },\n    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },\n    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 224,
            "endLine": 228,
            "content": "    { code: '499', name: 'Realised Currency Gains', type: 'Realized Currency Gains', taxCode: 'Tax Exempt (0%)', description: 'Gains or losses made due to currency exchange rate changes' },\n    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },\n    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },\n    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },\n    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 63,
            "endLine": 67,
            "content": "    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },\n    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },\n    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },\n    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },\n    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 144,
            "endLine": 148,
            "content": "    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },\n    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },\n    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },\n    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },\n    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 225,
            "endLine": 229,
            "content": "    { code: '502', name: 'Donations', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Charitable Donations' },\n    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },\n    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },\n    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },\n    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 64,
            "endLine": 68,
            "content": "    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },\n    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },\n    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },\n    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },\n    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 145,
            "endLine": 149,
            "content": "    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },\n    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },\n    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },\n    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },\n    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 226,
            "endLine": 230,
            "content": "    { code: '505', name: 'Income Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'A percentage of total earnings paid to the government.' },\n    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },\n    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },\n    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },\n    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 65,
            "endLine": 69,
            "content": "    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },\n    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },\n    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },\n    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },\n    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 146,
            "endLine": 150,
            "content": "    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },\n    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },\n    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },\n    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },\n    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 227,
            "endLine": 231,
            "content": "    { code: '507', name: 'Property Tax Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment for Property Taxes on property owned by the business' },\n    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },\n    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },\n    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },\n    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 66,
            "endLine": 70,
            "content": "    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },\n    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },\n    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },\n    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },\n    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 147,
            "endLine": 151,
            "content": "    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },\n    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },\n    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },\n    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },\n    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 228,
            "endLine": 232,
            "content": "    { code: '508', name: 'Bad Debts Expense', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here' },\n    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },\n    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },\n    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },\n    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 67,
            "endLine": 71,
            "content": "    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },\n    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },\n    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },\n    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },\n    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 148,
            "endLine": 152,
            "content": "    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },\n    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },\n    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },\n    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },\n    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 229,
            "endLine": 233,
            "content": "    { code: '610', name: 'Accounts Receivable', type: 'Accounts Receivable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.' },\n    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },\n    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },\n    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },\n    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 68,
            "endLine": 72,
            "content": "    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },\n    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },\n    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },\n    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },\n    { code: '710', name: 'Equipment', type: 'Fixed Asset', taxCode: 'ON - HST on Purchases (13%)', description: 'Office equipment that is owned and controlled by the business' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 149,
            "endLine": 153,
            "content": "    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },\n    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },\n    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },\n    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },\n    { code: '710', name: 'Equipment', type: 'Fixed Asset', taxCode: 'BC - HST on Purchases (12%)', description: 'Office equipment that is owned and controlled by the business' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 230,
            "endLine": 234,
            "content": "    { code: '615', name: 'Allowance for Doubtful Accounts', type: 'Non-current Asset', taxCode: 'Tax Exempt (0%)', description: 'Amount deemed uncollectible from invoices delivered goes here (normal credit balance)' },\n    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },\n    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },\n    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },\n    { code: '710', name: 'Equipment', type: 'Fixed Asset', taxCode: 'AB - HST on Purchases (5%)', description: 'Office equipment that is owned and controlled by the business' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 69,
            "endLine": 73,
            "content": "    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },\n    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },\n    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },\n    { code: '710', name: 'Equipment', type: 'Fixed Asset', taxCode: 'ON - HST on Purchases (13%)', description: 'Office equipment that is owned and controlled by the business' },\n    { code: '711', name: 'Less Accumulated Depreciation on Office Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of office equipment cost that has been consumed by the entity (based on the useful life)' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 150,
            "endLine": 154,
            "content": "    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },\n    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },\n    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },\n    { code: '710', name: 'Equipment', type: 'Fixed Asset', taxCode: 'BC - HST on Purchases (12%)', description: 'Office equipment that is owned and controlled by the business' },\n    { code: '711', name: 'Less Accumulated Depreciation on Office Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of office equipment cost that has been consumed by the entity (based on the useful life)' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 231,
            "endLine": 235,
            "content": "    { code: '620', name: 'Prepayments', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'An expenditure that has been paid for in advance.' },\n    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },\n    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },\n    { code: '710', name: 'Equipment', type: 'Fixed Asset', taxCode: 'AB - HST on Purchases (5%)', description: 'Office equipment that is owned and controlled by the business' },\n    { code: '711', name: 'Less Accumulated Depreciation on Office Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of office equipment cost that has been consumed by the entity (based on the useful life)' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 70,
            "endLine": 74,
            "content": "    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },\n    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },\n    { code: '710', name: 'Equipment', type: 'Fixed Asset', taxCode: 'ON - HST on Purchases (13%)', description: 'Office equipment that is owned and controlled by the business' },\n    { code: '711', name: 'Less Accumulated Depreciation on Office Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of office equipment cost that has been consumed by the entity (based on the useful life)' },\n    { code: '714', name: 'Vehicles', type: 'Fixed Asset', taxCode: 'ON - HST on Purchases (13%)', description: 'Vehicles that are owned and controlled by the business' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 151,
            "endLine": 155,
            "content": "    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },\n    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },\n    { code: '710', name: 'Equipment', type: 'Fixed Asset', taxCode: 'BC - HST on Purchases (12%)', description: 'Office equipment that is owned and controlled by the business' },\n    { code: '711', name: 'Less Accumulated Depreciation on Office Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of office equipment cost that has been consumed by the entity (based on the useful life)' },\n    { code: '714', name: 'Vehicles', type: 'Fixed Asset', taxCode: 'BC - HST on Purchases (12%)', description: 'Vehicles that are owned and controlled by the business' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 232,
            "endLine": 236,
            "content": "    { code: '630', name: 'Inventory', type: 'Inventory', taxCode: 'Tax Exempt (0%)', description: 'Value of tracked items for resale.' },\n    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },\n    { code: '710', name: 'Equipment', type: 'Fixed Asset', taxCode: 'AB - HST on Purchases (5%)', description: 'Office equipment that is owned and controlled by the business' },\n    { code: '711', name: 'Less Accumulated Depreciation on Office Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of office equipment cost that has been consumed by the entity (based on the useful life)' },\n    { code: '714', name: 'Vehicles', type: 'Fixed Asset', taxCode: 'AB - HST on Purchases (5%)', description: 'Vehicles that are owned and controlled by the business' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 71,
            "endLine": 75,
            "content": "    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },\n    { code: '710', name: 'Equipment', type: 'Fixed Asset', taxCode: 'ON - HST on Purchases (13%)', description: 'Office equipment that is owned and controlled by the business' },\n    { code: '711', name: 'Less Accumulated Depreciation on Office Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of office equipment cost that has been consumed by the entity (based on the useful life)' },\n    { code: '714', name: 'Vehicles', type: 'Fixed Asset', taxCode: 'ON - HST on Purchases (13%)', description: 'Vehicles that are owned and controlled by the business' },\n    { code: '715', name: 'Less Accumulated Depreciation on Vehicles', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of vehicle cost that has been consumed by the business (based on the useful life)' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 152,
            "endLine": 156,
            "content": "    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },\n    { code: '710', name: 'Equipment', type: 'Fixed Asset', taxCode: 'BC - HST on Purchases (12%)', description: 'Office equipment that is owned and controlled by the business' },\n    { code: '711', name: 'Less Accumulated Depreciation on Office Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of office equipment cost that has been consumed by the entity (based on the useful life)' },\n    { code: '714', name: 'Vehicles', type: 'Fixed Asset', taxCode: 'BC - HST on Purchases (12%)', description: 'Vehicles that are owned and controlled by the business' },\n    { code: '715', name: 'Less Accumulated Depreciation on Vehicles', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of vehicle cost that has been consumed by the business (based on the useful life)' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 233,
            "endLine": 237,
            "content": "    { code: '640', name: 'Notes Receivable', type: 'Current Asset', taxCode: 'Tax Exempt (0%)', description: 'Loans issued by the business that are receivable go here' },\n    { code: '710', name: 'Equipment', type: 'Fixed Asset', taxCode: 'AB - HST on Purchases (5%)', description: 'Office equipment that is owned and controlled by the business' },\n    { code: '711', name: 'Less Accumulated Depreciation on Office Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of office equipment cost that has been consumed by the entity (based on the useful life)' },\n    { code: '714', name: 'Vehicles', type: 'Fixed Asset', taxCode: 'AB - HST on Purchases (5%)', description: 'Vehicles that are owned and controlled by the business' },\n    { code: '715', name: 'Less Accumulated Depreciation on Vehicles', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of vehicle cost that has been consumed by the business (based on the useful life)' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 73,
            "endLine": 77,
            "content": "    { code: '711', name: 'Less Accumulated Depreciation on Office Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of office equipment cost that has been consumed by the entity (based on the useful life)' },\n    { code: '714', name: 'Vehicles', type: 'Fixed Asset', taxCode: 'ON - HST on Purchases (13%)', description: 'Vehicles that are owned and controlled by the business' },\n    { code: '715', name: 'Less Accumulated Depreciation on Vehicles', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of vehicle cost that has been consumed by the business (based on the useful life)' },\n    { code: '720', name: 'Computer Equipment', type: 'Fixed Asset', taxCode: 'ON - HST on Purchases (13%)', description: 'Computer equipment that is owned and controlled by the business' },\n    { code: '721', name: 'Less Accumulated Depreciation on Computer Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of computer equipment cost that has been consumed by the business (based on the useful life)' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 154,
            "endLine": 158,
            "content": "    { code: '711', name: 'Less Accumulated Depreciation on Office Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of office equipment cost that has been consumed by the entity (based on the useful life)' },\n    { code: '714', name: 'Vehicles', type: 'Fixed Asset', taxCode: 'BC - HST on Purchases (12%)', description: 'Vehicles that are owned and controlled by the business' },\n    { code: '715', name: 'Less Accumulated Depreciation on Vehicles', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of vehicle cost that has been consumed by the business (based on the useful life)' },\n    { code: '720', name: 'Computer Equipment', type: 'Fixed Asset', taxCode: 'BC - HST on Purchases (12%)', description: 'Computer equipment that is owned and controlled by the business' },\n    { code: '721', name: 'Less Accumulated Depreciation on Computer Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of computer equipment cost that has been consumed by the business (based on the useful life)' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 235,
            "endLine": 239,
            "content": "    { code: '711', name: 'Less Accumulated Depreciation on Office Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of office equipment cost that has been consumed by the entity (based on the useful life)' },\n    { code: '714', name: 'Vehicles', type: 'Fixed Asset', taxCode: 'AB - HST on Purchases (5%)', description: 'Vehicles that are owned and controlled by the business' },\n    { code: '715', name: 'Less Accumulated Depreciation on Vehicles', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of vehicle cost that has been consumed by the business (based on the useful life)' },\n    { code: '720', name: 'Computer Equipment', type: 'Fixed Asset', taxCode: 'AB - HST on Purchases (5%)', description: 'Computer equipment that is owned and controlled by the business' },\n    { code: '721', name: 'Less Accumulated Depreciation on Computer Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of computer equipment cost that has been consumed by the business (based on the useful life)' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 75,
            "endLine": 79,
            "content": "    { code: '715', name: 'Less Accumulated Depreciation on Vehicles', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of vehicle cost that has been consumed by the business (based on the useful life)' },\n    { code: '720', name: 'Computer Equipment', type: 'Fixed Asset', taxCode: 'ON - HST on Purchases (13%)', description: 'Computer equipment that is owned and controlled by the business' },\n    { code: '721', name: 'Less Accumulated Depreciation on Computer Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of computer equipment cost that has been consumed by the business (based on the useful life)' },\n    { code: '800', name: 'Accounts Payable', type: 'Accounts Payable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has received from suppliers but has not yet paid at balance date' },\n    { code: '802', name: 'Notes Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Short-term notes payable go here' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 156,
            "endLine": 160,
            "content": "    { code: '715', name: 'Less Accumulated Depreciation on Vehicles', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of vehicle cost that has been consumed by the business (based on the useful life)' },\n    { code: '720', name: 'Computer Equipment', type: 'Fixed Asset', taxCode: 'BC - HST on Purchases (12%)', description: 'Computer equipment that is owned and controlled by the business' },\n    { code: '721', name: 'Less Accumulated Depreciation on Computer Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of computer equipment cost that has been consumed by the business (based on the useful life)' },\n    { code: '800', name: 'Accounts Payable', type: 'Accounts Payable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has received from suppliers but has not yet paid at balance date' },\n    { code: '802', name: 'Notes Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Short-term notes payable go here' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 237,
            "endLine": 241,
            "content": "    { code: '715', name: 'Less Accumulated Depreciation on Vehicles', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of vehicle cost that has been consumed by the business (based on the useful life)' },\n    { code: '720', name: 'Computer Equipment', type: 'Fixed Asset', taxCode: 'AB - HST on Purchases (5%)', description: 'Computer equipment that is owned and controlled by the business' },\n    { code: '721', name: 'Less Accumulated Depreciation on Computer Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of computer equipment cost that has been consumed by the business (based on the useful life)' },\n    { code: '800', name: 'Accounts Payable', type: 'Accounts Payable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has received from suppliers but has not yet paid at balance date' },\n    { code: '802', name: 'Notes Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Short-term notes payable go here' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 77,
            "endLine": 81,
            "content": "    { code: '721', name: 'Less Accumulated Depreciation on Computer Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of computer equipment cost that has been consumed by the business (based on the useful life)' },\n    { code: '800', name: 'Accounts Payable', type: 'Accounts Payable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has received from suppliers but has not yet paid at balance date' },\n    { code: '802', name: 'Notes Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Short-term notes payable go here' },\n    { code: '803', name: 'Wages Payable', type: 'Wages Payable', taxCode: 'Tax Exempt (0%)', description: 'Xero automatically updates this account for payroll entries created using Payroll and will store the payroll amount to be paid to the employee for the pay run. This account enables you to maintain separate accounts for employee Wages Payable amounts and Accounts Payable amounts' },\n    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 158,
            "endLine": 162,
            "content": "    { code: '721', name: 'Less Accumulated Depreciation on Computer Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of computer equipment cost that has been consumed by the business (based on the useful life)' },\n    { code: '800', name: 'Accounts Payable', type: 'Accounts Payable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has received from suppliers but has not yet paid at balance date' },\n    { code: '802', name: 'Notes Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Short-term notes payable go here' },\n    { code: '803', name: 'Wages Payable', type: 'Wages Payable', taxCode: 'Tax Exempt (0%)', description: 'Xero automatically updates this account for payroll entries created using Payroll and will store the payroll amount to be paid to the employee for the pay run. This account enables you to maintain separate accounts for employee Wages Payable amounts and Accounts Payable amounts' },\n    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 239,
            "endLine": 243,
            "content": "    { code: '721', name: 'Less Accumulated Depreciation on Computer Equipment', type: 'Fixed Asset', taxCode: 'Tax Exempt (0%)', description: 'The total amount of computer equipment cost that has been consumed by the business (based on the useful life)' },\n    { code: '800', name: 'Accounts Payable', type: 'Accounts Payable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has received from suppliers but has not yet paid at balance date' },\n    { code: '802', name: 'Notes Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Short-term notes payable go here' },\n    { code: '803', name: 'Wages Payable', type: 'Wages Payable', taxCode: 'Tax Exempt (0%)', description: 'Xero automatically updates this account for payroll entries created using Payroll and will store the payroll amount to be paid to the employee for the pay run. This account enables you to maintain separate accounts for employee Wages Payable amounts and Accounts Payable amounts' },\n    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 78,
            "endLine": 82,
            "content": "    { code: '800', name: 'Accounts Payable', type: 'Accounts Payable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has received from suppliers but has not yet paid at balance date' },\n    { code: '802', name: 'Notes Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Short-term notes payable go here' },\n    { code: '803', name: 'Wages Payable', type: 'Wages Payable', taxCode: 'Tax Exempt (0%)', description: 'Xero automatically updates this account for payroll entries created using Payroll and will store the payroll amount to be paid to the employee for the pay run. This account enables you to maintain separate accounts for employee Wages Payable amounts and Accounts Payable amounts' },\n    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },\n    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 159,
            "endLine": 163,
            "content": "    { code: '800', name: 'Accounts Payable', type: 'Accounts Payable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has received from suppliers but has not yet paid at balance date' },\n    { code: '802', name: 'Notes Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Short-term notes payable go here' },\n    { code: '803', name: 'Wages Payable', type: 'Wages Payable', taxCode: 'Tax Exempt (0%)', description: 'Xero automatically updates this account for payroll entries created using Payroll and will store the payroll amount to be paid to the employee for the pay run. This account enables you to maintain separate accounts for employee Wages Payable amounts and Accounts Payable amounts' },\n    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },\n    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 240,
            "endLine": 244,
            "content": "    { code: '800', name: 'Accounts Payable', type: 'Accounts Payable', taxCode: 'Tax Exempt (0%)', description: 'Outstanding invoices the company has received from suppliers but has not yet paid at balance date' },\n    { code: '802', name: 'Notes Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Short-term notes payable go here' },\n    { code: '803', name: 'Wages Payable', type: 'Wages Payable', taxCode: 'Tax Exempt (0%)', description: 'Xero automatically updates this account for payroll entries created using Payroll and will store the payroll amount to be paid to the employee for the pay run. This account enables you to maintain separate accounts for employee Wages Payable amounts and Accounts Payable amounts' },\n    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },\n    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 79,
            "endLine": 83,
            "content": "    { code: '802', name: 'Notes Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Short-term notes payable go here' },\n    { code: '803', name: 'Wages Payable', type: 'Wages Payable', taxCode: 'Tax Exempt (0%)', description: 'Xero automatically updates this account for payroll entries created using Payroll and will store the payroll amount to be paid to the employee for the pay run. This account enables you to maintain separate accounts for employee Wages Payable amounts and Accounts Payable amounts' },\n    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },\n    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },\n    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 160,
            "endLine": 164,
            "content": "    { code: '802', name: 'Notes Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Short-term notes payable go here' },\n    { code: '803', name: 'Wages Payable', type: 'Wages Payable', taxCode: 'Tax Exempt (0%)', description: 'Xero automatically updates this account for payroll entries created using Payroll and will store the payroll amount to be paid to the employee for the pay run. This account enables you to maintain separate accounts for employee Wages Payable amounts and Accounts Payable amounts' },\n    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },\n    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },\n    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 241,
            "endLine": 245,
            "content": "    { code: '802', name: 'Notes Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Short-term notes payable go here' },\n    { code: '803', name: 'Wages Payable', type: 'Wages Payable', taxCode: 'Tax Exempt (0%)', description: 'Xero automatically updates this account for payroll entries created using Payroll and will store the payroll amount to be paid to the employee for the pay run. This account enables you to maintain separate accounts for employee Wages Payable amounts and Accounts Payable amounts' },\n    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },\n    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },\n    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 80,
            "endLine": 84,
            "content": "    { code: '803', name: 'Wages Payable', type: 'Wages Payable', taxCode: 'Tax Exempt (0%)', description: 'Xero automatically updates this account for payroll entries created using Payroll and will store the payroll amount to be paid to the employee for the pay run. This account enables you to maintain separate accounts for employee Wages Payable amounts and Accounts Payable amounts' },\n    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },\n    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },\n    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },\n    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 161,
            "endLine": 165,
            "content": "    { code: '803', name: 'Wages Payable', type: 'Wages Payable', taxCode: 'Tax Exempt (0%)', description: 'Xero automatically updates this account for payroll entries created using Payroll and will store the payroll amount to be paid to the employee for the pay run. This account enables you to maintain separate accounts for employee Wages Payable amounts and Accounts Payable amounts' },\n    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },\n    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },\n    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },\n    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 242,
            "endLine": 246,
            "content": "    { code: '803', name: 'Wages Payable', type: 'Wages Payable', taxCode: 'Tax Exempt (0%)', description: 'Xero automatically updates this account for payroll entries created using Payroll and will store the payroll amount to be paid to the employee for the pay run. This account enables you to maintain separate accounts for employee Wages Payable amounts and Accounts Payable amounts' },\n    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },\n    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },\n    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },\n    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 81,
            "endLine": 85,
            "content": "    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },\n    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },\n    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },\n    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },\n    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 162,
            "endLine": 166,
            "content": "    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },\n    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },\n    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },\n    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },\n    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 243,
            "endLine": 247,
            "content": "    { code: '820', name: 'Sales Tax', type: 'Sales Tax', taxCode: 'Tax Exempt (0%)', description: 'The balance in this account represents Sales Tax owing to or from your tax authority. At the end of the tax period, it is this account that should be used to code against either the \\'refunds from\\' or \\'payments to\\' your tax authority that will appear on the bank statement. Xero has been designed to use only one sales tax account to track sales taxes on income and expenses, so there is no need to add any new sales tax accounts to Xero.' },\n    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },\n    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },\n    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },\n    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 82,
            "endLine": 86,
            "content": "    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },\n    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },\n    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },\n    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },\n    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 163,
            "endLine": 167,
            "content": "    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },\n    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },\n    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },\n    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },\n    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 244,
            "endLine": 248,
            "content": "    { code: '825', name: 'Employee Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of tax that has been deducted from wages or salaries paid to employes and is due to be paid' },\n    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },\n    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },\n    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },\n    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 83,
            "endLine": 87,
            "content": "    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },\n    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },\n    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },\n    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },\n    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 164,
            "endLine": 168,
            "content": "    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },\n    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },\n    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },\n    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },\n    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 245,
            "endLine": 249,
            "content": "    { code: '830', name: 'Income Tax Payable', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'The amount of income tax that is due to be paid, also resident withholding tax paid on interest received.' },\n    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },\n    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },\n    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },\n    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 84,
            "endLine": 88,
            "content": "    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },\n    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },\n    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },\n    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },\n    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 165,
            "endLine": 169,
            "content": "    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },\n    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },\n    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },\n    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },\n    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 246,
            "endLine": 250,
            "content": "    { code: '840', name: 'Historical Adjustment', type: 'Historical Adjustment', taxCode: 'Tax Exempt (0%)', description: 'For accountant adjustments' },\n    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },\n    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },\n    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },\n    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 85,
            "endLine": 89,
            "content": "    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },\n    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },\n    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },\n    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },\n    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 166,
            "endLine": 170,
            "content": "    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },\n    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },\n    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },\n    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },\n    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 247,
            "endLine": 251,
            "content": "    { code: '860', name: 'Rounding', type: 'Rounding', taxCode: 'Tax Exempt (0%)', description: 'An adjustment entry to allow for rounding' },\n    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },\n    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },\n    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },\n    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 86,
            "endLine": 90,
            "content": "    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },\n    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },\n    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },\n    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },\n    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 167,
            "endLine": 171,
            "content": "    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },\n    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },\n    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },\n    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },\n    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 248,
            "endLine": 252,
            "content": "    { code: '877', name: 'Tracking Transfers', type: 'Tracking', taxCode: 'Tax Exempt (0%)', description: 'Transfers between tracking categories' },\n    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },\n    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },\n    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },\n    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 87,
            "endLine": 91,
            "content": "    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },\n    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },\n    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },\n    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },\n    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 168,
            "endLine": 172,
            "content": "    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },\n    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },\n    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },\n    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },\n    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 249,
            "endLine": 253,
            "content": "    { code: '880', name: 'Due To/From Shareholders', type: 'Current Liability', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals and contributions from the owners go here. For tax purposes, if the amount at the end of the period in question is positive, record a \"Due To Shareholders\" Liability and, if the amount at the end of the period is negative, record a \"Due From Shareholders\" asset.' },\n    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },\n    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },\n    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },\n    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 88,
            "endLine": 92,
            "content": "    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },\n    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },\n    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },\n    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },\n    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 169,
            "endLine": 173,
            "content": "    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },\n    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },\n    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },\n    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },\n    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 250,
            "endLine": 254,
            "content": "    { code: '881', name: 'Owner\\'s Draw', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Withdrawals by the owner from the business for personal use' },\n    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },\n    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },\n    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },\n    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 89,
            "endLine": 93,
            "content": "    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },\n    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },\n    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },\n    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },\n    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 170,
            "endLine": 174,
            "content": "    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },\n    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },\n    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },\n    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },\n    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 251,
            "endLine": 255,
            "content": "    { code: '882', name: 'Owner\\'s Contribution', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'Contributions by the owner to the business' },\n    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },\n    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },\n    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },\n    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 90,
            "endLine": 94,
            "content": "    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },\n    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },\n    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },\n    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },\n    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 171,
            "endLine": 175,
            "content": "    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },\n    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },\n    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },\n    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },\n    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 252,
            "endLine": 256,
            "content": "    { code: '883', name: 'E-Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Electronic money transfers between accounts' },\n    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },\n    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },\n    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },\n    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 91,
            "endLine": 95,
            "content": "    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },\n    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },\n    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },\n    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },\n    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 172,
            "endLine": 176,
            "content": "    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },\n    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },\n    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },\n    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },\n    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 253,
            "endLine": 257,
            "content": "    { code: '884', name: 'Cheque', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Cheque transactions requiring manual categorization' },\n    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },\n    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },\n    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },\n    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 92,
            "endLine": 96,
            "content": "    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },\n    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },\n    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },\n    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },\n    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 173,
            "endLine": 177,
            "content": "    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },\n    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },\n    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },\n    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },\n    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 254,
            "endLine": 258,
            "content": "    { code: '885', name: 'Bank Transfer', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Transfers between bank accounts' },\n    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },\n    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },\n    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },\n    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 93,
            "endLine": 97,
            "content": "    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },\n    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },\n    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },\n    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },\n    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 174,
            "endLine": 178,
            "content": "    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },\n    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },\n    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },\n    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },\n    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 255,
            "endLine": 259,
            "content": "    { code: '886', name: 'Credit Card Payment', type: 'Bank Transfer', taxCode: 'Tax Exempt (0%)', description: 'Payments to credit card accounts' },\n    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },\n    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },\n    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },\n    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 94,
            "endLine": 98,
            "content": "    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },\n    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },\n    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },\n    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },\n    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 175,
            "endLine": 179,
            "content": "    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },\n    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },\n    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },\n    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },\n    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 256,
            "endLine": 260,
            "content": "    { code: '887', name: 'Service Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'General service fees (not bank fees)' },\n    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },\n    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },\n    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },\n    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 95,
            "endLine": 99,
            "content": "    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },\n    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },\n    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },\n    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },\n  ],"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 176,
            "endLine": 180,
            "content": "    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },\n    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },\n    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },\n    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },\n  ],"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 257,
            "endLine": 261,
            "content": "    { code: '888', name: 'Processing Fees', type: 'Expense', taxCode: 'Tax Exempt (0%)', description: 'Payment processing fees' },\n    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },\n    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },\n    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },\n  ]"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 96,
            "endLine": 100,
            "content": "    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },\n    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },\n    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },\n  ],\n  BC: ["
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 177,
            "endLine": 181,
            "content": "    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },\n    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },\n    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },\n  ],\n  AB: ["
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 258,
            "endLine": 262,
            "content": "    { code: '900', name: 'Loan', type: 'Non-current Liability', taxCode: 'Tax Exempt (0%)', description: 'Money that has been borrowed from a creditor' },\n    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },\n    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },\n  ]\n};"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 97,
            "endLine": 101,
            "content": "    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },\n    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },\n  ],\n  BC: [\n    { code: '200', name: 'Sales Revenue', type: 'Revenue', taxCode: 'BC - HST on Sales (12%)', description: 'Income from the sale of products.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 178,
            "endLine": 182,
            "content": "    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },\n    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },\n  ],\n  AB: [\n    { code: '200', name: 'Sales Revenue', type: 'Revenue', taxCode: 'AB - HST on Sales (5%)', description: 'Income from the sale of products.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 259,
            "endLine": 263,
            "content": "    { code: '960', name: 'Retained Earnings', type: 'Retained Earnings', taxCode: 'Tax Exempt (0%)', description: 'Do not Use' },\n    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },\n  ]\n};\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 98,
            "endLine": 102,
            "content": "    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },\n  ],\n  BC: [\n    { code: '200', name: 'Sales Revenue', type: 'Revenue', taxCode: 'BC - HST on Sales (12%)', description: 'Income from the sale of products.' },\n    { code: '220', name: 'Service Revenue', type: 'Revenue', taxCode: 'BC - HST on Sales (12%)', description: 'Income from performing services.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 179,
            "endLine": 183,
            "content": "    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },\n  ],\n  AB: [\n    { code: '200', name: 'Sales Revenue', type: 'Revenue', taxCode: 'AB - HST on Sales (5%)', description: 'Income from the sale of products.' },\n    { code: '220', name: 'Service Revenue', type: 'Revenue', taxCode: 'AB - HST on Sales (5%)', description: 'Income from performing services.' },"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 260,
            "endLine": 264,
            "content": "    { code: '970', name: 'Owner A Share Capital', type: 'Equity', taxCode: 'Tax Exempt (0%)', description: 'The value of shares purchased by the shareholders' },\n  ]\n};\n\n// Global singleton instance"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 263,
            "endLine": 267,
            "content": "\n// Global singleton instance\nlet globalChartOfAccounts: ChartOfAccounts | null = null;\n\nexport class ChartOfAccounts {"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 264,
            "endLine": 268,
            "content": "// Global singleton instance\nlet globalChartOfAccounts: ChartOfAccounts | null = null;\n\nexport class ChartOfAccounts {\n  private accounts: Map<string, Account> = new Map();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 266,
            "endLine": 270,
            "content": "\nexport class ChartOfAccounts {\n  private accounts: Map<string, Account> = new Map();\n  private currentProvince: string = 'ON';\n  private popularAccounts: Map<string, number> = new Map();"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 267,
            "endLine": 271,
            "content": "export class ChartOfAccounts {\n  private accounts: Map<string, Account> = new Map();\n  private currentProvince: string = 'ON';\n  private popularAccounts: Map<string, number> = new Map();\n  private static instances: Map<string, ChartOfAccounts> = new Map();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 272,
            "endLine": 276,
            "content": "\n  constructor(province: string = 'ON') {\n    this.currentProvince = province;\n    this.initializeHardcodedAccounts();\n    console.log(`📊 Chart of Accounts initialized for province: ${province} (${this.accounts.size} accounts)`);"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 273,
            "endLine": 277,
            "content": "  constructor(province: string = 'ON') {\n    this.currentProvince = province;\n    this.initializeHardcodedAccounts();\n    console.log(`📊 Chart of Accounts initialized for province: ${province} (${this.accounts.size} accounts)`);\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 278,
            "endLine": 282,
            "content": "\n  // Singleton pattern to prevent multiple instances\n  static getInstance(province: string = 'ON'): ChartOfAccounts {\n    if (!ChartOfAccounts.instances.has(province)) {\n      ChartOfAccounts.instances.set(province, new ChartOfAccounts(province));"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 279,
            "endLine": 283,
            "content": "  // Singleton pattern to prevent multiple instances\n  static getInstance(province: string = 'ON'): ChartOfAccounts {\n    if (!ChartOfAccounts.instances.has(province)) {\n      ChartOfAccounts.instances.set(province, new ChartOfAccounts(province));\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 286,
            "endLine": 290,
            "content": "\n  private initializeHardcodedAccounts(): void {\n    this.accounts.clear();\n    const provinceAccounts = HARDCODED_ACCOUNTS[this.currentProvince] || [];\n    for (const acc of provinceAccounts) {"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 287,
            "endLine": 291,
            "content": "  private initializeHardcodedAccounts(): void {\n    this.accounts.clear();\n    const provinceAccounts = HARDCODED_ACCOUNTS[this.currentProvince] || [];\n    for (const acc of provinceAccounts) {\n      this.accounts.set(acc.code, {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 301,
            "endLine": 305,
            "content": "\n  setProvince(province: string): void {\n    if (this.currentProvince !== province) {\n      this.currentProvince = province;\n      this.initializeHardcodedAccounts();"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 302,
            "endLine": 306,
            "content": "  setProvince(province: string): void {\n    if (this.currentProvince !== province) {\n      this.currentProvince = province;\n      this.initializeHardcodedAccounts();\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 312,
            "endLine": 316,
            "content": "\n  getAllAccounts(): AccountWithTax[] {\n    return Array.from(this.accounts.values()).map(account => this.addTaxInfo(account));\n  }\n"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 313,
            "endLine": 317,
            "content": "  getAllAccounts(): AccountWithTax[] {\n    return Array.from(this.accounts.values()).map(account => this.addTaxInfo(account));\n  }\n\n  getAccount(code: string): AccountWithTax | undefined {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 316,
            "endLine": 320,
            "content": "\n  getAccount(code: string): AccountWithTax | undefined {\n    const account = this.accounts.get(code);\n    return account ? this.addTaxInfo(account) : undefined;\n  }"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 317,
            "endLine": 321,
            "content": "  getAccount(code: string): AccountWithTax | undefined {\n    const account = this.accounts.get(code);\n    return account ? this.addTaxInfo(account) : undefined;\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 321,
            "endLine": 325,
            "content": "\n  private sortAccountsByPopularity(accounts: AccountWithTax[]): AccountWithTax[] {\n    return accounts.sort((a, b) => {\n      // First sort by popularity\n      if (a.isPopular && !b.isPopular) return -1;"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 322,
            "endLine": 326,
            "content": "  private sortAccountsByPopularity(accounts: AccountWithTax[]): AccountWithTax[] {\n    return accounts.sort((a, b) => {\n      // First sort by popularity\n      if (a.isPopular && !b.isPopular) return -1;\n      if (!a.isPopular && b.isPopular) return 1;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 327,
            "endLine": 331,
            "content": "      \n      // Then by usage count\n      const aCount = this.popularAccounts.get(a.code) || 0;\n      const bCount = this.popularAccounts.get(b.code) || 0;\n      if (aCount !== bCount) return bCount - aCount;"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 328,
            "endLine": 332,
            "content": "      // Then by usage count\n      const aCount = this.popularAccounts.get(a.code) || 0;\n      const bCount = this.popularAccounts.get(b.code) || 0;\n      if (aCount !== bCount) return bCount - aCount;\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 332,
            "endLine": 336,
            "content": "      \n      // Finally by account code\n      return a.code.localeCompare(b.code);\n    });\n  }"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 333,
            "endLine": 337,
            "content": "      // Finally by account code\n      return a.code.localeCompare(b.code);\n    });\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 337,
            "endLine": 341,
            "content": "\n  getAccountsByType(type: Account['type']): AccountWithTax[] {\n    const accounts = Array.from(this.accounts.values())\n      .filter(account => account.type === type)\n      .map(account => this.addTaxInfo(account));"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 338,
            "endLine": 342,
            "content": "  getAccountsByType(type: Account['type']): AccountWithTax[] {\n    const accounts = Array.from(this.accounts.values())\n      .filter(account => account.type === type)\n      .map(account => this.addTaxInfo(account));\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 342,
            "endLine": 346,
            "content": "\n    return this.sortAccountsByPopularity(accounts);\n  }\n\n  getPopularAccounts(limit: number = 10): AccountSearchResult[] {"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 343,
            "endLine": 347,
            "content": "    return this.sortAccountsByPopularity(accounts);\n  }\n\n  getPopularAccounts(limit: number = 10): AccountSearchResult[] {\n    const popularCodes = Array.from(this.accounts.keys())"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 345,
            "endLine": 349,
            "content": "\n  getPopularAccounts(limit: number = 10): AccountSearchResult[] {\n    const popularCodes = Array.from(this.accounts.keys())\n      .filter(code => this.accounts.get(code)?.isPopular)\n      .sort((a, b) => {"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 346,
            "endLine": 350,
            "content": "  getPopularAccounts(limit: number = 10): AccountSearchResult[] {\n    const popularCodes = Array.from(this.accounts.keys())\n      .filter(code => this.accounts.get(code)?.isPopular)\n      .sort((a, b) => {\n        const aCount = this.popularAccounts.get(a) || 0;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 354,
            "endLine": 358,
            "content": "\n    return popularCodes.slice(0, limit).map(code => {\n      const account = this.accounts.get(code)!;\n      return {\n        account: this.addTaxInfo(account),"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 355,
            "endLine": 359,
            "content": "    return popularCodes.slice(0, limit).map(code => {\n      const account = this.accounts.get(code)!;\n      return {\n        account: this.addTaxInfo(account),\n        score: 100,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 364,
            "endLine": 368,
            "content": "\n  getSuggestedAccountsForCategory(category: string): AccountWithTax[] {\n    const suggestions: AccountWithTax[] = [];\n    \n    // Enhanced category mappings based on CSV data"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 365,
            "endLine": 369,
            "content": "  getSuggestedAccountsForCategory(category: string): AccountWithTax[] {\n    const suggestions: AccountWithTax[] = [];\n    \n    // Enhanced category mappings based on CSV data\n    const categoryMappings: Record<string, string[]> = {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 367,
            "endLine": 371,
            "content": "    \n    // Enhanced category mappings based on CSV data\n    const categoryMappings: Record<string, string[]> = {\n      'Meals & Entertainment': ['420', '421'], // Entertainment, Entertainment - Alcohol\n      'Motor Vehicle Expenses': ['449', '450'], // Motor Vehicle, Motor Vehicle - PST Exempt"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 368,
            "endLine": 372,
            "content": "    // Enhanced category mappings based on CSV data\n    const categoryMappings: Record<string, string[]> = {\n      'Meals & Entertainment': ['420', '421'], // Entertainment, Entertainment - Alcohol\n      'Motor Vehicle Expenses': ['449', '450'], // Motor Vehicle, Motor Vehicle - PST Exempt\n      'Office Supplies': ['455', '453'], // Supplies and Small Tools, Office Expenses"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 390,
            "endLine": 394,
            "content": "\n    const accountCodes = categoryMappings[category] || [];\n    for (const code of accountCodes) {\n      const account = this.getAccount(code);\n      if (account) {"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 391,
            "endLine": 395,
            "content": "    const accountCodes = categoryMappings[category] || [];\n    for (const code of accountCodes) {\n      const account = this.getAccount(code);\n      if (account) {\n        suggestions.push(account);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 400,
            "endLine": 404,
            "content": "\n  findAccountByCategory(category: string): AccountWithTax | null {\n    const suggestions = this.getSuggestedAccountsForCategory(category);\n    return suggestions.length > 0 ? suggestions[0] : null;\n  }"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 401,
            "endLine": 405,
            "content": "  findAccountByCategory(category: string): AccountWithTax | null {\n    const suggestions = this.getSuggestedAccountsForCategory(category);\n    return suggestions.length > 0 ? suggestions[0] : null;\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 405,
            "endLine": 409,
            "content": "\n  recordAccountUsage(accountCode: string): void {\n    const currentCount = this.popularAccounts.get(accountCode) || 0;\n    this.popularAccounts.set(accountCode, currentCount + 1);\n  }"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 406,
            "endLine": 410,
            "content": "  recordAccountUsage(accountCode: string): void {\n    const currentCount = this.popularAccounts.get(accountCode) || 0;\n    this.popularAccounts.set(accountCode, currentCount + 1);\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 410,
            "endLine": 414,
            "content": "\n  private getCurrentProvinceTaxInfo(): Province {\n    return PROVINCES.find(p => p.code === this.currentProvince) || PROVINCES[0];\n  }\n"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 411,
            "endLine": 415,
            "content": "  private getCurrentProvinceTaxInfo(): Province {\n    return PROVINCES.find(p => p.code === this.currentProvince) || PROVINCES[0];\n  }\n\n  private addTaxInfo(account: Account): AccountWithTax {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 414,
            "endLine": 418,
            "content": "\n  private addTaxInfo(account: Account): AccountWithTax {\n    const province = this.getCurrentProvinceTaxInfo();\n    let taxRate = 0;\n    let taxType: AccountWithTax['taxType'] = 'Exempt';"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 415,
            "endLine": 419,
            "content": "  private addTaxInfo(account: Account): AccountWithTax {\n    const province = this.getCurrentProvinceTaxInfo();\n    let taxRate = 0;\n    let taxType: AccountWithTax['taxType'] = 'Exempt';\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 419,
            "endLine": 423,
            "content": "\n    // Parse tax information from the Tax Code field in CSV\n    const taxCode = account.taxCode.toLowerCase();\n    \n    if (taxCode.includes('hst')) {"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 420,
            "endLine": 424,
            "content": "    // Parse tax information from the Tax Code field in CSV\n    const taxCode = account.taxCode.toLowerCase();\n    \n    if (taxCode.includes('hst')) {\n      // HST provinces (ON, NB, NL, NS, PE)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 422,
            "endLine": 426,
            "content": "    \n    if (taxCode.includes('hst')) {\n      // HST provinces (ON, NB, NL, NS, PE)\n      const hstMatch = taxCode.match(/(\\d+)%/);\n      if (hstMatch) {"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 423,
            "endLine": 427,
            "content": "    if (taxCode.includes('hst')) {\n      // HST provinces (ON, NB, NL, NS, PE)\n      const hstMatch = taxCode.match(/(\\d+)%/);\n      if (hstMatch) {\n        taxRate = parseInt(hstMatch[1]);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 451,
            "endLine": 455,
            "content": "      \n      // Determine tax type based on province\n      if (this.currentProvince === 'QC') {\n        taxRate = province.taxRate.gst + province.taxRate.pst; // PST is QST in Quebec\n        taxType = 'GST+QST';"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 452,
            "endLine": 456,
            "content": "      // Determine tax type based on province\n      if (this.currentProvince === 'QC') {\n        taxRate = province.taxRate.gst + province.taxRate.pst; // PST is QST in Quebec\n        taxType = 'GST+QST';\n      } else if (this.currentProvince === 'AB') {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 481,
            "endLine": 485,
            "content": "\n  getStats(): {\n    totalAccounts: number;\n    accountsByType: Record<string, number>;\n    popularAccounts: number;"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 482,
            "endLine": 486,
            "content": "  getStats(): {\n    totalAccounts: number;\n    accountsByType: Record<string, number>;\n    popularAccounts: number;\n    currentProvince: string;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 489,
            "endLine": 493,
            "content": "    \n    for (const account of this.accounts.values()) {\n      accountsByType[account.type] = (accountsByType[account.type] || 0) + 1;\n    }\n"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 490,
            "endLine": 494,
            "content": "    for (const account of this.accounts.values()) {\n      accountsByType[account.type] = (accountsByType[account.type] || 0) + 1;\n    }\n\n    return {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 493,
            "endLine": 497,
            "content": "\n    return {\n      totalAccounts: this.accounts.size,\n      accountsByType,\n      popularAccounts: Array.from(this.accounts.values()).filter(a => a.isPopular).length,"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 494,
            "endLine": 498,
            "content": "    return {\n      totalAccounts: this.accounts.size,\n      accountsByType,\n      popularAccounts: Array.from(this.accounts.values()).filter(a => a.isPopular).length,\n      currentProvince: this.currentProvince"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 501,
            "endLine": 505,
            "content": "\n  /**\n   * Wait for the chart of accounts to be fully initialized\n   */\n  // Removed: async waitForInitialization(): Promise<void> {"
          },
          {
            "file": "src/lib/chartOfAccounts.ts",
            "startLine": 502,
            "endLine": 506,
            "content": "  /**\n   * Wait for the chart of accounts to be fully initialized\n   */\n  // Removed: async waitForInitialization(): Promise<void> {\n  //   ..."
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 6,
            "endLine": 10,
            "content": "\n// Enhanced header formatting patterns\nconst HEADER_PATTERNS: {\n  date: string[];\n  description: string[];"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 7,
            "endLine": 11,
            "content": "// Enhanced header formatting patterns\nconst HEADER_PATTERNS: {\n  date: string[];\n  description: string[];\n  amount: string[];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 52,
            "endLine": 56,
            "content": "\n// Add new header patterns for more banks and international formats\nconst ADDITIONAL_HEADER_PATTERNS = {\n  date: [\n    'transaction date', 'date of transaction', 'operation date', 'booking date', 'datum', 'fecha', 'data', 'transaktionsdatum', 'valuta', 'trans date', 'fecha de operacion'"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 53,
            "endLine": 57,
            "content": "// Add new header patterns for more banks and international formats\nconst ADDITIONAL_HEADER_PATTERNS = {\n  date: [\n    'transaction date', 'date of transaction', 'operation date', 'booking date', 'datum', 'fecha', 'data', 'transaktionsdatum', 'valuta', 'trans date', 'fecha de operacion'\n  ],"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 68,
            "endLine": 72,
            "content": "\n// Merge with existing HEADER_PATTERNS\nObject.keys(ADDITIONAL_HEADER_PATTERNS).forEach(type => {\n  if ((HEADER_PATTERNS as any)[type]) {\n    (HEADER_PATTERNS as any)[type].push(...(ADDITIONAL_HEADER_PATTERNS as any)[type]);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 69,
            "endLine": 73,
            "content": "// Merge with existing HEADER_PATTERNS\nObject.keys(ADDITIONAL_HEADER_PATTERNS).forEach(type => {\n  if ((HEADER_PATTERNS as any)[type]) {\n    (HEADER_PATTERNS as any)[type].push(...(ADDITIONAL_HEADER_PATTERNS as any)[type]);\n  } else {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 77,
            "endLine": 81,
            "content": "\n// Header normalization and formatting options\nconst HEADER_FORMATTING_OPTIONS = {\n  // Remove common prefixes/suffixes\n  removePrefixes: ['the ', 'transaction ', 'account ', 'bank ', 'statement '],"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 78,
            "endLine": 82,
            "content": "// Header normalization and formatting options\nconst HEADER_FORMATTING_OPTIONS = {\n  // Remove common prefixes/suffixes\n  removePrefixes: ['the ', 'transaction ', 'account ', 'bank ', 'statement '],\n  removeSuffixes: [' column', ' field', ' info', ' data'],"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 96,
            "endLine": 100,
            "content": "  \n  // Common misspellings and variations\n  corrections: {\n    'desciption': 'description',\n    'desription': 'description',"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 97,
            "endLine": 101,
            "content": "  // Common misspellings and variations\n  corrections: {\n    'desciption': 'description',\n    'desription': 'description',\n    'ammount': 'amount',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 124,
            "endLine": 128,
            "content": "\n  /**\n   * Enhanced header normalization with comprehensive formatting\n   */\n  private normalizeHeader(header: string): string {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 125,
            "endLine": 129,
            "content": "  /**\n   * Enhanced header normalization with comprehensive formatting\n   */\n  private normalizeHeader(header: string): string {\n    if (!header) return '';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 137,
            "endLine": 141,
            "content": "    \n    // Apply corrections for common misspellings\n    for (const [incorrect, correct] of Object.entries(HEADER_FORMATTING_OPTIONS.corrections)) {\n      normalized = normalized.replace(new RegExp(incorrect, 'gi'), correct);\n    }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 138,
            "endLine": 142,
            "content": "    // Apply corrections for common misspellings\n    for (const [incorrect, correct] of Object.entries(HEADER_FORMATTING_OPTIONS.corrections)) {\n      normalized = normalized.replace(new RegExp(incorrect, 'gi'), correct);\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 142,
            "endLine": 146,
            "content": "    \n    // Expand abbreviations\n    for (const [abbr, full] of Object.entries(HEADER_FORMATTING_OPTIONS.abbreviations)) {\n      normalized = normalized.replace(new RegExp(`\\\\b${abbr}\\\\b`, 'gi'), full);\n    }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 143,
            "endLine": 147,
            "content": "    // Expand abbreviations\n    for (const [abbr, full] of Object.entries(HEADER_FORMATTING_OPTIONS.abbreviations)) {\n      normalized = normalized.replace(new RegExp(`\\\\b${abbr}\\\\b`, 'gi'), full);\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 147,
            "endLine": 151,
            "content": "    \n    // Remove common prefixes\n    for (const prefix of HEADER_FORMATTING_OPTIONS.removePrefixes) {\n      if (normalized.startsWith(prefix)) {\n        normalized = normalized.substring(prefix.length).trim();"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 148,
            "endLine": 152,
            "content": "    // Remove common prefixes\n    for (const prefix of HEADER_FORMATTING_OPTIONS.removePrefixes) {\n      if (normalized.startsWith(prefix)) {\n        normalized = normalized.substring(prefix.length).trim();\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 154,
            "endLine": 158,
            "content": "    \n    // Remove common suffixes\n    for (const suffix of HEADER_FORMATTING_OPTIONS.removeSuffixes) {\n      if (normalized.endsWith(suffix)) {\n        normalized = normalized.substring(0, normalized.length - suffix.length).trim();"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 155,
            "endLine": 159,
            "content": "    // Remove common suffixes\n    for (const suffix of HEADER_FORMATTING_OPTIONS.removeSuffixes) {\n      if (normalized.endsWith(suffix)) {\n        normalized = normalized.substring(0, normalized.length - suffix.length).trim();\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 164,
            "endLine": 168,
            "content": "\n  /**\n   * Enhanced header classification with pattern matching\n   */\n  private classifyHeader(header: string): { type: string; confidence: number; alternatives: string[] } {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 165,
            "endLine": 169,
            "content": "  /**\n   * Enhanced header classification with pattern matching\n   */\n  private classifyHeader(header: string): { type: string; confidence: number; alternatives: string[] } {\n    const normalized = this.normalizeHeader(header);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 171,
            "endLine": 175,
            "content": "    \n    // Check each pattern type\n    for (const [type, patterns] of Object.entries(HEADER_PATTERNS)) {\n      for (const pattern of patterns) {\n        const similarity = this.calculateSimilarity(normalized, pattern);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 172,
            "endLine": 176,
            "content": "    // Check each pattern type\n    for (const [type, patterns] of Object.entries(HEADER_PATTERNS)) {\n      for (const pattern of patterns) {\n        const similarity = this.calculateSimilarity(normalized, pattern);\n        if (similarity > bestMatch.confidence) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 188,
            "endLine": 192,
            "content": "\n  /**\n   * Calculate similarity between two strings (simple implementation)\n   */\n  private calculateSimilarity(str1: string, str2: string): number {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 189,
            "endLine": 193,
            "content": "  /**\n   * Calculate similarity between two strings (simple implementation)\n   */\n  private calculateSimilarity(str1: string, str2: string): number {\n    if (str1 === str2) return 1.0;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 195,
            "endLine": 199,
            "content": "    \n    // Simple word-based similarity\n    const words1 = str1.split(' ');\n    const words2 = str2.split(' ');\n    const commonWords = words1.filter(w1 => words2.some(w2 => w1 === w2 || w1.includes(w2) || w2.includes(w1)));"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 196,
            "endLine": 200,
            "content": "    // Simple word-based similarity\n    const words1 = str1.split(' ');\n    const words2 = str2.split(' ');\n    const commonWords = words1.filter(w1 => words2.some(w2 => w1 === w2 || w1.includes(w2) || w2.includes(w1)));\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 200,
            "endLine": 204,
            "content": "    \n    if (commonWords.length === 0) return 0;\n    \n    return commonWords.length / Math.max(words1.length, words2.length);\n  }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 201,
            "endLine": 205,
            "content": "    if (commonWords.length === 0) return 0;\n    \n    return commonWords.length / Math.max(words1.length, words2.length);\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 222,
            "endLine": 226,
            "content": "    \n    // Analyze each header\n    for (const header of headers) {\n      const classification = this.classifyHeader(header);\n      "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 223,
            "endLine": 227,
            "content": "    // Analyze each header\n    for (const header of headers) {\n      const classification = this.classifyHeader(header);\n      \n      if (classification.confidence > 0.5) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 226,
            "endLine": 230,
            "content": "      \n      if (classification.confidence > 0.5) {\n        mapping[`${classification.type}Column`] = header;\n        confidence[classification.type] = classification.confidence;\n        suggestions[classification.type] = classification.alternatives;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 227,
            "endLine": 231,
            "content": "      if (classification.confidence > 0.5) {\n        mapping[`${classification.type}Column`] = header;\n        confidence[classification.type] = classification.confidence;\n        suggestions[classification.type] = classification.alternatives;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 236,
            "endLine": 240,
            "content": "\n  /**\n   * Detect bank format from headers with enhanced flexibility\n   */\n  detectBankFormat(headers: string[]): BankFormat | 'Unknown' {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 237,
            "endLine": 241,
            "content": "  /**\n   * Detect bank format from headers with enhanced flexibility\n   */\n  detectBankFormat(headers: string[]): BankFormat | 'Unknown' {\n    if (!headers || headers.length === 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 244,
            "endLine": 248,
            "content": "\n    const normalizedHeaders = headers.map(h => this.normalizeHeader(h));\n    console.log('🔍 Analyzing headers:', normalizedHeaders);\n    \n    // Enhanced header mapping"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 245,
            "endLine": 249,
            "content": "    const normalizedHeaders = headers.map(h => this.normalizeHeader(h));\n    console.log('🔍 Analyzing headers:', normalizedHeaders);\n    \n    // Enhanced header mapping\n    const headerMapping = this.mapHeadersToColumns(headers);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 247,
            "endLine": 251,
            "content": "    \n    // Enhanced header mapping\n    const headerMapping = this.mapHeadersToColumns(headers);\n    console.log('📋 Header mapping:', headerMapping);\n"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 248,
            "endLine": 252,
            "content": "    // Enhanced header mapping\n    const headerMapping = this.mapHeadersToColumns(headers);\n    console.log('📋 Header mapping:', headerMapping);\n\n    // Enhanced format detection with multiple fallback strategies"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 251,
            "endLine": 255,
            "content": "\n    // Enhanced format detection with multiple fallback strategies\n    for (const [bankName, format] of Object.entries(BANK_FORMATS)) {\n      const formatIdentifiers = format.identifier.map(id => this.normalizeHeader(id));\n      "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 252,
            "endLine": 256,
            "content": "    // Enhanced format detection with multiple fallback strategies\n    for (const [bankName, format] of Object.entries(BANK_FORMATS)) {\n      const formatIdentifiers = format.identifier.map(id => this.normalizeHeader(id));\n      \n      // Check if all required columns are present"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 253,
            "endLine": 257,
            "content": "    for (const [bankName, format] of Object.entries(BANK_FORMATS)) {\n      const formatIdentifiers = format.identifier.map(id => this.normalizeHeader(id));\n      \n      // Check if all required columns are present\n      const hasAllRequiredColumns = formatIdentifiers.every(id => "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1127,
            "endLine": 1131,
            "content": "    for (const [bankName, format] of Object.entries(BANK_FORMATS)) {\n      const formatIdentifiers = format.identifier.map(id => this.normalizeHeader(id));\n      const hasAllRequiredColumns = formatIdentifiers.every(id => \n        normalizedHeaders.some(header => {\n          // Exact match"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 255,
            "endLine": 259,
            "content": "      \n      // Check if all required columns are present\n      const hasAllRequiredColumns = formatIdentifiers.every(id => \n        normalizedHeaders.some(header => header.includes(id) || id.includes(header))\n      );"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 256,
            "endLine": 260,
            "content": "      // Check if all required columns are present\n      const hasAllRequiredColumns = formatIdentifiers.every(id => \n        normalizedHeaders.some(header => header.includes(id) || id.includes(header))\n      );\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 260,
            "endLine": 264,
            "content": "      \n      if (hasAllRequiredColumns) {\n        console.log(`✅ Detected ${bankName} format`);\n        return bankName as BankFormat;\n      }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 261,
            "endLine": 265,
            "content": "      if (hasAllRequiredColumns) {\n        console.log(`✅ Detected ${bankName} format`);\n        return bankName as BankFormat;\n      }\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 266,
            "endLine": 270,
            "content": "\n    // Enhanced generic format detection with flexible column matching\n    const hasDate = normalizedHeaders.some(h => \n      HEADER_PATTERNS.date.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 267,
            "endLine": 271,
            "content": "    // Enhanced generic format detection with flexible column matching\n    const hasDate = normalizedHeaders.some(h => \n      HEADER_PATTERNS.date.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );\n    const hasDescription = normalizedHeaders.some(h => "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 268,
            "endLine": 272,
            "content": "    const hasDate = normalizedHeaders.some(h => \n      HEADER_PATTERNS.date.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );\n    const hasDescription = normalizedHeaders.some(h => \n      HEADER_PATTERNS.description.some(pattern => h.includes(pattern) || pattern.includes(h))"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1151,
            "endLine": 1155,
            "content": "      const hasDate = normalizedHeaders.some(h => \n        HEADER_PATTERNS.date.some(pattern => h.includes(pattern) || pattern.includes(h))\n      );\n      const hasDescription = normalizedHeaders.some(h => \n        HEADER_PATTERNS.description.some(pattern => h.includes(pattern) || pattern.includes(h))"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 269,
            "endLine": 273,
            "content": "      HEADER_PATTERNS.date.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );\n    const hasDescription = normalizedHeaders.some(h => \n      HEADER_PATTERNS.description.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1152,
            "endLine": 1156,
            "content": "        HEADER_PATTERNS.date.some(pattern => h.includes(pattern) || pattern.includes(h))\n      );\n      const hasDescription = normalizedHeaders.some(h => \n        HEADER_PATTERNS.description.some(pattern => h.includes(pattern) || pattern.includes(h))\n      );"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 270,
            "endLine": 274,
            "content": "    );\n    const hasDescription = normalizedHeaders.some(h => \n      HEADER_PATTERNS.description.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );\n    const hasAmount = normalizedHeaders.some(h => "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1153,
            "endLine": 1157,
            "content": "      );\n      const hasDescription = normalizedHeaders.some(h => \n        HEADER_PATTERNS.description.some(pattern => h.includes(pattern) || pattern.includes(h))\n      );\n      const hasAmount = normalizedHeaders.some(h => "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 271,
            "endLine": 275,
            "content": "    const hasDescription = normalizedHeaders.some(h => \n      HEADER_PATTERNS.description.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );\n    const hasAmount = normalizedHeaders.some(h => \n      HEADER_PATTERNS.amount.some(pattern => h.includes(pattern) || pattern.includes(h))"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1154,
            "endLine": 1158,
            "content": "      const hasDescription = normalizedHeaders.some(h => \n        HEADER_PATTERNS.description.some(pattern => h.includes(pattern) || pattern.includes(h))\n      );\n      const hasAmount = normalizedHeaders.some(h => \n        HEADER_PATTERNS.amount.some(pattern => h.includes(pattern) || pattern.includes(h))"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 272,
            "endLine": 276,
            "content": "      HEADER_PATTERNS.description.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );\n    const hasAmount = normalizedHeaders.some(h => \n      HEADER_PATTERNS.amount.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1155,
            "endLine": 1159,
            "content": "        HEADER_PATTERNS.description.some(pattern => h.includes(pattern) || pattern.includes(h))\n      );\n      const hasAmount = normalizedHeaders.some(h => \n        HEADER_PATTERNS.amount.some(pattern => h.includes(pattern) || pattern.includes(h))\n      );"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 273,
            "endLine": 277,
            "content": "    );\n    const hasAmount = normalizedHeaders.some(h => \n      HEADER_PATTERNS.amount.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );\n"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1156,
            "endLine": 1160,
            "content": "      );\n      const hasAmount = normalizedHeaders.some(h => \n        HEADER_PATTERNS.amount.some(pattern => h.includes(pattern) || pattern.includes(h))\n      );\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 274,
            "endLine": 278,
            "content": "    const hasAmount = normalizedHeaders.some(h => \n      HEADER_PATTERNS.amount.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );\n\n    if (hasDate && hasDescription && hasAmount) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1157,
            "endLine": 1161,
            "content": "      const hasAmount = normalizedHeaders.some(h => \n        HEADER_PATTERNS.amount.some(pattern => h.includes(pattern) || pattern.includes(h))\n      );\n      \n      if (hasDate && hasDescription && hasAmount) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 275,
            "endLine": 279,
            "content": "      HEADER_PATTERNS.amount.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );\n\n    if (hasDate && hasDescription && hasAmount) {\n      console.log('✅ Detected Generic CSV format with flexible matching');"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1158,
            "endLine": 1162,
            "content": "        HEADER_PATTERNS.amount.some(pattern => h.includes(pattern) || pattern.includes(h))\n      );\n      \n      if (hasDate && hasDescription && hasAmount) {\n        formatFound = true;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 277,
            "endLine": 281,
            "content": "\n    if (hasDate && hasDescription && hasAmount) {\n      console.log('✅ Detected Generic CSV format with flexible matching');\n      return 'Generic';\n    }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 278,
            "endLine": 282,
            "content": "    if (hasDate && hasDescription && hasAmount) {\n      console.log('✅ Detected Generic CSV format with flexible matching');\n      return 'Generic';\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 282,
            "endLine": 286,
            "content": "\n    // Additional fallback: try to find any columns that could work\n    const potentialDateColumns = normalizedHeaders.filter(h => \n      HEADER_PATTERNS.date.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 283,
            "endLine": 287,
            "content": "    // Additional fallback: try to find any columns that could work\n    const potentialDateColumns = normalizedHeaders.filter(h => \n      HEADER_PATTERNS.date.some(pattern => h.includes(pattern) || pattern.includes(h))\n    );\n    const potentialDescColumns = normalizedHeaders.filter(h => "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 293,
            "endLine": 297,
            "content": "\n    if (potentialDateColumns.length > 0 && potentialDescColumns.length > 0 && potentialAmountColumns.length > 0) {\n      console.log('✅ Detected potential CSV format with available columns');\n      console.log('📋 Available columns:', {\n        date: potentialDateColumns,"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 294,
            "endLine": 298,
            "content": "    if (potentialDateColumns.length > 0 && potentialDescColumns.length > 0 && potentialAmountColumns.length > 0) {\n      console.log('✅ Detected potential CSV format with available columns');\n      console.log('📋 Available columns:', {\n        date: potentialDateColumns,\n        description: potentialDescColumns,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 307,
            "endLine": 311,
            "content": "\n  /**\n   * Detect bank format using headers and sample data with enhanced formatting\n   */\n  detectBankFormatWithData(headers: string[], sampleData: any[], filename?: string): BankFormat | 'Unknown' {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 308,
            "endLine": 312,
            "content": "  /**\n   * Detect bank format using headers and sample data with enhanced formatting\n   */\n  detectBankFormatWithData(headers: string[], sampleData: any[], filename?: string): BankFormat | 'Unknown' {\n    const normalizedHeaders = headers.map(h => this.normalizeHeader(h));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 313,
            "endLine": 317,
            "content": "    \n    // Enhanced header mapping for better analysis\n    const headerMapping = this.mapHeadersToColumns(headers);\n    console.log('📋 Enhanced header analysis:', headerMapping);\n    "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 314,
            "endLine": 318,
            "content": "    // Enhanced header mapping for better analysis\n    const headerMapping = this.mapHeadersToColumns(headers);\n    console.log('📋 Enhanced header analysis:', headerMapping);\n    \n    // Check for BT Records format based on filename first"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 317,
            "endLine": 321,
            "content": "    \n    // Check for BT Records format based on filename first\n    if (filename && filename.toLowerCase().includes('bt records')) {\n      console.log(`✅ Detected BT Records format from filename: ${filename}`);\n      return 'BT_Records';"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 318,
            "endLine": 322,
            "content": "    // Check for BT Records format based on filename first\n    if (filename && filename.toLowerCase().includes('bt records')) {\n      console.log(`✅ Detected BT Records format from filename: ${filename}`);\n      return 'BT_Records';\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 323,
            "endLine": 327,
            "content": "    \n    // Enhanced sample date detection using header mapping\n    let sampleDate = null;\n    if (sampleData.length > 0) {\n      const dateColumn = headerMapping.dateColumn || 'Date';"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 324,
            "endLine": 328,
            "content": "    // Enhanced sample date detection using header mapping\n    let sampleDate = null;\n    if (sampleData.length > 0) {\n      const dateColumn = headerMapping.dateColumn || 'Date';\n      sampleDate = sampleData[0][dateColumn] || "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 335,
            "endLine": 339,
            "content": "    \n    // Check for most specific formats first - prioritize exact matches\n    const formatPriority = ['InternetBanking', 'Headerless', 'BT_Records', 'RBC', 'Scotia', 'Scotia_DayToDay', 'BMO', 'TD', 'Generic', 'Generic_DADB'];\n    \n    for (const bank of formatPriority) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 336,
            "endLine": 340,
            "content": "    // Check for most specific formats first - prioritize exact matches\n    const formatPriority = ['InternetBanking', 'Headerless', 'BT_Records', 'RBC', 'Scotia', 'Scotia_DayToDay', 'BMO', 'TD', 'Generic', 'Generic_DADB'];\n    \n    for (const bank of formatPriority) {\n      const format = BANK_FORMATS[bank as BankFormat];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 338,
            "endLine": 342,
            "content": "    \n    for (const bank of formatPriority) {\n      const format = BANK_FORMATS[bank as BankFormat];\n      if (!format) continue;\n      "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 339,
            "endLine": 343,
            "content": "    for (const bank of formatPriority) {\n      const format = BANK_FORMATS[bank as BankFormat];\n      if (!format) continue;\n      \n      // Enhanced header matching with normalized headers"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 342,
            "endLine": 346,
            "content": "      \n      // Enhanced header matching with normalized headers\n      const formatIdentifiers = format.identifier.map(id => this.normalizeHeader(id));\n      \n      // Check for exact header matches first"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 343,
            "endLine": 347,
            "content": "      // Enhanced header matching with normalized headers\n      const formatIdentifiers = format.identifier.map(id => this.normalizeHeader(id));\n      \n      // Check for exact header matches first\n      const exactMatches = formatIdentifiers.filter(col => "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 345,
            "endLine": 349,
            "content": "      \n      // Check for exact header matches first\n      const exactMatches = formatIdentifiers.filter(col => \n        normalizedHeaders.includes(col)\n      );"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 346,
            "endLine": 350,
            "content": "      // Check for exact header matches first\n      const exactMatches = formatIdentifiers.filter(col => \n        normalizedHeaders.includes(col)\n      );\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 350,
            "endLine": 354,
            "content": "      \n      // If we have exact matches for all required columns, use this format\n      if (exactMatches.length === formatIdentifiers.length) {\n        console.log(`✅ Detected bank format: ${bank} (exact match)`);\n        return bank as BankFormat;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 351,
            "endLine": 355,
            "content": "      // If we have exact matches for all required columns, use this format\n      if (exactMatches.length === formatIdentifiers.length) {\n        console.log(`✅ Detected bank format: ${bank} (exact match)`);\n        return bank as BankFormat;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 356,
            "endLine": 360,
            "content": "      \n      // Enhanced partial matching with pattern-based approach\n      const hasAllColumns = formatIdentifiers.every(col => \n        normalizedHeaders.some(header => {\n          // Direct match"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 357,
            "endLine": 361,
            "content": "      // Enhanced partial matching with pattern-based approach\n      const hasAllColumns = formatIdentifiers.every(col => \n        normalizedHeaders.some(header => {\n          // Direct match\n          if (header === col) return true;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 362,
            "endLine": 366,
            "content": "          \n          // Pattern-based matching\n          const colType = this.classifyHeader(col).type;\n          const headerType = this.classifyHeader(header).type;\n          "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 363,
            "endLine": 367,
            "content": "          // Pattern-based matching\n          const colType = this.classifyHeader(col).type;\n          const headerType = this.classifyHeader(header).type;\n          \n          return colType === headerType && this.calculateSimilarity(header, col) > 0.7;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 370,
            "endLine": 374,
            "content": "      \n      // Check for pattern-based format detection (for formats with patterns)\n      if ('patterns' in format && format.patterns && format.patterns.length > 0) {\n        const sampleText = sampleData.slice(0, 3).map(row => \n          Object.values(row).join(' ').toLowerCase()"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 371,
            "endLine": 375,
            "content": "      // Check for pattern-based format detection (for formats with patterns)\n      if ('patterns' in format && format.patterns && format.patterns.length > 0) {\n        const sampleText = sampleData.slice(0, 3).map(row => \n          Object.values(row).join(' ').toLowerCase()\n        ).join(' ');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 376,
            "endLine": 380,
            "content": "        \n        const hasPatternMatch = format.patterns.some((pattern: RegExp) => pattern.test(sampleText));\n        if (hasPatternMatch) {\n          console.log(`✅ Detected bank format: ${bank} (pattern match)`);\n          return bank as BankFormat;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 377,
            "endLine": 381,
            "content": "        const hasPatternMatch = format.patterns.some((pattern: RegExp) => pattern.test(sampleText));\n        if (hasPatternMatch) {\n          console.log(`✅ Detected bank format: ${bank} (pattern match)`);\n          return bank as BankFormat;\n        }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 385,
            "endLine": 389,
            "content": "      \n      // If headers match, test date format compatibility\n      if (sampleDate) {\n        // Try multiple date formats for Generic format to be more flexible\n        if (bank === 'Generic') {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 386,
            "endLine": 390,
            "content": "      // If headers match, test date format compatibility\n      if (sampleDate) {\n        // Try multiple date formats for Generic format to be more flexible\n        if (bank === 'Generic') {\n          const dateFormats = ['YYYY-MM-DD', 'DD-MM-YYYY', 'MM/DD/YYYY', 'DD/MM/YYYY'];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 392,
            "endLine": 396,
            "content": "          \n          for (const dateFormat of dateFormats) {\n            const testDate = this.parseDateFlexible(sampleDate);\n            if (testDate) {\n              console.log(`✅ Detected bank format: ${bank} with date format ${dateFormat}`);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 393,
            "endLine": 397,
            "content": "          for (const dateFormat of dateFormats) {\n            const testDate = this.parseDateFlexible(sampleDate);\n            if (testDate) {\n              console.log(`✅ Detected bank format: ${bank} with date format ${dateFormat}`);\n              // Update the format's date format for this detection"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 394,
            "endLine": 398,
            "content": "            const testDate = this.parseDateFlexible(sampleDate);\n            if (testDate) {\n              console.log(`✅ Detected bank format: ${bank} with date format ${dateFormat}`);\n              // Update the format's date format for this detection\n              (format as any).dateFormat = dateFormat;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 408,
            "endLine": 412,
            "content": "          const testDate = this.parseDateFlexible(sampleDate);\n          if (testDate) {\n            console.log(`✅ Detected bank format: ${bank} (date format validated)`);\n            return bank as BankFormat;\n          } else {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 422,
            "endLine": 426,
            "content": "    \n    // Enhanced fallback: try to create a custom format based on detected columns\n    if (headerMapping.dateColumn && headerMapping.descriptionColumn && headerMapping.amountColumn) {\n      console.log('✅ Creating custom format based on detected columns');\n      console.log('📋 Detected columns:', {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 423,
            "endLine": 427,
            "content": "    // Enhanced fallback: try to create a custom format based on detected columns\n    if (headerMapping.dateColumn && headerMapping.descriptionColumn && headerMapping.amountColumn) {\n      console.log('✅ Creating custom format based on detected columns');\n      console.log('📋 Detected columns:', {\n        date: headerMapping.dateColumn,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 435,
            "endLine": 439,
            "content": "    \n    console.warn('❌ Unknown bank format detected');\n    console.log('Available headers:', normalizedHeaders);\n    console.log('Header mapping:', headerMapping);\n    console.log('Sample date:', sampleDate);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 436,
            "endLine": 440,
            "content": "    console.warn('❌ Unknown bank format detected');\n    console.log('Available headers:', normalizedHeaders);\n    console.log('Header mapping:', headerMapping);\n    console.log('Sample date:', sampleDate);\n    return 'Unknown';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 453,
            "endLine": 457,
            "content": "      \n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        dynamicTyping: false, // Keep as strings for custom parsing"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 454,
            "endLine": 458,
            "content": "      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        dynamicTyping: false, // Keep as strings for custom parsing\n        encoding: 'UTF-8',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 462,
            "endLine": 466,
            "content": "            \n            // Check if we have headers or if this is a headerless CSV\n            const headers = results.meta.fields || [];\n            console.log(`📋 Detected headers:`, headers);\n            "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 463,
            "endLine": 467,
            "content": "            // Check if we have headers or if this is a headerless CSV\n            const headers = results.meta.fields || [];\n            console.log(`📋 Detected headers:`, headers);\n            \n            // If no headers or headers look like data, try to infer format"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 466,
            "endLine": 470,
            "content": "            \n            // If no headers or headers look like data, try to infer format\n            if (headers.length === 0 || this.looksLikeDataRow(headers)) {\n              console.log(`⚠️ No proper headers detected, attempting to infer format from data...`);\n              const inferredFormat = this.inferFormatFromData(results.data, file.name);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 467,
            "endLine": 471,
            "content": "            // If no headers or headers look like data, try to infer format\n            if (headers.length === 0 || this.looksLikeDataRow(headers)) {\n              console.log(`⚠️ No proper headers detected, attempting to infer format from data...`);\n              const inferredFormat = this.inferFormatFromData(results.data, file.name);\n              if (inferredFormat) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 470,
            "endLine": 474,
            "content": "              const inferredFormat = this.inferFormatFromData(results.data, file.name);\n              if (inferredFormat) {\n                // Re-parse with inferred headers\n                this.parseWithInferredHeaders(file, inferredFormat, resolve, reject);\n                return;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 483,
            "endLine": 487,
            "content": "              const inferredFormat = this.inferFormatFromData(results.data, file.name);\n              if (inferredFormat) {\n                // Re-parse with inferred headers\n                this.parseWithInferredHeaders(file, inferredFormat, resolve, reject);\n                return;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 496,
            "endLine": 500,
            "content": "              const inferredFormat = this.inferFormatFromData(results.data, file.name);\n              if (inferredFormat) {\n                // Re-parse with inferred headers\n                this.parseWithInferredHeaders(file, inferredFormat, resolve, reject);\n                return;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 471,
            "endLine": 475,
            "content": "              if (inferredFormat) {\n                // Re-parse with inferred headers\n                this.parseWithInferredHeaders(file, inferredFormat, resolve, reject);\n                return;\n              }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 484,
            "endLine": 488,
            "content": "              if (inferredFormat) {\n                // Re-parse with inferred headers\n                this.parseWithInferredHeaders(file, inferredFormat, resolve, reject);\n                return;\n              }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 497,
            "endLine": 501,
            "content": "              if (inferredFormat) {\n                // Re-parse with inferred headers\n                this.parseWithInferredHeaders(file, inferredFormat, resolve, reject);\n                return;\n              }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 472,
            "endLine": 476,
            "content": "                // Re-parse with inferred headers\n                this.parseWithInferredHeaders(file, inferredFormat, resolve, reject);\n                return;\n              }\n            }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 485,
            "endLine": 489,
            "content": "                // Re-parse with inferred headers\n                this.parseWithInferredHeaders(file, inferredFormat, resolve, reject);\n                return;\n              }\n              throw new Error(`Invalid CSV format: ${headerValidation.errors.join(', ')}`);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 498,
            "endLine": 502,
            "content": "                // Re-parse with inferred headers\n                this.parseWithInferredHeaders(file, inferredFormat, resolve, reject);\n                return;\n              }\n              throw new Error("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 477,
            "endLine": 481,
            "content": "            \n            // Validate headers first\n            const headerValidation = this.validateHeaders(headers);\n            \n            if (!headerValidation.isValid) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 478,
            "endLine": 482,
            "content": "            // Validate headers first\n            const headerValidation = this.validateHeaders(headers);\n            \n            if (!headerValidation.isValid) {\n              console.log(`⚠️ Header validation failed, attempting format inference...`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 480,
            "endLine": 484,
            "content": "            \n            if (!headerValidation.isValid) {\n              console.log(`⚠️ Header validation failed, attempting format inference...`);\n              const inferredFormat = this.inferFormatFromData(results.data, file.name);\n              if (inferredFormat) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 481,
            "endLine": 485,
            "content": "            if (!headerValidation.isValid) {\n              console.log(`⚠️ Header validation failed, attempting format inference...`);\n              const inferredFormat = this.inferFormatFromData(results.data, file.name);\n              if (inferredFormat) {\n                // Re-parse with inferred headers"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 491,
            "endLine": 495,
            "content": "\n            // Detect bank format with data sample\n            const bankFormat = this.detectBankFormatWithData(headers, results.data, file.name);\n            if (bankFormat === 'Unknown') {\n              console.log(`⚠️ Bank format detection failed, attempting format inference...`);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 492,
            "endLine": 496,
            "content": "            // Detect bank format with data sample\n            const bankFormat = this.detectBankFormatWithData(headers, results.data, file.name);\n            if (bankFormat === 'Unknown') {\n              console.log(`⚠️ Bank format detection failed, attempting format inference...`);\n              const inferredFormat = this.inferFormatFromData(results.data, file.name);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 507,
            "endLine": 511,
            "content": "            \n            // Process transactions\n            const transactions = this.processTransactions(results.data, bankFormat);\n            \n            // Validate final data"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 508,
            "endLine": 512,
            "content": "            // Process transactions\n            const transactions = this.processTransactions(results.data, bankFormat);\n            \n            // Validate final data\n            const validation = this.validateTransactions(transactions);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 510,
            "endLine": 514,
            "content": "            \n            // Validate final data\n            const validation = this.validateTransactions(transactions);\n            \n            console.log(`✅ Processed ${transactions.length} transactions`);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 511,
            "endLine": 515,
            "content": "            // Validate final data\n            const validation = this.validateTransactions(transactions);\n            \n            console.log(`✅ Processed ${transactions.length} transactions`);\n            console.log(`📈 Validation: ${validation.errors.length} errors, ${validation.warnings.length} warnings`);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 726,
            "endLine": 730,
            "content": "          \n          // Validate final data\n          const validation = this.validateTransactions(transactions);\n          \n          console.log(`✅ Processed ${transactions.length} transactions with inferred format`);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 727,
            "endLine": 731,
            "content": "          // Validate final data\n          const validation = this.validateTransactions(transactions);\n          \n          console.log(`✅ Processed ${transactions.length} transactions with inferred format`);\n          console.log(`📈 Validation: ${validation.errors.length} errors, ${validation.warnings.length} warnings`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 512,
            "endLine": 516,
            "content": "            const validation = this.validateTransactions(transactions);\n            \n            console.log(`✅ Processed ${transactions.length} transactions`);\n            console.log(`📈 Validation: ${validation.errors.length} errors, ${validation.warnings.length} warnings`);\n            "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 728,
            "endLine": 732,
            "content": "          const validation = this.validateTransactions(transactions);\n          \n          console.log(`✅ Processed ${transactions.length} transactions with inferred format`);\n          console.log(`📈 Validation: ${validation.errors.length} errors, ${validation.warnings.length} warnings`);\n          "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 513,
            "endLine": 517,
            "content": "            \n            console.log(`✅ Processed ${transactions.length} transactions`);\n            console.log(`📈 Validation: ${validation.errors.length} errors, ${validation.warnings.length} warnings`);\n            \n            resolve({ transactions, validation, bankFormat });"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 514,
            "endLine": 518,
            "content": "            console.log(`✅ Processed ${transactions.length} transactions`);\n            console.log(`📈 Validation: ${validation.errors.length} errors, ${validation.warnings.length} warnings`);\n            \n            resolve({ transactions, validation, bankFormat });\n            "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 515,
            "endLine": 519,
            "content": "            console.log(`📈 Validation: ${validation.errors.length} errors, ${validation.warnings.length} warnings`);\n            \n            resolve({ transactions, validation, bankFormat });\n            \n          } catch (error) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 731,
            "endLine": 735,
            "content": "          console.log(`📈 Validation: ${validation.errors.length} errors, ${validation.warnings.length} warnings`);\n          \n          resolve({ transactions, validation, bankFormat: inferredFormat.format });\n          \n        } catch (error) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 516,
            "endLine": 520,
            "content": "            \n            resolve({ transactions, validation, bankFormat });\n            \n          } catch (error) {\n            console.error('❌ CSV Processing Error:', error);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 517,
            "endLine": 521,
            "content": "            resolve({ transactions, validation, bankFormat });\n            \n          } catch (error) {\n            console.error('❌ CSV Processing Error:', error);\n            reject(error);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 531,
            "endLine": 535,
            "content": "\n  /**\n   * Check if a row looks like data instead of headers\n   */\n  private looksLikeDataRow(row: string[]): boolean {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 532,
            "endLine": 536,
            "content": "  /**\n   * Check if a row looks like data instead of headers\n   */\n  private looksLikeDataRow(row: string[]): boolean {\n    if (row.length < 3) return false;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 537,
            "endLine": 541,
            "content": "    \n    // Check if first column looks like a date\n    const firstCol = row[0]?.toString().trim();\n    if (!firstCol) return false;\n    "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 538,
            "endLine": 542,
            "content": "    // Check if first column looks like a date\n    const firstCol = row[0]?.toString().trim();\n    if (!firstCol) return false;\n    \n    // Common date patterns"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 541,
            "endLine": 545,
            "content": "    \n    // Common date patterns\n    const datePatterns = [\n      /^\\d{4}-\\d{2}-\\d{2}$/, // YYYY-MM-DD\n      /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 542,
            "endLine": 546,
            "content": "    // Common date patterns\n    const datePatterns = [\n      /^\\d{4}-\\d{2}-\\d{2}$/, // YYYY-MM-DD\n      /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY\n      /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 543,
            "endLine": 547,
            "content": "    const datePatterns = [\n      /^\\d{4}-\\d{2}-\\d{2}$/, // YYYY-MM-DD\n      /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY\n      /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY\n      /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 612,
            "endLine": 616,
            "content": "      const datePatterns = [\n        /^\\d{4}-\\d{2}-\\d{2}$/, // YYYY-MM-DD\n        /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY\n        /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY\n        /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 675,
            "endLine": 679,
            "content": "    const datePatterns = [\n      /^\\d{4}-\\d{2}-\\d{2}$/, // YYYY-MM-DD\n      /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY\n      /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY\n      /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 544,
            "endLine": 548,
            "content": "      /^\\d{4}-\\d{2}-\\d{2}$/, // YYYY-MM-DD\n      /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY\n      /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY\n      /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY\n    ];"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 613,
            "endLine": 617,
            "content": "        /^\\d{4}-\\d{2}-\\d{2}$/, // YYYY-MM-DD\n        /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY\n        /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY\n        /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY\n      ];"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 676,
            "endLine": 680,
            "content": "      /^\\d{4}-\\d{2}-\\d{2}$/, // YYYY-MM-DD\n      /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY\n      /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY\n      /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY\n    ];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 545,
            "endLine": 549,
            "content": "      /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY\n      /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY\n      /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY\n    ];\n    "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 614,
            "endLine": 618,
            "content": "        /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY\n        /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY\n        /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY\n      ];\n      "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 677,
            "endLine": 681,
            "content": "      /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY\n      /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY\n      /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY\n    ];\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 546,
            "endLine": 550,
            "content": "      /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY\n      /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY\n    ];\n    \n    return datePatterns.some(pattern => pattern.test(firstCol));"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 615,
            "endLine": 619,
            "content": "        /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY\n        /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY\n      ];\n      \n      if (datePatterns.some(pattern => pattern.test(value))) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 678,
            "endLine": 682,
            "content": "      /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY\n      /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY\n    ];\n    \n    return datePatterns.some(pattern => pattern.test(value));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 547,
            "endLine": 551,
            "content": "      /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY\n    ];\n    \n    return datePatterns.some(pattern => pattern.test(firstCol));\n  }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 679,
            "endLine": 683,
            "content": "      /^\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}$/, // DD MMM YYYY\n    ];\n    \n    return datePatterns.some(pattern => pattern.test(value));\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 552,
            "endLine": 556,
            "content": "\n  /**\n   * Infer format from data when headers are missing or invalid\n   */\n  private inferFormatFromData(data: any[], filename?: string): { headers: string[]; format: BankFormat } | null {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 553,
            "endLine": 557,
            "content": "  /**\n   * Infer format from data when headers are missing or invalid\n   */\n  private inferFormatFromData(data: any[], filename?: string): { headers: string[]; format: BankFormat } | null {\n    if (data.length === 0) return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 558,
            "endLine": 562,
            "content": "    \n    const firstRow = data[0];\n    const keys = Object.keys(firstRow);\n    \n    console.log(`🔍 Inferring format from data with ${keys.length} columns:`, keys);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 559,
            "endLine": 563,
            "content": "    const firstRow = data[0];\n    const keys = Object.keys(firstRow);\n    \n    console.log(`🔍 Inferring format from data with ${keys.length} columns:`, keys);\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 561,
            "endLine": 565,
            "content": "    \n    console.log(`🔍 Inferring format from data with ${keys.length} columns:`, keys);\n    \n    // Try to identify columns based on content\n    const dateCol = this.findDateColumn(firstRow, keys);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 562,
            "endLine": 566,
            "content": "    console.log(`🔍 Inferring format from data with ${keys.length} columns:`, keys);\n    \n    // Try to identify columns based on content\n    const dateCol = this.findDateColumn(firstRow, keys);\n    const descCol = this.findDescriptionColumn(firstRow, keys);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 563,
            "endLine": 567,
            "content": "    \n    // Try to identify columns based on content\n    const dateCol = this.findDateColumn(firstRow, keys);\n    const descCol = this.findDescriptionColumn(firstRow, keys);\n    const amountCol = this.findAmountColumn(firstRow, keys);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 564,
            "endLine": 568,
            "content": "    // Try to identify columns based on content\n    const dateCol = this.findDateColumn(firstRow, keys);\n    const descCol = this.findDescriptionColumn(firstRow, keys);\n    const amountCol = this.findAmountColumn(firstRow, keys);\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 568,
            "endLine": 572,
            "content": "    \n    if (dateCol && descCol && amountCol) {\n      const inferredHeaders = [dateCol, descCol, amountCol];\n      console.log(`✅ Inferred headers:`, inferredHeaders);\n      "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 569,
            "endLine": 573,
            "content": "    if (dateCol && descCol && amountCol) {\n      const inferredHeaders = [dateCol, descCol, amountCol];\n      console.log(`✅ Inferred headers:`, inferredHeaders);\n      \n      // Determine format based on filename or content patterns"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 572,
            "endLine": 576,
            "content": "      \n      // Determine format based on filename or content patterns\n      let format: BankFormat = 'Generic';\n      \n      // Check content for internet banking patterns"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 573,
            "endLine": 577,
            "content": "      // Determine format based on filename or content patterns\n      let format: BankFormat = 'Generic';\n      \n      // Check content for internet banking patterns\n      const sampleText = data.slice(0, 3).map(row => "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 575,
            "endLine": 579,
            "content": "      \n      // Check content for internet banking patterns\n      const sampleText = data.slice(0, 3).map(row => \n        Object.values(row).join(' ').toLowerCase()\n      ).join(' ');"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 576,
            "endLine": 580,
            "content": "      // Check content for internet banking patterns\n      const sampleText = data.slice(0, 3).map(row => \n        Object.values(row).join(' ').toLowerCase()\n      ).join(' ');\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 580,
            "endLine": 584,
            "content": "      \n      if (sampleText.includes('internet banking') || \n          sampleText.includes('internet transfer') || \n          sampleText.includes('e-transfer') ||\n          sampleText.includes('electronic transfer')) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 581,
            "endLine": 585,
            "content": "      if (sampleText.includes('internet banking') || \n          sampleText.includes('internet transfer') || \n          sampleText.includes('e-transfer') ||\n          sampleText.includes('electronic transfer')) {\n        format = 'InternetBanking';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 602,
            "endLine": 606,
            "content": "\n  /**\n   * Find date column in a row\n   */\n  private findDateColumn(row: any, keys: string[]): string | null {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 603,
            "endLine": 607,
            "content": "  /**\n   * Find date column in a row\n   */\n  private findDateColumn(row: any, keys: string[]): string | null {\n    for (const key of keys) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 610,
            "endLine": 614,
            "content": "      \n      // Check if value looks like a date\n      const datePatterns = [\n        /^\\d{4}-\\d{2}-\\d{2}$/, // YYYY-MM-DD\n        /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 611,
            "endLine": 615,
            "content": "      // Check if value looks like a date\n      const datePatterns = [\n        /^\\d{4}-\\d{2}-\\d{2}$/, // YYYY-MM-DD\n        /^\\d{2}\\/\\d{2}\\/\\d{4}$/, // MM/DD/YYYY or DD/MM/YYYY\n        /^\\d{2}-\\d{2}-\\d{4}$/, // MM-DD-YYYY or DD-MM-YYYY"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 625,
            "endLine": 629,
            "content": "\n  /**\n   * Find description column in a row\n   */\n  private findDescriptionColumn(row: any, keys: string[]): string | null {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 626,
            "endLine": 630,
            "content": "  /**\n   * Find description column in a row\n   */\n  private findDescriptionColumn(row: any, keys: string[]): string | null {\n    for (const key of keys) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 633,
            "endLine": 637,
            "content": "      \n      // Skip if it looks like a date or amount\n      if (this.looksLikeDate(value) || this.looksLikeAmount(value)) continue;\n      \n      // If it's a longer text string, it's likely the description"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 634,
            "endLine": 638,
            "content": "      // Skip if it looks like a date or amount\n      if (this.looksLikeDate(value) || this.looksLikeAmount(value)) continue;\n      \n      // If it's a longer text string, it's likely the description\n      if (value.length > 10) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 642,
            "endLine": 646,
            "content": "    \n    // If no long text found, look for any non-date, non-amount column\n    for (const key of keys) {\n      const value = row[key]?.toString().trim();\n      if (!value) continue;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 643,
            "endLine": 647,
            "content": "    // If no long text found, look for any non-date, non-amount column\n    for (const key of keys) {\n      const value = row[key]?.toString().trim();\n      if (!value) continue;\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 647,
            "endLine": 651,
            "content": "      \n      if (!this.looksLikeDate(value) && !this.looksLikeAmount(value)) {\n        return key;\n      }\n    }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 648,
            "endLine": 652,
            "content": "      if (!this.looksLikeDate(value) && !this.looksLikeAmount(value)) {\n        return key;\n      }\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 655,
            "endLine": 659,
            "content": "\n  /**\n   * Find amount column in a row\n   */\n  private findAmountColumn(row: any, keys: string[]): string | null {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 656,
            "endLine": 660,
            "content": "  /**\n   * Find amount column in a row\n   */\n  private findAmountColumn(row: any, keys: string[]): string | null {\n    for (const key of keys) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 713,
            "endLine": 717,
            "content": "          \n          // Transform data to use inferred headers\n          const transformedData = results.data.map((row: unknown, index: number) => {\n            const rowArray = row as any[];\n            const obj: any = {};"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 714,
            "endLine": 718,
            "content": "          // Transform data to use inferred headers\n          const transformedData = results.data.map((row: unknown, index: number) => {\n            const rowArray = row as any[];\n            const obj: any = {};\n            inferredFormat.headers.forEach((header, i) => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 723,
            "endLine": 727,
            "content": "          \n          // Process transactions\n          const transactions = this.processTransactions(transformedData, inferredFormat.format);\n          \n          // Validate final data"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 724,
            "endLine": 728,
            "content": "          // Process transactions\n          const transactions = this.processTransactions(transformedData, inferredFormat.format);\n          \n          // Validate final data\n          const validation = this.validateTransactions(transactions);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 729,
            "endLine": 733,
            "content": "          \n          console.log(`✅ Processed ${transactions.length} transactions with inferred format`);\n          console.log(`📈 Validation: ${validation.errors.length} errors, ${validation.warnings.length} warnings`);\n          \n          resolve({ transactions, validation, bankFormat: inferredFormat.format });"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 730,
            "endLine": 734,
            "content": "          console.log(`✅ Processed ${transactions.length} transactions with inferred format`);\n          console.log(`📈 Validation: ${validation.errors.length} errors, ${validation.warnings.length} warnings`);\n          \n          resolve({ transactions, validation, bankFormat: inferredFormat.format });\n          "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 732,
            "endLine": 736,
            "content": "          \n          resolve({ transactions, validation, bankFormat: inferredFormat.format });\n          \n        } catch (error) {\n          console.error('❌ Inferred format processing error:', error);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 733,
            "endLine": 737,
            "content": "          resolve({ transactions, validation, bankFormat: inferredFormat.format });\n          \n        } catch (error) {\n          console.error('❌ Inferred format processing error:', error);\n          reject(error);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 746,
            "endLine": 750,
            "content": "\n  /**\n   * Parse CSV and auto-categorize transactions\n   */\n  async parseAndCategorizeCSV(file: File, onProgress?: (progress: number) => void): Promise<{"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 747,
            "endLine": 751,
            "content": "  /**\n   * Parse CSV and auto-categorize transactions\n   */\n  async parseAndCategorizeCSV(file: File, onProgress?: (progress: number) => void): Promise<{\n    transactions: Transaction[];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 809,
            "endLine": 813,
            "content": "\n  /**\n   * Process raw CSV data into normalized transactions\n   */\n  private processTransactions(rawData: any[], bankFormat: BankFormat): Transaction[] {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 810,
            "endLine": 814,
            "content": "  /**\n   * Process raw CSV data into normalized transactions\n   */\n  private processTransactions(rawData: any[], bankFormat: BankFormat): Transaction[] {\n    const format = BANK_FORMATS[bankFormat];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 816,
            "endLine": 820,
            "content": "    \n    console.log(`🔄 Processing ${rawData.length} rows with ${bankFormat} format...`);\n    \n    rawData.forEach((row, index) => {\n      try {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 817,
            "endLine": 821,
            "content": "    console.log(`🔄 Processing ${rawData.length} rows with ${bankFormat} format...`);\n    \n    rawData.forEach((row, index) => {\n      try {\n        const transaction = this.normalizeTransaction(row, format, index);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 818,
            "endLine": 822,
            "content": "    \n    rawData.forEach((row, index) => {\n      try {\n        const transaction = this.normalizeTransaction(row, format, index);\n        if (transaction) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 819,
            "endLine": 823,
            "content": "    rawData.forEach((row, index) => {\n      try {\n        const transaction = this.normalizeTransaction(row, format, index);\n        if (transaction) {\n          transactions.push(transaction);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 846,
            "endLine": 850,
            "content": "      \n      // Special handling for RBC format with separate withdrawal/deposit columns\n      if (Array.isArray(format.identifier) && format.identifier.includes('Withdrawals ($)') && format.identifier.includes('Deposits ($)')) {\n        const rowAny = row as any;\n        const withdrawalString = rowAny['Withdrawals ($)']?.toString().trim();"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 847,
            "endLine": 851,
            "content": "      // Special handling for RBC format with separate withdrawal/deposit columns\n      if (Array.isArray(format.identifier) && format.identifier.includes('Withdrawals ($)') && format.identifier.includes('Deposits ($)')) {\n        const rowAny = row as any;\n        const withdrawalString = rowAny['Withdrawals ($)']?.toString().trim();\n        const depositString = rowAny['Deposits ($)']?.toString().trim();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 852,
            "endLine": 856,
            "content": "        \n        // Determine amount based on which column has a value\n        if (withdrawalString && withdrawalString !== '') {\n          amountString = `-${withdrawalString}`; // Negative for withdrawals\n        } else if (depositString && depositString !== '') {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 853,
            "endLine": 857,
            "content": "        // Determine amount based on which column has a value\n        if (withdrawalString && withdrawalString !== '') {\n          amountString = `-${withdrawalString}`; // Negative for withdrawals\n        } else if (depositString && depositString !== '') {\n          amountString = depositString; // Positive for deposits"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 863,
            "endLine": 867,
            "content": "      \n      // Fallback: try alternative column names if primary columns are empty\n      if (!dateString) {\n        const dateAlternatives = ['Transaction Date', 'Date', 'Txn Date', 'Posting Date'];\n        for (const alt of dateAlternatives) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 864,
            "endLine": 868,
            "content": "      // Fallback: try alternative column names if primary columns are empty\n      if (!dateString) {\n        const dateAlternatives = ['Transaction Date', 'Date', 'Txn Date', 'Posting Date'];\n        for (const alt of dateAlternatives) {\n          if (row[alt]) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 874,
            "endLine": 878,
            "content": "      \n      if (!description) {\n        const descAlternatives = ['Transaction Details', 'Memo', 'Note', 'Narration', 'Details'];\n        for (const alt of descAlternatives) {\n          if (row[alt]) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 875,
            "endLine": 879,
            "content": "      if (!description) {\n        const descAlternatives = ['Transaction Details', 'Memo', 'Note', 'Narration', 'Details'];\n        for (const alt of descAlternatives) {\n          if (row[alt]) {\n            description = row[alt].toString().trim();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 884,
            "endLine": 888,
            "content": "      \n      if (!amountString) {\n        const amountAlternatives = ['Debit', 'Credit', 'Value', 'Balance'];\n        for (const alt of amountAlternatives) {\n          if (row[alt]) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 885,
            "endLine": 889,
            "content": "      if (!amountString) {\n        const amountAlternatives = ['Debit', 'Credit', 'Value', 'Balance'];\n        for (const alt of amountAlternatives) {\n          if (row[alt]) {\n            amountString = row[alt].toString().trim();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 894,
            "endLine": 898,
            "content": "      \n      // Validate required fields\n      if (!dateString || !description || !amountString) {\n        throw new Error(`Missing required fields: date=${!!dateString}, desc=${!!description}, amount=${!!amountString}`);\n      }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 895,
            "endLine": 899,
            "content": "      // Validate required fields\n      if (!dateString || !description || !amountString) {\n        throw new Error(`Missing required fields: date=${!!dateString}, desc=${!!description}, amount=${!!amountString}`);\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 899,
            "endLine": 903,
            "content": "      \n      // Parse and validate date\n      const date = this.parseDateFlexible(dateString);\n      if (!date) {\n        throw new Error(`Invalid date format: ${dateString}`);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 900,
            "endLine": 904,
            "content": "      // Parse and validate date\n      const date = this.parseDateFlexible(dateString);\n      if (!date) {\n        throw new Error(`Invalid date format: ${dateString}`);\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 905,
            "endLine": 909,
            "content": "      \n      // Parse and validate amount\n      const amount = this.parseAmountFlexible(amountString);\n      if (amount === null) {\n        throw new Error(`Invalid amount format: ${amountString}`);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 906,
            "endLine": 910,
            "content": "      // Parse and validate amount\n      const amount = this.parseAmountFlexible(amountString);\n      if (amount === null) {\n        throw new Error(`Invalid amount format: ${amountString}`);\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 911,
            "endLine": 915,
            "content": "      \n      // Create normalized transaction\n      const transaction: Transaction = {\n        id: `txn_${Date.now()}_${index}`,\n        date: date.toISOString().split('T')[0], // YYYY-MM-DD format"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 912,
            "endLine": 916,
            "content": "      // Create normalized transaction\n      const transaction: Transaction = {\n        id: `txn_${Date.now()}_${index}`,\n        date: date.toISOString().split('T')[0], // YYYY-MM-DD format\n        description: this.sanitizeText(description),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 923,
            "endLine": 927,
            "content": "      \n      return transaction;\n      \n    } catch (error) {\n      console.warn(`Row ${index + 1} normalization failed:`, error);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 924,
            "endLine": 928,
            "content": "      return transaction;\n      \n    } catch (error) {\n      console.warn(`Row ${index + 1} normalization failed:`, error);\n      return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 931,
            "endLine": 935,
            "content": "\n  /**\n   * Enhanced date parsing with multiple format support\n   */\n  private parseDateFlexible(dateString: string): Date | null {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 932,
            "endLine": 936,
            "content": "  /**\n   * Enhanced date parsing with multiple format support\n   */\n  private parseDateFlexible(dateString: string): Date | null {\n    if (!dateString) return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 960,
            "endLine": 964,
            "content": "              if (month && day && year) {\n                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 989,
            "endLine": 993,
            "content": "              if (month && day && year) {\n                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1013,
            "endLine": 1017,
            "content": "              if (month && day && year) {\n                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 7,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 961,
            "endLine": 965,
            "content": "                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;\n            }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 974,
            "endLine": 978,
            "content": "                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;\n            }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 982,
            "endLine": 986,
            "content": "                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;\n            }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 990,
            "endLine": 994,
            "content": "                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;\n            }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 998,
            "endLine": 1002,
            "content": "                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;\n            }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1006,
            "endLine": 1010,
            "content": "                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;\n            }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1014,
            "endLine": 1018,
            "content": "                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;\n            }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 973,
            "endLine": 977,
            "content": "              if (day && month && year) {\n                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 981,
            "endLine": 985,
            "content": "              if (day && month && year) {\n                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1005,
            "endLine": 1009,
            "content": "              if (day && month && year) {\n                date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n                if (!isNaN(date.getTime())) return date;\n              }\n              break;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1041,
            "endLine": 1045,
            "content": "      \n      // Final fallback: try native Date parsing\n      date = new Date(cleanDate);\n      if (!isNaN(date.getTime())) {\n        return date;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1042,
            "endLine": 1046,
            "content": "      // Final fallback: try native Date parsing\n      date = new Date(cleanDate);\n      if (!isNaN(date.getTime())) {\n        return date;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1054,
            "endLine": 1058,
            "content": "\n  /**\n   * Enhanced amount parsing with better format support\n   */\n  private parseAmountFlexible(amountString: string): number | null {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1055,
            "endLine": 1059,
            "content": "  /**\n   * Enhanced amount parsing with better format support\n   */\n  private parseAmountFlexible(amountString: string): number | null {\n    if (!amountString) return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1060,
            "endLine": 1064,
            "content": "    \n    try {\n      // Handle various formats: $123.45, 123.45, (123.45), -123.45, $1,234.56, \"3,276.00\"\n      let cleanAmount = amountString\n        .replace(/[\"']/g, '') // Remove quotes"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1061,
            "endLine": 1065,
            "content": "    try {\n      // Handle various formats: $123.45, 123.45, (123.45), -123.45, $1,234.56, \"3,276.00\"\n      let cleanAmount = amountString\n        .replace(/[\"']/g, '') // Remove quotes\n        .replace(/[$,\\s]/g, '') // Remove $, commas, spaces"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1067,
            "endLine": 1071,
            "content": "      \n      // Handle special cases like \"DR\" (debit) and \"CR\" (credit)\n      if (cleanAmount.toUpperCase().includes('DR')) {\n        cleanAmount = cleanAmount.replace(/DR/i, '').trim();\n      } else if (cleanAmount.toUpperCase().includes('CR')) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1068,
            "endLine": 1072,
            "content": "      // Handle special cases like \"DR\" (debit) and \"CR\" (credit)\n      if (cleanAmount.toUpperCase().includes('DR')) {\n        cleanAmount = cleanAmount.replace(/DR/i, '').trim();\n      } else if (cleanAmount.toUpperCase().includes('CR')) {\n        cleanAmount = '-' + cleanAmount.replace(/CR/i, '').trim();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1074,
            "endLine": 1078,
            "content": "      \n      const amount = parseFloat(cleanAmount);\n      \n      // Validate reasonable amount range (increased limit for business accounts)\n      if (isNaN(amount) || Math.abs(amount) > 10000000) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1075,
            "endLine": 1079,
            "content": "      const amount = parseFloat(cleanAmount);\n      \n      // Validate reasonable amount range (increased limit for business accounts)\n      if (isNaN(amount) || Math.abs(amount) > 10000000) {\n        return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1076,
            "endLine": 1080,
            "content": "      \n      // Validate reasonable amount range (increased limit for business accounts)\n      if (isNaN(amount) || Math.abs(amount) > 10000000) {\n        return null;\n      }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1077,
            "endLine": 1081,
            "content": "      // Validate reasonable amount range (increased limit for business accounts)\n      if (isNaN(amount) || Math.abs(amount) > 10000000) {\n        return null;\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1094,
            "endLine": 1098,
            "content": "    \n    return text\n      .trim()\n      .replace(/\\s+/g, ' ') // Normalize whitespace\n      .replace(/[^\\w\\s\\-&'.,#]/g, '') // Remove special chars except common ones"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1095,
            "endLine": 1099,
            "content": "    return text\n      .trim()\n      .replace(/\\s+/g, ' ') // Normalize whitespace\n      .replace(/[^\\w\\s\\-&'.,#]/g, '') // Remove special chars except common ones\n      .substring(0, 200); // Limit length"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1101,
            "endLine": 1105,
            "content": "\n  /**\n   * Validate CSV headers with enhanced formatting support\n   */\n  private validateHeaders(headers: string[]): ValidationResult {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1102,
            "endLine": 1106,
            "content": "  /**\n   * Validate CSV headers with enhanced formatting support\n   */\n  private validateHeaders(headers: string[]): ValidationResult {\n    const result: ValidationResult = { isValid: true, errors: [], warnings: [] };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1107,
            "endLine": 1111,
            "content": "    \n    if (!headers || headers.length === 0) {\n      result.isValid = false;\n      result.errors.push('No headers found in CSV file');\n      return result;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1108,
            "endLine": 1112,
            "content": "    if (!headers || headers.length === 0) {\n      result.isValid = false;\n      result.errors.push('No headers found in CSV file');\n      return result;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1113,
            "endLine": 1117,
            "content": "    \n    // Enhanced header analysis\n    const headerMapping = this.mapHeadersToColumns(headers);\n    const normalizedHeaders = headers.map(h => this.normalizeHeader(h));\n    "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1114,
            "endLine": 1118,
            "content": "    // Enhanced header analysis\n    const headerMapping = this.mapHeadersToColumns(headers);\n    const normalizedHeaders = headers.map(h => this.normalizeHeader(h));\n    \n    console.log('🔍 Enhanced header validation:', {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1115,
            "endLine": 1119,
            "content": "    const headerMapping = this.mapHeadersToColumns(headers);\n    const normalizedHeaders = headers.map(h => this.normalizeHeader(h));\n    \n    console.log('🔍 Enhanced header validation:', {\n      original: headers,"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1340,
            "endLine": 1344,
            "content": "    \n    const headerMapping = this.mapHeadersToColumns(headers);\n    const normalizedHeaders = headers.map(h => this.normalizeHeader(h));\n    \n    // Check for missing required columns"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1341,
            "endLine": 1345,
            "content": "    const headerMapping = this.mapHeadersToColumns(headers);\n    const normalizedHeaders = headers.map(h => this.normalizeHeader(h));\n    \n    // Check for missing required columns\n    if (!headerMapping.dateColumn) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1117,
            "endLine": 1121,
            "content": "    \n    console.log('🔍 Enhanced header validation:', {\n      original: headers,\n      normalized: normalizedHeaders,\n      mapping: headerMapping"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1118,
            "endLine": 1122,
            "content": "    console.log('🔍 Enhanced header validation:', {\n      original: headers,\n      normalized: normalizedHeaders,\n      mapping: headerMapping\n    });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1123,
            "endLine": 1127,
            "content": "    \n    let formatFound = false;\n    \n    // Check against all known bank formats with enhanced matching\n    for (const [bankName, format] of Object.entries(BANK_FORMATS)) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1124,
            "endLine": 1128,
            "content": "    let formatFound = false;\n    \n    // Check against all known bank formats with enhanced matching\n    for (const [bankName, format] of Object.entries(BANK_FORMATS)) {\n      const formatIdentifiers = format.identifier.map(id => this.normalizeHeader(id));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1125,
            "endLine": 1129,
            "content": "    \n    // Check against all known bank formats with enhanced matching\n    for (const [bankName, format] of Object.entries(BANK_FORMATS)) {\n      const formatIdentifiers = format.identifier.map(id => this.normalizeHeader(id));\n      const hasAllRequiredColumns = formatIdentifiers.every(id => "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1126,
            "endLine": 1130,
            "content": "    // Check against all known bank formats with enhanced matching\n    for (const [bankName, format] of Object.entries(BANK_FORMATS)) {\n      const formatIdentifiers = format.identifier.map(id => this.normalizeHeader(id));\n      const hasAllRequiredColumns = formatIdentifiers.every(id => \n        normalizedHeaders.some(header => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1133,
            "endLine": 1137,
            "content": "          \n          // Pattern-based matching\n          const idType = this.classifyHeader(id).type;\n          const headerType = this.classifyHeader(header).type;\n          "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1134,
            "endLine": 1138,
            "content": "          // Pattern-based matching\n          const idType = this.classifyHeader(id).type;\n          const headerType = this.classifyHeader(header).type;\n          \n          return idType === headerType && this.calculateSimilarity(header, id) > 0.7;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1141,
            "endLine": 1145,
            "content": "      \n      if (hasAllRequiredColumns) {\n        formatFound = true;\n        console.log(`✅ Headers match ${bankName} format`);\n        break;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1142,
            "endLine": 1146,
            "content": "      if (hasAllRequiredColumns) {\n        formatFound = true;\n        console.log(`✅ Headers match ${bankName} format`);\n        break;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1148,
            "endLine": 1152,
            "content": "    \n    // Enhanced generic format detection with pattern matching\n    if (!formatFound) {\n      const hasDate = normalizedHeaders.some(h => \n        HEADER_PATTERNS.date.some(pattern => h.includes(pattern) || pattern.includes(h))"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1149,
            "endLine": 1153,
            "content": "    // Enhanced generic format detection with pattern matching\n    if (!formatFound) {\n      const hasDate = normalizedHeaders.some(h => \n        HEADER_PATTERNS.date.some(pattern => h.includes(pattern) || pattern.includes(h))\n      );"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1160,
            "endLine": 1164,
            "content": "      \n      if (hasDate && hasDescription && hasAmount) {\n        formatFound = true;\n        console.log(`✅ Headers match generic CSV format with pattern matching`);\n        "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1161,
            "endLine": 1165,
            "content": "      if (hasDate && hasDescription && hasAmount) {\n        formatFound = true;\n        console.log(`✅ Headers match generic CSV format with pattern matching`);\n        \n        // Add helpful suggestions for better formatting"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1164,
            "endLine": 1168,
            "content": "        \n        // Add helpful suggestions for better formatting\n        if (headerMapping.suggestions.date?.length > 0) {\n          result.warnings.push(`Consider using standard header 'Date' instead of '${headerMapping.dateColumn}'`);\n        }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1165,
            "endLine": 1169,
            "content": "        // Add helpful suggestions for better formatting\n        if (headerMapping.suggestions.date?.length > 0) {\n          result.warnings.push(`Consider using standard header 'Date' instead of '${headerMapping.dateColumn}'`);\n        }\n        if (headerMapping.suggestions.description?.length > 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1180,
            "endLine": 1184,
            "content": "              this.normalizeHeader(h).includes(pattern) || pattern.includes(this.normalizeHeader(h))\n            )\n          );\n          if (potentialDateHeaders.length > 0) {\n            result.errors.push(`No clear date column found. Potential matches: ${potentialDateHeaders.join(', ')}`);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1192,
            "endLine": 1196,
            "content": "              this.normalizeHeader(h).includes(pattern) || pattern.includes(this.normalizeHeader(h))\n            )\n          );\n          if (potentialDescHeaders.length > 0) {\n            result.errors.push(`No clear description column found. Potential matches: ${potentialDescHeaders.join(', ')}`);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1204,
            "endLine": 1208,
            "content": "              this.normalizeHeader(h).includes(pattern) || pattern.includes(this.normalizeHeader(h))\n            )\n          );\n          if (potentialAmountHeaders.length > 0) {\n            result.errors.push(`No clear amount column found. Potential matches: ${potentialAmountHeaders.join(', ')}`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1215,
            "endLine": 1219,
            "content": "    \n    // Enhanced warnings for non-standard headers\n    if (formatFound) {\n      const nonStandardHeaders = headers.filter(h => {\n        const normalized = this.normalizeHeader(h);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1216,
            "endLine": 1220,
            "content": "    // Enhanced warnings for non-standard headers\n    if (formatFound) {\n      const nonStandardHeaders = headers.filter(h => {\n        const normalized = this.normalizeHeader(h);\n        return !HEADER_PATTERNS.date.some(p => normalized.includes(p)) &&"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1227,
            "endLine": 1231,
            "content": "      \n      if (nonStandardHeaders.length > 0) {\n        result.warnings.push(`Non-standard headers detected: ${nonStandardHeaders.join(', ')}. These will be ignored.`);\n      }\n    }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1228,
            "endLine": 1232,
            "content": "      if (nonStandardHeaders.length > 0) {\n        result.warnings.push(`Non-standard headers detected: ${nonStandardHeaders.join(', ')}. These will be ignored.`);\n      }\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1232,
            "endLine": 1236,
            "content": "    \n    if (!formatFound) {\n      result.isValid = false;\n      console.log(`❌ Headers don't match any known format:`, headers);\n      console.log(`Available formats:`, Object.keys(BANK_FORMATS));"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1233,
            "endLine": 1237,
            "content": "    if (!formatFound) {\n      result.isValid = false;\n      console.log(`❌ Headers don't match any known format:`, headers);\n      console.log(`Available formats:`, Object.keys(BANK_FORMATS));\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1237,
            "endLine": 1241,
            "content": "      \n      // Provide helpful suggestions\n      result.errors.push('CSV format not recognized. Please ensure your file has columns for Date, Description, and Amount.');\n      result.errors.push('Common header variations are supported (e.g., \"Transaction Date\", \"Transaction Details\", \"Transaction Amount\").');\n    }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1238,
            "endLine": 1242,
            "content": "      // Provide helpful suggestions\n      result.errors.push('CSV format not recognized. Please ensure your file has columns for Date, Description, and Amount.');\n      result.errors.push('Common header variations are supported (e.g., \"Transaction Date\", \"Transaction Details\", \"Transaction Amount\").');\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1245,
            "endLine": 1249,
            "content": "\n  /**\n   * Validate processed transactions\n   */\n  private validateTransactions(transactions: Transaction[]): ValidationResult {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1246,
            "endLine": 1250,
            "content": "  /**\n   * Validate processed transactions\n   */\n  private validateTransactions(transactions: Transaction[]): ValidationResult {\n    const result: ValidationResult = { isValid: true, errors: [], warnings: [] };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1251,
            "endLine": 1255,
            "content": "    \n    if (transactions.length === 0) {\n      result.isValid = false;\n      result.errors.push('No valid transactions found in CSV');\n      return result;"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1252,
            "endLine": 1256,
            "content": "    if (transactions.length === 0) {\n      result.isValid = false;\n      result.errors.push('No valid transactions found in CSV');\n      return result;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1257,
            "endLine": 1261,
            "content": "    \n    // Check for common issues\n    const invalidDates = transactions.filter(t => !t.date || t.date === 'Invalid Date');\n    const missingDescriptions = transactions.filter(t => !t.description || t.description.trim() === '');\n    const zeroAmounts = transactions.filter(t => t.amount === 0);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1258,
            "endLine": 1262,
            "content": "    // Check for common issues\n    const invalidDates = transactions.filter(t => !t.date || t.date === 'Invalid Date');\n    const missingDescriptions = transactions.filter(t => !t.description || t.description.trim() === '');\n    const zeroAmounts = transactions.filter(t => t.amount === 0);\n    const duplicates = this.findDuplicateTransactions(transactions);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1263,
            "endLine": 1267,
            "content": "    \n    if (invalidDates.length > 0) {\n      result.warnings.push(`${invalidDates.length} transactions have invalid dates`);\n    }\n    "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1264,
            "endLine": 1268,
            "content": "    if (invalidDates.length > 0) {\n      result.warnings.push(`${invalidDates.length} transactions have invalid dates`);\n    }\n    \n    if (missingDescriptions.length > 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1267,
            "endLine": 1271,
            "content": "    \n    if (missingDescriptions.length > 0) {\n      result.warnings.push(`${missingDescriptions.length} transactions have missing descriptions`);\n    }\n    "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1268,
            "endLine": 1272,
            "content": "    if (missingDescriptions.length > 0) {\n      result.warnings.push(`${missingDescriptions.length} transactions have missing descriptions`);\n    }\n    \n    if (zeroAmounts.length > 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1271,
            "endLine": 1275,
            "content": "    \n    if (zeroAmounts.length > 0) {\n      result.warnings.push(`${zeroAmounts.length} transactions have zero amounts`);\n    }\n    "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1272,
            "endLine": 1276,
            "content": "    if (zeroAmounts.length > 0) {\n      result.warnings.push(`${zeroAmounts.length} transactions have zero amounts`);\n    }\n    \n    if (duplicates.length > 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1275,
            "endLine": 1279,
            "content": "    \n    if (duplicates.length > 0) {\n      result.warnings.push(`${duplicates.length} potential duplicate transactions found`);\n    }\n    "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1276,
            "endLine": 1280,
            "content": "    if (duplicates.length > 0) {\n      result.warnings.push(`${duplicates.length} potential duplicate transactions found`);\n    }\n    \n    // Performance warning for large datasets"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1279,
            "endLine": 1283,
            "content": "    \n    // Performance warning for large datasets\n    if (transactions.length > 1000) {\n      result.warnings.push(`Large dataset (${transactions.length} transactions) may impact performance`);\n    }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1280,
            "endLine": 1284,
            "content": "    // Performance warning for large datasets\n    if (transactions.length > 1000) {\n      result.warnings.push(`Large dataset (${transactions.length} transactions) may impact performance`);\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1287,
            "endLine": 1291,
            "content": "\n  /**\n   * Find potential duplicate transactions\n   */\n  private findDuplicateTransactions(transactions: Transaction[]): Transaction[] {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1288,
            "endLine": 1292,
            "content": "  /**\n   * Find potential duplicate transactions\n   */\n  private findDuplicateTransactions(transactions: Transaction[]): Transaction[] {\n    const seen = new Map<string, Transaction>();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1294,
            "endLine": 1298,
            "content": "    \n    for (const transaction of transactions) {\n      // Create a key that identifies potential duplicates\n      const key = `${transaction.date}_${transaction.amount}_${transaction.description.substring(0, 20)}`;\n      "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1295,
            "endLine": 1299,
            "content": "    for (const transaction of transactions) {\n      // Create a key that identifies potential duplicates\n      const key = `${transaction.date}_${transaction.amount}_${transaction.description.substring(0, 20)}`;\n      \n      if (seen.has(key)) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1308,
            "endLine": 1312,
            "content": "\n  /**\n   * Calculate categorization statistics\n   */\n  private calculateCategorizationStats(transactions: Transaction[]) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1309,
            "endLine": 1313,
            "content": "  /**\n   * Calculate categorization statistics\n   */\n  private calculateCategorizationStats(transactions: Transaction[]) {\n    const total = transactions.length;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1327,
            "endLine": 1331,
            "content": "  }\n\n  /**\n   * Get header formatting suggestions for better CSV compatibility\n   */"
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 99,
            "endLine": 103,
            "content": "  }\n\n  /**\n   * Get header formatting suggestions for better CSV compatibility\n   */"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1328,
            "endLine": 1332,
            "content": "\n  /**\n   * Get header formatting suggestions for better CSV compatibility\n   */\n  getHeaderFormattingSuggestions(headers: string[]): {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1329,
            "endLine": 1333,
            "content": "  /**\n   * Get header formatting suggestions for better CSV compatibility\n   */\n  getHeaderFormattingSuggestions(headers: string[]): {\n    suggestions: string[];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1343,
            "endLine": 1347,
            "content": "    \n    // Check for missing required columns\n    if (!headerMapping.dateColumn) {\n      suggestions.push('Add a \"Date\" column for transaction dates');\n      warnings.push('Date column is required for proper transaction processing');"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1344,
            "endLine": 1348,
            "content": "    // Check for missing required columns\n    if (!headerMapping.dateColumn) {\n      suggestions.push('Add a \"Date\" column for transaction dates');\n      warnings.push('Date column is required for proper transaction processing');\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1349,
            "endLine": 1353,
            "content": "    \n    if (!headerMapping.descriptionColumn) {\n      suggestions.push('Add a \"Description\" column for transaction details');\n      warnings.push('Description column is required for AI categorization');\n    }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1350,
            "endLine": 1354,
            "content": "    if (!headerMapping.descriptionColumn) {\n      suggestions.push('Add a \"Description\" column for transaction details');\n      warnings.push('Description column is required for AI categorization');\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1354,
            "endLine": 1358,
            "content": "    \n    if (!headerMapping.amountColumn) {\n      suggestions.push('Add an \"Amount\" column for transaction values');\n      warnings.push('Amount column is required for financial calculations');\n    }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1355,
            "endLine": 1359,
            "content": "    if (!headerMapping.amountColumn) {\n      suggestions.push('Add an \"Amount\" column for transaction values');\n      warnings.push('Amount column is required for financial calculations');\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1359,
            "endLine": 1363,
            "content": "    \n    // Suggest standard headers for non-standard ones\n    if (headerMapping.dateColumn && headerMapping.dateColumn !== 'Date') {\n      suggestions.push(`Consider renaming \"${headerMapping.dateColumn}\" to \"Date\" for better compatibility`);\n    }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1360,
            "endLine": 1364,
            "content": "    // Suggest standard headers for non-standard ones\n    if (headerMapping.dateColumn && headerMapping.dateColumn !== 'Date') {\n      suggestions.push(`Consider renaming \"${headerMapping.dateColumn}\" to \"Date\" for better compatibility`);\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1364,
            "endLine": 1368,
            "content": "    \n    if (headerMapping.descriptionColumn && headerMapping.descriptionColumn !== 'Description') {\n      suggestions.push(`Consider renaming \"${headerMapping.descriptionColumn}\" to \"Description\" for better compatibility`);\n    }\n    "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1365,
            "endLine": 1369,
            "content": "    if (headerMapping.descriptionColumn && headerMapping.descriptionColumn !== 'Description') {\n      suggestions.push(`Consider renaming \"${headerMapping.descriptionColumn}\" to \"Description\" for better compatibility`);\n    }\n    \n    if (headerMapping.amountColumn && headerMapping.amountColumn !== 'Amount') {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1368,
            "endLine": 1372,
            "content": "    \n    if (headerMapping.amountColumn && headerMapping.amountColumn !== 'Amount') {\n      suggestions.push(`Consider renaming \"${headerMapping.amountColumn}\" to \"Amount\" for better compatibility`);\n    }\n    "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1369,
            "endLine": 1373,
            "content": "    if (headerMapping.amountColumn && headerMapping.amountColumn !== 'Amount') {\n      suggestions.push(`Consider renaming \"${headerMapping.amountColumn}\" to \"Amount\" for better compatibility`);\n    }\n    \n    // Check for common formatting issues"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1372,
            "endLine": 1376,
            "content": "    \n    // Check for common formatting issues\n    headers.forEach(header => {\n      const normalized = this.normalizeHeader(header);\n      "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1373,
            "endLine": 1377,
            "content": "    // Check for common formatting issues\n    headers.forEach(header => {\n      const normalized = this.normalizeHeader(header);\n      \n      // Check for excessive capitalization"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1376,
            "endLine": 1380,
            "content": "      \n      // Check for excessive capitalization\n      if (header !== header.toLowerCase() && header !== header.toUpperCase() && \n          header !== header.charAt(0).toUpperCase() + header.slice(1).toLowerCase()) {\n        suggestions.push(`Consider using proper case for \"${header}\" (e.g., \"Date\" instead of \"DATE\" or \"date\")`);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1377,
            "endLine": 1381,
            "content": "      // Check for excessive capitalization\n      if (header !== header.toLowerCase() && header !== header.toUpperCase() && \n          header !== header.charAt(0).toUpperCase() + header.slice(1).toLowerCase()) {\n        suggestions.push(`Consider using proper case for \"${header}\" (e.g., \"Date\" instead of \"DATE\" or \"date\")`);\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1382,
            "endLine": 1386,
            "content": "      \n      // Check for special characters\n      if (/[^\\w\\s]/.test(header)) {\n        suggestions.push(`Remove special characters from \"${header}\" for better compatibility`);\n      }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1383,
            "endLine": 1387,
            "content": "      // Check for special characters\n      if (/[^\\w\\s]/.test(header)) {\n        suggestions.push(`Remove special characters from \"${header}\" for better compatibility`);\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1387,
            "endLine": 1391,
            "content": "      \n      // Check for excessive length\n      if (header.length > 30) {\n        suggestions.push(`Consider shortening \"${header}\" (currently ${header.length} characters)`);\n      }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1388,
            "endLine": 1392,
            "content": "      // Check for excessive length\n      if (header.length > 30) {\n        suggestions.push(`Consider shortening \"${header}\" (currently ${header.length} characters)`);\n      }\n    });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1393,
            "endLine": 1397,
            "content": "    \n    // Add optional but recommended columns\n    if (!headerMapping.balanceColumn) {\n      suggestions.push('Consider adding a \"Balance\" column for running balance information');\n    }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1394,
            "endLine": 1398,
            "content": "    // Add optional but recommended columns\n    if (!headerMapping.balanceColumn) {\n      suggestions.push('Consider adding a \"Balance\" column for running balance information');\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1398,
            "endLine": 1402,
            "content": "    \n    if (!headerMapping.referenceColumn) {\n      suggestions.push('Consider adding a \"Reference\" column for transaction IDs or check numbers');\n    }\n    "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1399,
            "endLine": 1403,
            "content": "    if (!headerMapping.referenceColumn) {\n      suggestions.push('Consider adding a \"Reference\" column for transaction IDs or check numbers');\n    }\n    \n    return { suggestions, warnings, recommendedHeaders };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1416,
            "endLine": 1420,
            "content": "    \n    const csvContent = [\n      headers.join(','),\n      ...sampleData.map(row => row.join(','))\n    ].join('\\n');"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1417,
            "endLine": 1421,
            "content": "    const csvContent = [\n      headers.join(','),\n      ...sampleData.map(row => row.join(','))\n    ].join('\\n');\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1424,
            "endLine": 1428,
            "content": "\n  /**\n   * Validate and parse date with enhanced error handling\n   */\n  private parseDate(dateStr: string, rowIndex: number): Date {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1425,
            "endLine": 1429,
            "content": "  /**\n   * Validate and parse date with enhanced error handling\n   */\n  private parseDate(dateStr: string, rowIndex: number): Date {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1452,
            "endLine": 1456,
            "content": "\n      for (const format of dateFormats) {\n        try {\n          parsedDate = this.parseDateWithFormat(cleanDateStr, format);\n          if (parsedDate && !isNaN(parsedDate.getTime())) {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1453,
            "endLine": 1457,
            "content": "      for (const format of dateFormats) {\n        try {\n          parsedDate = this.parseDateWithFormat(cleanDateStr, format);\n          if (parsedDate && !isNaN(parsedDate.getTime())) {\n            break;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1463,
            "endLine": 1467,
            "content": "\n      if (!parsedDate || isNaN(parsedDate.getTime())) {\n        throw new Error(`Unable to parse date: ${cleanDateStr}`);\n      }\n"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1464,
            "endLine": 1468,
            "content": "      if (!parsedDate || isNaN(parsedDate.getTime())) {\n        throw new Error(`Unable to parse date: ${cleanDateStr}`);\n      }\n\n      // Validate date is not in the future"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1467,
            "endLine": 1471,
            "content": "\n      // Validate date is not in the future\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1468,
            "endLine": 1472,
            "content": "      // Validate date is not in the future\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      \n      if (parsedDate > today) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1471,
            "endLine": 1475,
            "content": "      \n      if (parsedDate > today) {\n        throw new Error(`Future date not allowed: ${parsedDate.toISOString().split('T')[0]}`);\n      }\n"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1472,
            "endLine": 1476,
            "content": "      if (parsedDate > today) {\n        throw new Error(`Future date not allowed: ${parsedDate.toISOString().split('T')[0]}`);\n      }\n\n      // Validate date is not too far in the past (more than 10 years)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1475,
            "endLine": 1479,
            "content": "\n      // Validate date is not too far in the past (more than 10 years)\n      const tenYearsAgo = new Date();\n      tenYearsAgo.setFullYear(tenYearsAgo.getFullYear() - 10);\n      "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1476,
            "endLine": 1480,
            "content": "      // Validate date is not too far in the past (more than 10 years)\n      const tenYearsAgo = new Date();\n      tenYearsAgo.setFullYear(tenYearsAgo.getFullYear() - 10);\n      \n      if (parsedDate < tenYearsAgo) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1479,
            "endLine": 1483,
            "content": "      \n      if (parsedDate < tenYearsAgo) {\n        throw new Error(`Date too far in the past: ${parsedDate.toISOString().split('T')[0]}`);\n      }\n"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1480,
            "endLine": 1484,
            "content": "      if (parsedDate < tenYearsAgo) {\n        throw new Error(`Date too far in the past: ${parsedDate.toISOString().split('T')[0]}`);\n      }\n\n      return parsedDate;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1483,
            "endLine": 1487,
            "content": "\n      return parsedDate;\n\n    } catch (error) {\n      console.error(`❌ Date parsing error at row ${rowIndex + 1}:`, error);"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1484,
            "endLine": 1488,
            "content": "      return parsedDate;\n\n    } catch (error) {\n      console.error(`❌ Date parsing error at row ${rowIndex + 1}:`, error);\n      throw new Error(`Invalid date at row ${rowIndex + 1}: ${dateStr} - ${error instanceof Error ? error.message : 'Unknown error'}`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1485,
            "endLine": 1489,
            "content": "\n    } catch (error) {\n      console.error(`❌ Date parsing error at row ${rowIndex + 1}:`, error);\n      throw new Error(`Invalid date at row ${rowIndex + 1}: ${dateStr} - ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1486,
            "endLine": 1490,
            "content": "    } catch (error) {\n      console.error(`❌ Date parsing error at row ${rowIndex + 1}:`, error);\n      throw new Error(`Invalid date at row ${rowIndex + 1}: ${dateStr} - ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1491,
            "endLine": 1495,
            "content": "\n  /**\n   * Parse date with specific format\n   */\n  private parseDateWithFormat(dateStr: string, format: string): Date | null {"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1492,
            "endLine": 1496,
            "content": "  /**\n   * Parse date with specific format\n   */\n  private parseDateWithFormat(dateStr: string, format: string): Date | null {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1502,
            "endLine": 1506,
            "content": "      \n      if (format === 'MM/dd/yyyy') {\n        const [month, day, year] = dateStr.split('/').map(Number);\n        return new Date(year, month - 1, day);\n      }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1503,
            "endLine": 1507,
            "content": "      if (format === 'MM/dd/yyyy') {\n        const [month, day, year] = dateStr.split('/').map(Number);\n        return new Date(year, month - 1, day);\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1507,
            "endLine": 1511,
            "content": "      \n      if (format === 'dd/MM/yyyy') {\n        const [day, month, year] = dateStr.split('/').map(Number);\n        return new Date(year, month - 1, day);\n      }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1508,
            "endLine": 1512,
            "content": "      if (format === 'dd/MM/yyyy') {\n        const [day, month, year] = dateStr.split('/').map(Number);\n        return new Date(year, month - 1, day);\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1512,
            "endLine": 1516,
            "content": "      \n      if (format === 'yyyy/MM/dd') {\n        const [year, month, day] = dateStr.split('/').map(Number);\n        return new Date(year, month - 1, day);\n      }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1513,
            "endLine": 1517,
            "content": "      if (format === 'yyyy/MM/dd') {\n        const [year, month, day] = dateStr.split('/').map(Number);\n        return new Date(year, month - 1, day);\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1517,
            "endLine": 1521,
            "content": "      \n      if (format === 'MM-dd-yyyy') {\n        const [month, day, year] = dateStr.split('-').map(Number);\n        return new Date(year, month - 1, day);\n      }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1518,
            "endLine": 1522,
            "content": "      if (format === 'MM-dd-yyyy') {\n        const [month, day, year] = dateStr.split('-').map(Number);\n        return new Date(year, month - 1, day);\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1522,
            "endLine": 1526,
            "content": "      \n      if (format === 'dd-MM-yyyy') {\n        const [day, month, year] = dateStr.split('-').map(Number);\n        return new Date(year, month - 1, day);\n      }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1523,
            "endLine": 1527,
            "content": "      if (format === 'dd-MM-yyyy') {\n        const [day, month, year] = dateStr.split('-').map(Number);\n        return new Date(year, month - 1, day);\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1527,
            "endLine": 1531,
            "content": "      \n      // Handle text formats\n      if (format === 'MMM dd, yyyy' || format === 'dd MMM yyyy') {\n        return new Date(dateStr);\n      }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1528,
            "endLine": 1532,
            "content": "      // Handle text formats\n      if (format === 'MMM dd, yyyy' || format === 'dd MMM yyyy') {\n        return new Date(dateStr);\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1532,
            "endLine": 1536,
            "content": "      \n      // Handle datetime formats\n      if (format.includes('HH:mm:ss')) {\n        return new Date(dateStr);\n      }"
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1533,
            "endLine": 1537,
            "content": "      // Handle datetime formats\n      if (format.includes('HH:mm:ss')) {\n        return new Date(dateStr);\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1537,
            "endLine": 1541,
            "content": "      \n      // Fallback to native Date parsing\n      const parsed = new Date(dateStr);\n      return isNaN(parsed.getTime()) ? null : parsed;\n      "
          },
          {
            "file": "src/lib/csvProcessor.ts",
            "startLine": 1538,
            "endLine": 1542,
            "content": "      // Fallback to native Date parsing\n      const parsed = new Date(dateStr);\n      return isNaN(parsed.getTime()) ? null : parsed;\n      \n    } catch (error) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 2,
            "endLine": 6,
            "content": "\nexport class DatabaseService {\n  private static instance: DatabaseService;\n  private fallbackData: {\n    learnedPatterns: LearnedPattern[];"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 3,
            "endLine": 7,
            "content": "export class DatabaseService {\n  private static instance: DatabaseService;\n  private fallbackData: {\n    learnedPatterns: LearnedPattern[];\n    userCorrections: UserCorrection[];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 12,
            "endLine": 16,
            "content": "\n  public static getInstance(): DatabaseService {\n    if (!DatabaseService.instance) {\n      DatabaseService.instance = new DatabaseService();\n    }"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 13,
            "endLine": 17,
            "content": "  public static getInstance(): DatabaseService {\n    if (!DatabaseService.instance) {\n      DatabaseService.instance = new DatabaseService();\n    }\n    return DatabaseService.instance;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 19,
            "endLine": 23,
            "content": "\n  private constructor() {\n    // Initialize fallback data from localStorage if available\n    this.loadFallbackData();\n  }"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 20,
            "endLine": 24,
            "content": "  private constructor() {\n    // Initialize fallback data from localStorage if available\n    this.loadFallbackData();\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 24,
            "endLine": 28,
            "content": "\n  private loadFallbackData() {\n    try {\n      if (typeof window !== 'undefined') {\n        const savedPatterns = localStorage.getItem('meridian_learned_patterns');"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 25,
            "endLine": 29,
            "content": "  private loadFallbackData() {\n    try {\n      if (typeof window !== 'undefined') {\n        const savedPatterns = localStorage.getItem('meridian_learned_patterns');\n        const savedCorrections = localStorage.getItem('meridian_user_corrections');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 43,
            "endLine": 47,
            "content": "\n  private saveFallbackData() {\n    try {\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('meridian_learned_patterns', JSON.stringify(this.fallbackData.learnedPatterns));"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 44,
            "endLine": 48,
            "content": "  private saveFallbackData() {\n    try {\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('meridian_learned_patterns', JSON.stringify(this.fallbackData.learnedPatterns));\n        localStorage.setItem('meridian_user_corrections', JSON.stringify(this.fallbackData.userCorrections));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 54,
            "endLine": 58,
            "content": "\n  async saveLearnedPattern(pattern: string, categoryCode: string, confidence: number = 85): Promise<void> {\n    try {\n      const supabase = getSupabaseClient();\n      "
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 55,
            "endLine": 59,
            "content": "  async saveLearnedPattern(pattern: string, categoryCode: string, confidence: number = 85): Promise<void> {\n    try {\n      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 6,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 56,
            "endLine": 60,
            "content": "    try {\n      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, saving pattern to localStorage');"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 121,
            "endLine": 125,
            "content": "    try {\n      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, returning patterns from localStorage');"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 152,
            "endLine": 156,
            "content": "    try {\n      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, saving correction to localStorage');"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 205,
            "endLine": 209,
            "content": "    try {\n      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, returning corrections from localStorage');"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 236,
            "endLine": 240,
            "content": "    try {\n      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, updating pattern usage in localStorage');"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 289,
            "endLine": 293,
            "content": "    try {\n      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, clearing localStorage data');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 6,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 57,
            "endLine": 61,
            "content": "      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, saving pattern to localStorage');\n        "
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 122,
            "endLine": 126,
            "content": "      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, returning patterns from localStorage');\n        return this.fallbackData.learnedPatterns;"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 153,
            "endLine": 157,
            "content": "      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, saving correction to localStorage');\n        "
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 206,
            "endLine": 210,
            "content": "      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, returning corrections from localStorage');\n        return this.fallbackData.userCorrections;"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 237,
            "endLine": 241,
            "content": "      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, updating pattern usage in localStorage');\n        "
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 290,
            "endLine": 294,
            "content": "      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, clearing localStorage data');\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 58,
            "endLine": 62,
            "content": "      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, saving pattern to localStorage');\n        \n        // Save to fallback storage"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 59,
            "endLine": 63,
            "content": "      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, saving pattern to localStorage');\n        \n        // Save to fallback storage\n        const newPattern: LearnedPattern = {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 61,
            "endLine": 65,
            "content": "        \n        // Save to fallback storage\n        const newPattern: LearnedPattern = {\n          id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          pattern,"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 62,
            "endLine": 66,
            "content": "        // Save to fallback storage\n        const newPattern: LearnedPattern = {\n          id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          pattern,\n          category_code: categoryCode,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 63,
            "endLine": 67,
            "content": "        const newPattern: LearnedPattern = {\n          id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          pattern,\n          category_code: categoryCode,\n          confidence,"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 104,
            "endLine": 108,
            "content": "      const newPattern: LearnedPattern = {\n        id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        pattern,\n        category_code: categoryCode,\n        confidence,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 64,
            "endLine": 68,
            "content": "          id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          pattern,\n          category_code: categoryCode,\n          confidence,\n          usage_count: 1,"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 105,
            "endLine": 109,
            "content": "        id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        pattern,\n        category_code: categoryCode,\n        confidence,\n        usage_count: 1,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 65,
            "endLine": 69,
            "content": "          pattern,\n          category_code: categoryCode,\n          confidence,\n          usage_count: 1,\n          last_used: new Date().toISOString(),"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 85,
            "endLine": 89,
            "content": "          pattern,\n          category_code: categoryCode,\n          confidence,\n          usage_count: 1,\n          last_used: new Date().toISOString(),"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 106,
            "endLine": 110,
            "content": "        pattern,\n        category_code: categoryCode,\n        confidence,\n        usage_count: 1,\n        last_used: new Date().toISOString(),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 66,
            "endLine": 70,
            "content": "          category_code: categoryCode,\n          confidence,\n          usage_count: 1,\n          last_used: new Date().toISOString(),\n          created_at: new Date().toISOString(),"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 107,
            "endLine": 111,
            "content": "        category_code: categoryCode,\n        confidence,\n        usage_count: 1,\n        last_used: new Date().toISOString(),\n        created_at: new Date().toISOString(),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 67,
            "endLine": 71,
            "content": "          confidence,\n          usage_count: 1,\n          last_used: new Date().toISOString(),\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 108,
            "endLine": 112,
            "content": "        confidence,\n        usage_count: 1,\n        last_used: new Date().toISOString(),\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 68,
            "endLine": 72,
            "content": "          usage_count: 1,\n          last_used: new Date().toISOString(),\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 109,
            "endLine": 113,
            "content": "        usage_count: 1,\n        last_used: new Date().toISOString(),\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 69,
            "endLine": 73,
            "content": "          last_used: new Date().toISOString(),\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n        "
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 110,
            "endLine": 114,
            "content": "        last_used: new Date().toISOString(),\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 70,
            "endLine": 74,
            "content": "          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n        \n        this.fallbackData.learnedPatterns.push(newPattern);"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 111,
            "endLine": 115,
            "content": "        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n      \n      this.fallbackData.learnedPatterns.push(newPattern);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 71,
            "endLine": 75,
            "content": "          updated_at: new Date().toISOString()\n        };\n        \n        this.fallbackData.learnedPatterns.push(newPattern);\n        this.saveFallbackData();"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 112,
            "endLine": 116,
            "content": "        updated_at: new Date().toISOString()\n      };\n      \n      this.fallbackData.learnedPatterns.push(newPattern);\n      this.saveFallbackData();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 73,
            "endLine": 77,
            "content": "        \n        this.fallbackData.learnedPatterns.push(newPattern);\n        this.saveFallbackData();\n        return;\n      }"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 74,
            "endLine": 78,
            "content": "        this.fallbackData.learnedPatterns.push(newPattern);\n        this.saveFallbackData();\n        return;\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 75,
            "endLine": 79,
            "content": "        this.saveFallbackData();\n        return;\n      }\n\n      const user = await getCurrentUser();"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 167,
            "endLine": 171,
            "content": "        this.saveFallbackData();\n        return;\n      }\n\n      const user = await getCurrentUser();"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 298,
            "endLine": 302,
            "content": "        this.saveFallbackData();\n        return;\n      }\n\n      const user = await getCurrentUser();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 77,
            "endLine": 81,
            "content": "      }\n\n      const user = await getCurrentUser();\n      \n      const { error } = await supabase"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 169,
            "endLine": 173,
            "content": "      }\n\n      const user = await getCurrentUser();\n      \n      const { error } = await supabase"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 92,
            "endLine": 96,
            "content": "\n      if (error) {\n        console.error('Error saving learned pattern:', error);\n        throw error;\n      }"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 93,
            "endLine": 97,
            "content": "      if (error) {\n        console.error('Error saving learned pattern:', error);\n        throw error;\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 97,
            "endLine": 101,
            "content": "\n      console.log('✅ Learned pattern saved successfully');\n    } catch (error) {\n      console.error('❌ Failed to save learned pattern:', error);\n      "
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 98,
            "endLine": 102,
            "content": "      console.log('✅ Learned pattern saved successfully');\n    } catch (error) {\n      console.error('❌ Failed to save learned pattern:', error);\n      \n      // Fallback to localStorage"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 101,
            "endLine": 105,
            "content": "      \n      // Fallback to localStorage\n      console.warn('⚠️ Falling back to localStorage for pattern storage');\n      const newPattern: LearnedPattern = {\n        id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 102,
            "endLine": 106,
            "content": "      // Fallback to localStorage\n      console.warn('⚠️ Falling back to localStorage for pattern storage');\n      const newPattern: LearnedPattern = {\n        id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        pattern,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 114,
            "endLine": 118,
            "content": "      \n      this.fallbackData.learnedPatterns.push(newPattern);\n      this.saveFallbackData();\n    }\n  }"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 115,
            "endLine": 119,
            "content": "      this.fallbackData.learnedPatterns.push(newPattern);\n      this.saveFallbackData();\n    }\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 123,
            "endLine": 127,
            "content": "      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, returning patterns from localStorage');\n        return this.fallbackData.learnedPatterns;\n      }"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 124,
            "endLine": 128,
            "content": "      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, returning patterns from localStorage');\n        return this.fallbackData.learnedPatterns;\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 127,
            "endLine": 131,
            "content": "      }\n\n      const user = await getCurrentUser();\n      \n      const { data, error } = await supabase"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 211,
            "endLine": 215,
            "content": "      }\n\n      const user = await getCurrentUser();\n      \n      const { data, error } = await supabase"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 128,
            "endLine": 132,
            "content": "\n      const user = await getCurrentUser();\n      \n      const { data, error } = await supabase\n        .from('learned_patterns')"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 129,
            "endLine": 133,
            "content": "      const user = await getCurrentUser();\n      \n      const { data, error } = await supabase\n        .from('learned_patterns')\n        .select('*')"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 130,
            "endLine": 134,
            "content": "      \n      const { data, error } = await supabase\n        .from('learned_patterns')\n        .select('*')\n        .eq('user_id', user?.id)"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 131,
            "endLine": 135,
            "content": "      const { data, error } = await supabase\n        .from('learned_patterns')\n        .select('*')\n        .eq('user_id', user?.id)\n        .order('last_used', { ascending: false });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 136,
            "endLine": 140,
            "content": "\n      if (error) {\n        console.error('Error fetching learned patterns:', error);\n        console.warn('⚠️ Falling back to localStorage patterns');\n        return this.fallbackData.learnedPatterns;"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 137,
            "endLine": 141,
            "content": "      if (error) {\n        console.error('Error fetching learned patterns:', error);\n        console.warn('⚠️ Falling back to localStorage patterns');\n        return this.fallbackData.learnedPatterns;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 139,
            "endLine": 143,
            "content": "        console.warn('⚠️ Falling back to localStorage patterns');\n        return this.fallbackData.learnedPatterns;\n      }\n\n      return data || [];"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 146,
            "endLine": 150,
            "content": "      console.warn('⚠️ Falling back to localStorage patterns');\n      return this.fallbackData.learnedPatterns;\n    }\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 142,
            "endLine": 146,
            "content": "\n      return data || [];\n    } catch (error) {\n      console.error('❌ Failed to fetch learned patterns:', error);\n      console.warn('⚠️ Falling back to localStorage patterns');"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 143,
            "endLine": 147,
            "content": "      return data || [];\n    } catch (error) {\n      console.error('❌ Failed to fetch learned patterns:', error);\n      console.warn('⚠️ Falling back to localStorage patterns');\n      return this.fallbackData.learnedPatterns;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 154,
            "endLine": 158,
            "content": "      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, saving correction to localStorage');\n        \n        // Save to fallback storage"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 155,
            "endLine": 159,
            "content": "      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, saving correction to localStorage');\n        \n        // Save to fallback storage\n        const newCorrection: UserCorrection = {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 157,
            "endLine": 161,
            "content": "        \n        // Save to fallback storage\n        const newCorrection: UserCorrection = {\n          id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          original_description: originalDescription,"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 158,
            "endLine": 162,
            "content": "        // Save to fallback storage\n        const newCorrection: UserCorrection = {\n          id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          original_description: originalDescription,\n          corrected_category_code: correctedCategoryCode,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 159,
            "endLine": 163,
            "content": "        const newCorrection: UserCorrection = {\n          id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          original_description: originalDescription,\n          corrected_category_code: correctedCategoryCode,\n          created_at: new Date().toISOString()"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 192,
            "endLine": 196,
            "content": "      const newCorrection: UserCorrection = {\n        id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        original_description: originalDescription,\n        corrected_category_code: correctedCategoryCode,\n        created_at: new Date().toISOString()"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 160,
            "endLine": 164,
            "content": "          id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          original_description: originalDescription,\n          corrected_category_code: correctedCategoryCode,\n          created_at: new Date().toISOString()\n        };"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 193,
            "endLine": 197,
            "content": "        id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        original_description: originalDescription,\n        corrected_category_code: correctedCategoryCode,\n        created_at: new Date().toISOString()\n      };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 161,
            "endLine": 165,
            "content": "          original_description: originalDescription,\n          corrected_category_code: correctedCategoryCode,\n          created_at: new Date().toISOString()\n        };\n        "
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 194,
            "endLine": 198,
            "content": "        original_description: originalDescription,\n        corrected_category_code: correctedCategoryCode,\n        created_at: new Date().toISOString()\n      };\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 162,
            "endLine": 166,
            "content": "          corrected_category_code: correctedCategoryCode,\n          created_at: new Date().toISOString()\n        };\n        \n        this.fallbackData.userCorrections.push(newCorrection);"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 195,
            "endLine": 199,
            "content": "        corrected_category_code: correctedCategoryCode,\n        created_at: new Date().toISOString()\n      };\n      \n      this.fallbackData.userCorrections.push(newCorrection);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 163,
            "endLine": 167,
            "content": "          created_at: new Date().toISOString()\n        };\n        \n        this.fallbackData.userCorrections.push(newCorrection);\n        this.saveFallbackData();"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 196,
            "endLine": 200,
            "content": "        created_at: new Date().toISOString()\n      };\n      \n      this.fallbackData.userCorrections.push(newCorrection);\n      this.saveFallbackData();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 165,
            "endLine": 169,
            "content": "        \n        this.fallbackData.userCorrections.push(newCorrection);\n        this.saveFallbackData();\n        return;\n      }"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 166,
            "endLine": 170,
            "content": "        this.fallbackData.userCorrections.push(newCorrection);\n        this.saveFallbackData();\n        return;\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 180,
            "endLine": 184,
            "content": "\n      if (error) {\n        console.error('Error recording user correction:', error);\n        throw error;\n      }"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 181,
            "endLine": 185,
            "content": "      if (error) {\n        console.error('Error recording user correction:', error);\n        throw error;\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 185,
            "endLine": 189,
            "content": "\n      console.log('✅ User correction recorded successfully');\n    } catch (error) {\n      console.error('❌ Failed to record user correction:', error);\n      "
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 186,
            "endLine": 190,
            "content": "      console.log('✅ User correction recorded successfully');\n    } catch (error) {\n      console.error('❌ Failed to record user correction:', error);\n      \n      // Fallback to localStorage"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 189,
            "endLine": 193,
            "content": "      \n      // Fallback to localStorage\n      console.warn('⚠️ Falling back to localStorage for correction storage');\n      const newCorrection: UserCorrection = {\n        id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 190,
            "endLine": 194,
            "content": "      // Fallback to localStorage\n      console.warn('⚠️ Falling back to localStorage for correction storage');\n      const newCorrection: UserCorrection = {\n        id: `fallback_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        original_description: originalDescription,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 198,
            "endLine": 202,
            "content": "      \n      this.fallbackData.userCorrections.push(newCorrection);\n      this.saveFallbackData();\n    }\n  }"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 199,
            "endLine": 203,
            "content": "      this.fallbackData.userCorrections.push(newCorrection);\n      this.saveFallbackData();\n    }\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 207,
            "endLine": 211,
            "content": "      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, returning corrections from localStorage');\n        return this.fallbackData.userCorrections;\n      }"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 208,
            "endLine": 212,
            "content": "      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, returning corrections from localStorage');\n        return this.fallbackData.userCorrections;\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 212,
            "endLine": 216,
            "content": "\n      const user = await getCurrentUser();\n      \n      const { data, error } = await supabase\n        .from('user_corrections')"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 213,
            "endLine": 217,
            "content": "      const user = await getCurrentUser();\n      \n      const { data, error } = await supabase\n        .from('user_corrections')\n        .select('*')"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 214,
            "endLine": 218,
            "content": "      \n      const { data, error } = await supabase\n        .from('user_corrections')\n        .select('*')\n        .eq('user_id', user?.id)"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 215,
            "endLine": 219,
            "content": "      const { data, error } = await supabase\n        .from('user_corrections')\n        .select('*')\n        .eq('user_id', user?.id)\n        .order('created_at', { ascending: false });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 220,
            "endLine": 224,
            "content": "\n      if (error) {\n        console.error('Error fetching user corrections:', error);\n        console.warn('⚠️ Falling back to localStorage corrections');\n        return this.fallbackData.userCorrections;"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 221,
            "endLine": 225,
            "content": "      if (error) {\n        console.error('Error fetching user corrections:', error);\n        console.warn('⚠️ Falling back to localStorage corrections');\n        return this.fallbackData.userCorrections;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 223,
            "endLine": 227,
            "content": "        console.warn('⚠️ Falling back to localStorage corrections');\n        return this.fallbackData.userCorrections;\n      }\n\n      return data || [];"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 230,
            "endLine": 234,
            "content": "      console.warn('⚠️ Falling back to localStorage corrections');\n      return this.fallbackData.userCorrections;\n    }\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 226,
            "endLine": 230,
            "content": "\n      return data || [];\n    } catch (error) {\n      console.error('❌ Failed to fetch user corrections:', error);\n      console.warn('⚠️ Falling back to localStorage corrections');"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 227,
            "endLine": 231,
            "content": "      return data || [];\n    } catch (error) {\n      console.error('❌ Failed to fetch user corrections:', error);\n      console.warn('⚠️ Falling back to localStorage corrections');\n      return this.fallbackData.userCorrections;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 234,
            "endLine": 238,
            "content": "\n  async updatePatternUsage(pattern: string): Promise<void> {\n    try {\n      const supabase = getSupabaseClient();\n      "
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 235,
            "endLine": 239,
            "content": "  async updatePatternUsage(pattern: string): Promise<void> {\n    try {\n      const supabase = getSupabaseClient();\n      \n      if (!supabase || !isSupabaseEnabled()) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 238,
            "endLine": 242,
            "content": "      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, updating pattern usage in localStorage');\n        \n        // Update in fallback storage"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 239,
            "endLine": 243,
            "content": "      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, updating pattern usage in localStorage');\n        \n        // Update in fallback storage\n        const existingPattern = this.fallbackData.learnedPatterns.find(p => p.pattern === pattern);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 241,
            "endLine": 245,
            "content": "        \n        // Update in fallback storage\n        const existingPattern = this.fallbackData.learnedPatterns.find(p => p.pattern === pattern);\n        if (existingPattern) {\n          existingPattern.usage_count += 1;"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 242,
            "endLine": 246,
            "content": "        // Update in fallback storage\n        const existingPattern = this.fallbackData.learnedPatterns.find(p => p.pattern === pattern);\n        if (existingPattern) {\n          existingPattern.usage_count += 1;\n          existingPattern.last_used = new Date().toISOString();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 252,
            "endLine": 256,
            "content": "\n      const user = await getCurrentUser();\n      \n      // First get the current usage count, then increment\n      const { data: currentPattern, error: fetchError } = await supabase"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 253,
            "endLine": 257,
            "content": "      const user = await getCurrentUser();\n      \n      // First get the current usage count, then increment\n      const { data: currentPattern, error: fetchError } = await supabase\n        .from('learned_patterns')"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 254,
            "endLine": 258,
            "content": "      \n      // First get the current usage count, then increment\n      const { data: currentPattern, error: fetchError } = await supabase\n        .from('learned_patterns')\n        .select('usage_count')"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 255,
            "endLine": 259,
            "content": "      // First get the current usage count, then increment\n      const { data: currentPattern, error: fetchError } = await supabase\n        .from('learned_patterns')\n        .select('usage_count')\n        .eq('pattern', pattern)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 262,
            "endLine": 266,
            "content": "\n      if (fetchError) {\n        console.error('Error fetching current pattern:', fetchError);\n        return;\n      }"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 263,
            "endLine": 267,
            "content": "      if (fetchError) {\n        console.error('Error fetching current pattern:', fetchError);\n        return;\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 267,
            "endLine": 271,
            "content": "\n      const { error } = await supabase\n        .from('learned_patterns')\n        .update({\n          usage_count: (currentPattern?.usage_count || 0) + 1,"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 268,
            "endLine": 272,
            "content": "      const { error } = await supabase\n        .from('learned_patterns')\n        .update({\n          usage_count: (currentPattern?.usage_count || 0) + 1,\n          last_used: new Date().toISOString(),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 277,
            "endLine": 281,
            "content": "\n      if (error) {\n        console.error('Error updating pattern usage:', error);\n        // Don't throw here, it's not critical\n      }"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 278,
            "endLine": 282,
            "content": "      if (error) {\n        console.error('Error updating pattern usage:', error);\n        // Don't throw here, it's not critical\n      }\n    } catch (error) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 291,
            "endLine": 295,
            "content": "      \n      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, clearing localStorage data');\n        \n        // Clear fallback storage"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 292,
            "endLine": 296,
            "content": "      if (!supabase || !isSupabaseEnabled()) {\n        console.warn('⚠️ Supabase not available, clearing localStorage data');\n        \n        // Clear fallback storage\n        this.fallbackData.learnedPatterns = [];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 294,
            "endLine": 298,
            "content": "        \n        // Clear fallback storage\n        this.fallbackData.learnedPatterns = [];\n        this.fallbackData.userCorrections = [];\n        this.saveFallbackData();"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 295,
            "endLine": 299,
            "content": "        // Clear fallback storage\n        this.fallbackData.learnedPatterns = [];\n        this.fallbackData.userCorrections = [];\n        this.saveFallbackData();\n        return;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 301,
            "endLine": 305,
            "content": "\n      const user = await getCurrentUser();\n      \n      // Clear learned patterns\n      const { error: patternsError } = await supabase"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 302,
            "endLine": 306,
            "content": "      const user = await getCurrentUser();\n      \n      // Clear learned patterns\n      const { error: patternsError } = await supabase\n        .from('learned_patterns')"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 303,
            "endLine": 307,
            "content": "      \n      // Clear learned patterns\n      const { error: patternsError } = await supabase\n        .from('learned_patterns')\n        .delete()"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 304,
            "endLine": 308,
            "content": "      // Clear learned patterns\n      const { error: patternsError } = await supabase\n        .from('learned_patterns')\n        .delete()\n        .eq('user_id', user?.id);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 313,
            "endLine": 317,
            "content": "\n      // Clear user corrections\n      const { error: correctionsError } = await supabase\n        .from('user_corrections')\n        .delete()"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 314,
            "endLine": 318,
            "content": "      // Clear user corrections\n      const { error: correctionsError } = await supabase\n        .from('user_corrections')\n        .delete()\n        .eq('user_id', user?.id);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 323,
            "endLine": 327,
            "content": "\n      console.log('✅ All user data cleared successfully');\n    } catch (error) {\n      console.error('❌ Failed to clear user data:', error);\n      throw error;"
          },
          {
            "file": "src/lib/databaseService.ts",
            "startLine": 324,
            "endLine": 328,
            "content": "      console.log('✅ All user data cleared successfully');\n    } catch (error) {\n      console.error('❌ Failed to clear user data:', error);\n      throw error;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 2,
            "endLine": 6,
            "content": "\nexport interface DuplicateGroup {\n  originalIndex: number;\n  duplicateIndexes: number[];\n  transaction: Transaction;"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 3,
            "endLine": 7,
            "content": "export interface DuplicateGroup {\n  originalIndex: number;\n  duplicateIndexes: number[];\n  transaction: Transaction;\n  confidence: number;"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 61,
            "endLine": 65,
            "content": "\nexport interface DuplicateGroup {\n  originalIndex: number;\n  duplicateIndexes: number[];\n  transaction: Transaction;"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 62,
            "endLine": 66,
            "content": "export interface DuplicateGroup {\n  originalIndex: number;\n  duplicateIndexes: number[];\n  transaction: Transaction;\n  confidence: number;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 4,
            "endLine": 8,
            "content": "  originalIndex: number;\n  duplicateIndexes: number[];\n  transaction: Transaction;\n  confidence: number;\n}"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 63,
            "endLine": 67,
            "content": "  originalIndex: number;\n  duplicateIndexes: number[];\n  transaction: Transaction;\n  confidence: number;\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 5,
            "endLine": 9,
            "content": "  duplicateIndexes: number[];\n  transaction: Transaction;\n  confidence: number;\n}\n"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 64,
            "endLine": 68,
            "content": "  duplicateIndexes: number[];\n  transaction: Transaction;\n  confidence: number;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 6,
            "endLine": 10,
            "content": "  transaction: Transaction;\n  confidence: number;\n}\n\nexport interface DuplicateDetectionResult {"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 65,
            "endLine": 69,
            "content": "  transaction: Transaction;\n  confidence: number;\n}\n\nexport interface DuplicateDetectionResult {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 7,
            "endLine": 11,
            "content": "  confidence: number;\n}\n\nexport interface DuplicateDetectionResult {\n  duplicateGroups: DuplicateGroup[];"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 66,
            "endLine": 70,
            "content": "  confidence: number;\n}\n\nexport interface DuplicateDetectionResult {\n  duplicateGroups: DuplicateGroup[];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 8,
            "endLine": 12,
            "content": "}\n\nexport interface DuplicateDetectionResult {\n  duplicateGroups: DuplicateGroup[];\n  cleanTransactions: Transaction[];"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 67,
            "endLine": 71,
            "content": "}\n\nexport interface DuplicateDetectionResult {\n  duplicateGroups: DuplicateGroup[];\n  cleanTransactions: Transaction[];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 9,
            "endLine": 13,
            "content": "\nexport interface DuplicateDetectionResult {\n  duplicateGroups: DuplicateGroup[];\n  cleanTransactions: Transaction[];\n  duplicateCount: number;"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 10,
            "endLine": 14,
            "content": "export interface DuplicateDetectionResult {\n  duplicateGroups: DuplicateGroup[];\n  cleanTransactions: Transaction[];\n  duplicateCount: number;\n}"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 68,
            "endLine": 72,
            "content": "\nexport interface DuplicateDetectionResult {\n  duplicateGroups: DuplicateGroup[];\n  cleanTransactions: Transaction[];\n  duplicateCount: number;"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 69,
            "endLine": 73,
            "content": "export interface DuplicateDetectionResult {\n  duplicateGroups: DuplicateGroup[];\n  cleanTransactions: Transaction[];\n  duplicateCount: number;\n}"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 11,
            "endLine": 15,
            "content": "  duplicateGroups: DuplicateGroup[];\n  cleanTransactions: Transaction[];\n  duplicateCount: number;\n}\n"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 70,
            "endLine": 74,
            "content": "  duplicateGroups: DuplicateGroup[];\n  cleanTransactions: Transaction[];\n  duplicateCount: number;\n}\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 15,
            "endLine": 19,
            "content": "\n/**\n * Normalizes a string for comparison by removing extra spaces, converting to lowercase,\n * and removing common variations\n */"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 16,
            "endLine": 20,
            "content": "/**\n * Normalizes a string for comparison by removing extra spaces, converting to lowercase,\n * and removing common variations\n */\nfunction normalizeString(str: string): string {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 27,
            "endLine": 31,
            "content": "\n/**\n * Normalizes an amount for comparison by rounding to 2 decimal places\n */\nfunction normalizeAmount(amount: number): number {"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 28,
            "endLine": 32,
            "content": "/**\n * Normalizes an amount for comparison by rounding to 2 decimal places\n */\nfunction normalizeAmount(amount: number): number {\n  return Math.round(amount * 100) / 100;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 34,
            "endLine": 38,
            "content": "\n/**\n * Calculates similarity score between two transactions\n * Returns a score from 0 (no match) to 1 (perfect match)\n */"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 35,
            "endLine": 39,
            "content": "/**\n * Calculates similarity score between two transactions\n * Returns a score from 0 (no match) to 1 (perfect match)\n */\nfunction calculateSimilarity(t1: Transaction, t2: Transaction): number {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 48,
            "endLine": 52,
            "content": "\n  // Amount comparison (exact match = 0.4 points)\n  if (normalizeAmount(t1.amount) === normalizeAmount(t2.amount)) {\n    score += 0.4;\n  }"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 49,
            "endLine": 53,
            "content": "  // Amount comparison (exact match = 0.4 points)\n  if (normalizeAmount(t1.amount) === normalizeAmount(t2.amount)) {\n    score += 0.4;\n  }\n  factors += 0.4;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 54,
            "endLine": 58,
            "content": "\n  // Description comparison (exact match = 0.2 points)\n  const desc1 = normalizeString(t1.description);\n  const desc2 = normalizeString(t2.description);\n  "
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 55,
            "endLine": 59,
            "content": "  // Description comparison (exact match = 0.2 points)\n  const desc1 = normalizeString(t1.description);\n  const desc2 = normalizeString(t2.description);\n  \n  if (desc1 === desc2) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 58,
            "endLine": 62,
            "content": "  \n  if (desc1 === desc2) {\n    score += 0.2;\n  } else if (desc1.includes(desc2) || desc2.includes(desc1)) {\n    score += 0.1; // Partial match"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 59,
            "endLine": 63,
            "content": "  if (desc1 === desc2) {\n    score += 0.2;\n  } else if (desc1.includes(desc2) || desc2.includes(desc1)) {\n    score += 0.1; // Partial match\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 68,
            "endLine": 72,
            "content": "\n/**\n * Detects duplicate transactions in an array\n * Only flags as duplicate if date, amount, and description are all identical (after normalization)\n * @param transactions Array of transactions to check"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 69,
            "endLine": 73,
            "content": "/**\n * Detects duplicate transactions in an array\n * Only flags as duplicate if date, amount, and description are all identical (after normalization)\n * @param transactions Array of transactions to check\n * @returns Detection result with duplicates grouped"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 88,
            "endLine": 92,
            "content": "\n  const seen = new Map<string, number>();\n\n  for (let i = 0; i < transactions.length; i++) {\n    if (processedIndexes.has(i)) continue;"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 89,
            "endLine": 93,
            "content": "  const seen = new Map<string, number>();\n\n  for (let i = 0; i < transactions.length; i++) {\n    if (processedIndexes.has(i)) continue;\n    const key = makeKey(transactions[i]);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 90,
            "endLine": 94,
            "content": "\n  for (let i = 0; i < transactions.length; i++) {\n    if (processedIndexes.has(i)) continue;\n    const key = makeKey(transactions[i]);\n    if (seen.has(key)) {"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 91,
            "endLine": 95,
            "content": "  for (let i = 0; i < transactions.length; i++) {\n    if (processedIndexes.has(i)) continue;\n    const key = makeKey(transactions[i]);\n    if (seen.has(key)) {\n      // Already seen, add to group"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 126,
            "endLine": 130,
            "content": "\n  // Create clean transactions array (removing duplicates)\n  const cleanTransactions = transactions.filter((_, index) => !processedIndexes.has(index));\n\n  return {"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 127,
            "endLine": 131,
            "content": "  // Create clean transactions array (removing duplicates)\n  const cleanTransactions = transactions.filter((_, index) => !processedIndexes.has(index));\n\n  return {\n    duplicateGroups,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 129,
            "endLine": 133,
            "content": "\n  return {\n    duplicateGroups,\n    cleanTransactions,\n    duplicateCount: duplicateGroups.reduce((sum, group) => sum + group.duplicateIndexes.length, 0)"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 130,
            "endLine": 134,
            "content": "  return {\n    duplicateGroups,\n    cleanTransactions,\n    duplicateCount: duplicateGroups.reduce((sum, group) => sum + group.duplicateIndexes.length, 0)\n  };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 136,
            "endLine": 140,
            "content": "\n/**\n * Checks if a new transaction is a duplicate of existing ones\n * @param newTransaction Transaction to check\n * @param existingTransactions Array of existing transactions"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 137,
            "endLine": 141,
            "content": "/**\n * Checks if a new transaction is a duplicate of existing ones\n * @param newTransaction Transaction to check\n * @param existingTransactions Array of existing transactions\n * @param threshold Similarity threshold (0-1, default 0.9)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 150,
            "endLine": 154,
            "content": "  \n  for (let i = 0; i < existingTransactions.length; i++) {\n    const similarity = calculateSimilarity(newTransaction, existingTransactions[i]);\n    if (similarity >= threshold) {\n      duplicates.push(i);"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 151,
            "endLine": 155,
            "content": "  for (let i = 0; i < existingTransactions.length; i++) {\n    const similarity = calculateSimilarity(newTransaction, existingTransactions[i]);\n    if (similarity >= threshold) {\n      duplicates.push(i);\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 160,
            "endLine": 164,
            "content": "\n/**\n * Formats duplicate detection results for display\n */\nexport function formatDuplicateReport(result: DuplicateDetectionResult): string {"
          },
          {
            "file": "src/lib/duplicateDetector.ts",
            "startLine": 161,
            "endLine": 165,
            "content": "/**\n * Formats duplicate detection results for display\n */\nexport function formatDuplicateReport(result: DuplicateDetectionResult): string {\n  if (result.duplicateCount === 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 2,
            "endLine": 6,
            "content": "\nexport class ErrorHandler {\n  /**\n   * Convert technical errors to user-friendly messages with enhanced header formatting support\n   */"
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 3,
            "endLine": 7,
            "content": "export class ErrorHandler {\n  /**\n   * Convert technical errors to user-friendly messages with enhanced header formatting support\n   */\n  static handleCSVError(error: any): string {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 9,
            "endLine": 13,
            "content": "    \n    // Enhanced header formatting errors\n    if (message.includes('No date column found')) {\n      return 'Date column not found. Your CSV needs a column with dates. Common headers: \"Date\", \"Transaction Date\", \"Posting Date\", \"Value Date\". Please check your file headers and try again.';\n    }"
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 10,
            "endLine": 14,
            "content": "    // Enhanced header formatting errors\n    if (message.includes('No date column found')) {\n      return 'Date column not found. Your CSV needs a column with dates. Common headers: \"Date\", \"Transaction Date\", \"Posting Date\", \"Value Date\". Please check your file headers and try again.';\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 14,
            "endLine": 18,
            "content": "    \n    if (message.includes('No description column found')) {\n      return 'Description column not found. Your CSV needs a column with transaction details. Common headers: \"Description\", \"Transaction Details\", \"Memo\", \"Narration\", \"Payee\". Please check your file headers and try again.';\n    }\n    "
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 15,
            "endLine": 19,
            "content": "    if (message.includes('No description column found')) {\n      return 'Description column not found. Your CSV needs a column with transaction details. Common headers: \"Description\", \"Transaction Details\", \"Memo\", \"Narration\", \"Payee\". Please check your file headers and try again.';\n    }\n    \n    if (message.includes('No amount column found')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 18,
            "endLine": 22,
            "content": "    \n    if (message.includes('No amount column found')) {\n      return 'Amount column not found. Your CSV needs a column with transaction amounts. Common headers: \"Amount\", \"Transaction Amount\", \"Value\", \"Debit\", \"Credit\". Please check your file headers and try again.';\n    }\n    "
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 19,
            "endLine": 23,
            "content": "    if (message.includes('No amount column found')) {\n      return 'Amount column not found. Your CSV needs a column with transaction amounts. Common headers: \"Amount\", \"Transaction Amount\", \"Value\", \"Debit\", \"Credit\". Please check your file headers and try again.';\n    }\n    \n    if (message.includes('No clear date column found')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 22,
            "endLine": 26,
            "content": "    \n    if (message.includes('No clear date column found')) {\n      return 'Date column is unclear. Please ensure your CSV has a clear date column. Recommended header: \"Date\". Other accepted formats: \"Transaction Date\", \"Posting Date\", \"Value Date\".';\n    }\n    "
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 23,
            "endLine": 27,
            "content": "    if (message.includes('No clear date column found')) {\n      return 'Date column is unclear. Please ensure your CSV has a clear date column. Recommended header: \"Date\". Other accepted formats: \"Transaction Date\", \"Posting Date\", \"Value Date\".';\n    }\n    \n    if (message.includes('No clear description column found')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 26,
            "endLine": 30,
            "content": "    \n    if (message.includes('No clear description column found')) {\n      return 'Description column is unclear. Please ensure your CSV has a clear description column. Recommended header: \"Description\". Other accepted formats: \"Transaction Details\", \"Memo\", \"Narration\".';\n    }\n    "
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 27,
            "endLine": 31,
            "content": "    if (message.includes('No clear description column found')) {\n      return 'Description column is unclear. Please ensure your CSV has a clear description column. Recommended header: \"Description\". Other accepted formats: \"Transaction Details\", \"Memo\", \"Narration\".';\n    }\n    \n    if (message.includes('No clear amount column found')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 30,
            "endLine": 34,
            "content": "    \n    if (message.includes('No clear amount column found')) {\n      return 'Amount column is unclear. Please ensure your CSV has a clear amount column. Recommended header: \"Amount\". Other accepted formats: \"Transaction Amount\", \"Value\", \"Debit/Credit\".';\n    }\n    "
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 31,
            "endLine": 35,
            "content": "    if (message.includes('No clear amount column found')) {\n      return 'Amount column is unclear. Please ensure your CSV has a clear amount column. Recommended header: \"Amount\". Other accepted formats: \"Transaction Amount\", \"Value\", \"Debit/Credit\".';\n    }\n    \n    // File format errors"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 34,
            "endLine": 38,
            "content": "    \n    // File format errors\n    if (message.includes('Unsupported bank format')) {\n      return 'Your bank format is not yet supported. Please ensure your CSV has Date, Description, and Amount columns, or contact support for your bank format.';\n    }"
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 35,
            "endLine": 39,
            "content": "    // File format errors\n    if (message.includes('Unsupported bank format')) {\n      return 'Your bank format is not yet supported. Please ensure your CSV has Date, Description, and Amount columns, or contact support for your bank format.';\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 39,
            "endLine": 43,
            "content": "    \n    if (message.includes('Invalid CSV format')) {\n      return 'CSV format error. Please check that your file has proper headers (Date, Description, Amount) and try again.';\n    }\n    "
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 40,
            "endLine": 44,
            "content": "    if (message.includes('Invalid CSV format')) {\n      return 'CSV format error. Please check that your file has proper headers (Date, Description, Amount) and try again.';\n    }\n    \n    if (message.includes('No valid transactions found')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 43,
            "endLine": 47,
            "content": "    \n    if (message.includes('No valid transactions found')) {\n      return 'No valid transactions found in your file. Please check the CSV format and ensure it contains transaction data.';\n    }\n    "
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 44,
            "endLine": 48,
            "content": "    if (message.includes('No valid transactions found')) {\n      return 'No valid transactions found in your file. Please check the CSV format and ensure it contains transaction data.';\n    }\n    \n    if (message.includes('CSV format not recognized')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 47,
            "endLine": 51,
            "content": "    \n    if (message.includes('CSV format not recognized')) {\n      return 'CSV format not recognized. Please ensure your file has columns for Date, Description, and Amount. Common variations like \"Transaction Date\", \"Transaction Details\", \"Transaction Amount\" are supported.';\n    }\n    "
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 48,
            "endLine": 52,
            "content": "    if (message.includes('CSV format not recognized')) {\n      return 'CSV format not recognized. Please ensure your file has columns for Date, Description, and Amount. Common variations like \"Transaction Date\", \"Transaction Details\", \"Transaction Amount\" are supported.';\n    }\n    \n    // Papa Parse specific errors"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 51,
            "endLine": 55,
            "content": "    \n    // Papa Parse specific errors\n    if (error?.type === 'Delimiter') {\n      return 'CSV delimiter error. Please ensure your file uses commas (,) to separate columns.';\n    }"
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 52,
            "endLine": 56,
            "content": "    // Papa Parse specific errors\n    if (error?.type === 'Delimiter') {\n      return 'CSV delimiter error. Please ensure your file uses commas (,) to separate columns.';\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 56,
            "endLine": 60,
            "content": "    \n    if (error?.type === 'Quotes') {\n      return 'CSV quote error. Please check for unmatched quotation marks in your file.';\n    }\n    "
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 57,
            "endLine": 61,
            "content": "    if (error?.type === 'Quotes') {\n      return 'CSV quote error. Please check for unmatched quotation marks in your file.';\n    }\n    \n    // File size/content errors"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 60,
            "endLine": 64,
            "content": "    \n    // File size/content errors\n    if (message.includes('File too large')) {\n      return 'File is too large. Please upload a CSV file smaller than 10MB.';\n    }"
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 61,
            "endLine": 65,
            "content": "    // File size/content errors\n    if (message.includes('File too large')) {\n      return 'File is too large. Please upload a CSV file smaller than 10MB.';\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 65,
            "endLine": 69,
            "content": "    \n    if (message.includes('Empty file')) {\n      return 'The uploaded file appears to be empty. Please check your CSV file and try again.';\n    }\n    "
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 66,
            "endLine": 70,
            "content": "    if (message.includes('Empty file')) {\n      return 'The uploaded file appears to be empty. Please check your CSV file and try again.';\n    }\n    \n    // Generic fallback with enhanced suggestions"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 69,
            "endLine": 73,
            "content": "    \n    // Generic fallback with enhanced suggestions\n    return `Processing error: ${message}. Please check your CSV format and ensure it has proper headers (Date, Description, Amount).`;\n  }\n"
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 70,
            "endLine": 74,
            "content": "    // Generic fallback with enhanced suggestions\n    return `Processing error: ${message}. Please check your CSV format and ensure it has proper headers (Date, Description, Amount).`;\n  }\n\n  /**"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 73,
            "endLine": 77,
            "content": "\n  /**\n   * Generate user-friendly validation messages\n   */\n  static formatValidationResult(validation: ValidationResult): string {"
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 74,
            "endLine": 78,
            "content": "  /**\n   * Generate user-friendly validation messages\n   */\n  static formatValidationResult(validation: ValidationResult): string {\n    if (validation.errors.length > 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 88,
            "endLine": 92,
            "content": "\n  /**\n   * Log technical details for debugging\n   */\n  static logTechnicalDetails(error: any, context: string): void {"
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 89,
            "endLine": 93,
            "content": "  /**\n   * Log technical details for debugging\n   */\n  static logTechnicalDetails(error: any, context: string): void {\n    console.group(`🔧 Technical Error Details (${context})`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 100,
            "endLine": 104,
            "content": "\n  /**\n   * Get header formatting suggestions for better CSV compatibility\n   */\n  static getHeaderFormattingTips(): string[] {"
          },
          {
            "file": "src/lib/errorHandler.ts",
            "startLine": 101,
            "endLine": 105,
            "content": "  /**\n   * Get header formatting suggestions for better CSV compatibility\n   */\n  static getHeaderFormattingTips(): string[] {\n    return ["
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 11,
            "endLine": 15,
            "content": "\nexport interface ExportColumn {\n  header: string;\n  key: string;\n  transform?: (transaction: Transaction, chartOfAccounts: ChartOfAccounts) => string;"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 12,
            "endLine": 16,
            "content": "export interface ExportColumn {\n  header: string;\n  key: string;\n  transform?: (transaction: Transaction, chartOfAccounts: ChartOfAccounts) => string;\n  required?: boolean;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 57,
            "endLine": 61,
            "content": "\nexport class ExportManager {\n  private chartOfAccounts: ChartOfAccounts;\n\n  constructor(province: string = 'ON') {"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 58,
            "endLine": 62,
            "content": "export class ExportManager {\n  private chartOfAccounts: ChartOfAccounts;\n\n  constructor(province: string = 'ON') {\n    this.chartOfAccounts = new ChartOfAccounts(province);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 91,
            "endLine": 95,
            "content": "        fileExtension: 'csv',\n        columns: [\n          { header: 'Date', key: 'date', required: true, transform: (t) => new Date(t.date).toLocaleDateString('en-AU') },\n          { header: 'Amount', key: 'amount', required: true, transform: (t) => t.amount.toFixed(2) },\n          { header: 'Payee', key: 'merchant' },"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 117,
            "endLine": 121,
            "content": "        fileExtension: 'csv',\n        columns: [\n          { header: 'Date', key: 'date', required: true, transform: (t) => new Date(t.date).toLocaleDateString('en-AU') },\n          { header: 'Amount', key: 'amount', required: true, transform: (t) => t.amount.toFixed(2) },\n          { header: 'Payee', key: 'merchant' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 92,
            "endLine": 96,
            "content": "        columns: [\n          { header: 'Date', key: 'date', required: true, transform: (t) => new Date(t.date).toLocaleDateString('en-AU') },\n          { header: 'Amount', key: 'amount', required: true, transform: (t) => t.amount.toFixed(2) },\n          { header: 'Payee', key: 'merchant' },\n          { header: 'Description', key: 'description' },"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 118,
            "endLine": 122,
            "content": "        columns: [\n          { header: 'Date', key: 'date', required: true, transform: (t) => new Date(t.date).toLocaleDateString('en-AU') },\n          { header: 'Amount', key: 'amount', required: true, transform: (t) => t.amount.toFixed(2) },\n          { header: 'Payee', key: 'merchant' },\n          { header: 'Description', key: 'description' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 93,
            "endLine": 97,
            "content": "          { header: 'Date', key: 'date', required: true, transform: (t) => new Date(t.date).toLocaleDateString('en-AU') },\n          { header: 'Amount', key: 'amount', required: true, transform: (t) => t.amount.toFixed(2) },\n          { header: 'Payee', key: 'merchant' },\n          { header: 'Description', key: 'description' },\n          { header: 'Reference', key: 'id' },"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 119,
            "endLine": 123,
            "content": "          { header: 'Date', key: 'date', required: true, transform: (t) => new Date(t.date).toLocaleDateString('en-AU') },\n          { header: 'Amount', key: 'amount', required: true, transform: (t) => t.amount.toFixed(2) },\n          { header: 'Payee', key: 'merchant' },\n          { header: 'Description', key: 'description' },\n          { "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 94,
            "endLine": 98,
            "content": "          { header: 'Amount', key: 'amount', required: true, transform: (t) => t.amount.toFixed(2) },\n          { header: 'Payee', key: 'merchant' },\n          { header: 'Description', key: 'description' },\n          { header: 'Reference', key: 'id' },\n          { header: 'Cheque Number', key: 'checkNumber', transform: () => '' },"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 120,
            "endLine": 124,
            "content": "          { header: 'Amount', key: 'amount', required: true, transform: (t) => t.amount.toFixed(2) },\n          { header: 'Payee', key: 'merchant' },\n          { header: 'Description', key: 'description' },\n          { \n            header: 'Account Code', "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 99,
            "endLine": 103,
            "content": "          { \n            header: 'Account Code', \n            key: 'accountCode',\n            required: true,\n            transform: (t, coa) => t.accountCode || this.getAccountForCategory(t.category, coa)"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 123,
            "endLine": 127,
            "content": "          { \n            header: 'Account Code', \n            key: 'accountCode',\n            required: true,\n            transform: (t, coa) => t.accountCode || this.getAccountForCategory(t.category, coa)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 100,
            "endLine": 104,
            "content": "            header: 'Account Code', \n            key: 'accountCode',\n            required: true,\n            transform: (t, coa) => t.accountCode || this.getAccountForCategory(t.category, coa)\n          },"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 124,
            "endLine": 128,
            "content": "            header: 'Account Code', \n            key: 'accountCode',\n            required: true,\n            transform: (t, coa) => t.accountCode || this.getAccountForCategory(t.category, coa)\n          },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 101,
            "endLine": 105,
            "content": "            key: 'accountCode',\n            required: true,\n            transform: (t, coa) => t.accountCode || this.getAccountForCategory(t.category, coa)\n          },\n          {"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 125,
            "endLine": 129,
            "content": "            key: 'accountCode',\n            required: true,\n            transform: (t, coa) => t.accountCode || this.getAccountForCategory(t.category, coa)\n          },\n          {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 102,
            "endLine": 106,
            "content": "            required: true,\n            transform: (t, coa) => t.accountCode || this.getAccountForCategory(t.category, coa)\n          },\n          {\n            header: 'Tax Rate',"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 126,
            "endLine": 130,
            "content": "            required: true,\n            transform: (t, coa) => t.accountCode || this.getAccountForCategory(t.category, coa)\n          },\n          {\n            header: 'Tax Rate',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 103,
            "endLine": 107,
            "content": "            transform: (t, coa) => t.accountCode || this.getAccountForCategory(t.category, coa)\n          },\n          {\n            header: 'Tax Rate',\n            key: 'taxRate',"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 127,
            "endLine": 131,
            "content": "            transform: (t, coa) => t.accountCode || this.getAccountForCategory(t.category, coa)\n          },\n          {\n            header: 'Tax Rate',\n            key: 'taxRate',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 104,
            "endLine": 108,
            "content": "          },\n          {\n            header: 'Tax Rate',\n            key: 'taxRate',\n            required: true,"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 128,
            "endLine": 132,
            "content": "          },\n          {\n            header: 'Tax Rate',\n            key: 'taxRate',\n            required: true,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 105,
            "endLine": 109,
            "content": "          {\n            header: 'Tax Rate',\n            key: 'taxRate',\n            required: true,\n            transform: (t, coa) => this.getTaxRateForXeroPrecoded(t, coa)"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 129,
            "endLine": 133,
            "content": "          {\n            header: 'Tax Rate',\n            key: 'taxRate',\n            required: true,\n            transform: (t, coa) => this.getTaxRateForXeroPrecoded(t, coa)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 106,
            "endLine": 110,
            "content": "            header: 'Tax Rate',\n            key: 'taxRate',\n            required: true,\n            transform: (t, coa) => this.getTaxRateForXeroPrecoded(t, coa)\n          }"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 130,
            "endLine": 134,
            "content": "            header: 'Tax Rate',\n            key: 'taxRate',\n            required: true,\n            transform: (t, coa) => this.getTaxRateForXeroPrecoded(t, coa)\n          }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 107,
            "endLine": 111,
            "content": "            key: 'taxRate',\n            required: true,\n            transform: (t, coa) => this.getTaxRateForXeroPrecoded(t, coa)\n          }\n        ]"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 131,
            "endLine": 135,
            "content": "            key: 'taxRate',\n            required: true,\n            transform: (t, coa) => this.getTaxRateForXeroPrecoded(t, coa)\n          }\n        ]"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 139,
            "endLine": 143,
            "content": "\n  /**\n   * Validate transactions before export\n   */\n  validateForExport(transactions: Transaction[], options: ExportOptions): ExportValidation {"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 140,
            "endLine": 144,
            "content": "  /**\n   * Validate transactions before export\n   */\n  validateForExport(transactions: Transaction[], options: ExportOptions): ExportValidation {\n    const validation: ExportValidation = {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 156,
            "endLine": 160,
            "content": "\n    if (transactions.length === 0) {\n      validation.isValid = false;\n      validation.errors.push('No transactions to export');\n      return validation;"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 157,
            "endLine": 161,
            "content": "    if (transactions.length === 0) {\n      validation.isValid = false;\n      validation.errors.push('No transactions to export');\n      return validation;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 162,
            "endLine": 166,
            "content": "\n    // Calculate stats\n    for (const transaction of transactions) {\n      if (transaction.category) validation.stats.categorized++;\n      if (transaction.isApproved) validation.stats.approved++;"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 163,
            "endLine": 167,
            "content": "    // Calculate stats\n    for (const transaction of transactions) {\n      if (transaction.category) validation.stats.categorized++;\n      if (transaction.isApproved) validation.stats.approved++;\n      if ((transaction.confidence ?? 0) >= 80) validation.stats.highConfidence++;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 170,
            "endLine": 174,
            "content": "\n    // Validation rules\n    const uncategorized = validation.stats.total - validation.stats.categorized;\n    if (uncategorized > 0 && !options.includeUncategorized) {\n      validation.warnings.push(`${uncategorized} uncategorized transactions will be excluded`);"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 171,
            "endLine": 175,
            "content": "    // Validation rules\n    const uncategorized = validation.stats.total - validation.stats.categorized;\n    if (uncategorized > 0 && !options.includeUncategorized) {\n      validation.warnings.push(`${uncategorized} uncategorized transactions will be excluded`);\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 176,
            "endLine": 180,
            "content": "\n    if (validation.stats.missingAccounts > 0) {\n      validation.warnings.push(`${validation.stats.missingAccounts} transactions missing account codes`);\n    }\n"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 177,
            "endLine": 181,
            "content": "    if (validation.stats.missingAccounts > 0) {\n      validation.warnings.push(`${validation.stats.missingAccounts} transactions missing account codes`);\n    }\n\n    const lowConfidence = validation.stats.total - validation.stats.highConfidence;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 180,
            "endLine": 184,
            "content": "\n    const lowConfidence = validation.stats.total - validation.stats.highConfidence;\n    if (lowConfidence > 0) {\n      validation.warnings.push(`${lowConfidence} transactions have low confidence scores (<80%)`);\n    }"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 181,
            "endLine": 185,
            "content": "    const lowConfidence = validation.stats.total - validation.stats.highConfidence;\n    if (lowConfidence > 0) {\n      validation.warnings.push(`${lowConfidence} transactions have low confidence scores (<80%)`);\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 185,
            "endLine": 189,
            "content": "\n    if (options.onlyApproved && validation.stats.approved < validation.stats.total) {\n      const unapproved = validation.stats.total - validation.stats.approved;\n      validation.warnings.push(`${unapproved} unapproved transactions will be excluded`);\n    }"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 186,
            "endLine": 190,
            "content": "    if (options.onlyApproved && validation.stats.approved < validation.stats.total) {\n      const unapproved = validation.stats.total - validation.stats.approved;\n      validation.warnings.push(`${unapproved} unapproved transactions will be excluded`);\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 190,
            "endLine": 194,
            "content": "\n    // Date range validation\n    const startDate = new Date(options.dateRange.start);\n    const endDate = new Date(options.dateRange.end);\n    if (startDate > endDate) {"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 191,
            "endLine": 195,
            "content": "    // Date range validation\n    const startDate = new Date(options.dateRange.start);\n    const endDate = new Date(options.dateRange.end);\n    if (startDate > endDate) {\n      validation.isValid = false;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 192,
            "endLine": 196,
            "content": "    const startDate = new Date(options.dateRange.start);\n    const endDate = new Date(options.dateRange.end);\n    if (startDate > endDate) {\n      validation.isValid = false;\n      validation.errors.push('Start date must be before end date');"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 268,
            "endLine": 272,
            "content": "    const startDate = new Date(options.dateRange.start);\n    const endDate = new Date(options.dateRange.end);\n    filtered = filtered.filter(t => {\n      const transactionDate = new Date(t.date);\n      return transactionDate >= startDate && transactionDate <= endDate;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 198,
            "endLine": 202,
            "content": "\n    // Format-specific validation\n    const format = this.getAvailableFormats().find(f => f.id === options.format);\n    if (!format) {\n      validation.isValid = false;"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 199,
            "endLine": 203,
            "content": "    // Format-specific validation\n    const format = this.getAvailableFormats().find(f => f.id === options.format);\n    if (!format) {\n      validation.isValid = false;\n      validation.errors.push('Invalid export format selected');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 217,
            "endLine": 221,
            "content": "\n    // Get export format\n    const format = this.getAvailableFormats().find(f => f.id === options.format);\n    if (!format) {\n      throw new Error('Invalid export format');"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 218,
            "endLine": 222,
            "content": "    // Get export format\n    const format = this.getAvailableFormats().find(f => f.id === options.format);\n    if (!format) {\n      throw new Error('Invalid export format');\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 223,
            "endLine": 227,
            "content": "\n\n\n    // Validate first for transaction exports\n    const validation = this.validateForExport(transactions, options);"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 224,
            "endLine": 228,
            "content": "\n\n    // Validate first for transaction exports\n    const validation = this.validateForExport(transactions, options);\n    if (!validation.isValid) {"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 225,
            "endLine": 229,
            "content": "\n    // Validate first for transaction exports\n    const validation = this.validateForExport(transactions, options);\n    if (!validation.isValid) {\n      throw new Error(`Export validation failed: ${validation.errors.join(', ')}`);"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 226,
            "endLine": 230,
            "content": "    // Validate first for transaction exports\n    const validation = this.validateForExport(transactions, options);\n    if (!validation.isValid) {\n      throw new Error(`Export validation failed: ${validation.errors.join(', ')}`);\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 231,
            "endLine": 235,
            "content": "\n    // Filter transactions based on options\n    const filteredTransactions = this.filterTransactionsForExport(transactions, options);\n\n    // Generate CSV content"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 232,
            "endLine": 236,
            "content": "    // Filter transactions based on options\n    const filteredTransactions = this.filterTransactionsForExport(transactions, options);\n\n    // Generate CSV content\n    const content = await this.generateCSVContent(filteredTransactions, format, options);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 234,
            "endLine": 238,
            "content": "\n    // Generate CSV content\n    const content = await this.generateCSVContent(filteredTransactions, format, options);\n\n    // Calculate summary"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 235,
            "endLine": 239,
            "content": "    // Generate CSV content\n    const content = await this.generateCSVContent(filteredTransactions, format, options);\n\n    // Calculate summary\n    const totalAmount = filteredTransactions.reduce((sum, t) => sum + t.amount, 0);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 237,
            "endLine": 241,
            "content": "\n    // Calculate summary\n    const totalAmount = filteredTransactions.reduce((sum, t) => sum + t.amount, 0);\n    const dates = filteredTransactions.map(t => new Date(t.date)).sort((a, b) => a.getTime() - b.getTime());\n    const startDate = dates[0]?.toLocaleDateString('en-CA') || 'N/A';"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 238,
            "endLine": 242,
            "content": "    // Calculate summary\n    const totalAmount = filteredTransactions.reduce((sum, t) => sum + t.amount, 0);\n    const dates = filteredTransactions.map(t => new Date(t.date)).sort((a, b) => a.getTime() - b.getTime());\n    const startDate = dates[0]?.toLocaleDateString('en-CA') || 'N/A';\n    const endDate = dates[dates.length - 1]?.toLocaleDateString('en-CA') || 'N/A';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 243,
            "endLine": 247,
            "content": "\n    const result: ExportResult = {\n      filename: this.generateFilename(options, format),\n      content,\n      validation,"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 244,
            "endLine": 248,
            "content": "    const result: ExportResult = {\n      filename: this.generateFilename(options, format),\n      content,\n      validation,\n      summary: {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 256,
            "endLine": 260,
            "content": "\n    console.log(`✅ Export complete: ${result.filename}, ${result.summary.totalTransactions} transactions`);\n    return result;\n  }\n"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 257,
            "endLine": 261,
            "content": "    console.log(`✅ Export complete: ${result.filename}, ${result.summary.totalTransactions} transactions`);\n    return result;\n  }\n\n  /**"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 260,
            "endLine": 264,
            "content": "\n  /**\n   * Filter transactions based on export options\n   */\n  private filterTransactionsForExport(transactions: Transaction[], options: ExportOptions): Transaction[] {"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 261,
            "endLine": 265,
            "content": "  /**\n   * Filter transactions based on export options\n   */\n  private filterTransactionsForExport(transactions: Transaction[], options: ExportOptions): Transaction[] {\n    let filtered = [...transactions];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 266,
            "endLine": 270,
            "content": "\n    // Date range filter\n    const startDate = new Date(options.dateRange.start);\n    const endDate = new Date(options.dateRange.end);\n    filtered = filtered.filter(t => {"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 267,
            "endLine": 271,
            "content": "    // Date range filter\n    const startDate = new Date(options.dateRange.start);\n    const endDate = new Date(options.dateRange.end);\n    filtered = filtered.filter(t => {\n      const transactionDate = new Date(t.date);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 274,
            "endLine": 278,
            "content": "\n    // Categorization filter\n    if (!options.includeUncategorized) {\n      filtered = filtered.filter(t => t.category);\n    }"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 275,
            "endLine": 279,
            "content": "    // Categorization filter\n    if (!options.includeUncategorized) {\n      filtered = filtered.filter(t => t.category);\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 279,
            "endLine": 283,
            "content": "\n    // Approval filter\n    if (options.onlyApproved) {\n      filtered = filtered.filter(t => t.isApproved);\n    }"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 280,
            "endLine": 284,
            "content": "    // Approval filter\n    if (options.onlyApproved) {\n      filtered = filtered.filter(t => t.isApproved);\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 297,
            "endLine": 301,
            "content": "\n    // Add header row\n    const headers = format.columns.map(col => col.header);\n    rows.push(this.escapeCSVRow(headers));\n"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 298,
            "endLine": 302,
            "content": "    // Add header row\n    const headers = format.columns.map(col => col.header);\n    rows.push(this.escapeCSVRow(headers));\n\n    // Add data rows"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 301,
            "endLine": 305,
            "content": "\n    // Add data rows\n    for (const transaction of transactions) {\n      const row = format.columns.map(col => {\n        let value: string;"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 302,
            "endLine": 306,
            "content": "    // Add data rows\n    for (const transaction of transactions) {\n      const row = format.columns.map(col => {\n        let value: string;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 306,
            "endLine": 310,
            "content": "\n        if (col.transform) {\n          value = col.transform(transaction, this.chartOfAccounts);\n        } else {\n          const rawValue = transaction[col.key as keyof Transaction];"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 307,
            "endLine": 311,
            "content": "        if (col.transform) {\n          value = col.transform(transaction, this.chartOfAccounts);\n        } else {\n          const rawValue = transaction[col.key as keyof Transaction];\n          value = rawValue?.toString() || '';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 313,
            "endLine": 317,
            "content": "\n        // Format specific values\n        if (col.key === 'date') {\n          // Use the transform function's date format if it exists, otherwise default\n          if (!col.transform) {"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 314,
            "endLine": 318,
            "content": "        // Format specific values\n        if (col.key === 'date') {\n          // Use the transform function's date format if it exists, otherwise default\n          if (!col.transform) {\n            value = new Date(transaction.date).toLocaleDateString('en-AU'); // DD/MM/YYYY"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 328,
            "endLine": 332,
            "content": "\n      // Log the first few rows for debugging Xero formats\n      if (format.id.startsWith('xero') && rows.length <= 3) {\n        console.log(`🔍 Xero CSV Row ${rows.length}:`, row);\n      }"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 329,
            "endLine": 333,
            "content": "      // Log the first few rows for debugging Xero formats\n      if (format.id.startsWith('xero') && rows.length <= 3) {\n        console.log(`🔍 Xero CSV Row ${rows.length}:`, row);\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 333,
            "endLine": 337,
            "content": "\n      rows.push(this.escapeCSVRow(row));\n    }\n\n    // Add audit trail if requested (but not for Xero formats to avoid column mapping issues)"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 334,
            "endLine": 338,
            "content": "      rows.push(this.escapeCSVRow(row));\n    }\n\n    // Add audit trail if requested (but not for Xero formats to avoid column mapping issues)\n    if (options.includeAuditTrail && !format.id.startsWith('xero')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 336,
            "endLine": 340,
            "content": "\n    // Add audit trail if requested (but not for Xero formats to avoid column mapping issues)\n    if (options.includeAuditTrail && !format.id.startsWith('xero')) {\n      rows.push(''); // Empty row\n      rows.push(this.escapeCSVRow(['=== AUDIT TRAIL ===']));"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 337,
            "endLine": 341,
            "content": "    // Add audit trail if requested (but not for Xero formats to avoid column mapping issues)\n    if (options.includeAuditTrail && !format.id.startsWith('xero')) {\n      rows.push(''); // Empty row\n      rows.push(this.escapeCSVRow(['=== AUDIT TRAIL ===']));\n      rows.push(this.escapeCSVRow(['Export Generated', new Date().toISOString()]));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 358,
            "endLine": 362,
            "content": "      \n      // Escape if contains comma, quote, or newline\n      if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\n        return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n      }"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 359,
            "endLine": 363,
            "content": "      // Escape if contains comma, quote, or newline\n      if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\n        return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 367,
            "endLine": 371,
            "content": "\n  /**\n   * Generate filename for export\n   */\n  private generateFilename(options: ExportOptions, format: ExportFormat): string {"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 368,
            "endLine": 372,
            "content": "  /**\n   * Generate filename for export\n   */\n  private generateFilename(options: ExportOptions, format: ExportFormat): string {\n    const date = new Date().toISOString().split('T')[0]; // YYYY-MM-DD"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 378,
            "endLine": 382,
            "content": "\n  /**\n   * Get account code for category\n   */\n  private getAccountForCategory(category: string | undefined, chartOfAccounts: ChartOfAccounts): string {"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 379,
            "endLine": 383,
            "content": "  /**\n   * Get account code for category\n   */\n  private getAccountForCategory(category: string | undefined, chartOfAccounts: ChartOfAccounts): string {\n    if (!category) return '453'; // Default to Office Expenses"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 384,
            "endLine": 388,
            "content": "    \n    const account = chartOfAccounts.findAccountByCategory(category);\n    return account?.code || '453'; // Default to Office Expenses if no mapping found\n  }\n"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 385,
            "endLine": 389,
            "content": "    const account = chartOfAccounts.findAccountByCategory(category);\n    return account?.code || '453'; // Default to Office Expenses if no mapping found\n  }\n\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 392,
            "endLine": 396,
            "content": "\n  /**\n   * Get tax rate for Xero precoded format (specific format for cash coding)\n   */\n  private getTaxRateForXeroPrecoded(transaction: Transaction, chartOfAccounts: ChartOfAccounts): string {"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 393,
            "endLine": 397,
            "content": "  /**\n   * Get tax rate for Xero precoded format (specific format for cash coding)\n   */\n  private getTaxRateForXeroPrecoded(transaction: Transaction, chartOfAccounts: ChartOfAccounts): string {\n    if (!transaction.category) return 'Tax Exempt (0%)';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 398,
            "endLine": 402,
            "content": "    \n    const account = chartOfAccounts.findAccountByCategory(transaction.category);\n    if (!account) return 'Tax Exempt (0%)';\n    \n    // Get the current province from chartOfAccounts"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 399,
            "endLine": 403,
            "content": "    const account = chartOfAccounts.findAccountByCategory(transaction.category);\n    if (!account) return 'Tax Exempt (0%)';\n    \n    // Get the current province from chartOfAccounts\n    const province = this.chartOfAccounts.getProvince();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 401,
            "endLine": 405,
            "content": "    \n    // Get the current province from chartOfAccounts\n    const province = this.chartOfAccounts.getProvince();\n    \n    // Map to exact Xero tax rate names by province and tax type"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 402,
            "endLine": 406,
            "content": "    // Get the current province from chartOfAccounts\n    const province = this.chartOfAccounts.getProvince();\n    \n    // Map to exact Xero tax rate names by province and tax type\n    // These MUST match exactly what's in Xero or the coding won't persist"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 404,
            "endLine": 408,
            "content": "    \n    // Map to exact Xero tax rate names by province and tax type\n    // These MUST match exactly what's in Xero or the coding won't persist\n    if (account.taxRate === 0) {\n      return 'Tax Exempt (0%)';"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 405,
            "endLine": 409,
            "content": "    // Map to exact Xero tax rate names by province and tax type\n    // These MUST match exactly what's in Xero or the coding won't persist\n    if (account.taxRate === 0) {\n      return 'Tax Exempt (0%)';\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 445,
            "endLine": 449,
            "content": "\n\n  setProvince(provinceCode: string): void {\n    this.chartOfAccounts.setProvince(provinceCode);\n  }"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 446,
            "endLine": 450,
            "content": "\n  setProvince(provinceCode: string): void {\n    this.chartOfAccounts.setProvince(provinceCode);\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 450,
            "endLine": 454,
            "content": "\n  getExportStats(transactions: Transaction[]): {\n    totalTransactions: number;\n    categorizedTransactions: number;\n    approvedTransactions: number;"
          },
          {
            "file": "src/lib/exportManager.ts",
            "startLine": 451,
            "endLine": 455,
            "content": "  getExportStats(transactions: Transaction[]): {\n    totalTransactions: number;\n    categorizedTransactions: number;\n    approvedTransactions: number;\n    highConfidenceTransactions: number;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 92,
            "endLine": 96,
            "content": "  \n  // Shopping & Commerce\n  ShoppingCart,\n  Store,\n  Package,"
          },
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 93,
            "endLine": 97,
            "content": "  // Shopping & Commerce\n  ShoppingCart,\n  Store,\n  Package,\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 251,
            "endLine": 255,
            "content": "\n// Icon colors for consistent theming\nexport const IconColors = {\n  primary: 'text-purple-600',\n  secondary: 'text-slate-600',"
          },
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 252,
            "endLine": 256,
            "content": "// Icon colors for consistent theming\nexport const IconColors = {\n  primary: 'text-purple-600',\n  secondary: 'text-slate-600',\n  success: 'text-green-600',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 264,
            "endLine": 268,
            "content": "\n// Helper function to get icon with consistent styling\nexport const getIcon = (\n  category: keyof typeof AppIcons,\n  name: string,"
          },
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 265,
            "endLine": 269,
            "content": "// Helper function to get icon with consistent styling\nexport const getIcon = (\n  category: keyof typeof AppIcons,\n  name: string,\n  size: keyof typeof IconSizes = 'md',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 274,
            "endLine": 278,
            "content": "  \n  if (!icon) {\n    console.warn(`Icon not found: ${category}.${name}`);\n    return { icon: AlertCircle, className: `${IconSizes[size]} ${IconColors.error}` };\n  }"
          },
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 275,
            "endLine": 279,
            "content": "  if (!icon) {\n    console.warn(`Icon not found: ${category}.${name}`);\n    return { icon: AlertCircle, className: `${IconSizes[size]} ${IconColors.error}` };\n  }\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 285,
            "endLine": 289,
            "content": "\n// Predefined icon combinations for common use cases\nexport const CommonIcons = {\n  // Upload states\n  uploadIdle: { icon: AppIcons.files.upload, className: `${IconSizes.xl} ${IconColors.primary}` },"
          },
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 286,
            "endLine": 290,
            "content": "// Predefined icon combinations for common use cases\nexport const CommonIcons = {\n  // Upload states\n  uploadIdle: { icon: AppIcons.files.upload, className: `${IconSizes.xl} ${IconColors.primary}` },\n  uploadSuccess: { icon: AppIcons.status.success, className: `${IconSizes.xl} ${IconColors.success}` },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 293,
            "endLine": 297,
            "content": "\n  // Navigation steps\n  stepUpload: { icon: AppIcons.files.upload, className: `${IconSizes.lg} ${IconColors.current}` },\n  stepReview: { icon: AppIcons.financial.chart, className: `${IconSizes.lg} ${IconColors.current}` },\n  stepExport: { icon: AppIcons.files.download, className: `${IconSizes.lg} ${IconColors.current}` },"
          },
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 294,
            "endLine": 298,
            "content": "  // Navigation steps\n  stepUpload: { icon: AppIcons.files.upload, className: `${IconSizes.lg} ${IconColors.current}` },\n  stepReview: { icon: AppIcons.financial.chart, className: `${IconSizes.lg} ${IconColors.current}` },\n  stepExport: { icon: AppIcons.files.download, className: `${IconSizes.lg} ${IconColors.current}` },\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 298,
            "endLine": 302,
            "content": "\n  // Actions\n  aiCategorize: { icon: AppIcons.actions.ai, className: `${IconSizes.sm} ${IconColors.current}` },\n  approve: { icon: AppIcons.status.approved, className: `${IconSizes.sm} ${IconColors.success}` },\n  edit: { icon: AppIcons.actions.edit, className: `${IconSizes.sm} ${IconColors.current}` },"
          },
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 299,
            "endLine": 303,
            "content": "  // Actions\n  aiCategorize: { icon: AppIcons.actions.ai, className: `${IconSizes.sm} ${IconColors.current}` },\n  approve: { icon: AppIcons.status.approved, className: `${IconSizes.sm} ${IconColors.success}` },\n  edit: { icon: AppIcons.actions.edit, className: `${IconSizes.sm} ${IconColors.current}` },\n  delete: { icon: AppIcons.actions.delete, className: `${IconSizes.sm} ${IconColors.error}` },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 304,
            "endLine": 308,
            "content": "\n  // Business categories\n  payroll: { icon: AppIcons.categories.users, className: `${IconSizes.md} ${IconColors.current}` },\n  office: { icon: AppIcons.business.office, className: `${IconSizes.md} ${IconColors.current}` },\n  vehicle: { icon: AppIcons.business.vehicle, className: `${IconSizes.md} ${IconColors.current}` },"
          },
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 305,
            "endLine": 309,
            "content": "  // Business categories\n  payroll: { icon: AppIcons.categories.users, className: `${IconSizes.md} ${IconColors.current}` },\n  office: { icon: AppIcons.business.office, className: `${IconSizes.md} ${IconColors.current}` },\n  vehicle: { icon: AppIcons.business.vehicle, className: `${IconSizes.md} ${IconColors.current}` },\n  utilities: { icon: AppIcons.business.utilities, className: `${IconSizes.md} ${IconColors.current}` },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 314,
            "endLine": 318,
            "content": "\n  // Status indicators\n  compliant: { icon: AppIcons.security.shield, className: `${IconSizes.sm} ${IconColors.success}` },\n  processing: { icon: AppIcons.status.processing, className: `${IconSizes.sm} ${IconColors.primary} animate-spin` },\n  ready: { icon: AppIcons.status.success, className: `${IconSizes.sm} ${IconColors.success}` },"
          },
          {
            "file": "src/lib/iconSystem.ts",
            "startLine": 315,
            "endLine": 319,
            "content": "  // Status indicators\n  compliant: { icon: AppIcons.security.shield, className: `${IconSizes.sm} ${IconColors.success}` },\n  processing: { icon: AppIcons.status.processing, className: `${IconSizes.sm} ${IconColors.primary} animate-spin` },\n  ready: { icon: AppIcons.status.success, className: `${IconSizes.sm} ${IconColors.success}` },\n  pending: { icon: AppIcons.status.pending, className: `${IconSizes.sm} ${IconColors.warning}` },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 11,
            "endLine": 15,
            "content": "\nexport interface LogEntry {\n  id: string;\n  level: 'debug' | 'info' | 'warn' | 'error' | 'fatal';\n  message: string;"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 12,
            "endLine": 16,
            "content": "export interface LogEntry {\n  id: string;\n  level: 'debug' | 'info' | 'warn' | 'error' | 'fatal';\n  message: string;\n  context: Record<string, any>;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 43,
            "endLine": 47,
            "content": "\nexport interface PerformanceMetric {\n  id: string;\n  metric: 'page_load' | 'api_response' | 'database_query' | 'file_processing';\n  duration: number;"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 44,
            "endLine": 48,
            "content": "export interface PerformanceMetric {\n  id: string;\n  metric: 'page_load' | 'api_response' | 'database_query' | 'file_processing';\n  duration: number;\n  endpoint?: string;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 52,
            "endLine": 56,
            "content": "\nexport interface HealthCheck {\n  service: string;\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  responseTime: number;"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 53,
            "endLine": 57,
            "content": "export interface HealthCheck {\n  service: string;\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  responseTime: number;\n  message?: string;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 60,
            "endLine": 64,
            "content": "\nexport class MonitoringService {\n  private static instance: MonitoringService;\n  private metrics: MetricData[] = [];\n  private logs: LogEntry[] = [];"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 61,
            "endLine": 65,
            "content": "export class MonitoringService {\n  private static instance: MonitoringService;\n  private metrics: MetricData[] = [];\n  private logs: LogEntry[] = [];\n  private errors: ErrorReport[] = [];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 68,
            "endLine": 72,
            "content": "\n  public static getInstance(): MonitoringService {\n    if (!MonitoringService.instance) {\n      MonitoringService.instance = new MonitoringService();\n    }"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 69,
            "endLine": 73,
            "content": "  public static getInstance(): MonitoringService {\n    if (!MonitoringService.instance) {\n      MonitoringService.instance = new MonitoringService();\n    }\n    return MonitoringService.instance;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 75,
            "endLine": 79,
            "content": "\n  constructor() {\n    this.initializeErrorTracking();\n    this.initializePerformanceTracking();\n    this.startHealthChecks();"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 76,
            "endLine": 80,
            "content": "  constructor() {\n    this.initializeErrorTracking();\n    this.initializePerformanceTracking();\n    this.startHealthChecks();\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 97,
            "endLine": 101,
            "content": "\n      // Capture unhandled promise rejections\n      window.addEventListener('unhandledrejection', (event) => {\n        this.captureError(event.reason, {\n          component: 'global',"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 98,
            "endLine": 102,
            "content": "      // Capture unhandled promise rejections\n      window.addEventListener('unhandledrejection', (event) => {\n        this.captureError(event.reason, {\n          component: 'global',\n          action: 'unhandled_promise_rejection',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 122,
            "endLine": 126,
            "content": "\n      // Track resource loading\n      const observer = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          if (entry.entryType === 'resource') {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 123,
            "endLine": 127,
            "content": "      // Track resource loading\n      const observer = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          if (entry.entryType === 'resource') {\n            const resource = entry as PerformanceResourceTiming;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 155,
            "endLine": 159,
            "content": "\n  /**\n   * Log message with context\n   */\n  log(level: LogEntry['level'], message: string, context: Record<string, any> = {}): void {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 156,
            "endLine": 160,
            "content": "  /**\n   * Log message with context\n   */\n  log(level: LogEntry['level'], message: string, context: Record<string, any> = {}): void {\n    const tenant = multiTenantService.getCurrentTenant();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 162,
            "endLine": 166,
            "content": "\n    const logEntry: LogEntry = {\n      id: `log_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      level,\n      message,"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 163,
            "endLine": 167,
            "content": "    const logEntry: LogEntry = {\n      id: `log_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      level,\n      message,\n      context,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 174,
            "endLine": 178,
            "content": "\n    this.logs.push(logEntry);\n\n    // Console output for development\n    if (process.env.NODE_ENV === 'development') {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 175,
            "endLine": 179,
            "content": "    this.logs.push(logEntry);\n\n    // Console output for development\n    if (process.env.NODE_ENV === 'development') {\n      const color = {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 176,
            "endLine": 180,
            "content": "\n    // Console output for development\n    if (process.env.NODE_ENV === 'development') {\n      const color = {\n        debug: '\\x1b[36m',"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 177,
            "endLine": 181,
            "content": "    // Console output for development\n    if (process.env.NODE_ENV === 'development') {\n      const color = {\n        debug: '\\x1b[36m',\n        info: '\\x1b[32m',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 186,
            "endLine": 190,
            "content": "\n      console.log(`${color}[${level.toUpperCase()}]\\x1b[0m ${message}`, context);\n    }\n\n    // Send to external logging service in production"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 187,
            "endLine": 191,
            "content": "      console.log(`${color}[${level.toUpperCase()}]\\x1b[0m ${message}`, context);\n    }\n\n    // Send to external logging service in production\n    if (process.env.NODE_ENV === 'production') {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 189,
            "endLine": 193,
            "content": "\n    // Send to external logging service in production\n    if (process.env.NODE_ENV === 'production') {\n      this.sendToLoggingService(logEntry);\n    }"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 190,
            "endLine": 194,
            "content": "    // Send to external logging service in production\n    if (process.env.NODE_ENV === 'production') {\n      this.sendToLoggingService(logEntry);\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 194,
            "endLine": 198,
            "content": "\n    // Keep only last 1000 logs in memory\n    if (this.logs.length > 1000) {\n      this.logs = this.logs.slice(-1000);\n    }"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 195,
            "endLine": 199,
            "content": "    // Keep only last 1000 logs in memory\n    if (this.logs.length > 1000) {\n      this.logs = this.logs.slice(-1000);\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 200,
            "endLine": 204,
            "content": "\n  /**\n   * Capture error with context\n   */\n  captureError(error: Error, context: Record<string, any> = {}): void {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 201,
            "endLine": 205,
            "content": "  /**\n   * Capture error with context\n   */\n  captureError(error: Error, context: Record<string, any> = {}): void {\n    const tenant = multiTenantService.getCurrentTenant();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 207,
            "endLine": 211,
            "content": "\n    const errorReport: ErrorReport = {\n      id: `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      error: {\n        name: error.name || 'Error',"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 208,
            "endLine": 212,
            "content": "    const errorReport: ErrorReport = {\n      id: `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      error: {\n        name: error.name || 'Error',\n        message: error.message || 'Unknown error',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 226,
            "endLine": 230,
            "content": "\n    this.errors.push(errorReport);\n\n    // Log the error\n    this.log('error', `Error captured: ${error.message}`, {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 227,
            "endLine": 231,
            "content": "    this.errors.push(errorReport);\n\n    // Log the error\n    this.log('error', `Error captured: ${error.message}`, {\n      errorId: errorReport.id,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 228,
            "endLine": 232,
            "content": "\n    // Log the error\n    this.log('error', `Error captured: ${error.message}`, {\n      errorId: errorReport.id,\n      context: errorReport.context,"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 229,
            "endLine": 233,
            "content": "    // Log the error\n    this.log('error', `Error captured: ${error.message}`, {\n      errorId: errorReport.id,\n      context: errorReport.context,\n    });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 234,
            "endLine": 238,
            "content": "\n    // Send to error tracking service\n    this.sendToErrorTracking(errorReport);\n\n    // Keep only last 100 errors in memory"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 235,
            "endLine": 239,
            "content": "    // Send to error tracking service\n    this.sendToErrorTracking(errorReport);\n\n    // Keep only last 100 errors in memory\n    if (this.errors.length > 100) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 237,
            "endLine": 241,
            "content": "\n    // Keep only last 100 errors in memory\n    if (this.errors.length > 100) {\n      this.errors = this.errors.slice(-100);\n    }"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 238,
            "endLine": 242,
            "content": "    // Keep only last 100 errors in memory\n    if (this.errors.length > 100) {\n      this.errors = this.errors.slice(-100);\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 243,
            "endLine": 247,
            "content": "\n  /**\n   * Record performance metric\n   */\n  recordPerformance(metric: PerformanceMetric['metric'], duration: number, endpoint?: string): void {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 244,
            "endLine": 248,
            "content": "  /**\n   * Record performance metric\n   */\n  recordPerformance(metric: PerformanceMetric['metric'], duration: number, endpoint?: string): void {\n    const tenant = multiTenantService.getCurrentTenant();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 249,
            "endLine": 253,
            "content": "\n    const performanceMetric: PerformanceMetric = {\n      id: `perf_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      metric,\n      duration,"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 250,
            "endLine": 254,
            "content": "    const performanceMetric: PerformanceMetric = {\n      id: `perf_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      metric,\n      duration,\n      endpoint,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 268,
            "endLine": 272,
            "content": "\n    if (duration > thresholds[metric]) {\n      this.log('warn', `Slow ${metric} detected`, {\n        duration,\n        endpoint,"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 269,
            "endLine": 273,
            "content": "    if (duration > thresholds[metric]) {\n      this.log('warn', `Slow ${metric} detected`, {\n        duration,\n        endpoint,\n        threshold: thresholds[metric],"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 276,
            "endLine": 280,
            "content": "\n    // Send to monitoring service\n    this.sendToMonitoringService(performanceMetric);\n\n    // Keep only last 1000 performance metrics in memory"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 277,
            "endLine": 281,
            "content": "    // Send to monitoring service\n    this.sendToMonitoringService(performanceMetric);\n\n    // Keep only last 1000 performance metrics in memory\n    if (this.performanceMetrics.length > 1000) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 279,
            "endLine": 283,
            "content": "\n    // Keep only last 1000 performance metrics in memory\n    if (this.performanceMetrics.length > 1000) {\n      this.performanceMetrics = this.performanceMetrics.slice(-1000);\n    }"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 280,
            "endLine": 284,
            "content": "    // Keep only last 1000 performance metrics in memory\n    if (this.performanceMetrics.length > 1000) {\n      this.performanceMetrics = this.performanceMetrics.slice(-1000);\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 285,
            "endLine": 289,
            "content": "\n  /**\n   * Record custom metric\n   */\n  recordMetric(name: string, value: number, tags: Record<string, string> = {}): void {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 286,
            "endLine": 290,
            "content": "  /**\n   * Record custom metric\n   */\n  recordMetric(name: string, value: number, tags: Record<string, string> = {}): void {\n    const tenant = multiTenantService.getCurrentTenant();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 301,
            "endLine": 305,
            "content": "\n    this.metrics.push(metric);\n\n    // Send to metrics service\n    this.sendToMetricsService(metric);"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 302,
            "endLine": 306,
            "content": "    this.metrics.push(metric);\n\n    // Send to metrics service\n    this.sendToMetricsService(metric);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 303,
            "endLine": 307,
            "content": "\n    // Send to metrics service\n    this.sendToMetricsService(metric);\n\n    // Keep only last 1000 metrics in memory"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 304,
            "endLine": 308,
            "content": "    // Send to metrics service\n    this.sendToMetricsService(metric);\n\n    // Keep only last 1000 metrics in memory\n    if (this.metrics.length > 1000) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 306,
            "endLine": 310,
            "content": "\n    // Keep only last 1000 metrics in memory\n    if (this.metrics.length > 1000) {\n      this.metrics = this.metrics.slice(-1000);\n    }"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 307,
            "endLine": 311,
            "content": "    // Keep only last 1000 metrics in memory\n    if (this.metrics.length > 1000) {\n      this.metrics = this.metrics.slice(-1000);\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 323,
            "endLine": 327,
            "content": "\n    const results = await Promise.allSettled(checks);\n    \n    results.forEach((result, index) => {\n      if (result.status === 'fulfilled') {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 324,
            "endLine": 328,
            "content": "    const results = await Promise.allSettled(checks);\n    \n    results.forEach((result, index) => {\n      if (result.status === 'fulfilled') {\n        this.log('info', 'Health check passed', { service: result.value.service });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 325,
            "endLine": 329,
            "content": "    \n    results.forEach((result, index) => {\n      if (result.status === 'fulfilled') {\n        this.log('info', 'Health check passed', { service: result.value.service });\n      } else {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 326,
            "endLine": 330,
            "content": "    results.forEach((result, index) => {\n      if (result.status === 'fulfilled') {\n        this.log('info', 'Health check passed', { service: result.value.service });\n      } else {\n        this.log('error', 'Health check failed', { "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 343,
            "endLine": 347,
            "content": "    \n    try {\n      // Simple database query\n      const query = multiTenantService.getTenantQuery('tenants');\n      await query.limit(1);"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 344,
            "endLine": 348,
            "content": "    try {\n      // Simple database query\n      const query = multiTenantService.getTenantQuery('tenants');\n      await query.limit(1);\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 351,
            "endLine": 355,
            "content": "        status: 'healthy',\n        responseTime: Date.now() - startTime,\n        timestamp: new Date().toISOString(),\n      };\n    } catch (error) {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 408,
            "endLine": 412,
            "content": "        status: 'healthy',\n        responseTime: Date.now() - startTime,\n        timestamp: new Date().toISOString(),\n      };\n    } catch (error) {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 440,
            "endLine": 444,
            "content": "        status: 'healthy',\n        responseTime: Date.now() - startTime,\n        timestamp: new Date().toISOString(),\n      };\n    } catch (error) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 352,
            "endLine": 356,
            "content": "        responseTime: Date.now() - startTime,\n        timestamp: new Date().toISOString(),\n      };\n    } catch (error) {\n      return {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 379,
            "endLine": 383,
            "content": "        responseTime: Date.now() - startTime,\n        timestamp: new Date().toISOString(),\n      };\n    } catch (error) {\n      return {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 409,
            "endLine": 413,
            "content": "        responseTime: Date.now() - startTime,\n        timestamp: new Date().toISOString(),\n      };\n    } catch (error) {\n      return {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 441,
            "endLine": 445,
            "content": "        responseTime: Date.now() - startTime,\n        timestamp: new Date().toISOString(),\n      };\n    } catch (error) {\n      return {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 358,
            "endLine": 362,
            "content": "        status: 'unhealthy',\n        responseTime: Date.now() - startTime,\n        message: error.message,\n        timestamp: new Date().toISOString(),\n      };"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 385,
            "endLine": 389,
            "content": "        status: 'unhealthy',\n        responseTime: Date.now() - startTime,\n        message: error.message,\n        timestamp: new Date().toISOString(),\n      };"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 415,
            "endLine": 419,
            "content": "        status: 'unhealthy',\n        responseTime: Date.now() - startTime,\n        message: error.message,\n        timestamp: new Date().toISOString(),\n      };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 359,
            "endLine": 363,
            "content": "        responseTime: Date.now() - startTime,\n        message: error.message,\n        timestamp: new Date().toISOString(),\n      };\n    }"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 386,
            "endLine": 390,
            "content": "        responseTime: Date.now() - startTime,\n        message: error.message,\n        timestamp: new Date().toISOString(),\n      };\n    }"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 416,
            "endLine": 420,
            "content": "        responseTime: Date.now() - startTime,\n        message: error.message,\n        timestamp: new Date().toISOString(),\n      };\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 3,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 360,
            "endLine": 364,
            "content": "        message: error.message,\n        timestamp: new Date().toISOString(),\n      };\n    }\n  }"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 387,
            "endLine": 391,
            "content": "        message: error.message,\n        timestamp: new Date().toISOString(),\n      };\n    }\n  }"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 417,
            "endLine": 421,
            "content": "        message: error.message,\n        timestamp: new Date().toISOString(),\n      };\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 371,
            "endLine": 375,
            "content": "    \n    try {\n      const response = await fetch('/api/health');\n      const status = response.ok ? 'healthy' : 'degraded';\n      "
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 372,
            "endLine": 376,
            "content": "    try {\n      const response = await fetch('/api/health');\n      const status = response.ok ? 'healthy' : 'degraded';\n      \n      return {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 398,
            "endLine": 402,
            "content": "    \n    try {\n      // Check localStorage availability\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('health_check', 'test');"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 399,
            "endLine": 403,
            "content": "    try {\n      // Check localStorage availability\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('health_check', 'test');\n        localStorage.removeItem('health_check');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 428,
            "endLine": 432,
            "content": "    \n    try {\n      // Check if we can reach external services\n      const checks = [\n        fetch('https://api.stripe.com/v1/charges', { method: 'HEAD' }),"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 429,
            "endLine": 433,
            "content": "    try {\n      // Check if we can reach external services\n      const checks = [\n        fetch('https://api.stripe.com/v1/charges', { method: 'HEAD' }),\n        // Add other third-party service checks"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 454,
            "endLine": 458,
            "content": "\n  /**\n   * Determine error severity\n   */\n  private determineSeverity(error: Error): ErrorReport['severity'] {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 455,
            "endLine": 459,
            "content": "  /**\n   * Determine error severity\n   */\n  private determineSeverity(error: Error): ErrorReport['severity'] {\n    const message = error.message.toLowerCase();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 475,
            "endLine": 479,
            "content": "\n  /**\n   * Send to external logging service\n   */\n  private async sendToLoggingService(log: LogEntry): Promise<void> {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 476,
            "endLine": 480,
            "content": "  /**\n   * Send to external logging service\n   */\n  private async sendToLoggingService(log: LogEntry): Promise<void> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 491,
            "endLine": 495,
            "content": "\n  /**\n   * Send to error tracking service\n   */\n  private async sendToErrorTracking(error: ErrorReport): Promise<void> {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 492,
            "endLine": 496,
            "content": "  /**\n   * Send to error tracking service\n   */\n  private async sendToErrorTracking(error: ErrorReport): Promise<void> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 507,
            "endLine": 511,
            "content": "\n  /**\n   * Send to monitoring service\n   */\n  private async sendToMonitoringService(metric: PerformanceMetric): Promise<void> {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 508,
            "endLine": 512,
            "content": "  /**\n   * Send to monitoring service\n   */\n  private async sendToMonitoringService(metric: PerformanceMetric): Promise<void> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 515,
            "endLine": 519,
            "content": "        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(metric),\n      });\n    } catch (error) {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 531,
            "endLine": 535,
            "content": "        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(metric),\n      });\n    } catch (error) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 516,
            "endLine": 520,
            "content": "        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(metric),\n      });\n    } catch (error) {\n      console.error('Failed to send performance metric:', error);"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 532,
            "endLine": 536,
            "content": "        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(metric),\n      });\n    } catch (error) {\n      console.error('Failed to send custom metric:', error);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 523,
            "endLine": 527,
            "content": "\n  /**\n   * Send to metrics service\n   */\n  private async sendToMetricsService(metric: MetricData): Promise<void> {"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 524,
            "endLine": 528,
            "content": "  /**\n   * Send to metrics service\n   */\n  private async sendToMetricsService(metric: MetricData): Promise<void> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 590,
            "endLine": 594,
            "content": "\n    return {\n      averagePageLoad: pageLoads.reduce((sum, m) => sum + m.duration, 0) / pageLoads.length || 0,\n      averageApiResponse: apiResponses.reduce((sum, m) => sum + m.duration, 0) / apiResponses.length || 0,\n      slowQueries: slowQueries.slice(-10),"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 591,
            "endLine": 595,
            "content": "    return {\n      averagePageLoad: pageLoads.reduce((sum, m) => sum + m.duration, 0) / pageLoads.length || 0,\n      averageApiResponse: apiResponses.reduce((sum, m) => sum + m.duration, 0) / apiResponses.length || 0,\n      slowQueries: slowQueries.slice(-10),\n    };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 598,
            "endLine": 602,
            "content": "\n// Export singleton instance\nexport const monitoringService = MonitoringService.getInstance();\n\n// Export utility functions"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 599,
            "endLine": 603,
            "content": "// Export singleton instance\nexport const monitoringService = MonitoringService.getInstance();\n\n// Export utility functions\nexport const monitor = {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 601,
            "endLine": 605,
            "content": "\n// Export utility functions\nexport const monitor = {\n  log: (level: LogEntry['level'], message: string, context?: Record<string, any>) => \n    monitoringService.log(level, message, context),"
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 602,
            "endLine": 606,
            "content": "// Export utility functions\nexport const monitor = {\n  log: (level: LogEntry['level'], message: string, context?: Record<string, any>) => \n    monitoringService.log(level, message, context),\n  "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 606,
            "endLine": 610,
            "content": "  \n  error: (error: Error, context?: Record<string, any>) => \n    monitoringService.captureError(error, context),\n  \n  performance: (metric: PerformanceMetric['metric'], duration: number, endpoint?: string) => "
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 607,
            "endLine": 611,
            "content": "  error: (error: Error, context?: Record<string, any>) => \n    monitoringService.captureError(error, context),\n  \n  performance: (metric: PerformanceMetric['metric'], duration: number, endpoint?: string) => \n    monitoringService.recordPerformance(metric, duration, endpoint),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 609,
            "endLine": 613,
            "content": "  \n  performance: (metric: PerformanceMetric['metric'], duration: number, endpoint?: string) => \n    monitoringService.recordPerformance(metric, duration, endpoint),\n  \n  metric: (name: string, value: number, tags?: Record<string, string>) => "
          },
          {
            "file": "src/lib/monitoring.ts",
            "startLine": 610,
            "endLine": 614,
            "content": "  performance: (metric: PerformanceMetric['metric'], duration: number, endpoint?: string) => \n    monitoringService.recordPerformance(metric, duration, endpoint),\n  \n  metric: (name: string, value: number, tags?: Record<string, string>) => \n    monitoringService.recordMetric(name, value, tags),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 44,
            "endLine": 48,
            "content": "\nexport class MultiTenantService {\n  private static instance: MultiTenantService;\n  private currentTenant: Tenant | null = null;\n  private currentUserRole: TenantUser | null = null;"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 45,
            "endLine": 49,
            "content": "export class MultiTenantService {\n  private static instance: MultiTenantService;\n  private currentTenant: Tenant | null = null;\n  private currentUserRole: TenantUser | null = null;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 49,
            "endLine": 53,
            "content": "\n  public static getInstance(): MultiTenantService {\n    if (!MultiTenantService.instance) {\n      MultiTenantService.instance = new MultiTenantService();\n    }"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 50,
            "endLine": 54,
            "content": "  public static getInstance(): MultiTenantService {\n    if (!MultiTenantService.instance) {\n      MultiTenantService.instance = new MultiTenantService();\n    }\n    return MultiTenantService.instance;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 56,
            "endLine": 60,
            "content": "\n  /**\n   * Initialize tenant context for current user\n   */\n  async initializeTenantContext(): Promise<void> {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 57,
            "endLine": 61,
            "content": "  /**\n   * Initialize tenant context for current user\n   */\n  async initializeTenantContext(): Promise<void> {\n    try {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 64,
            "endLine": 68,
            "content": "\n      // Get user's tenant memberships\n      const tenantMemberships = await this.getUserTenantMemberships(user.id);\n      \n      if (tenantMemberships.length === 0) {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 65,
            "endLine": 69,
            "content": "      // Get user's tenant memberships\n      const tenantMemberships = await this.getUserTenantMemberships(user.id);\n      \n      if (tenantMemberships.length === 0) {\n        // New user - create personal tenant"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 67,
            "endLine": 71,
            "content": "      \n      if (tenantMemberships.length === 0) {\n        // New user - create personal tenant\n        await this.createPersonalTenant(user);\n      } else {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 68,
            "endLine": 72,
            "content": "      if (tenantMemberships.length === 0) {\n        // New user - create personal tenant\n        await this.createPersonalTenant(user);\n      } else {\n        // Set current tenant (last used or first available)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 75,
            "endLine": 79,
            "content": "        \n        await this.setCurrentTenant(targetTenant.tenantId);\n      }\n    } catch (error) {\n      console.error('Failed to initialize tenant context:', error);"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 76,
            "endLine": 80,
            "content": "        await this.setCurrentTenant(targetTenant.tenantId);\n      }\n    } catch (error) {\n      console.error('Failed to initialize tenant context:', error);\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 10,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 101,
            "endLine": 105,
            "content": "    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 143,
            "endLine": 147,
            "content": "    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 205,
            "endLine": 209,
            "content": "    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 241,
            "endLine": 245,
            "content": "    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 260,
            "endLine": 264,
            "content": "    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 281,
            "endLine": 285,
            "content": "    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 301,
            "endLine": 305,
            "content": "    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 324,
            "endLine": 328,
            "content": "\n    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 325,
            "endLine": 329,
            "content": "    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 369,
            "endLine": 373,
            "content": "    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 105,
            "endLine": 109,
            "content": "\n    // Get tenant details\n    const { data: tenant, error: tenantError } = await supabase\n      .from('tenants')\n      .select('*')"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 106,
            "endLine": 110,
            "content": "    // Get tenant details\n    const { data: tenant, error: tenantError } = await supabase\n      .from('tenants')\n      .select('*')\n      .eq('id', tenantId)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 116,
            "endLine": 120,
            "content": "\n    // Get user role in tenant\n    const user = await getCurrentUser();\n    const { data: userRole, error: roleError } = await supabase\n      .from('tenant_users')"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 117,
            "endLine": 121,
            "content": "    // Get user role in tenant\n    const user = await getCurrentUser();\n    const { data: userRole, error: roleError } = await supabase\n      .from('tenant_users')\n      .select('*')"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 129,
            "endLine": 133,
            "content": "\n    this.currentTenant = tenant;\n    this.currentUserRole = userRole;\n    \n    // Store in localStorage for persistence"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 130,
            "endLine": 134,
            "content": "    this.currentTenant = tenant;\n    this.currentUserRole = userRole;\n    \n    // Store in localStorage for persistence\n    localStorage.setItem('lastTenantId', tenantId);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 132,
            "endLine": 136,
            "content": "    \n    // Store in localStorage for persistence\n    localStorage.setItem('lastTenantId', tenantId);\n    \n    console.log('✅ Tenant context set:', tenant.name);"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 133,
            "endLine": 137,
            "content": "    // Store in localStorage for persistence\n    localStorage.setItem('lastTenantId', tenantId);\n    \n    console.log('✅ Tenant context set:', tenant.name);\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 138,
            "endLine": 142,
            "content": "\n  /**\n   * Create personal tenant for new user\n   */\n  private async createPersonalTenant(user: any): Promise<void> {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 139,
            "endLine": 143,
            "content": "  /**\n   * Create personal tenant for new user\n   */\n  private async createPersonalTenant(user: any): Promise<void> {\n    const supabase = createClient("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 147,
            "endLine": 151,
            "content": "\n    const tenantData: Partial<Tenant> = {\n      name: `${user.email}'s Company`,\n      domain: user.email.split('@')[1] || 'personal',\n      plan: 'starter',"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 148,
            "endLine": 152,
            "content": "    const tenantData: Partial<Tenant> = {\n      name: `${user.email}'s Company`,\n      domain: user.email.split('@')[1] || 'personal',\n      plan: 'starter',\n      status: 'trial',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 171,
            "endLine": 175,
            "content": "\n    const { data: tenant, error: tenantError } = await supabase\n      .from('tenants')\n      .insert(tenantData)\n      .select()"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 172,
            "endLine": 176,
            "content": "    const { data: tenant, error: tenantError } = await supabase\n      .from('tenants')\n      .insert(tenantData)\n      .select()\n      .single();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 200,
            "endLine": 204,
            "content": "\n  /**\n   * Get user's tenant memberships\n   */\n  private async getUserTenantMemberships(userId: string): Promise<TenantUser[]> {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 201,
            "endLine": 205,
            "content": "  /**\n   * Get user's tenant memberships\n   */\n  private async getUserTenantMemberships(userId: string): Promise<TenantUser[]> {\n    const supabase = createClient("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 228,
            "endLine": 232,
            "content": "    \n    // Owner has all permissions\n    if (this.currentUserRole.role === 'owner') return true;\n    \n    // Check specific permissions"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 229,
            "endLine": 233,
            "content": "    // Owner has all permissions\n    if (this.currentUserRole.role === 'owner') return true;\n    \n    // Check specific permissions\n    return this.currentUserRole.permissions.includes(permission) || "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 231,
            "endLine": 235,
            "content": "    \n    // Check specific permissions\n    return this.currentUserRole.permissions.includes(permission) || \n           this.currentUserRole.permissions.includes('*');\n  }"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 232,
            "endLine": 236,
            "content": "    // Check specific permissions\n    return this.currentUserRole.permissions.includes(permission) || \n           this.currentUserRole.permissions.includes('*');\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 5,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 242,
            "endLine": 246,
            "content": "      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n\n    if (!this.currentTenant) {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 261,
            "endLine": 265,
            "content": "      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n\n    if (!this.currentTenant) {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 282,
            "endLine": 286,
            "content": "      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n\n    if (!this.currentTenant) {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 302,
            "endLine": 306,
            "content": "      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n\n    if (!this.currentTenant) {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 370,
            "endLine": 374,
            "content": "      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n\n    if (!this.currentTenant) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 5,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 243,
            "endLine": 247,
            "content": "      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 262,
            "endLine": 266,
            "content": "      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 283,
            "endLine": 287,
            "content": "      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 303,
            "endLine": 307,
            "content": "      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 371,
            "endLine": 375,
            "content": "      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    );\n\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 5,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 244,
            "endLine": 248,
            "content": "    );\n\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 263,
            "endLine": 267,
            "content": "    );\n\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 284,
            "endLine": 288,
            "content": "    );\n\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 304,
            "endLine": 308,
            "content": "    );\n\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 372,
            "endLine": 376,
            "content": "    );\n\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 5,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 245,
            "endLine": 249,
            "content": "\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }\n"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 264,
            "endLine": 268,
            "content": "\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }\n"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 285,
            "endLine": 289,
            "content": "\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }\n"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 305,
            "endLine": 309,
            "content": "\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }\n"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 373,
            "endLine": 377,
            "content": "\n    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 246,
            "endLine": 250,
            "content": "    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }\n\n    return supabase"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 265,
            "endLine": 269,
            "content": "    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }\n\n    return supabase"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 286,
            "endLine": 290,
            "content": "    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }\n\n    return supabase"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 306,
            "endLine": 310,
            "content": "    if (!this.currentTenant) {\n      throw new Error('No tenant context available');\n    }\n\n    return supabase"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 247,
            "endLine": 251,
            "content": "      throw new Error('No tenant context available');\n    }\n\n    return supabase\n      .from(tableName)"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 266,
            "endLine": 270,
            "content": "      throw new Error('No tenant context available');\n    }\n\n    return supabase\n      .from(tableName)"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 287,
            "endLine": 291,
            "content": "      throw new Error('No tenant context available');\n    }\n\n    return supabase\n      .from(tableName)"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 307,
            "endLine": 311,
            "content": "      throw new Error('No tenant context available');\n    }\n\n    return supabase\n      .from(tableName)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 276,
            "endLine": 280,
            "content": "\n  /**\n   * Update with tenant context\n   */\n  async updateWithTenant(tableName: string, id: string, data: any) {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 277,
            "endLine": 281,
            "content": "  /**\n   * Update with tenant context\n   */\n  async updateWithTenant(tableName: string, id: string, data: any) {\n    const supabase = createClient("
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 293,
            "endLine": 297,
            "content": "      .eq('id', id)\n      .eq('tenant_id', this.currentTenant.id);\n  }\n\n  /**"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 313,
            "endLine": 317,
            "content": "      .eq('id', id)\n      .eq('tenant_id', this.currentTenant.id);\n  }\n\n  /**"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 316,
            "endLine": 320,
            "content": "\n  /**\n   * Invite user to tenant\n   */\n  async inviteUser(email: string, role: 'admin' | 'user' | 'viewer', permissions: string[] = []): Promise<void> {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 317,
            "endLine": 321,
            "content": "  /**\n   * Invite user to tenant\n   */\n  async inviteUser(email: string, role: 'admin' | 'user' | 'viewer', permissions: string[] = []): Promise<void> {\n    if (!this.hasPermission('invite_users')) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 352,
            "endLine": 356,
            "content": "\n  /**\n   * Send invitation email\n   */\n  private async sendInvitationEmail(email: string, role: string): Promise<void> {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 353,
            "endLine": 357,
            "content": "  /**\n   * Send invitation email\n   */\n  private async sendInvitationEmail(email: string, role: string): Promise<void> {\n    // Implement email service integration"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 377,
            "endLine": 381,
            "content": "\n    // Get user count\n    const { count: userCount } = await supabase\n      .from('tenant_users')\n      .select('*', { count: 'exact', head: true })"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 378,
            "endLine": 382,
            "content": "    // Get user count\n    const { count: userCount } = await supabase\n      .from('tenant_users')\n      .select('*', { count: 'exact', head: true })\n      .eq('tenant_id', this.currentTenant.id)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 384,
            "endLine": 388,
            "content": "\n    // Get transaction count\n    const { count: transactionCount } = await supabase\n      .from('transactions')\n      .select('*', { count: 'exact', head: true })"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 385,
            "endLine": 389,
            "content": "    // Get transaction count\n    const { count: transactionCount } = await supabase\n      .from('transactions')\n      .select('*', { count: 'exact', head: true })\n      .eq('tenant_id', this.currentTenant.id);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 390,
            "endLine": 394,
            "content": "\n    // Calculate storage usage (simplified)\n    const { data: storageData } = await supabase\n      .from('file_uploads')\n      .select('file_size')"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 391,
            "endLine": 395,
            "content": "    // Calculate storage usage (simplified)\n    const { data: storageData } = await supabase\n      .from('file_uploads')\n      .select('file_size')\n      .eq('tenant_id', this.currentTenant.id);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 396,
            "endLine": 400,
            "content": "\n    const storageUsage = storageData?.reduce((total, file) => total + (file.file_size || 0), 0) || 0;\n\n    return {\n      users: userCount || 0,"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 397,
            "endLine": 401,
            "content": "    const storageUsage = storageData?.reduce((total, file) => total + (file.file_size || 0), 0) || 0;\n\n    return {\n      users: userCount || 0,\n      transactions: transactionCount || 0,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 398,
            "endLine": 402,
            "content": "\n    return {\n      users: userCount || 0,\n      transactions: transactionCount || 0,\n      storage: Math.round(storageUsage / (1024 * 1024)), // Convert to MB"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 399,
            "endLine": 403,
            "content": "    return {\n      users: userCount || 0,\n      transactions: transactionCount || 0,\n      storage: Math.round(storageUsage / (1024 * 1024)), // Convert to MB\n    };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 417,
            "endLine": 421,
            "content": "\n    const usage = await this.getTenantUsage();\n    const limits = this.currentTenant.settings.limits;\n\n    return {"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 418,
            "endLine": 422,
            "content": "    const usage = await this.getTenantUsage();\n    const limits = this.currentTenant.settings.limits;\n\n    return {\n      withinLimits: usage.users <= limits.users && "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 420,
            "endLine": 424,
            "content": "\n    return {\n      withinLimits: usage.users <= limits.users && \n                   usage.transactions <= limits.transactions && \n                   usage.storage <= limits.storage,"
          },
          {
            "file": "src/lib/multiTenant.ts",
            "startLine": 421,
            "endLine": 425,
            "content": "    return {\n      withinLimits: usage.users <= limits.users && \n                   usage.transactions <= limits.transactions && \n                   usage.storage <= limits.storage,\n      usage,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 3,
            "endLine": 7,
            "content": "\nif (typeof window !== 'undefined') {\n  // Dynamic import to avoid SSR issues\n  import('pdfjs-dist').then((module) => {\n    pdfjsLib = module;"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 4,
            "endLine": 8,
            "content": "if (typeof window !== 'undefined') {\n  // Dynamic import to avoid SSR issues\n  import('pdfjs-dist').then((module) => {\n    pdfjsLib = module;\n    // Set up PDF.js worker to use the static worker file in public"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 10,
            "endLine": 14,
            "content": "    \n    // Test the parsing logic with known data\n    const processor = new PDFProcessor();\n    processor.testParsingWithKnownData();\n  }).catch((error) => {"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 11,
            "endLine": 15,
            "content": "    // Test the parsing logic with known data\n    const processor = new PDFProcessor();\n    processor.testParsingWithKnownData();\n  }).catch((error) => {\n    console.error('Failed to load PDF.js:', error);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 25,
            "endLine": 29,
            "content": "\nexport class PDFProcessor {\n  async extractTextFromPDF(file: File): Promise<PDFExtractionResult> {\n    try {\n      // Check if we're on the client side"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 26,
            "endLine": 30,
            "content": "export class PDFProcessor {\n  async extractTextFromPDF(file: File): Promise<PDFExtractionResult> {\n    try {\n      // Check if we're on the client side\n      if (typeof window === 'undefined') {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 38,
            "endLine": 42,
            "content": "\n      // Wait for PDF.js to be loaded\n      if (!pdfjsLib) {\n        await new Promise(resolve => {\n          const checkPdfJs = () => {"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 39,
            "endLine": 43,
            "content": "      // Wait for PDF.js to be loaded\n      if (!pdfjsLib) {\n        await new Promise(resolve => {\n          const checkPdfJs = () => {\n            if (pdfjsLib) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 55,
            "endLine": 59,
            "content": "      \n      // Load PDF document\n      const loadingTask = pdfjsLib.getDocument({ data: arrayBuffer });\n      const pdf = await loadingTask.promise;\n      "
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 56,
            "endLine": 60,
            "content": "      // Load PDF document\n      const loadingTask = pdfjsLib.getDocument({ data: arrayBuffer });\n      const pdf = await loadingTask.promise;\n      \n      let fullText = '';"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 62,
            "endLine": 66,
            "content": "      \n      // Extract text from all pages\n      for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\n        const page = await pdf.getPage(pageNum);\n        const textContent = await page.getTextContent();"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 63,
            "endLine": 67,
            "content": "      // Extract text from all pages\n      for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\n        const page = await pdf.getPage(pageNum);\n        const textContent = await page.getTextContent();\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 67,
            "endLine": 71,
            "content": "        \n        // Extract text items and organize them by position\n        const textItems = textContent.items.map((item: any) => ({\n          text: item.str,\n          x: item.transform[4],"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 68,
            "endLine": 72,
            "content": "        // Extract text items and organize them by position\n        const textItems = textContent.items.map((item: any) => ({\n          text: item.str,\n          x: item.transform[4],\n          y: item.transform[5],"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 76,
            "endLine": 80,
            "content": "        \n        // Sort by Y position (top to bottom) and then by X position (left to right)\n        textItems.sort((a: any, b: any) => {\n          if (Math.abs(a.y - b.y) < 5) { // Same line if Y difference is small\n            return a.x - b.x;"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 77,
            "endLine": 81,
            "content": "        // Sort by Y position (top to bottom) and then by X position (left to right)\n        textItems.sort((a: any, b: any) => {\n          if (Math.abs(a.y - b.y) < 5) { // Same line if Y difference is small\n            return a.x - b.x;\n          }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 84,
            "endLine": 88,
            "content": "        \n        // Group text items into lines\n        const lines: string[] = [];\n        let currentLine = '';\n        let lastY = -1;"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 85,
            "endLine": 89,
            "content": "        // Group text items into lines\n        const lines: string[] = [];\n        let currentLine = '';\n        let lastY = -1;\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 89,
            "endLine": 93,
            "content": "        \n        for (const item of textItems) {\n          if (lastY === -1 || Math.abs(item.y - lastY) < 5) {\n            // Same line\n            currentLine += item.text + ' ';"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 90,
            "endLine": 94,
            "content": "        for (const item of textItems) {\n          if (lastY === -1 || Math.abs(item.y - lastY) < 5) {\n            // Same line\n            currentLine += item.text + ' ';\n          } else {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 103,
            "endLine": 107,
            "content": "        \n        // Add the last line\n        if (currentLine.trim()) {\n          lines.push(currentLine.trim());\n        }"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 104,
            "endLine": 108,
            "content": "        // Add the last line\n        if (currentLine.trim()) {\n          lines.push(currentLine.trim());\n        }\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 129,
            "endLine": 133,
            "content": "  \n  async convertPDFToCSV(file: File): Promise<{ csvText: string; success: boolean; error?: string }> {\n    try {\n      const extraction = await this.extractTextFromPDF(file);\n      "
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 130,
            "endLine": 134,
            "content": "  async convertPDFToCSV(file: File): Promise<{ csvText: string; success: boolean; error?: string }> {\n    try {\n      const extraction = await this.extractTextFromPDF(file);\n      \n      if (!extraction.success) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 141,
            "endLine": 145,
            "content": "      \n      // Debug: Log extracted lines to console\n      if (typeof window !== 'undefined') {\n        console.log('Extracted PDF lines:', extraction.lines);\n        console.log('Number of lines extracted:', extraction.lines.length);"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 142,
            "endLine": 146,
            "content": "      // Debug: Log extracted lines to console\n      if (typeof window !== 'undefined') {\n        console.log('Extracted PDF lines:', extraction.lines);\n        console.log('Number of lines extracted:', extraction.lines.length);\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 147,
            "endLine": 151,
            "content": "      \n      // Parse the extracted text to find transaction data\n      const transactions = this.parseBankStatementText(extraction.lines);\n      \n      // Debug: Log found transactions"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 148,
            "endLine": 152,
            "content": "      // Parse the extracted text to find transaction data\n      const transactions = this.parseBankStatementText(extraction.lines);\n      \n      // Debug: Log found transactions\n      if (typeof window !== 'undefined') {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 150,
            "endLine": 154,
            "content": "      \n      // Debug: Log found transactions\n      if (typeof window !== 'undefined') {\n        console.log('Found transactions:', transactions);\n        console.log('Number of transactions found:', transactions.length);"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 151,
            "endLine": 155,
            "content": "      // Debug: Log found transactions\n      if (typeof window !== 'undefined') {\n        console.log('Found transactions:', transactions);\n        console.log('Number of transactions found:', transactions.length);\n        "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 155,
            "endLine": 159,
            "content": "        \n        // Log sample transactions for quality check\n        if (transactions.length > 0) {\n          console.log('Sample transactions:');\n          transactions.slice(0, 3).forEach((tx, index) => {"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 156,
            "endLine": 160,
            "content": "        // Log sample transactions for quality check\n        if (transactions.length > 0) {\n          console.log('Sample transactions:');\n          transactions.slice(0, 3).forEach((tx, index) => {\n            console.log(`${index + 1}. Date: ${tx.date}, Amount: ${tx.amount}, Description: \"${tx.description}\"`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 190,
            "endLine": 194,
            "content": "  \n  // Test function to verify parsing logic\n  testParsingWithKnownData(): void {\n    if (typeof window !== 'undefined') {\n      const testLines = ["
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 191,
            "endLine": 195,
            "content": "  // Test function to verify parsing logic\n  testParsingWithKnownData(): void {\n    if (typeof window !== 'undefined') {\n      const testLines = [\n        'Date,Description,Amount',"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 202,
            "endLine": 206,
            "content": "      \n      console.log('Testing parsing with known data...');\n      console.log('Test lines:', testLines);\n      \n      const transactions = this.parseBankStatementText(testLines);"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 203,
            "endLine": 207,
            "content": "      console.log('Testing parsing with known data...');\n      console.log('Test lines:', testLines);\n      \n      const transactions = this.parseBankStatementText(testLines);\n      console.log('Parsed transactions:', transactions);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 205,
            "endLine": 209,
            "content": "      \n      const transactions = this.parseBankStatementText(testLines);\n      console.log('Parsed transactions:', transactions);\n      console.log('Number of transactions found:', transactions.length);\n    }"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 206,
            "endLine": 210,
            "content": "      const transactions = this.parseBankStatementText(testLines);\n      console.log('Parsed transactions:', transactions);\n      console.log('Number of transactions found:', transactions.length);\n    }\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 211,
            "endLine": 215,
            "content": "  \n  private parseBankStatementText(lines: string[]): Array<{ date: string; description: string; amount: string }> {\n    const transactions: Array<{ date: string; description: string; amount: string }> = [];\n    \n    // Debug: Log first few lines to understand format"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 212,
            "endLine": 216,
            "content": "  private parseBankStatementText(lines: string[]): Array<{ date: string; description: string; amount: string }> {\n    const transactions: Array<{ date: string; description: string; amount: string }> = [];\n    \n    // Debug: Log first few lines to understand format\n    if (typeof window !== 'undefined') {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 214,
            "endLine": 218,
            "content": "    \n    // Debug: Log first few lines to understand format\n    if (typeof window !== 'undefined') {\n      console.log('First 10 lines for parsing:');\n      lines.slice(0, 10).forEach((line, index) => {"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 215,
            "endLine": 219,
            "content": "    // Debug: Log first few lines to understand format\n    if (typeof window !== 'undefined') {\n      console.log('First 10 lines for parsing:');\n      lines.slice(0, 10).forEach((line, index) => {\n        console.log(`${index + 1}: \"${line}\"`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 222,
            "endLine": 226,
            "content": "    \n    // RBC-specific date patterns\n    const rbcDatePatterns = [\n      /(\\d{1,2})\\s+(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)/i, // 11 Dec, 15 Jan, etc.\n    ];"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 223,
            "endLine": 227,
            "content": "    // RBC-specific date patterns\n    const rbcDatePatterns = [\n      /(\\d{1,2})\\s+(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)/i, // 11 Dec, 15 Jan, etc.\n    ];\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 227,
            "endLine": 231,
            "content": "    \n    // More flexible date patterns - including month abbreviations\n    const datePatterns = [\n      /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{2,4})/, // DD/MM/YYYY or MM/DD/YYYY\n      /(\\d{4})-(\\d{1,2})-(\\d{1,2})/, // YYYY-MM-DD"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 228,
            "endLine": 232,
            "content": "    // More flexible date patterns - including month abbreviations\n    const datePatterns = [\n      /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{2,4})/, // DD/MM/YYYY or MM/DD/YYYY\n      /(\\d{4})-(\\d{1,2})-(\\d{1,2})/, // YYYY-MM-DD\n      /(\\d{1,2})-(\\d{1,2})-(\\d{2,4})/, // DD-MM-YYYY"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 236,
            "endLine": 240,
            "content": "    \n    // RBC-specific amount patterns for separate withdrawal/deposit columns\n    const rbcAmountPatterns = [\n      /([-+]?[\\d,]+\\.?\\d*)\\s*,\\s*$/, // Withdrawal amount at end (e.g., \"12.00,\")\n      /,\\s*([-+]?[\\d,]+\\.?\\d*)\\s*$/, // Deposit amount at end (e.g., \",600.00\")"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 237,
            "endLine": 241,
            "content": "    // RBC-specific amount patterns for separate withdrawal/deposit columns\n    const rbcAmountPatterns = [\n      /([-+]?[\\d,]+\\.?\\d*)\\s*,\\s*$/, // Withdrawal amount at end (e.g., \"12.00,\")\n      /,\\s*([-+]?[\\d,]+\\.?\\d*)\\s*$/, // Deposit amount at end (e.g., \",600.00\")\n      /,\\s*([-+]?[\\d,]+\\.?\\d*)\\s*,/, // Deposit amount in middle (e.g., \",600.00,\")"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 246,
            "endLine": 250,
            "content": "    \n    // More flexible amount patterns\n    const amountPatterns = [\n      /([-+]?[\\d,]+\\.?\\d*)\\s*[A-Z]{3}\\d{1,2}/, // Amount followed by date like \"2,500.00 MAY04\"\n      /([-+]?[\\d,]+\\.?\\d*)\\s*$/, // Amount at end with optional spaces"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 247,
            "endLine": 251,
            "content": "    // More flexible amount patterns\n    const amountPatterns = [\n      /([-+]?[\\d,]+\\.?\\d*)\\s*[A-Z]{3}\\d{1,2}/, // Amount followed by date like \"2,500.00 MAY04\"\n      /([-+]?[\\d,]+\\.?\\d*)\\s*$/, // Amount at end with optional spaces\n      /([-+]?[\\d,]+\\.?\\d*)/, // Any amount in line"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 253,
            "endLine": 257,
            "content": "    \n    // Add new regex patterns for more PDF layouts\n    const ADDITIONAL_DATE_PATTERNS = [\n      // e.g., 2023-05-01, 01-05-2023, 01.05.2023, 2023/05/01\n      /\\b\\d{4}[-\\/.]\\d{2}[-\\/.]\\d{2}\\b/, // YYYY-MM-DD, YYYY/MM/DD, YYYY.MM.DD"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 254,
            "endLine": 258,
            "content": "    // Add new regex patterns for more PDF layouts\n    const ADDITIONAL_DATE_PATTERNS = [\n      // e.g., 2023-05-01, 01-05-2023, 01.05.2023, 2023/05/01\n      /\\b\\d{4}[-\\/.]\\d{2}[-\\/.]\\d{2}\\b/, // YYYY-MM-DD, YYYY/MM/DD, YYYY.MM.DD\n      /\\b\\d{2}[-\\/.]\\d{2}[-\\/.]\\d{4}\\b/, // DD-MM-YYYY, DD/MM/YYYY, DD.MM.YYYY"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 264,
            "endLine": 268,
            "content": "    \n    let processedCount = 0;\n    \n    for (const line of lines) {\n      // Skip header lines, balance lines, and summary lines"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 265,
            "endLine": 269,
            "content": "    let processedCount = 0;\n    \n    for (const line of lines) {\n      // Skip header lines, balance lines, and summary lines\n      if (this.isHeaderOrSummaryLine(line)) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 266,
            "endLine": 270,
            "content": "    \n    for (const line of lines) {\n      // Skip header lines, balance lines, and summary lines\n      if (this.isHeaderOrSummaryLine(line)) {\n        continue;"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 267,
            "endLine": 271,
            "content": "    for (const line of lines) {\n      // Skip header lines, balance lines, and summary lines\n      if (this.isHeaderOrSummaryLine(line)) {\n        continue;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 272,
            "endLine": 276,
            "content": "      \n      // First try RBC-specific date pattern\n      let dateMatch = null;\n      let datePattern = null;\n      let isRbcFormat = false;"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 273,
            "endLine": 277,
            "content": "      // First try RBC-specific date pattern\n      let dateMatch = null;\n      let datePattern = null;\n      let isRbcFormat = false;\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 277,
            "endLine": 281,
            "content": "      \n      for (const pattern of rbcDatePatterns) {\n        dateMatch = line.match(pattern);\n        if (dateMatch) {\n          datePattern = pattern;"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 278,
            "endLine": 282,
            "content": "      for (const pattern of rbcDatePatterns) {\n        dateMatch = line.match(pattern);\n        if (dateMatch) {\n          datePattern = pattern;\n          isRbcFormat = true;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 286,
            "endLine": 290,
            "content": "      \n      if (!dateMatch) {\n        // Try regular date patterns\n        for (const pattern of datePatterns) {\n          dateMatch = line.match(pattern);"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 287,
            "endLine": 291,
            "content": "      if (!dateMatch) {\n        // Try regular date patterns\n        for (const pattern of datePatterns) {\n          dateMatch = line.match(pattern);\n          if (dateMatch) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 297,
            "endLine": 301,
            "content": "      \n      if (!dateMatch) {\n        // Try additional date patterns\n        for (const additionalPattern of ADDITIONAL_DATE_PATTERNS) {\n          dateMatch = line.match(additionalPattern);"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 298,
            "endLine": 302,
            "content": "      if (!dateMatch) {\n        // Try additional date patterns\n        for (const additionalPattern of ADDITIONAL_DATE_PATTERNS) {\n          dateMatch = line.match(additionalPattern);\n          if (dateMatch) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 310,
            "endLine": 314,
            "content": "      \n      // Extract date and handle month abbreviations\n      let date = dateMatch[0];\n      if (isRbcFormat) {\n        // Handle RBC format: \"11 Dec\" -> \"11/12/2024\" (assuming current year)"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 311,
            "endLine": 315,
            "content": "      // Extract date and handle month abbreviations\n      let date = dateMatch[0];\n      if (isRbcFormat) {\n        // Handle RBC format: \"11 Dec\" -> \"11/12/2024\" (assuming current year)\n        const day = dateMatch[1];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 317,
            "endLine": 321,
            "content": "        const monthMap: { [key: string]: string } = {\n          'JAN': '01', 'FEB': '02', 'MAR': '03', 'APR': '04',\n          'MAY': '05', 'JUN': '06', 'JUL': '07', 'AUG': '08',\n          'SEP': '09', 'OCT': '10', 'NOV': '11', 'DEC': '12'\n        };"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 326,
            "endLine": 330,
            "content": "        const monthMap: { [key: string]: string } = {\n          'JAN': '01', 'FEB': '02', 'MAR': '03', 'APR': '04',\n          'MAY': '05', 'JUN': '06', 'JUL': '07', 'AUG': '08',\n          'SEP': '09', 'OCT': '10', 'NOV': '11', 'DEC': '12'\n        };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 318,
            "endLine": 322,
            "content": "          'JAN': '01', 'FEB': '02', 'MAR': '03', 'APR': '04',\n          'MAY': '05', 'JUN': '06', 'JUL': '07', 'AUG': '08',\n          'SEP': '09', 'OCT': '10', 'NOV': '11', 'DEC': '12'\n        };\n        const monthNum = monthMap[month] || '01';"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 327,
            "endLine": 331,
            "content": "          'JAN': '01', 'FEB': '02', 'MAR': '03', 'APR': '04',\n          'MAY': '05', 'JUN': '06', 'JUL': '07', 'AUG': '08',\n          'SEP': '09', 'OCT': '10', 'NOV': '11', 'DEC': '12'\n        };\n        const month = date.substring(0, 3);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 319,
            "endLine": 323,
            "content": "          'MAY': '05', 'JUN': '06', 'JUL': '07', 'AUG': '08',\n          'SEP': '09', 'OCT': '10', 'NOV': '11', 'DEC': '12'\n        };\n        const monthNum = monthMap[month] || '01';\n        const currentYear = new Date().getFullYear();"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 328,
            "endLine": 332,
            "content": "          'MAY': '05', 'JUN': '06', 'JUL': '07', 'AUG': '08',\n          'SEP': '09', 'OCT': '10', 'NOV': '11', 'DEC': '12'\n        };\n        const month = date.substring(0, 3);\n        const day = date.substring(3);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 336,
            "endLine": 340,
            "content": "      \n      // Look for amount - try RBC patterns first if it's RBC format\n      let amountMatch = null;\n      if (isRbcFormat) {\n        for (const pattern of rbcAmountPatterns) {"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 337,
            "endLine": 341,
            "content": "      // Look for amount - try RBC patterns first if it's RBC format\n      let amountMatch = null;\n      if (isRbcFormat) {\n        for (const pattern of rbcAmountPatterns) {\n          amountMatch = line.match(pattern);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 341,
            "endLine": 345,
            "content": "          amountMatch = line.match(pattern);\n          if (amountMatch) break;\n        }\n      }\n      "
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 349,
            "endLine": 353,
            "content": "          amountMatch = line.match(pattern);\n          if (amountMatch) break;\n        }\n      }\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 345,
            "endLine": 349,
            "content": "      \n      if (!amountMatch) {\n        // Try regular amount patterns\n        for (const pattern of amountPatterns) {\n          amountMatch = line.match(pattern);"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 346,
            "endLine": 350,
            "content": "      if (!amountMatch) {\n        // Try regular amount patterns\n        for (const pattern of amountPatterns) {\n          amountMatch = line.match(pattern);\n          if (amountMatch) break;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 355,
            "endLine": 359,
            "content": "      \n      const amount = amountMatch[1];\n      \n      // Extract description (everything except date and amount)\n      let description = line;"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 356,
            "endLine": 360,
            "content": "      const amount = amountMatch[1];\n      \n      // Extract description (everything except date and amount)\n      let description = line;\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 357,
            "endLine": 361,
            "content": "      \n      // Extract description (everything except date and amount)\n      let description = line;\n      \n      // Remove the date from the line"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 358,
            "endLine": 362,
            "content": "      // Extract description (everything except date and amount)\n      let description = line;\n      \n      // Remove the date from the line\n      description = description.replace(dateMatch[0], '').trim();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 360,
            "endLine": 364,
            "content": "      \n      // Remove the date from the line\n      description = description.replace(dateMatch[0], '').trim();\n      \n      // Remove the amount from the line - be more careful to avoid partial matches"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 361,
            "endLine": 365,
            "content": "      // Remove the date from the line\n      description = description.replace(dateMatch[0], '').trim();\n      \n      // Remove the amount from the line - be more careful to avoid partial matches\n      const amountRegex = new RegExp(`\\\\b${amount.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}\\\\b`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 363,
            "endLine": 367,
            "content": "      \n      // Remove the amount from the line - be more careful to avoid partial matches\n      const amountRegex = new RegExp(`\\\\b${amount.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}\\\\b`);\n      description = description.replace(amountRegex, '').trim();\n      "
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 364,
            "endLine": 368,
            "content": "      // Remove the amount from the line - be more careful to avoid partial matches\n      const amountRegex = new RegExp(`\\\\b${amount.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}\\\\b`);\n      description = description.replace(amountRegex, '').trim();\n      \n      // Clean up description more thoroughly"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 367,
            "endLine": 371,
            "content": "      \n      // Clean up description more thoroughly\n      description = description.replace(/^\\s*[-.,|]\\s*/, ''); // Remove leading punctuation\n      description = description.replace(/[-.,|]\\s*$/, ''); // Remove trailing punctuation\n      description = description.replace(/\\s+/, ' '); // Normalize whitespace"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 368,
            "endLine": 372,
            "content": "      // Clean up description more thoroughly\n      description = description.replace(/^\\s*[-.,|]\\s*/, ''); // Remove leading punctuation\n      description = description.replace(/[-.,|]\\s*$/, ''); // Remove trailing punctuation\n      description = description.replace(/\\s+/, ' '); // Normalize whitespace\n      description = description.replace(/^\\s*[0-9]+\\s*$/, ''); // Remove standalone numbers"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 374,
            "endLine": 378,
            "content": "      \n      if (description.length > 2 && this.isValidTransaction(description, amount, date)) {\n        transactions.push({\n          date: this.normalizeDate(date),\n          description,"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 375,
            "endLine": 379,
            "content": "      if (description.length > 2 && this.isValidTransaction(description, amount, date)) {\n        transactions.push({\n          date: this.normalizeDate(date),\n          description,\n          amount"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 381,
            "endLine": 385,
            "content": "        \n        // Debug: Log successful transaction parsing\n        if (typeof window !== 'undefined' && processedCount < 5) {\n          console.log(`Parsed transaction ${processedCount + 1}:`, {\n            originalLine: line,"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 382,
            "endLine": 386,
            "content": "        // Debug: Log successful transaction parsing\n        if (typeof window !== 'undefined' && processedCount < 5) {\n          console.log(`Parsed transaction ${processedCount + 1}:`, {\n            originalLine: line,\n            date: this.normalizeDate(date),"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 395,
            "endLine": 399,
            "content": "    \n    // Debug: Log summary\n    if (typeof window !== 'undefined') {\n      console.log(`Parsing complete. Found ${transactions.length} transactions from ${processedCount} processed lines.`);\n    }"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 396,
            "endLine": 400,
            "content": "    // Debug: Log summary\n    if (typeof window !== 'undefined') {\n      console.log(`Parsing complete. Found ${transactions.length} transactions from ${processedCount} processed lines.`);\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 403,
            "endLine": 407,
            "content": "  \n  private isHeaderOrSummaryLine(line: string): boolean {\n    const lowerLine = line.toLowerCase();\n    \n    // Skip common header/summary keywords - but be more specific"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 404,
            "endLine": 408,
            "content": "  private isHeaderOrSummaryLine(line: string): boolean {\n    const lowerLine = line.toLowerCase();\n    \n    // Skip common header/summary keywords - but be more specific\n    const skipKeywords = ["
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 406,
            "endLine": 410,
            "content": "    \n    // Skip common header/summary keywords - but be more specific\n    const skipKeywords = [\n      'statement period', 'account number', 'date description amount',\n      'balance forward', 'page', 'summary', 'total', 'bank branch',"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 407,
            "endLine": 411,
            "content": "    // Skip common header/summary keywords - but be more specific\n    const skipKeywords = [\n      'statement period', 'account number', 'date description amount',\n      'balance forward', 'page', 'summary', 'total', 'bank branch',\n      'customer service', 'service charge', 'opening balance'"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 413,
            "endLine": 417,
            "content": "    \n    // Only skip if the line contains multiple header keywords or is clearly a header\n    const keywordCount = skipKeywords.filter(keyword => lowerLine.includes(keyword)).length;\n    \n    // Also skip lines that are too short (likely headers) - but be more lenient for RBC format"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 414,
            "endLine": 418,
            "content": "    // Only skip if the line contains multiple header keywords or is clearly a header\n    const keywordCount = skipKeywords.filter(keyword => lowerLine.includes(keyword)).length;\n    \n    // Also skip lines that are too short (likely headers) - but be more lenient for RBC format\n    if (line.trim().length < 5) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 416,
            "endLine": 420,
            "content": "    \n    // Also skip lines that are too short (likely headers) - but be more lenient for RBC format\n    if (line.trim().length < 5) {\n      return true;\n    }"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 417,
            "endLine": 421,
            "content": "    // Also skip lines that are too short (likely headers) - but be more lenient for RBC format\n    if (line.trim().length < 5) {\n      return true;\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 421,
            "endLine": 425,
            "content": "    \n    // Skip lines that are all uppercase and contain typical header words\n    if (line === line.toUpperCase() && (lowerLine.includes('date') || lowerLine.includes('amount'))) {\n      return true;\n    }"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 422,
            "endLine": 426,
            "content": "    // Skip lines that are all uppercase and contain typical header words\n    if (line === line.toUpperCase() && (lowerLine.includes('date') || lowerLine.includes('amount'))) {\n      return true;\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 426,
            "endLine": 430,
            "content": "    \n    // Skip lines that are just \"Opening Balance\" or similar\n    if (lowerLine.trim() === 'opening balance') {\n      return true;\n    }"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 427,
            "endLine": 431,
            "content": "    // Skip lines that are just \"Opening Balance\" or similar\n    if (lowerLine.trim() === 'opening balance') {\n      return true;\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 431,
            "endLine": 435,
            "content": "    \n    return keywordCount >= 2; // Only skip if multiple header keywords are found\n  }\n  \n  private isValidTransaction(description: string, amount: string, date: string): boolean {"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 432,
            "endLine": 436,
            "content": "    return keywordCount >= 2; // Only skip if multiple header keywords are found\n  }\n  \n  private isValidTransaction(description: string, amount: string, date: string): boolean {\n    // Skip transactions that are likely not real transactions"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 434,
            "endLine": 438,
            "content": "  \n  private isValidTransaction(description: string, amount: string, date: string): boolean {\n    // Skip transactions that are likely not real transactions\n    const invalidKeywords = [\n      'balance', 'forward', 'page', 'summary', 'total', 'statement',"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 435,
            "endLine": 439,
            "content": "  private isValidTransaction(description: string, amount: string, date: string): boolean {\n    // Skip transactions that are likely not real transactions\n    const invalidKeywords = [\n      'balance', 'forward', 'page', 'summary', 'total', 'statement',\n      'account', 'number', 'branch', 'customer', 'service'"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 441,
            "endLine": 445,
            "content": "    \n    const lowerDesc = description.toLowerCase();\n    const hasInvalidKeyword = invalidKeywords.some(keyword => lowerDesc.includes(keyword));\n    \n    // Skip if description is too short or contains invalid keywords"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 442,
            "endLine": 446,
            "content": "    const lowerDesc = description.toLowerCase();\n    const hasInvalidKeyword = invalidKeywords.some(keyword => lowerDesc.includes(keyword));\n    \n    // Skip if description is too short or contains invalid keywords\n    if (description.length < 3 || hasInvalidKeyword) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 444,
            "endLine": 448,
            "content": "    \n    // Skip if description is too short or contains invalid keywords\n    if (description.length < 3 || hasInvalidKeyword) {\n      return false;\n    }"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 445,
            "endLine": 449,
            "content": "    // Skip if description is too short or contains invalid keywords\n    if (description.length < 3 || hasInvalidKeyword) {\n      return false;\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 449,
            "endLine": 453,
            "content": "    \n    // Validate amount format\n    const amountRegex = /^[-+]?[\\d,]+\\.?\\d*$/;\n    if (!amountRegex.test(amount)) {\n      return false;"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 450,
            "endLine": 454,
            "content": "    // Validate amount format\n    const amountRegex = /^[-+]?[\\d,]+\\.?\\d*$/;\n    if (!amountRegex.test(amount)) {\n      return false;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 455,
            "endLine": 459,
            "content": "    \n    // Validate date format\n    const dateRegex = /^\\d{1,2}\\/\\d{1,2}\\/\\d{2,4}$/;\n    if (!dateRegex.test(date)) {\n      return false;"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 456,
            "endLine": 460,
            "content": "    // Validate date format\n    const dateRegex = /^\\d{1,2}\\/\\d{1,2}\\/\\d{2,4}$/;\n    if (!dateRegex.test(date)) {\n      return false;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 464,
            "endLine": 468,
            "content": "  \n  private normalizeDate(dateStr: string): string {\n    // Convert various date formats to DD/MM/YYYY\n    const patterns = [\n      { regex: /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{2,4})/, format: 'DD/MM/YYYY' },"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 465,
            "endLine": 469,
            "content": "  private normalizeDate(dateStr: string): string {\n    // Convert various date formats to DD/MM/YYYY\n    const patterns = [\n      { regex: /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{2,4})/, format: 'DD/MM/YYYY' },\n      { regex: /(\\d{4})-(\\d{1,2})-(\\d{1,2})/, format: 'YYYY-MM-DD' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 472,
            "endLine": 476,
            "content": "    \n    for (const pattern of patterns) {\n      const match = dateStr.match(pattern.regex);\n      if (match) {\n        if (pattern.format === 'DD/MM/YYYY') {"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 473,
            "endLine": 477,
            "content": "    for (const pattern of patterns) {\n      const match = dateStr.match(pattern.regex);\n      if (match) {\n        if (pattern.format === 'DD/MM/YYYY') {\n          return dateStr; // Already in correct format"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 487,
            "endLine": 491,
            "content": "    \n    return dateStr; // Return as-is if no pattern matches\n  }\n  \n  private transactionsToCSV(transactions: Array<{ date: string; description: string; amount: string }>): string {"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 488,
            "endLine": 492,
            "content": "    return dateStr; // Return as-is if no pattern matches\n  }\n  \n  private transactionsToCSV(transactions: Array<{ date: string; description: string; amount: string }>): string {\n    const csvLines = ['Date,Description,Amount'];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 490,
            "endLine": 494,
            "content": "  \n  private transactionsToCSV(transactions: Array<{ date: string; description: string; amount: string }>): string {\n    const csvLines = ['Date,Description,Amount'];\n    \n    for (const tx of transactions) {"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 491,
            "endLine": 495,
            "content": "  private transactionsToCSV(transactions: Array<{ date: string; description: string; amount: string }>): string {\n    const csvLines = ['Date,Description,Amount'];\n    \n    for (const tx of transactions) {\n      // Escape description if it contains commas or quotes"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 493,
            "endLine": 497,
            "content": "    \n    for (const tx of transactions) {\n      // Escape description if it contains commas or quotes\n      let description = tx.description;\n      if (description.includes(',') || description.includes('\"')) {"
          },
          {
            "file": "src/lib/pdfProcessor.ts",
            "startLine": 494,
            "endLine": 498,
            "content": "    for (const tx of transactions) {\n      // Escape description if it contains commas or quotes\n      let description = tx.description;\n      if (description.includes(',') || description.includes('\"')) {\n        description = `\"${description.replace(/\"/g, '\"\"')}\"`;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/performance.ts",
            "startLine": 8,
            "endLine": 12,
            "content": "\n  /**\n   * Estimate processing time based on file size\n   */\n  static estimateProcessingTime(file: File): string {"
          },
          {
            "file": "src/lib/performance.ts",
            "startLine": 9,
            "endLine": 13,
            "content": "  /**\n   * Estimate processing time based on file size\n   */\n  static estimateProcessingTime(file: File): string {\n    const sizeInMB = file.size / (1024 * 1024);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/performance.ts",
            "startLine": 14,
            "endLine": 18,
            "content": "    \n    if (sizeInMB < 1) return 'a few seconds';\n    if (sizeInMB < 5) return '10-30 seconds';\n    if (sizeInMB < 10) return '30-60 seconds';\n    return 'several minutes';"
          },
          {
            "file": "src/lib/performance.ts",
            "startLine": 15,
            "endLine": 19,
            "content": "    if (sizeInMB < 1) return 'a few seconds';\n    if (sizeInMB < 5) return '10-30 seconds';\n    if (sizeInMB < 10) return '30-60 seconds';\n    return 'several minutes';\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/performance.ts",
            "startLine": 49,
            "endLine": 53,
            "content": "    \n    for (let i = 0; i < items.length; i += batchSize) {\n      const batch = items.slice(i, i + batchSize);\n      \n      // Process batch"
          },
          {
            "file": "src/lib/performance.ts",
            "startLine": 50,
            "endLine": 54,
            "content": "    for (let i = 0; i < items.length; i += batchSize) {\n      const batch = items.slice(i, i + batchSize);\n      \n      // Process batch\n      const batchResults = batch.map((item, batchIndex) => "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/performance.ts",
            "startLine": 52,
            "endLine": 56,
            "content": "      \n      // Process batch\n      const batchResults = batch.map((item, batchIndex) => \n        processor(item, i + batchIndex)\n      );"
          },
          {
            "file": "src/lib/performance.ts",
            "startLine": 53,
            "endLine": 57,
            "content": "      // Process batch\n      const batchResults = batch.map((item, batchIndex) => \n        processor(item, i + batchIndex)\n      );\n      "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/performance.ts",
            "startLine": 63,
            "endLine": 67,
            "content": "      \n      // Allow UI to update between batches\n      if (i + batchSize < items.length) {\n        await new Promise(resolve => setTimeout(resolve, 10));\n      }"
          },
          {
            "file": "src/lib/performance.ts",
            "startLine": 64,
            "endLine": 68,
            "content": "      // Allow UI to update between batches\n      if (i + batchSize < items.length) {\n        await new Promise(resolve => setTimeout(resolve, 10));\n      }\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 24,
            "endLine": 28,
            "content": "\nexport interface ProfitLossData {\n  revenue: {\n    total: number;\n    categories: Array<{ name: string; amount: number; accountCode: string }>;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 25,
            "endLine": 29,
            "content": "export interface ProfitLossData {\n  revenue: {\n    total: number;\n    categories: Array<{ name: string; amount: number; accountCode: string }>;\n  };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 38,
            "endLine": 42,
            "content": "\nexport interface BalanceSheetData {\n  assets: {\n    current: Array<{ name: string; amount: number; accountCode: string }>;\n    nonCurrent: Array<{ name: string; amount: number; accountCode: string }>;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 39,
            "endLine": 43,
            "content": "export interface BalanceSheetData {\n  assets: {\n    current: Array<{ name: string; amount: number; accountCode: string }>;\n    nonCurrent: Array<{ name: string; amount: number; accountCode: string }>;\n    totalCurrent: number;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 41,
            "endLine": 45,
            "content": "    current: Array<{ name: string; amount: number; accountCode: string }>;\n    nonCurrent: Array<{ name: string; amount: number; accountCode: string }>;\n    totalCurrent: number;\n    totalNonCurrent: number;\n    total: number;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 48,
            "endLine": 52,
            "content": "    current: Array<{ name: string; amount: number; accountCode: string }>;\n    nonCurrent: Array<{ name: string; amount: number; accountCode: string }>;\n    totalCurrent: number;\n    totalNonCurrent: number;\n    total: number;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 42,
            "endLine": 46,
            "content": "    nonCurrent: Array<{ name: string; amount: number; accountCode: string }>;\n    totalCurrent: number;\n    totalNonCurrent: number;\n    total: number;\n  };"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 49,
            "endLine": 53,
            "content": "    nonCurrent: Array<{ name: string; amount: number; accountCode: string }>;\n    totalCurrent: number;\n    totalNonCurrent: number;\n    total: number;\n  };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 59,
            "endLine": 63,
            "content": "\n// Fallback account categorization mapping (used when Chart of Accounts is not available)\n// Updated to match actual province-specific CSV account codes\nconst FALLBACK_ACCOUNT_CATEGORIES = {\n  // Revenue accounts (200-299)"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 60,
            "endLine": 64,
            "content": "// Fallback account categorization mapping (used when Chart of Accounts is not available)\n// Updated to match actual province-specific CSV account codes\nconst FALLBACK_ACCOUNT_CATEGORIES = {\n  // Revenue accounts (200-299)\n  revenue: {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 112,
            "endLine": 116,
            "content": "\nexport class ReportGenerator {\n  private chartOfAccounts: ChartOfAccounts;\n\n  constructor(province: string = 'ON') {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 113,
            "endLine": 117,
            "content": "export class ReportGenerator {\n  private chartOfAccounts: ChartOfAccounts;\n\n  constructor(province: string = 'ON') {\n    // Use singleton Chart of Accounts instance to prevent multiple initializations"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 115,
            "endLine": 119,
            "content": "\n  constructor(province: string = 'ON') {\n    // Use singleton Chart of Accounts instance to prevent multiple initializations\n    this.chartOfAccounts = ChartOfAccounts.getInstance(province);\n    console.log(`📊 ReportGenerator initialized with Chart of Accounts for province: ${province}`);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 116,
            "endLine": 120,
            "content": "  constructor(province: string = 'ON') {\n    // Use singleton Chart of Accounts instance to prevent multiple initializations\n    this.chartOfAccounts = ChartOfAccounts.getInstance(province);\n    console.log(`📊 ReportGenerator initialized with Chart of Accounts for province: ${province}`);\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 121,
            "endLine": 125,
            "content": "\n  public setProvince(province: string): void {\n    this.chartOfAccounts.setProvince(province);\n    console.log(`📊 ReportGenerator switched to province: ${province}`);\n  }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 122,
            "endLine": 126,
            "content": "  public setProvince(province: string): void {\n    this.chartOfAccounts.setProvince(province);\n    console.log(`📊 ReportGenerator switched to province: ${province}`);\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 126,
            "endLine": 130,
            "content": "\n  private formatCurrency(amount: number): string {\n    return new Intl.NumberFormat('en-CA', {\n      style: 'currency',\n      currency: 'CAD',"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 127,
            "endLine": 131,
            "content": "  private formatCurrency(amount: number): string {\n    return new Intl.NumberFormat('en-CA', {\n      style: 'currency',\n      currency: 'CAD',\n      minimumFractionDigits: 2"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 134,
            "endLine": 138,
            "content": "\n  private formatDate(date: Date): string {\n    return new Intl.DateTimeFormat('en-CA', {\n      year: 'numeric',\n      month: 'long',"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 135,
            "endLine": 139,
            "content": "  private formatDate(date: Date): string {\n    return new Intl.DateTimeFormat('en-CA', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 142,
            "endLine": 146,
            "content": "\n  private categorizeAccount(accountCode: string): {\n    type: 'income' | 'expense' | 'asset' | 'liability' | 'equity';\n    balanceSheetCategory: string | null;\n  } {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 143,
            "endLine": 147,
            "content": "  private categorizeAccount(accountCode: string): {\n    type: 'income' | 'expense' | 'asset' | 'liability' | 'equity';\n    balanceSheetCategory: string | null;\n  } {\n    accountCode = String(accountCode);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 187,
            "endLine": 191,
            "content": "\n      console.log(`📊 Chart of Accounts categorization: ${accountCode} (${account.name}) -> ${type} (${account.type})`);\n      return { type, balanceSheetCategory };\n    }\n"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 188,
            "endLine": 192,
            "content": "      console.log(`📊 Chart of Accounts categorization: ${accountCode} (${account.name}) -> ${type} (${account.type})`);\n      return { type, balanceSheetCategory };\n    }\n\n    // Fallback to regex-based categorization if Chart of Accounts is not available"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 191,
            "endLine": 195,
            "content": "\n    // Fallback to regex-based categorization if Chart of Accounts is not available\n    const fallbackCategories = {\n      income: { regex: /^2\\d{2}$/, type: 'income' as const, balanceSheetCategory: null },\n      expense: { regex: /^[4-5]\\d{2}$/, type: 'expense' as const, balanceSheetCategory: null },"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 192,
            "endLine": 196,
            "content": "    // Fallback to regex-based categorization if Chart of Accounts is not available\n    const fallbackCategories = {\n      income: { regex: /^2\\d{2}$/, type: 'income' as const, balanceSheetCategory: null },\n      expense: { regex: /^[4-5]\\d{2}$/, type: 'expense' as const, balanceSheetCategory: null },\n      asset: { regex: /^[6-7]\\d{2}$/, type: 'asset' as const, balanceSheetCategory: 'currentAssets' },"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 200,
            "endLine": 204,
            "content": "    \n    for (const [key, config] of Object.entries(fallbackCategories)) {\n      if (config.regex.test(accountCode)) {\n        console.log(`📊 Fallback categorization: ${accountCode} -> ${config.type}`);\n        return {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 201,
            "endLine": 205,
            "content": "    for (const [key, config] of Object.entries(fallbackCategories)) {\n      if (config.regex.test(accountCode)) {\n        console.log(`📊 Fallback categorization: ${accountCode} -> ${config.type}`);\n        return {\n          type: config.type,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 210,
            "endLine": 214,
            "content": "    \n    // Default to expense if unknown\n    console.warn(`⚠️ Unknown account code: ${accountCode}, defaulting to expense`);\n    return { type: 'expense', balanceSheetCategory: null };\n  }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 211,
            "endLine": 215,
            "content": "    // Default to expense if unknown\n    console.warn(`⚠️ Unknown account code: ${accountCode}, defaulting to expense`);\n    return { type: 'expense', balanceSheetCategory: null };\n  }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 215,
            "endLine": 219,
            "content": "\n  public generateProfitLossData(data: FinancialData): ProfitLossData {\n    // Ensure Chart of Accounts is initialized with the correct province\n    const province = data.province || 'ON';\n    if (this.chartOfAccounts?.getProvince() !== province) {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 216,
            "endLine": 220,
            "content": "  public generateProfitLossData(data: FinancialData): ProfitLossData {\n    // Ensure Chart of Accounts is initialized with the correct province\n    const province = data.province || 'ON';\n    if (this.chartOfAccounts?.getProvince() !== province) {\n      this.setProvince(province);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 217,
            "endLine": 221,
            "content": "    // Ensure Chart of Accounts is initialized with the correct province\n    const province = data.province || 'ON';\n    if (this.chartOfAccounts?.getProvince() !== province) {\n      this.setProvince(province);\n    }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 379,
            "endLine": 383,
            "content": "    // Ensure Chart of Accounts is initialized with the correct province\n    const province = data.province || 'ON';\n    if (this.chartOfAccounts?.getProvince() !== province) {\n      this.setProvince(province);\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 218,
            "endLine": 222,
            "content": "    const province = data.province || 'ON';\n    if (this.chartOfAccounts?.getProvince() !== province) {\n      this.setProvince(province);\n    }\n"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 380,
            "endLine": 384,
            "content": "    const province = data.province || 'ON';\n    if (this.chartOfAccounts?.getProvince() !== province) {\n      this.setProvince(province);\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 222,
            "endLine": 226,
            "content": "\n    const revenue = { total: 0, categories: [] as Array<{ name: string; amount: number; accountCode: string }> };\n    const expenses = { total: 0, categories: [] as Array<{ name: string; amount: number; accountCode: string }> };\n    \n    // Track validation issues"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 223,
            "endLine": 227,
            "content": "    const revenue = { total: 0, categories: [] as Array<{ name: string; amount: number; accountCode: string }> };\n    const expenses = { total: 0, categories: [] as Array<{ name: string; amount: number; accountCode: string }> };\n    \n    // Track validation issues\n    const validationIssues: string[] = [];"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 225,
            "endLine": 229,
            "content": "    \n    // Track validation issues\n    const validationIssues: string[] = [];\n    const uncategorizedTransactions: Transaction[] = [];\n    const skippedCodes: Set<string> = new Set();"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 226,
            "endLine": 230,
            "content": "    // Track validation issues\n    const validationIssues: string[] = [];\n    const uncategorizedTransactions: Transaction[] = [];\n    const skippedCodes: Set<string> = new Set();\n    "
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 405,
            "endLine": 409,
            "content": "\n    // Track validation issues\n    const validationIssues: string[] = [];\n    const uncategorizedTransactions: Transaction[] = [];\n    const skippedCodes: Set<string> = new Set();"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 406,
            "endLine": 410,
            "content": "    // Track validation issues\n    const validationIssues: string[] = [];\n    const uncategorizedTransactions: Transaction[] = [];\n    const skippedCodes: Set<string> = new Set();\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 227,
            "endLine": 231,
            "content": "    const validationIssues: string[] = [];\n    const uncategorizedTransactions: Transaction[] = [];\n    const skippedCodes: Set<string> = new Set();\n    \n    // Group transactions by category and account code"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 407,
            "endLine": 411,
            "content": "    const validationIssues: string[] = [];\n    const uncategorizedTransactions: Transaction[] = [];\n    const skippedCodes: Set<string> = new Set();\n\n    // Group transactions by category and account code"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 228,
            "endLine": 232,
            "content": "    const uncategorizedTransactions: Transaction[] = [];\n    const skippedCodes: Set<string> = new Set();\n    \n    // Group transactions by category and account code\n    const categoryTotals = new Map<string, { amount: number; type: string; accountCode: string; transactionCount: number; accountName?: string }>();"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 408,
            "endLine": 412,
            "content": "    const uncategorizedTransactions: Transaction[] = [];\n    const skippedCodes: Set<string> = new Set();\n\n    // Group transactions by category and account code\n    const accountTotals = new Map<string, { amount: number; category: string; accountCode: string; transactionCount: number; accountName?: string }>();"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 229,
            "endLine": 233,
            "content": "    const skippedCodes: Set<string> = new Set();\n    \n    // Group transactions by category and account code\n    const categoryTotals = new Map<string, { amount: number; type: string; accountCode: string; transactionCount: number; accountName?: string }>();\n    "
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 409,
            "endLine": 413,
            "content": "    const skippedCodes: Set<string> = new Set();\n\n    // Group transactions by category and account code\n    const accountTotals = new Map<string, { amount: number; category: string; accountCode: string; transactionCount: number; accountName?: string }>();\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 230,
            "endLine": 234,
            "content": "    \n    // Group transactions by category and account code\n    const categoryTotals = new Map<string, { amount: number; type: string; accountCode: string; transactionCount: number; accountName?: string }>();\n    \n    data.transactions.forEach(transaction => {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 231,
            "endLine": 235,
            "content": "    // Group transactions by category and account code\n    const categoryTotals = new Map<string, { amount: number; type: string; accountCode: string; transactionCount: number; accountName?: string }>();\n    \n    data.transactions.forEach(transaction => {\n      // Skip E-Transfers as they need manual assignment"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 233,
            "endLine": 237,
            "content": "    \n    data.transactions.forEach(transaction => {\n      // Skip E-Transfers as they need manual assignment\n      if (transaction.category === 'E-Transfer') {\n        console.log(`⏭️ Skipping E-Transfer transaction: ${transaction.description} - requires manual account assignment`);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 234,
            "endLine": 238,
            "content": "    data.transactions.forEach(transaction => {\n      // Skip E-Transfers as they need manual assignment\n      if (transaction.category === 'E-Transfer') {\n        console.log(`⏭️ Skipping E-Transfer transaction: ${transaction.description} - requires manual account assignment`);\n        return;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 413,
            "endLine": 417,
            "content": "    \n    data.transactions.forEach(transaction => {\n      // Skip E-Transfers as they need manual assignment\n      if (transaction.category === 'E-Transfer') {\n        console.log(`⏭️ Skipping E-Transfer transaction: ${transaction.description} - requires manual account assignment`);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 414,
            "endLine": 418,
            "content": "    data.transactions.forEach(transaction => {\n      // Skip E-Transfers as they need manual assignment\n      if (transaction.category === 'E-Transfer') {\n        console.log(`⏭️ Skipping E-Transfer transaction: ${transaction.description} - requires manual account assignment`);\n        return;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 235,
            "endLine": 239,
            "content": "      // Skip E-Transfers as they need manual assignment\n      if (transaction.category === 'E-Transfer') {\n        console.log(`⏭️ Skipping E-Transfer transaction: ${transaction.description} - requires manual account assignment`);\n        return;\n      }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 415,
            "endLine": 419,
            "content": "      // Skip E-Transfers as they need manual assignment\n      if (transaction.category === 'E-Transfer') {\n        console.log(`⏭️ Skipping E-Transfer transaction: ${transaction.description} - requires manual account assignment`);\n        return;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 236,
            "endLine": 240,
            "content": "      if (transaction.category === 'E-Transfer') {\n        console.log(`⏭️ Skipping E-Transfer transaction: ${transaction.description} - requires manual account assignment`);\n        return;\n      }\n"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 416,
            "endLine": 420,
            "content": "      if (transaction.category === 'E-Transfer') {\n        console.log(`⏭️ Skipping E-Transfer transaction: ${transaction.description} - requires manual account assignment`);\n        return;\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 237,
            "endLine": 241,
            "content": "        console.log(`⏭️ Skipping E-Transfer transaction: ${transaction.description} - requires manual account assignment`);\n        return;\n      }\n\n      // Validate account code exists"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 417,
            "endLine": 421,
            "content": "        console.log(`⏭️ Skipping E-Transfer transaction: ${transaction.description} - requires manual account assignment`);\n        return;\n      }\n\n      // Validate account code exists"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 238,
            "endLine": 242,
            "content": "        return;\n      }\n\n      // Validate account code exists\n      if (!transaction.accountCode) {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 418,
            "endLine": 422,
            "content": "        return;\n      }\n\n      // Validate account code exists\n      if (!transaction.accountCode) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 239,
            "endLine": 243,
            "content": "      }\n\n      // Validate account code exists\n      if (!transaction.accountCode) {\n        validationIssues.push(`Transaction \"${transaction.description}\" has no account code assigned`);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 419,
            "endLine": 423,
            "content": "      }\n\n      // Validate account code exists\n      if (!transaction.accountCode) {\n        validationIssues.push(`Transaction \"${transaction.description}\" has no account code assigned`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 240,
            "endLine": 244,
            "content": "\n      // Validate account code exists\n      if (!transaction.accountCode) {\n        validationIssues.push(`Transaction \"${transaction.description}\" has no account code assigned`);\n        uncategorizedTransactions.push(transaction);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 241,
            "endLine": 245,
            "content": "      // Validate account code exists\n      if (!transaction.accountCode) {\n        validationIssues.push(`Transaction \"${transaction.description}\" has no account code assigned`);\n        uncategorizedTransactions.push(transaction);\n        return;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 420,
            "endLine": 424,
            "content": "\n      // Validate account code exists\n      if (!transaction.accountCode) {\n        validationIssues.push(`Transaction \"${transaction.description}\" has no account code assigned`);\n        uncategorizedTransactions.push(transaction);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 421,
            "endLine": 425,
            "content": "      // Validate account code exists\n      if (!transaction.accountCode) {\n        validationIssues.push(`Transaction \"${transaction.description}\" has no account code assigned`);\n        uncategorizedTransactions.push(transaction);\n        return;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 242,
            "endLine": 246,
            "content": "      if (!transaction.accountCode) {\n        validationIssues.push(`Transaction \"${transaction.description}\" has no account code assigned`);\n        uncategorizedTransactions.push(transaction);\n        return;\n      }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 422,
            "endLine": 426,
            "content": "      if (!transaction.accountCode) {\n        validationIssues.push(`Transaction \"${transaction.description}\" has no account code assigned`);\n        uncategorizedTransactions.push(transaction);\n        return;\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 243,
            "endLine": 247,
            "content": "        validationIssues.push(`Transaction \"${transaction.description}\" has no account code assigned`);\n        uncategorizedTransactions.push(transaction);\n        return;\n      }\n"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 423,
            "endLine": 427,
            "content": "        validationIssues.push(`Transaction \"${transaction.description}\" has no account code assigned`);\n        uncategorizedTransactions.push(transaction);\n        return;\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 244,
            "endLine": 248,
            "content": "        uncategorizedTransactions.push(transaction);\n        return;\n      }\n\n      // Strictly require account code to exist in the loaded Chart of Accounts"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 424,
            "endLine": 428,
            "content": "        uncategorizedTransactions.push(transaction);\n        return;\n      }\n\n      // Strictly require account code to exist in the loaded Chart of Accounts"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 245,
            "endLine": 249,
            "content": "        return;\n      }\n\n      // Strictly require account code to exist in the loaded Chart of Accounts\n      let accountName = transaction.category;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 425,
            "endLine": 429,
            "content": "        return;\n      }\n\n      // Strictly require account code to exist in the loaded Chart of Accounts\n      let accountName = transaction.category;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 246,
            "endLine": 250,
            "content": "      }\n\n      // Strictly require account code to exist in the loaded Chart of Accounts\n      let accountName = transaction.category;\n      let codeToUse = transaction.accountCode;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 426,
            "endLine": 430,
            "content": "      }\n\n      // Strictly require account code to exist in the loaded Chart of Accounts\n      let accountName = transaction.category;\n      let codeToUse = transaction.accountCode;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 247,
            "endLine": 251,
            "content": "\n      // Strictly require account code to exist in the loaded Chart of Accounts\n      let accountName = transaction.category;\n      let codeToUse = transaction.accountCode;\n      let accountFound = false;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 248,
            "endLine": 252,
            "content": "      // Strictly require account code to exist in the loaded Chart of Accounts\n      let accountName = transaction.category;\n      let codeToUse = transaction.accountCode;\n      let accountFound = false;\n      if (this.chartOfAccounts) {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 427,
            "endLine": 431,
            "content": "\n      // Strictly require account code to exist in the loaded Chart of Accounts\n      let accountName = transaction.category;\n      let codeToUse = transaction.accountCode;\n      let accountFound = false;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 428,
            "endLine": 432,
            "content": "      // Strictly require account code to exist in the loaded Chart of Accounts\n      let accountName = transaction.category;\n      let codeToUse = transaction.accountCode;\n      let accountFound = false;\n      if (this.chartOfAccounts) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 249,
            "endLine": 253,
            "content": "      let accountName = transaction.category;\n      let codeToUse = transaction.accountCode;\n      let accountFound = false;\n      if (this.chartOfAccounts) {\n        const account = this.chartOfAccounts.getAccount(String(transaction.accountCode));"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 429,
            "endLine": 433,
            "content": "      let accountName = transaction.category;\n      let codeToUse = transaction.accountCode;\n      let accountFound = false;\n      if (this.chartOfAccounts) {\n        const account = this.chartOfAccounts.getAccount(String(transaction.accountCode));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 250,
            "endLine": 254,
            "content": "      let codeToUse = transaction.accountCode;\n      let accountFound = false;\n      if (this.chartOfAccounts) {\n        const account = this.chartOfAccounts.getAccount(String(transaction.accountCode));\n        if (account) {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 430,
            "endLine": 434,
            "content": "      let codeToUse = transaction.accountCode;\n      let accountFound = false;\n      if (this.chartOfAccounts) {\n        const account = this.chartOfAccounts.getAccount(String(transaction.accountCode));\n        if (account) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 251,
            "endLine": 255,
            "content": "      let accountFound = false;\n      if (this.chartOfAccounts) {\n        const account = this.chartOfAccounts.getAccount(String(transaction.accountCode));\n        if (account) {\n          accountName = account.name;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 431,
            "endLine": 435,
            "content": "      let accountFound = false;\n      if (this.chartOfAccounts) {\n        const account = this.chartOfAccounts.getAccount(String(transaction.accountCode));\n        if (account) {\n          accountName = account.name;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 252,
            "endLine": 256,
            "content": "      if (this.chartOfAccounts) {\n        const account = this.chartOfAccounts.getAccount(String(transaction.accountCode));\n        if (account) {\n          accountName = account.name;\n          codeToUse = account.code;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 432,
            "endLine": 436,
            "content": "      if (this.chartOfAccounts) {\n        const account = this.chartOfAccounts.getAccount(String(transaction.accountCode));\n        if (account) {\n          accountName = account.name;\n          codeToUse = account.code;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 253,
            "endLine": 257,
            "content": "        const account = this.chartOfAccounts.getAccount(String(transaction.accountCode));\n        if (account) {\n          accountName = account.name;\n          codeToUse = account.code;\n          accountFound = true;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 433,
            "endLine": 437,
            "content": "        const account = this.chartOfAccounts.getAccount(String(transaction.accountCode));\n        if (account) {\n          accountName = account.name;\n          codeToUse = account.code;\n          accountFound = true;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 261,
            "endLine": 265,
            "content": "        }\n      }\n      if (!accountFound) {\n        skippedCodes.add(transaction.accountCode);\n        return; // Skip this transaction in the report"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 438,
            "endLine": 442,
            "content": "        }\n      }\n      if (!accountFound) {\n        skippedCodes.add(transaction.accountCode);\n        return; // Skip this transaction in the report"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 262,
            "endLine": 266,
            "content": "      }\n      if (!accountFound) {\n        skippedCodes.add(transaction.accountCode);\n        return; // Skip this transaction in the report\n      }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 439,
            "endLine": 443,
            "content": "      }\n      if (!accountFound) {\n        skippedCodes.add(transaction.accountCode);\n        return; // Skip this transaction in the report\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 263,
            "endLine": 267,
            "content": "      if (!accountFound) {\n        skippedCodes.add(transaction.accountCode);\n        return; // Skip this transaction in the report\n      }\n"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 440,
            "endLine": 444,
            "content": "      if (!accountFound) {\n        skippedCodes.add(transaction.accountCode);\n        return; // Skip this transaction in the report\n      }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 267,
            "endLine": 271,
            "content": "\n      const { type } = this.categorizeAccount(codeToUse);\n      const key = `${accountName}-${codeToUse}`;\n      \n      if (!categoryTotals.has(key)) {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 268,
            "endLine": 272,
            "content": "      const { type } = this.categorizeAccount(codeToUse);\n      const key = `${accountName}-${codeToUse}`;\n      \n      if (!categoryTotals.has(key)) {\n        categoryTotals.set(key, { "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 275,
            "endLine": 279,
            "content": "          accountCode: codeToUse,\n          transactionCount: 0,\n          accountName\n        });\n      }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 450,
            "endLine": 454,
            "content": "          accountCode: codeToUse,\n          transactionCount: 0,\n          accountName\n        });\n      }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 280,
            "endLine": 284,
            "content": "      \n      const current = categoryTotals.get(key)!;\n      \n      // Improved amount handling - consider transaction type and amount sign\n      let processedAmount = transaction.amount;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 281,
            "endLine": 285,
            "content": "      const current = categoryTotals.get(key)!;\n      \n      // Improved amount handling - consider transaction type and amount sign\n      let processedAmount = transaction.amount;\n      if (type === 'income') {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 282,
            "endLine": 286,
            "content": "      \n      // Improved amount handling - consider transaction type and amount sign\n      let processedAmount = transaction.amount;\n      if (type === 'income') {\n        processedAmount = Math.abs(transaction.amount);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 283,
            "endLine": 287,
            "content": "      // Improved amount handling - consider transaction type and amount sign\n      let processedAmount = transaction.amount;\n      if (type === 'income') {\n        processedAmount = Math.abs(transaction.amount);\n      } else if (type === 'expense') {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 288,
            "endLine": 292,
            "content": "        processedAmount = Math.abs(transaction.amount);\n      }\n      current.amount += processedAmount;\n      current.transactionCount++;\n      console.log(`📊 Categorized: \"${transaction.description}\" (${transaction.amount}) -> ${type} account ${codeToUse} (${accountName})`);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 462,
            "endLine": 466,
            "content": "        processedAmount = Math.abs(transaction.amount);\n      }\n      current.amount += processedAmount;\n      current.transactionCount++;\n      console.log(`📊 Balance Sheet: \"${transaction.description}\" (${transaction.amount}) -> ${balanceSheetCategory} account ${codeToUse} (${accountName})`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 294,
            "endLine": 298,
            "content": "\n    // Log validation issues\n    if (validationIssues.length > 0) {\n      console.warn(`⚠️ PnL Validation Issues:`, validationIssues);\n    }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 295,
            "endLine": 299,
            "content": "    // Log validation issues\n    if (validationIssues.length > 0) {\n      console.warn(`⚠️ PnL Validation Issues:`, validationIssues);\n    }\n    if (uncategorizedTransactions.length > 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 298,
            "endLine": 302,
            "content": "    }\n    if (uncategorizedTransactions.length > 0) {\n      console.warn(`⚠️ ${uncategorizedTransactions.length} transactions without account codes - excluded from PnL`);\n    }\n    if (skippedCodes.size > 0) {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 472,
            "endLine": 476,
            "content": "    }\n    if (uncategorizedTransactions.length > 0) {\n      console.warn(`⚠️ ${uncategorizedTransactions.length} transactions without account codes - excluded from Balance Sheet`);\n    }\n    if (skippedCodes.size > 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 299,
            "endLine": 303,
            "content": "    if (uncategorizedTransactions.length > 0) {\n      console.warn(`⚠️ ${uncategorizedTransactions.length} transactions without account codes - excluded from PnL`);\n    }\n    if (skippedCodes.size > 0) {\n      console.warn(`⚠️ Skipped transactions with codes not found in Chart of Accounts for province ${province}:`, Array.from(skippedCodes));"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 473,
            "endLine": 477,
            "content": "    if (uncategorizedTransactions.length > 0) {\n      console.warn(`⚠️ ${uncategorizedTransactions.length} transactions without account codes - excluded from Balance Sheet`);\n    }\n    if (skippedCodes.size > 0) {\n      console.warn(`⚠️ Skipped transactions with codes not found in Chart of Accounts for province ${province}:`, Array.from(skippedCodes));"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 300,
            "endLine": 304,
            "content": "      console.warn(`⚠️ ${uncategorizedTransactions.length} transactions without account codes - excluded from PnL`);\n    }\n    if (skippedCodes.size > 0) {\n      console.warn(`⚠️ Skipped transactions with codes not found in Chart of Accounts for province ${province}:`, Array.from(skippedCodes));\n    }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 474,
            "endLine": 478,
            "content": "      console.warn(`⚠️ ${uncategorizedTransactions.length} transactions without account codes - excluded from Balance Sheet`);\n    }\n    if (skippedCodes.size > 0) {\n      console.warn(`⚠️ Skipped transactions with codes not found in Chart of Accounts for province ${province}:`, Array.from(skippedCodes));\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 301,
            "endLine": 305,
            "content": "    }\n    if (skippedCodes.size > 0) {\n      console.warn(`⚠️ Skipped transactions with codes not found in Chart of Accounts for province ${province}:`, Array.from(skippedCodes));\n    }\n"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 475,
            "endLine": 479,
            "content": "    }\n    if (skippedCodes.size > 0) {\n      console.warn(`⚠️ Skipped transactions with codes not found in Chart of Accounts for province ${province}:`, Array.from(skippedCodes));\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 302,
            "endLine": 306,
            "content": "    if (skippedCodes.size > 0) {\n      console.warn(`⚠️ Skipped transactions with codes not found in Chart of Accounts for province ${province}:`, Array.from(skippedCodes));\n    }\n\n    // Separate revenue and expenses"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 476,
            "endLine": 480,
            "content": "    if (skippedCodes.size > 0) {\n      console.warn(`⚠️ Skipped transactions with codes not found in Chart of Accounts for province ${province}:`, Array.from(skippedCodes));\n    }\n\n    // Categorize accounts for balance sheet"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 303,
            "endLine": 307,
            "content": "      console.warn(`⚠️ Skipped transactions with codes not found in Chart of Accounts for province ${province}:`, Array.from(skippedCodes));\n    }\n\n    // Separate revenue and expenses\n    categoryTotals.forEach((data, key) => {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 477,
            "endLine": 481,
            "content": "      console.warn(`⚠️ Skipped transactions with codes not found in Chart of Accounts for province ${province}:`, Array.from(skippedCodes));\n    }\n\n    // Categorize accounts for balance sheet\n    accountTotals.forEach((data, key) => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 305,
            "endLine": 309,
            "content": "\n    // Separate revenue and expenses\n    categoryTotals.forEach((data, key) => {\n      const categoryName = data.accountName || key.split('-')[0];\n      const item = {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 306,
            "endLine": 310,
            "content": "    // Separate revenue and expenses\n    categoryTotals.forEach((data, key) => {\n      const categoryName = data.accountName || key.split('-')[0];\n      const item = {\n        name: categoryName,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 326,
            "endLine": 330,
            "content": "\n    revenue.categories.sort((a, b) => b.amount - a.amount);\n    expenses.categories.sort((a, b) => b.amount - a.amount);\n\n    // Calculate gross profit (Revenue - Cost of Goods Sold)"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 327,
            "endLine": 331,
            "content": "    revenue.categories.sort((a, b) => b.amount - a.amount);\n    expenses.categories.sort((a, b) => b.amount - a.amount);\n\n    // Calculate gross profit (Revenue - Cost of Goods Sold)\n    const costOfGoodsSold = expenses.categories"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 329,
            "endLine": 333,
            "content": "\n    // Calculate gross profit (Revenue - Cost of Goods Sold)\n    const costOfGoodsSold = expenses.categories\n      .filter(cat => cat.accountCode.match(/^31\\d$/))\n      .reduce((sum, cat) => sum + cat.amount, 0);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 330,
            "endLine": 334,
            "content": "    // Calculate gross profit (Revenue - Cost of Goods Sold)\n    const costOfGoodsSold = expenses.categories\n      .filter(cat => cat.accountCode.match(/^31\\d$/))\n      .reduce((sum, cat) => sum + cat.amount, 0);\n    const grossProfit = revenue.total - costOfGoodsSold;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 340,
            "endLine": 344,
            "content": "\n    // Log final calculations\n    console.log(`📈 PnL Summary (Province: ${province}):`);\n    console.log(`   Revenue: ${this.formatCurrency(revenue.total)}`);\n    console.log(`   Expenses: ${this.formatCurrency(expenses.total)}`);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 341,
            "endLine": 345,
            "content": "    // Log final calculations\n    console.log(`📈 PnL Summary (Province: ${province}):`);\n    console.log(`   Revenue: ${this.formatCurrency(revenue.total)}`);\n    console.log(`   Expenses: ${this.formatCurrency(expenses.total)}`);\n    console.log(`   Cost of Goods Sold: ${this.formatCurrency(costOfGoodsSold)}`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 350,
            "endLine": 354,
            "content": "    \n    // Log account code ranges being used\n    console.log(`📊 Account Code Ranges (Province: ${province}):`);\n    console.log(`   Revenue accounts: 200-299`);\n    console.log(`   Cost of Goods Sold: 310-319`);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 351,
            "endLine": 355,
            "content": "    // Log account code ranges being used\n    console.log(`📊 Account Code Ranges (Province: ${province}):`);\n    console.log(`   Revenue accounts: 200-299`);\n    console.log(`   Cost of Goods Sold: 310-319`);\n    console.log(`   Operating Expenses: 400-599 (excluding COGS)`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 361,
            "endLine": 365,
            "content": "\n    if (netIncome !== (revenue.total - expenses.total)) {\n      console.error(`❌ PnL calculation error: Net income mismatch`);\n    }\n    if (grossProfit !== (revenue.total - costOfGoodsSold)) {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 362,
            "endLine": 366,
            "content": "    if (netIncome !== (revenue.total - expenses.total)) {\n      console.error(`❌ PnL calculation error: Net income mismatch`);\n    }\n    if (grossProfit !== (revenue.total - costOfGoodsSold)) {\n      console.error(`❌ PnL calculation error: Gross profit mismatch`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 377,
            "endLine": 381,
            "content": "\n  public generateBalanceSheetData(data: FinancialData): BalanceSheetData {\n    // Ensure Chart of Accounts is initialized with the correct province\n    const province = data.province || 'ON';\n    if (this.chartOfAccounts?.getProvince() !== province) {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 378,
            "endLine": 382,
            "content": "  public generateBalanceSheetData(data: FinancialData): BalanceSheetData {\n    // Ensure Chart of Accounts is initialized with the correct province\n    const province = data.province || 'ON';\n    if (this.chartOfAccounts?.getProvince() !== province) {\n      this.setProvince(province);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 384,
            "endLine": 388,
            "content": "\n    const assets = {\n      current: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      nonCurrent: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      totalCurrent: 0,"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 385,
            "endLine": 389,
            "content": "    const assets = {\n      current: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      nonCurrent: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      totalCurrent: 0,\n      totalNonCurrent: 0,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 386,
            "endLine": 390,
            "content": "      current: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      nonCurrent: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      totalCurrent: 0,\n      totalNonCurrent: 0,\n      total: 0"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 394,
            "endLine": 398,
            "content": "      current: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      nonCurrent: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      totalCurrent: 0,\n      totalNonCurrent: 0,\n      total: 0"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 387,
            "endLine": 391,
            "content": "      nonCurrent: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      totalCurrent: 0,\n      totalNonCurrent: 0,\n      total: 0\n    };"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 395,
            "endLine": 399,
            "content": "      nonCurrent: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      totalCurrent: 0,\n      totalNonCurrent: 0,\n      total: 0\n    };"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 392,
            "endLine": 396,
            "content": "\n    const liabilities = {\n      current: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      nonCurrent: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      totalCurrent: 0,"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 393,
            "endLine": 397,
            "content": "    const liabilities = {\n      current: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      nonCurrent: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      totalCurrent: 0,\n      totalNonCurrent: 0,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 400,
            "endLine": 404,
            "content": "\n    const equity = {\n      items: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      total: 0\n    };"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 401,
            "endLine": 405,
            "content": "    const equity = {\n      items: [] as Array<{ name: string; amount: number; accountCode: string }>,\n      total: 0\n    };\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 410,
            "endLine": 414,
            "content": "\n    // Group transactions by category and account code\n    const accountTotals = new Map<string, { amount: number; category: string; accountCode: string; transactionCount: number; accountName?: string }>();\n    \n    data.transactions.forEach(transaction => {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 411,
            "endLine": 415,
            "content": "    // Group transactions by category and account code\n    const accountTotals = new Map<string, { amount: number; category: string; accountCode: string; transactionCount: number; accountName?: string }>();\n    \n    data.transactions.forEach(transaction => {\n      // Skip E-Transfers as they need manual assignment"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 444,
            "endLine": 448,
            "content": "\n      const key = `${accountName}-${codeToUse}`;\n      if (!accountTotals.has(key)) {\n        accountTotals.set(key, { \n          amount: 0, "
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 445,
            "endLine": 449,
            "content": "      const key = `${accountName}-${codeToUse}`;\n      if (!accountTotals.has(key)) {\n        accountTotals.set(key, { \n          amount: 0, \n          category: transaction.category,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 468,
            "endLine": 472,
            "content": "\n    // Log validation issues\n    if (validationIssues.length > 0) {\n      console.warn(`⚠️ Balance Sheet Validation Issues:`, validationIssues);\n    }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 469,
            "endLine": 473,
            "content": "    // Log validation issues\n    if (validationIssues.length > 0) {\n      console.warn(`⚠️ Balance Sheet Validation Issues:`, validationIssues);\n    }\n    if (uncategorizedTransactions.length > 0) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 479,
            "endLine": 483,
            "content": "\n    // Categorize accounts for balance sheet\n    accountTotals.forEach((data, key) => {\n      const { balanceSheetCategory } = this.categorizeAccount(data.accountCode);\n      if (!balanceSheetCategory) {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 480,
            "endLine": 484,
            "content": "    // Categorize accounts for balance sheet\n    accountTotals.forEach((data, key) => {\n      const { balanceSheetCategory } = this.categorizeAccount(data.accountCode);\n      if (!balanceSheetCategory) {\n        console.warn(`⚠️ No balance sheet category for account ${data.accountCode} - excluded`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 520,
            "endLine": 524,
            "content": "\n    assets.total = assets.totalCurrent + assets.totalNonCurrent;\n    liabilities.total = liabilities.totalCurrent + liabilities.totalNonCurrent;\n    assets.current.sort((a, b) => b.amount - a.amount);\n    assets.nonCurrent.sort((a, b) => b.amount - a.amount);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 521,
            "endLine": 525,
            "content": "    assets.total = assets.totalCurrent + assets.totalNonCurrent;\n    liabilities.total = liabilities.totalCurrent + liabilities.totalNonCurrent;\n    assets.current.sort((a, b) => b.amount - a.amount);\n    assets.nonCurrent.sort((a, b) => b.amount - a.amount);\n    liabilities.current.sort((a, b) => b.amount - a.amount);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 528,
            "endLine": 532,
            "content": "\n    // Log final calculations\n    console.log(`📊 Balance Sheet Summary (Province: ${province}):`);\n    console.log(`   Total Assets: ${this.formatCurrency(assets.total)}`);\n    console.log(`   Total Liabilities: ${this.formatCurrency(liabilities.total)}`);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 529,
            "endLine": 533,
            "content": "    // Log final calculations\n    console.log(`📊 Balance Sheet Summary (Province: ${province}):`);\n    console.log(`   Total Assets: ${this.formatCurrency(assets.total)}`);\n    console.log(`   Total Liabilities: ${this.formatCurrency(liabilities.total)}`);\n    console.log(`   Total Equity: ${this.formatCurrency(equity.total)}`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 543,
            "endLine": 547,
            "content": "\n  public generateProfitLossPDF(data: FinancialData): jsPDF {\n    const doc = new jsPDF();\n    const plData = this.generateProfitLossData(data);\n    "
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 544,
            "endLine": 548,
            "content": "  public generateProfitLossPDF(data: FinancialData): jsPDF {\n    const doc = new jsPDF();\n    const plData = this.generateProfitLossData(data);\n    \n    // Header"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 547,
            "endLine": 551,
            "content": "    \n    // Header\n    doc.setFontSize(20);\n    doc.setFont('helvetica', 'bold');\n    doc.text(data.companyName, 20, 25);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 548,
            "endLine": 552,
            "content": "    // Header\n    doc.setFontSize(20);\n    doc.setFont('helvetica', 'bold');\n    doc.text(data.companyName, 20, 25);\n    "
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 644,
            "endLine": 648,
            "content": "    \n    // Header\n    doc.setFontSize(20);\n    doc.setFont('helvetica', 'bold');\n    doc.text(data.companyName, 20, 25);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 645,
            "endLine": 649,
            "content": "    // Header\n    doc.setFontSize(20);\n    doc.setFont('helvetica', 'bold');\n    doc.text(data.companyName, 20, 25);\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 549,
            "endLine": 553,
            "content": "    doc.setFontSize(20);\n    doc.setFont('helvetica', 'bold');\n    doc.text(data.companyName, 20, 25);\n    \n    doc.setFontSize(16);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 646,
            "endLine": 650,
            "content": "    doc.setFontSize(20);\n    doc.setFont('helvetica', 'bold');\n    doc.text(data.companyName, 20, 25);\n    \n    doc.setFontSize(16);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 550,
            "endLine": 554,
            "content": "    doc.setFont('helvetica', 'bold');\n    doc.text(data.companyName, 20, 25);\n    \n    doc.setFontSize(16);\n    doc.text('Profit & Loss Statement', 20, 35);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 647,
            "endLine": 651,
            "content": "    doc.setFont('helvetica', 'bold');\n    doc.text(data.companyName, 20, 25);\n    \n    doc.setFontSize(16);\n    doc.text('Balance Sheet', 20, 35);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 555,
            "endLine": 559,
            "content": "    \n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    doc.text(`Period: ${this.formatDate(data.startDate)} to ${this.formatDate(data.endDate)}`, 20, 45);\n    doc.text(`Generated: ${this.formatDate(data.reportDate)}`, 20, 52);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 556,
            "endLine": 560,
            "content": "    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    doc.text(`Period: ${this.formatDate(data.startDate)} to ${this.formatDate(data.endDate)}`, 20, 45);\n    doc.text(`Generated: ${this.formatDate(data.reportDate)}`, 20, 52);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 562,
            "endLine": 566,
            "content": "\n    // Revenue Section\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.text('REVENUE', 20, yPosition);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 563,
            "endLine": 567,
            "content": "    // Revenue Section\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.text('REVENUE', 20, yPosition);\n    yPosition += 10;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 568,
            "endLine": 572,
            "content": "\n    const revenueData = plData.revenue.categories.map(cat => [\n      `${cat.accountCode} - ${cat.name}`,\n      this.formatCurrency(cat.amount)\n    ]);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 569,
            "endLine": 573,
            "content": "    const revenueData = plData.revenue.categories.map(cat => [\n      `${cat.accountCode} - ${cat.name}`,\n      this.formatCurrency(cat.amount)\n    ]);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 6,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 579,
            "endLine": 583,
            "content": "        theme: 'plain',\n        styles: { fontSize: 10 },\n        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 20, right: 20 }\n      });"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 608,
            "endLine": 612,
            "content": "        theme: 'plain',\n        styles: { fontSize: 10 },\n        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 20, right: 20 }\n      });"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 681,
            "endLine": 685,
            "content": "        theme: 'plain',\n        styles: { fontSize: 10 },\n        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 30, right: 20 }\n      });"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 709,
            "endLine": 713,
            "content": "        theme: 'plain',\n        styles: { fontSize: 10 },\n        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 30, right: 20 }\n      });"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 750,
            "endLine": 754,
            "content": "        theme: 'plain',\n        styles: { fontSize: 10 },\n        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 30, right: 20 }\n      });"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 778,
            "endLine": 782,
            "content": "        theme: 'plain',\n        styles: { fontSize: 10 },\n        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 30, right: 20 }\n      });"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 580,
            "endLine": 584,
            "content": "        styles: { fontSize: 10 },\n        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 20, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 609,
            "endLine": 613,
            "content": "        styles: { fontSize: 10 },\n        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 20, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 581,
            "endLine": 585,
            "content": "        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 20, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 610,
            "endLine": 614,
            "content": "        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 20, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 582,
            "endLine": 586,
            "content": "        margin: { left: 20, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 611,
            "endLine": 615,
            "content": "        margin: { left: 20, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 586,
            "endLine": 590,
            "content": "\n    // Total Revenue\n    doc.setFont('helvetica', 'bold');\n    doc.text('Total Revenue:', 20, yPosition);\n    doc.text(this.formatCurrency(plData.revenue.total), 150, yPosition);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 587,
            "endLine": 591,
            "content": "    // Total Revenue\n    doc.setFont('helvetica', 'bold');\n    doc.text('Total Revenue:', 20, yPosition);\n    doc.text(this.formatCurrency(plData.revenue.total), 150, yPosition);\n    yPosition += 20;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 592,
            "endLine": 596,
            "content": "\n    // Expenses Section\n    doc.setFontSize(14);\n    doc.text('EXPENSES', 20, yPosition);\n    yPosition += 10;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 593,
            "endLine": 597,
            "content": "    // Expenses Section\n    doc.setFontSize(14);\n    doc.text('EXPENSES', 20, yPosition);\n    yPosition += 10;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 597,
            "endLine": 601,
            "content": "\n    const expenseData = plData.expenses.categories.map(cat => [\n      `${cat.accountCode} - ${cat.name}`,\n      this.formatCurrency(cat.amount)\n    ]);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 598,
            "endLine": 602,
            "content": "    const expenseData = plData.expenses.categories.map(cat => [\n      `${cat.accountCode} - ${cat.name}`,\n      this.formatCurrency(cat.amount)\n    ]);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 615,
            "endLine": 619,
            "content": "\n    // Total Expenses\n    doc.text('Total Expenses:', 20, yPosition);\n    doc.text(this.formatCurrency(plData.expenses.total), 150, yPosition);\n    yPosition += 15;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 616,
            "endLine": 620,
            "content": "    // Total Expenses\n    doc.text('Total Expenses:', 20, yPosition);\n    doc.text(this.formatCurrency(plData.expenses.total), 150, yPosition);\n    yPosition += 15;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 620,
            "endLine": 624,
            "content": "\n    // Net Income\n    doc.setFontSize(16);\n    doc.setDrawColor(0, 0, 0);\n    doc.line(20, yPosition, 190, yPosition);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 621,
            "endLine": 625,
            "content": "    // Net Income\n    doc.setFontSize(16);\n    doc.setDrawColor(0, 0, 0);\n    doc.line(20, yPosition, 190, yPosition);\n    yPosition += 10;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 626,
            "endLine": 630,
            "content": "    \n    const netIncomeColor = plData.netIncome >= 0 ? [0, 128, 0] : [255, 0, 0];\n    doc.setTextColor(...(netIncomeColor as [number, number, number]));\n    doc.text('NET INCOME:', 20, yPosition);\n    doc.text(this.formatCurrency(plData.netIncome), 150, yPosition);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 627,
            "endLine": 631,
            "content": "    const netIncomeColor = plData.netIncome >= 0 ? [0, 128, 0] : [255, 0, 0];\n    doc.setTextColor(...(netIncomeColor as [number, number, number]));\n    doc.text('NET INCOME:', 20, yPosition);\n    doc.text(this.formatCurrency(plData.netIncome), 150, yPosition);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 631,
            "endLine": 635,
            "content": "\n    // Footer\n    doc.setTextColor(0, 0, 0);\n    doc.setFontSize(8);\n    doc.setFont('helvetica', 'normal');"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 798,
            "endLine": 802,
            "content": "\n    // Footer\n    doc.setTextColor(0, 0, 0);\n    doc.setFontSize(8);\n    doc.setFont('helvetica', 'normal');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 632,
            "endLine": 636,
            "content": "    // Footer\n    doc.setTextColor(0, 0, 0);\n    doc.setFontSize(8);\n    doc.setFont('helvetica', 'normal');\n    doc.text('Generated by Meridian AI Bookkeeping - CRA Compliant', 20, 280);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 799,
            "endLine": 803,
            "content": "    // Footer\n    doc.setTextColor(0, 0, 0);\n    doc.setFontSize(8);\n    doc.setFont('helvetica', 'normal');\n    doc.text('Generated by Meridian AI Bookkeeping - CRA Compliant', 20, 280);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 633,
            "endLine": 637,
            "content": "    doc.setTextColor(0, 0, 0);\n    doc.setFontSize(8);\n    doc.setFont('helvetica', 'normal');\n    doc.text('Generated by Meridian AI Bookkeeping - CRA Compliant', 20, 280);\n"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 800,
            "endLine": 804,
            "content": "    doc.setTextColor(0, 0, 0);\n    doc.setFontSize(8);\n    doc.setFont('helvetica', 'normal');\n    doc.text('Generated by Meridian AI Bookkeeping - CRA Compliant', 20, 280);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 634,
            "endLine": 638,
            "content": "    doc.setFontSize(8);\n    doc.setFont('helvetica', 'normal');\n    doc.text('Generated by Meridian AI Bookkeeping - CRA Compliant', 20, 280);\n\n    return doc;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 801,
            "endLine": 805,
            "content": "    doc.setFontSize(8);\n    doc.setFont('helvetica', 'normal');\n    doc.text('Generated by Meridian AI Bookkeeping - CRA Compliant', 20, 280);\n\n    return doc;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 635,
            "endLine": 639,
            "content": "    doc.setFont('helvetica', 'normal');\n    doc.text('Generated by Meridian AI Bookkeeping - CRA Compliant', 20, 280);\n\n    return doc;\n  }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 802,
            "endLine": 806,
            "content": "    doc.setFont('helvetica', 'normal');\n    doc.text('Generated by Meridian AI Bookkeeping - CRA Compliant', 20, 280);\n\n    return doc;\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 640,
            "endLine": 644,
            "content": "\n  public generateBalanceSheetPDF(data: FinancialData): jsPDF {\n    const doc = new jsPDF();\n    const bsData = this.generateBalanceSheetData(data);\n    "
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 641,
            "endLine": 645,
            "content": "  public generateBalanceSheetPDF(data: FinancialData): jsPDF {\n    const doc = new jsPDF();\n    const bsData = this.generateBalanceSheetData(data);\n    \n    // Header"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 652,
            "endLine": 656,
            "content": "    \n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    doc.text(`As of ${this.formatDate(data.endDate)}`, 20, 45);\n    doc.text(`Generated: ${this.formatDate(data.reportDate)}`, 20, 52);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 653,
            "endLine": 657,
            "content": "    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    doc.text(`As of ${this.formatDate(data.endDate)}`, 20, 45);\n    doc.text(`Generated: ${this.formatDate(data.reportDate)}`, 20, 52);\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 659,
            "endLine": 663,
            "content": "\n    // ASSETS Section\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.text('ASSETS', 20, yPosition);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 660,
            "endLine": 664,
            "content": "    // ASSETS Section\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.text('ASSETS', 20, yPosition);\n    yPosition += 10;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 665,
            "endLine": 669,
            "content": "\n    // Current Assets\n    doc.setFontSize(12);\n    doc.text('Current Assets:', 25, yPosition);\n    yPosition += 8;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 666,
            "endLine": 670,
            "content": "    // Current Assets\n    doc.setFontSize(12);\n    doc.text('Current Assets:', 25, yPosition);\n    yPosition += 8;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 670,
            "endLine": 674,
            "content": "\n    if (bsData.assets.current.length > 0) {\n      const currentAssetsData = bsData.assets.current.map(item => [\n        `${item.accountCode} - ${item.name}`,\n        this.formatCurrency(item.amount)"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 671,
            "endLine": 675,
            "content": "    if (bsData.assets.current.length > 0) {\n      const currentAssetsData = bsData.assets.current.map(item => [\n        `${item.accountCode} - ${item.name}`,\n        this.formatCurrency(item.amount)\n      ]);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 673,
            "endLine": 677,
            "content": "        `${item.accountCode} - ${item.name}`,\n        this.formatCurrency(item.amount)\n      ]);\n\n      autoTable(doc, {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 701,
            "endLine": 705,
            "content": "        `${item.accountCode} - ${item.name}`,\n        this.formatCurrency(item.amount)\n      ]);\n\n      autoTable(doc, {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 742,
            "endLine": 746,
            "content": "        `${item.accountCode} - ${item.name}`,\n        this.formatCurrency(item.amount)\n      ]);\n\n      autoTable(doc, {"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 770,
            "endLine": 774,
            "content": "        `${item.accountCode} - ${item.name}`,\n        this.formatCurrency(item.amount)\n      ]);\n\n      autoTable(doc, {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 674,
            "endLine": 678,
            "content": "        this.formatCurrency(item.amount)\n      ]);\n\n      autoTable(doc, {\n        startY: yPosition,"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 702,
            "endLine": 706,
            "content": "        this.formatCurrency(item.amount)\n      ]);\n\n      autoTable(doc, {\n        startY: yPosition,"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 743,
            "endLine": 747,
            "content": "        this.formatCurrency(item.amount)\n      ]);\n\n      autoTable(doc, {\n        startY: yPosition,"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 771,
            "endLine": 775,
            "content": "        this.formatCurrency(item.amount)\n      ]);\n\n      autoTable(doc, {\n        startY: yPosition,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 675,
            "endLine": 679,
            "content": "      ]);\n\n      autoTable(doc, {\n        startY: yPosition,\n        head: [['Account', 'Amount']],"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 703,
            "endLine": 707,
            "content": "      ]);\n\n      autoTable(doc, {\n        startY: yPosition,\n        head: [['Account', 'Amount']],"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 744,
            "endLine": 748,
            "content": "      ]);\n\n      autoTable(doc, {\n        startY: yPosition,\n        head: [['Account', 'Amount']],"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 772,
            "endLine": 776,
            "content": "      ]);\n\n      autoTable(doc, {\n        startY: yPosition,\n        head: [['Account', 'Amount']],"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 682,
            "endLine": 686,
            "content": "        styles: { fontSize: 10 },\n        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 30, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 710,
            "endLine": 714,
            "content": "        styles: { fontSize: 10 },\n        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 30, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 751,
            "endLine": 755,
            "content": "        styles: { fontSize: 10 },\n        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 30, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 779,
            "endLine": 783,
            "content": "        styles: { fontSize: 10 },\n        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 30, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 683,
            "endLine": 687,
            "content": "        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 30, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 711,
            "endLine": 715,
            "content": "        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 30, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 752,
            "endLine": 756,
            "content": "        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 30, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 780,
            "endLine": 784,
            "content": "        columnStyles: { 1: { halign: 'right' } },\n        margin: { left: 30, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 684,
            "endLine": 688,
            "content": "        margin: { left: 30, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 712,
            "endLine": 716,
            "content": "        margin: { left: 30, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 753,
            "endLine": 757,
            "content": "        margin: { left: 30, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 781,
            "endLine": 785,
            "content": "        margin: { left: 30, right: 20 }\n      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 685,
            "endLine": 689,
            "content": "      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n\n    doc.setFont('helvetica', 'bold');"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 713,
            "endLine": 717,
            "content": "      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n\n    doc.setFont('helvetica', 'bold');"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 754,
            "endLine": 758,
            "content": "      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n\n    doc.setFont('helvetica', 'bold');"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 782,
            "endLine": 786,
            "content": "      });\n      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n\n    doc.setFont('helvetica', 'bold');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 686,
            "endLine": 690,
            "content": "      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n\n    doc.setFont('helvetica', 'bold');\n    doc.text('Total Current Assets:', 30, yPosition);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 714,
            "endLine": 718,
            "content": "      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n\n    doc.setFont('helvetica', 'bold');\n    doc.text('Total Non-Current Assets:', 30, yPosition);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 755,
            "endLine": 759,
            "content": "      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n\n    doc.setFont('helvetica', 'bold');\n    doc.text('Total Current Liabilities:', 30, yPosition);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 783,
            "endLine": 787,
            "content": "      yPosition = (doc as any).lastAutoTable.finalY + 5;\n    }\n\n    doc.setFont('helvetica', 'bold');\n    doc.text('Total Equity:', 30, yPosition);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 688,
            "endLine": 692,
            "content": "\n    doc.setFont('helvetica', 'bold');\n    doc.text('Total Current Assets:', 30, yPosition);\n    doc.text(this.formatCurrency(bsData.assets.totalCurrent), 150, yPosition);\n    yPosition += 15;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 689,
            "endLine": 693,
            "content": "    doc.setFont('helvetica', 'bold');\n    doc.text('Total Current Assets:', 30, yPosition);\n    doc.text(this.formatCurrency(bsData.assets.totalCurrent), 150, yPosition);\n    yPosition += 15;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 693,
            "endLine": 697,
            "content": "\n    // Non-Current Assets\n    doc.setFont('helvetica', 'normal');\n    doc.text('Non-Current Assets:', 25, yPosition);\n    yPosition += 8;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 694,
            "endLine": 698,
            "content": "    // Non-Current Assets\n    doc.setFont('helvetica', 'normal');\n    doc.text('Non-Current Assets:', 25, yPosition);\n    yPosition += 8;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 698,
            "endLine": 702,
            "content": "\n    if (bsData.assets.nonCurrent.length > 0) {\n      const nonCurrentAssetsData = bsData.assets.nonCurrent.map(item => [\n        `${item.accountCode} - ${item.name}`,\n        this.formatCurrency(item.amount)"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 699,
            "endLine": 703,
            "content": "    if (bsData.assets.nonCurrent.length > 0) {\n      const nonCurrentAssetsData = bsData.assets.nonCurrent.map(item => [\n        `${item.accountCode} - ${item.name}`,\n        this.formatCurrency(item.amount)\n      ]);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 716,
            "endLine": 720,
            "content": "\n    doc.setFont('helvetica', 'bold');\n    doc.text('Total Non-Current Assets:', 30, yPosition);\n    doc.text(this.formatCurrency(bsData.assets.totalNonCurrent), 150, yPosition);\n    yPosition += 10;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 717,
            "endLine": 721,
            "content": "    doc.setFont('helvetica', 'bold');\n    doc.text('Total Non-Current Assets:', 30, yPosition);\n    doc.text(this.formatCurrency(bsData.assets.totalNonCurrent), 150, yPosition);\n    yPosition += 10;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 733,
            "endLine": 737,
            "content": "\n    // Current Liabilities\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    doc.text('Current Liabilities:', 25, yPosition);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 734,
            "endLine": 738,
            "content": "    // Current Liabilities\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    doc.text('Current Liabilities:', 25, yPosition);\n    yPosition += 8;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 739,
            "endLine": 743,
            "content": "\n    if (bsData.liabilities.current.length > 0) {\n      const currentLiabilitiesData = bsData.liabilities.current.map(item => [\n        `${item.accountCode} - ${item.name}`,\n        this.formatCurrency(item.amount)"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 740,
            "endLine": 744,
            "content": "    if (bsData.liabilities.current.length > 0) {\n      const currentLiabilitiesData = bsData.liabilities.current.map(item => [\n        `${item.accountCode} - ${item.name}`,\n        this.formatCurrency(item.amount)\n      ]);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 757,
            "endLine": 761,
            "content": "\n    doc.setFont('helvetica', 'bold');\n    doc.text('Total Current Liabilities:', 30, yPosition);\n    doc.text(this.formatCurrency(bsData.liabilities.totalCurrent), 150, yPosition);\n    yPosition += 15;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 758,
            "endLine": 762,
            "content": "    doc.setFont('helvetica', 'bold');\n    doc.text('Total Current Liabilities:', 30, yPosition);\n    doc.text(this.formatCurrency(bsData.liabilities.totalCurrent), 150, yPosition);\n    yPosition += 15;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 762,
            "endLine": 766,
            "content": "\n    // Equity\n    doc.setFont('helvetica', 'normal');\n    doc.text('Equity:', 25, yPosition);\n    yPosition += 8;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 763,
            "endLine": 767,
            "content": "    // Equity\n    doc.setFont('helvetica', 'normal');\n    doc.text('Equity:', 25, yPosition);\n    yPosition += 8;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 767,
            "endLine": 771,
            "content": "\n    if (bsData.equity.items.length > 0) {\n      const equityData = bsData.equity.items.map(item => [\n        `${item.accountCode} - ${item.name}`,\n        this.formatCurrency(item.amount)"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 768,
            "endLine": 772,
            "content": "    if (bsData.equity.items.length > 0) {\n      const equityData = bsData.equity.items.map(item => [\n        `${item.accountCode} - ${item.name}`,\n        this.formatCurrency(item.amount)\n      ]);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 785,
            "endLine": 789,
            "content": "\n    doc.setFont('helvetica', 'bold');\n    doc.text('Total Equity:', 30, yPosition);\n    doc.text(this.formatCurrency(bsData.equity.total), 150, yPosition);\n    yPosition += 10;"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 786,
            "endLine": 790,
            "content": "    doc.setFont('helvetica', 'bold');\n    doc.text('Total Equity:', 30, yPosition);\n    doc.text(this.formatCurrency(bsData.equity.total), 150, yPosition);\n    yPosition += 10;\n"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 790,
            "endLine": 794,
            "content": "\n    // Total Liabilities & Equity\n    const totalLiabilitiesEquity = bsData.liabilities.total + bsData.equity.total;\n    doc.setFontSize(14);\n    doc.line(20, yPosition, 190, yPosition);"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 791,
            "endLine": 795,
            "content": "    // Total Liabilities & Equity\n    const totalLiabilitiesEquity = bsData.liabilities.total + bsData.equity.total;\n    doc.setFontSize(14);\n    doc.line(20, yPosition, 190, yPosition);\n    yPosition += 8;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 808,
            "endLine": 812,
            "content": "\n// Helper to infer type from account code\nexport function categorizeAccountType(accountCode: string): 'income' | 'expense' | 'asset' | 'liability' | 'equity' {\n  if (!accountCode) return 'expense';\n  if (/^2\\d{2}$/.test(accountCode)) return 'income'; // Revenue (200-299)"
          },
          {
            "file": "src/lib/reportGenerator.ts",
            "startLine": 809,
            "endLine": 813,
            "content": "// Helper to infer type from account code\nexport function categorizeAccountType(accountCode: string): 'income' | 'expense' | 'asset' | 'liability' | 'equity' {\n  if (!accountCode) return 'expense';\n  if (/^2\\d{2}$/.test(accountCode)) return 'income'; // Revenue (200-299)\n  if (/^31\\d$/.test(accountCode)) return 'expense'; // COGS (310-319)"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 2,
            "endLine": 6,
            "content": "\n// Singleton instance\nlet supabaseInstance: SupabaseClient | null = null;\nlet supabaseEnabled = false;\n"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 3,
            "endLine": 7,
            "content": "// Singleton instance\nlet supabaseInstance: SupabaseClient | null = null;\nlet supabaseEnabled = false;\n\nexport function getSupabaseClient(): SupabaseClient | null {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 6,
            "endLine": 10,
            "content": "\nexport function getSupabaseClient(): SupabaseClient | null {\n  // Return existing instance if available\n  if (supabaseInstance) {\n    return supabaseInstance;"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 7,
            "endLine": 11,
            "content": "export function getSupabaseClient(): SupabaseClient | null {\n  // Return existing instance if available\n  if (supabaseInstance) {\n    return supabaseInstance;\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 12,
            "endLine": 16,
            "content": "\n  // Try both server and client env vars\n  const supabaseUrl =\n    process.env.NEXT_PUBLIC_SUPABASE_URL || process.env.SUPABASE_URL;\n  const supabaseAnonKey ="
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 13,
            "endLine": 17,
            "content": "  // Try both server and client env vars\n  const supabaseUrl =\n    process.env.NEXT_PUBLIC_SUPABASE_URL || process.env.SUPABASE_URL;\n  const supabaseAnonKey =\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || process.env.SUPABASE_ANON_KEY;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 18,
            "endLine": 22,
            "content": "\n  // Debug logging (only in development)\n  if (process.env.NODE_ENV === 'development') {\n    console.log('🔍 Supabase Debug:', {\n      hasUrl: !!supabaseUrl,"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 19,
            "endLine": 23,
            "content": "  // Debug logging (only in development)\n  if (process.env.NODE_ENV === 'development') {\n    console.log('🔍 Supabase Debug:', {\n      hasUrl: !!supabaseUrl,\n      hasKey: !!supabaseAnonKey,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 31,
            "endLine": 35,
            "content": "\n  // Check if we have the required environment variables\n  if (!supabaseUrl || !supabaseAnonKey) {\n    console.warn('⚠️ Supabase credentials not found - running in offline mode');\n    return null;"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 32,
            "endLine": 36,
            "content": "  // Check if we have the required environment variables\n  if (!supabaseUrl || !supabaseAnonKey) {\n    console.warn('⚠️ Supabase credentials not found - running in offline mode');\n    return null;\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 37,
            "endLine": 41,
            "content": "\n  // Validate URL format\n  if (!supabaseUrl.startsWith('https://')) {\n    console.error('❌ Invalid Supabase URL format');\n    return null;"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 38,
            "endLine": 42,
            "content": "  // Validate URL format\n  if (!supabaseUrl.startsWith('https://')) {\n    console.error('❌ Invalid Supabase URL format');\n    return null;\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 43,
            "endLine": 47,
            "content": "\n  // Validate anon key format (should be a JWT token starting with \"eyJ\")\n  if (!supabaseAnonKey.startsWith('eyJ')) {\n    console.error('❌ Supabase anon key is invalid - must be a JWT token starting with \"eyJ\"');\n    console.error('🔧 Get your anon key from: Supabase Dashboard > Settings > API');"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 44,
            "endLine": 48,
            "content": "  // Validate anon key format (should be a JWT token starting with \"eyJ\")\n  if (!supabaseAnonKey.startsWith('eyJ')) {\n    console.error('❌ Supabase anon key is invalid - must be a JWT token starting with \"eyJ\"');\n    console.error('🔧 Get your anon key from: Supabase Dashboard > Settings > API');\n    console.warn('⚠️ Running in offline mode - database features disabled');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 51,
            "endLine": 55,
            "content": "\n  try {\n    // Create Supabase client\n    supabaseInstance = createClient(supabaseUrl, supabaseAnonKey, {\n      auth: {"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 52,
            "endLine": 56,
            "content": "  try {\n    // Create Supabase client\n    supabaseInstance = createClient(supabaseUrl, supabaseAnonKey, {\n      auth: {\n        autoRefreshToken: true,"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 61,
            "endLine": 65,
            "content": "\n    supabaseEnabled = true;\n    console.log('✅ Supabase client initialized successfully');\n    return supabaseInstance;\n  } catch (error) {"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 62,
            "endLine": 66,
            "content": "    supabaseEnabled = true;\n    console.log('✅ Supabase client initialized successfully');\n    return supabaseInstance;\n  } catch (error) {\n    console.error('❌ Failed to initialize Supabase client:', error);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 74,
            "endLine": 78,
            "content": "\nexport async function getCurrentUser() {\n  const supabase = getSupabaseClient();\n  if (!supabase) {\n    return null;"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 75,
            "endLine": 79,
            "content": "export async function getCurrentUser() {\n  const supabase = getSupabaseClient();\n  if (!supabase) {\n    return null;\n  }"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 80,
            "endLine": 84,
            "content": "\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error) {\n      console.error('Error getting current user:', error);"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 81,
            "endLine": 85,
            "content": "  try {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error) {\n      console.error('Error getting current user:', error);\n      return null;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 116,
            "endLine": 120,
            "content": "\n// Database operation helpers with proper error handling\nexport async function testDatabaseConnection(): Promise<boolean> {\n  try {\n    const supabase = getSupabaseClient();"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 117,
            "endLine": 121,
            "content": "// Database operation helpers with proper error handling\nexport async function testDatabaseConnection(): Promise<boolean> {\n  try {\n    const supabase = getSupabaseClient();\n    if (!supabase) {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 125,
            "endLine": 129,
            "content": "    \n    const { data, error } = await supabase.from('learned_patterns').select('count').limit(1);\n    \n    if (error) {\n      console.error('❌ Database connection test failed:', error.message);"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 126,
            "endLine": 130,
            "content": "    const { data, error } = await supabase.from('learned_patterns').select('count').limit(1);\n    \n    if (error) {\n      console.error('❌ Database connection test failed:', error.message);\n      return false;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 127,
            "endLine": 131,
            "content": "    \n    if (error) {\n      console.error('❌ Database connection test failed:', error.message);\n      return false;\n    }"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 128,
            "endLine": 132,
            "content": "    if (error) {\n      console.error('❌ Database connection test failed:', error.message);\n      return false;\n    }\n    "
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/supabase.ts",
            "startLine": 132,
            "endLine": 136,
            "content": "    \n    console.log('✅ Database connection test successful');\n    return true;\n  } catch (error) {\n    console.error('❌ Database connection test error:', error);"
          },
          {
            "file": "src/lib/supabase.ts",
            "startLine": 133,
            "endLine": 137,
            "content": "    console.log('✅ Database connection test successful');\n    return true;\n  } catch (error) {\n    console.error('❌ Database connection test error:', error);\n    return false;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 4,
        "blocks": [
          {
            "file": "src/lib/testData.ts",
            "startLine": 10,
            "endLine": 14,
            "content": "    confidence: 0,\n    isApproved: false,\n    isManuallyEdited: false\n  },\n  {"
          },
          {
            "file": "src/lib/testData.ts",
            "startLine": 20,
            "endLine": 24,
            "content": "    confidence: 0,\n    isApproved: false,\n    isManuallyEdited: false\n  },\n  {"
          },
          {
            "file": "src/lib/testData.ts",
            "startLine": 30,
            "endLine": 34,
            "content": "    confidence: 0,\n    isApproved: false,\n    isManuallyEdited: false\n  },\n  {"
          },
          {
            "file": "src/lib/testData.ts",
            "startLine": 40,
            "endLine": 44,
            "content": "    confidence: 0,\n    isApproved: false,\n    isManuallyEdited: false\n  },\n  {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/testData.ts",
            "startLine": 55,
            "endLine": 59,
            "content": "\nexport const testAIEngine = async () => {\n  const { AIEngine } = await import('./aiEngine');\n  const aiEngine = new AIEngine();\n  "
          },
          {
            "file": "src/lib/testData.ts",
            "startLine": 56,
            "endLine": 60,
            "content": "export const testAIEngine = async () => {\n  const { AIEngine } = await import('./aiEngine');\n  const aiEngine = new AIEngine();\n  \n  console.log('🧪 Testing AI Engine with sample transactions...\\n');"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/testData.ts",
            "startLine": 59,
            "endLine": 63,
            "content": "  \n  console.log('🧪 Testing AI Engine with sample transactions...\\n');\n  \n  const results = await aiEngine.categorizeBatch(SAMPLE_TRANSACTIONS);\n  "
          },
          {
            "file": "src/lib/testData.ts",
            "startLine": 60,
            "endLine": 64,
            "content": "  console.log('🧪 Testing AI Engine with sample transactions...\\n');\n  \n  const results = await aiEngine.categorizeBatch(SAMPLE_TRANSACTIONS);\n  \n  results.forEach((transaction, index) => {"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/testData.ts",
            "startLine": 61,
            "endLine": 65,
            "content": "  \n  const results = await aiEngine.categorizeBatch(SAMPLE_TRANSACTIONS);\n  \n  results.forEach((transaction, index) => {\n    console.log(`Transaction ${index + 1}:`);"
          },
          {
            "file": "src/lib/testData.ts",
            "startLine": 62,
            "endLine": 66,
            "content": "  const results = await aiEngine.categorizeBatch(SAMPLE_TRANSACTIONS);\n  \n  results.forEach((transaction, index) => {\n    console.log(`Transaction ${index + 1}:`);\n    console.log(`  Description: ${transaction.description}`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/testData.ts",
            "startLine": 63,
            "endLine": 67,
            "content": "  \n  results.forEach((transaction, index) => {\n    console.log(`Transaction ${index + 1}:`);\n    console.log(`  Description: ${transaction.description}`);\n    console.log(`  Merchant: ${transaction.merchant || 'Unknown'}`);"
          },
          {
            "file": "src/lib/testData.ts",
            "startLine": 64,
            "endLine": 68,
            "content": "  results.forEach((transaction, index) => {\n    console.log(`Transaction ${index + 1}:`);\n    console.log(`  Description: ${transaction.description}`);\n    console.log(`  Merchant: ${transaction.merchant || 'Unknown'}`);\n    console.log(`  Category: ${transaction.category || 'Uncategorized'}`);"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/types.ts",
            "startLine": 24,
            "endLine": 28,
            "content": "\nexport interface Account {\n  code: string;\n  name: string;\n  type: 'Asset' | 'Liability' | 'Equity' | 'Revenue' | 'Expense';"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 25,
            "endLine": 29,
            "content": "export interface Account {\n  code: string;\n  name: string;\n  type: 'Asset' | 'Liability' | 'Equity' | 'Revenue' | 'Expense';\n  description?: string;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/types.ts",
            "startLine": 104,
            "endLine": 108,
            "content": "\nexport interface ProfitLossData {\n  revenue: { [account: string]: number };\n  expenses: { [account: string]: number };\n  netIncome: number;"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 105,
            "endLine": 109,
            "content": "export interface ProfitLossData {\n  revenue: { [account: string]: number };\n  expenses: { [account: string]: number };\n  netIncome: number;\n  period: string;"
          }
        ],
        "similarity": 1
      },
      {
        "type": "code_block",
        "count": 2,
        "blocks": [
          {
            "file": "src/lib/types.ts",
            "startLine": 111,
            "endLine": 115,
            "content": "\nexport interface BalanceSheetData {\n  assets: { [account: string]: number };\n  liabilities: { [account: string]: number };\n  equity: { [account: string]: number };"
          },
          {
            "file": "src/lib/types.ts",
            "startLine": 112,
            "endLine": 116,
            "content": "export interface BalanceSheetData {\n  assets: { [account: string]: number };\n  liabilities: { [account: string]: number };\n  equity: { [account: string]: number };\n  totalAssets: number;"
          }
        ],
        "similarity": 1
      }
    ],
    "data": [],
    "logic": [],
    "patterns": [],
    "components": []
  },
  "conflicts": {
    "naming": [
      {
        "type": "function",
        "name": "openai",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/chat/route.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "apiKeyValid",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/chat/route.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "getOpenAIClient",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/chat/route.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "apiKey",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/chat/route.ts",
          "src/lib/apiGateway.ts",
          "src/lib/apiGateway.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "POST",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/chat/route.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "userId",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/lib/aiCategorizationService.ts",
          "src/lib/aiCategorizationService.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "chartOfAccounts",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/components/BulkCategorySelector.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "accounts",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/components/BulkCategorySelector.tsx",
          "src/components/TransactionTable.tsx",
          "src/lib/aiEngine.ts",
          "src/lib/chartOfAccounts.ts"
        ],
        "count": 5
      },
      {
        "type": "function",
        "name": "aiEngine",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/ai-categorize/route.ts",
          "src/lib/aiCategorizationService.ts",
          "src/lib/aiCategorizationService.ts",
          "src/lib/aiCategorizationService.ts",
          "src/lib/testData.ts"
        ],
        "count": 6
      },
      {
        "type": "function",
        "name": "accountName",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/ai-categorize/route.ts",
          "src/components/TransactionTable.tsx",
          "src/lib/aiCategorizationService.ts",
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 6
      },
      {
        "type": "function",
        "name": "client",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/chat/route.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "aiResult",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/components/AICategorizationButton.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "systemPrompt",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/chat/route.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "controller",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/chat/route.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "timeoutId",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/chat/route.ts",
          "src/app/page.tsx"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "completion",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/chat/route.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "response",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/app/api/chat/route.ts",
          "src/app/help/page.tsx",
          "src/components/FloatingChat.tsx",
          "src/lib/aiCategorizationService.ts",
          "src/lib/aiCategorizationService.ts",
          "src/lib/monitoring.ts"
        ],
        "count": 7
      },
      {
        "type": "function",
        "name": "accountCode",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/components/TransactionTable.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "confidence",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "reasoning",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/lib/aiCategorizationService.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "suggestedKeyword",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/lib/aiCategorizationService.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "account",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/components/TransactionTable.tsx",
          "src/lib/aiEngine.ts",
          "src/lib/chartOfAccounts.ts",
          "src/lib/chartOfAccounts.ts",
          "src/lib/chartOfAccounts.ts",
          "src/lib/chartOfAccounts.ts",
          "src/lib/exportManager.ts",
          "src/lib/exportManager.ts",
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 12
      },
      {
        "type": "function",
        "name": "description",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/lib/aiEngine.ts",
          "src/lib/chartOfAccounts.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/pdfProcessor.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 6
      },
      {
        "type": "function",
        "name": "amount",
        "files": [
          "src/app/api/ai-categorize/route.ts",
          "src/lib/aiEngine.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 5
      },
      {
        "type": "function",
        "name": "fallbackResponse",
        "files": [
          "src/app/api/chat/route.ts",
          "src/app/api/chat/route.ts",
          "src/app/api/chat/route.ts",
          "src/app/api/chat/route.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "to",
        "files": [
          "src/app/help/page.tsx",
          "src/app/help/page.tsx",
          "src/components/FloatingChat.tsx",
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx",
          "src/data/bankFormats.ts",
          "src/lib/aiEngine.ts",
          "src/lib/iconSystem.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 9
      },
      {
        "type": "function",
        "name": "sendMessage",
        "files": [
          "src/app/help/page.tsx",
          "src/components/FloatingChat.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "userMessage",
        "files": [
          "src/app/help/page.tsx",
          "src/components/FloatingChat.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "data",
        "files": [
          "src/app/help/page.tsx",
          "src/app/reports/page.tsx",
          "src/components/CustomKeywordManager.tsx",
          "src/components/FloatingChat.tsx",
          "src/components/KeywordManager.tsx",
          "src/data/customKeywords.ts",
          "src/lib/aiCategorizationService.ts",
          "src/lib/aiCategorizationService.ts"
        ],
        "count": 8
      },
      {
        "type": "function",
        "name": "assistantMessage",
        "files": [
          "src/app/help/page.tsx",
          "src/components/FloatingChat.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "errorMessage",
        "files": [
          "src/app/help/page.tsx",
          "src/components/FloatingChat.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "handleQuickAction",
        "files": [
          "src/app/help/page.tsx",
          "src/components/FloatingChat.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "message",
        "files": [
          "src/app/help/page.tsx",
          "src/components/FloatingChat.tsx",
          "src/lib/errorHandler.ts",
          "src/lib/monitoring.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "supabase",
        "files": [
          "src/app/login/page.tsx",
          "src/components/AuthButton.tsx",
          "src/context/AuthContext.tsx",
          "src/context/AuthContext.tsx",
          "src/lib/databaseService.ts",
          "src/lib/databaseService.ts",
          "src/lib/databaseService.ts",
          "src/lib/databaseService.ts",
          "src/lib/databaseService.ts",
          "src/lib/databaseService.ts",
          "src/lib/multiTenant.ts",
          "src/lib/multiTenant.ts",
          "src/lib/multiTenant.ts",
          "src/lib/multiTenant.ts",
          "src/lib/multiTenant.ts",
          "src/lib/multiTenant.ts",
          "src/lib/multiTenant.ts",
          "src/lib/multiTenant.ts",
          "src/lib/multiTenant.ts",
          "src/lib/supabase.ts",
          "src/lib/supabase.ts"
        ],
        "count": 21
      },
      {
        "type": "function",
        "name": "blob",
        "files": [
          "src/app/page.tsx",
          "src/components/CustomKeywordManager.tsx",
          "src/components/ExportManager.tsx",
          "src/components/KeywordManager.tsx"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "url",
        "files": [
          "src/app/page.tsx",
          "src/components/CustomKeywordManager.tsx",
          "src/components/ExportManager.tsx",
          "src/components/KeywordManager.tsx",
          "src/lib/apiGateway.ts"
        ],
        "count": 5
      },
      {
        "type": "function",
        "name": "a",
        "files": [
          "src/app/page.tsx",
          "src/components/CustomKeywordManager.tsx",
          "src/components/KeywordManager.tsx"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "today",
        "files": [
          "src/app/reports/page.tsx",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "startDate",
        "files": [
          "src/app/reports/page.tsx",
          "src/components/FileUpload.tsx",
          "src/components/ProcessingResults.tsx",
          "src/lib/exportManager.ts",
          "src/lib/exportManager.ts",
          "src/lib/exportManager.ts"
        ],
        "count": 6
      },
      {
        "type": "function",
        "name": "endDate",
        "files": [
          "src/app/reports/page.tsx",
          "src/components/FileUpload.tsx",
          "src/components/ProcessingResults.tsx",
          "src/lib/exportManager.ts",
          "src/lib/exportManager.ts",
          "src/lib/exportManager.ts"
        ],
        "count": 6
      },
      {
        "type": "function",
        "name": "transactions",
        "files": [
          "src/app/reports/page.tsx",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/pdfProcessor.ts",
          "src/lib/pdfProcessor.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 7
      },
      {
        "type": "function",
        "name": "dates",
        "files": [
          "src/app/reports/page.tsx",
          "src/components/ExportManager.tsx",
          "src/components/ProcessingResults.tsx",
          "src/lib/exportManager.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "plData",
        "files": [
          "src/app/reports/page.tsx",
          "src/app/reports/page.tsx",
          "src/lib/reportGenerator.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "bsData",
        "files": [
          "src/app/reports/page.tsx",
          "src/app/reports/page.tsx",
          "src/lib/reportGenerator.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "revenue",
        "files": [
          "src/app/reports/page.tsx",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "expenses",
        "files": [
          "src/app/reports/page.tsx",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "assets",
        "files": [
          "src/app/reports/page.tsx",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "liabilities",
        "files": [
          "src/app/reports/page.tsx",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "equity",
        "files": [
          "src/app/reports/page.tsx",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "formatCurrency",
        "files": [
          "src/app/reports/page.tsx",
          "src/components/DuplicateWarning.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "pdf",
        "files": [
          "src/app/reports/page.tsx",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "sampleData",
        "files": [
          "src/app/reports/page.tsx",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "handleAICategorize",
        "files": [
          "src/components/AICategorizationButton.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "handleAddKeyword",
        "files": [
          "src/components/AICategorizationButton.tsx",
          "src/components/KeywordManager.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "filteredTransactions",
        "files": [
          "src/components/BulkCategorySelector.tsx",
          "src/components/TransactionTable.tsx",
          "src/lib/exportManager.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "filtered",
        "files": [
          "src/components/BulkCategorySelector.tsx",
          "src/components/TransactionTable.tsx",
          "src/lib/exportManager.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "handleSelectAll",
        "files": [
          "src/components/BulkCategorySelector.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "updates",
        "files": [
          "src/components/BulkCategorySelector.tsx",
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "newSelected",
        "files": [
          "src/components/BulkCategorySelector.tsx",
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "loadData",
        "files": [
          "src/components/CustomKeywordManager.tsx",
          "src/components/KeywordManager.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "matchesSearch",
        "files": [
          "src/components/CustomKeywordManager.tsx",
          "src/components/CustomKeywordManager.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "matchesAccount",
        "files": [
          "src/components/CustomKeywordManager.tsx",
          "src/components/CustomKeywordManager.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "validKeywords",
        "files": [
          "src/components/CustomKeywordManager.tsx",
          "src/components/KeywordManager.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "handleExport",
        "files": [
          "src/components/CustomKeywordManager.tsx",
          "src/components/ExportManager.tsx",
          "src/components/KeywordManager.tsx"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "handleImport",
        "files": [
          "src/components/CustomKeywordManager.tsx",
          "src/components/KeywordManager.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "file",
        "files": [
          "src/components/CustomKeywordManager.tsx",
          "src/components/FileUpload.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "result",
        "files": [
          "src/components/CustomKeywordManager.tsx",
          "src/components/ExportManager.tsx",
          "src/components/FileUpload.tsx",
          "src/components/KeywordManager.tsx",
          "src/components/TransactionTable.tsx",
          "src/lib/aiCategorizationService.ts",
          "src/lib/aiCategorizationService.ts",
          "src/lib/aiCategorizationService.ts",
          "src/lib/aiEngine.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/exportManager.ts"
        ],
        "count": 13
      },
      {
        "type": "function",
        "name": "newExpanded",
        "files": [
          "src/components/DuplicateWarning.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "validation",
        "files": [
          "src/components/ExportManager.tsx",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/exportManager.ts",
          "src/lib/exportManager.ts"
        ],
        "count": 5
      },
      {
        "type": "function",
        "name": "type",
        "files": [
          "src/components/FileUpload.tsx",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "files",
        "files": [
          "src/components/FileUpload.tsx",
          "src/components/FileUpload.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "updated",
        "files": [
          "src/components/KeywordManager.tsx",
          "src/components/KeywordManager.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "newKeywords",
        "files": [
          "src/components/KeywordManager.tsx",
          "src/components/KeywordManager.tsx",
          "src/components/KeywordManager.tsx",
          "src/components/KeywordManager.tsx"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "timer",
        "files": [
          "src/components/Preloader.tsx",
          "src/components/StorageIndicator.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "accountCodes",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/data/customKeywords.ts",
          "src/data/merchants.ts",
          "src/lib/chartOfAccounts.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "transactionDate",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/lib/exportManager.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "similarTransactions",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "sourceDesc",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "targetDesc",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "shouldApply",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "similarDescriptions",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "removed",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/data/customKeywords.ts",
          "src/data/customKeywords.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "transaction",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/exportManager.ts",
          "src/lib/exportManager.ts"
        ],
        "count": 8
      },
      {
        "type": "function",
        "name": "stats",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/lib/exportManager.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "total",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "needsReview",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "highConfidence",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "batchSize",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "i",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/duplicateDetector.ts",
          "src/lib/duplicateDetector.ts",
          "src/lib/performance.ts"
        ],
        "count": 10
      },
      {
        "type": "function",
        "name": "batch",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/lib/csvProcessor.ts",
          "src/lib/performance.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "isETransfer",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "isBillPayment",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/components/TransactionTable.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "taxRate",
        "files": [
          "src/components/TransactionTable.tsx",
          "src/lib/chartOfAccounts.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "context",
        "files": [
          "src/context/AuthContext.tsx",
          "src/context/FinancialDataContext.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "item",
        "files": [
          "src/context/FinancialDataContext.tsx",
          "src/lib/pdfProcessor.ts",
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "parsed",
        "files": [
          "src/context/FinancialDataContext.tsx",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "savedData",
        "files": [
          "src/context/FinancialDataContext.tsx",
          "src/context/FinancialDataContext.tsx"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "existingIndex",
        "files": [
          "src/data/customKeywords.ts",
          "src/data/customKeywords.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "initialLength",
        "files": [
          "src/data/customKeywords.ts",
          "src/data/customKeywords.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "index",
        "files": [
          "src/data/customKeywords.ts",
          "src/data/customKeywords.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "normalizedDesc",
        "files": [
          "src/data/customKeywords.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts"
        ],
        "count": 8
      },
      {
        "type": "function",
        "name": "keyword",
        "files": [
          "src/data/customKeywords.ts",
          "src/lib/aiEngine.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "rule",
        "files": [
          "src/data/customKeywords.ts",
          "src/lib/aiEngine.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "matchCount",
        "files": [
          "src/data/customKeywords.ts",
          "src/lib/aiEngine.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "matchRatio",
        "files": [
          "src/data/customKeywords.ts",
          "src/lib/aiEngine.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "adjustedConfidence",
        "files": [
          "src/data/customKeywords.ts",
          "src/lib/aiEngine.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "cleanDescription",
        "files": [
          "src/data/merchants.ts",
          "src/lib/aiCategorizationService.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "pattern",
        "files": [
          "src/data/merchants.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/pdfProcessor.ts",
          "src/lib/pdfProcessor.ts",
          "src/lib/pdfProcessor.ts",
          "src/lib/pdfProcessor.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 14
      },
      {
        "type": "function",
        "name": "patterns",
        "files": [
          "src/lib/aiCategorizationService.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "headers",
        "files": [
          "src/lib/aiCategorizationService.ts",
          "src/lib/aiCategorizationService.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/exportManager.ts"
        ],
        "count": 5
      },
      {
        "type": "function",
        "name": "lowerDesc",
        "files": [
          "src/lib/aiCategorizationService.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "getInflowOutflow",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "isPositive",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "amountMatch",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "results",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/monitoring.ts",
          "src/lib/performance.ts",
          "src/lib/testData.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "bestMatch",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "score",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/duplicateDetector.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "matches",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "j",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/aiEngine.ts",
          "src/lib/duplicateDetector.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "prefix",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "current",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "savedCorrections",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/databaseService.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "savedPatterns",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/databaseService.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "key",
        "files": [
          "src/lib/aiEngine.ts",
          "src/lib/apiGateway.ts",
          "src/lib/apiGateway.ts",
          "src/lib/apiGateway.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/duplicateDetector.ts",
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 12
      },
      {
        "type": "function",
        "name": "startTime",
        "files": [
          "src/lib/apiGateway.ts",
          "src/lib/monitoring.ts",
          "src/lib/monitoring.ts",
          "src/lib/monitoring.ts",
          "src/lib/monitoring.ts"
        ],
        "count": 5
      },
      {
        "type": "function",
        "name": "user",
        "files": [
          "src/lib/apiGateway.ts",
          "src/lib/databaseService.ts",
          "src/lib/databaseService.ts",
          "src/lib/databaseService.ts",
          "src/lib/databaseService.ts",
          "src/lib/databaseService.ts",
          "src/lib/databaseService.ts",
          "src/lib/monitoring.ts",
          "src/lib/monitoring.ts",
          "src/lib/multiTenant.ts",
          "src/lib/multiTenant.ts",
          "src/lib/multiTenant.ts"
        ],
        "count": 12
      },
      {
        "type": "function",
        "name": "tenantId",
        "files": [
          "src/lib/apiGateway.ts",
          "src/lib/billing.ts",
          "src/lib/billing.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "rateLimitConfig",
        "files": [
          "src/lib/apiGateway.ts",
          "src/lib/apiGateway.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "tenant",
        "files": [
          "src/lib/apiGateway.ts",
          "src/lib/apiGateway.ts",
          "src/lib/apiGateway.ts",
          "src/lib/apiGateway.ts",
          "src/lib/billing.ts",
          "src/lib/monitoring.ts",
          "src/lib/monitoring.ts",
          "src/lib/monitoring.ts",
          "src/lib/monitoring.ts"
        ],
        "count": 9
      },
      {
        "type": "function",
        "name": "query",
        "files": [
          "src/lib/apiGateway.ts",
          "src/lib/apiGateway.ts",
          "src/lib/billing.ts",
          "src/lib/monitoring.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "config",
        "files": [
          "src/lib/apiGateway.ts",
          "src/lib/apiGateway.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "now",
        "files": [
          "src/lib/apiGateway.ts",
          "src/lib/apiGateway.ts",
          "src/lib/apiGateway.ts",
          "src/lib/billing.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 5
      },
      {
        "type": "function",
        "name": "entry",
        "files": [
          "src/lib/apiGateway.ts",
          "src/lib/apiGateway.ts",
          "src/lib/monitoring.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "day",
        "files": [
          "src/lib/apiGateway.ts",
          "src/lib/pdfProcessor.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "plan",
        "files": [
          "src/lib/billing.ts",
          "src/lib/billing.ts",
          "src/lib/billing.ts",
          "src/lib/billing.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "subscription",
        "files": [
          "src/lib/billing.ts",
          "src/lib/billing.ts",
          "src/lib/billing.ts",
          "src/lib/billing.ts",
          "src/lib/billing.ts"
        ],
        "count": 5
      },
      {
        "type": "function",
        "name": "subscriptionData",
        "files": [
          "src/lib/billing.ts",
          "src/lib/billing.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "session",
        "files": [
          "src/lib/billing.ts",
          "src/lib/billing.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "usage",
        "files": [
          "src/lib/billing.ts",
          "src/lib/billing.ts",
          "src/lib/multiTenant.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "aCount",
        "files": [
          "src/lib/chartOfAccounts.ts",
          "src/lib/chartOfAccounts.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "bCount",
        "files": [
          "src/lib/chartOfAccounts.ts",
          "src/lib/chartOfAccounts.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "suggestions",
        "files": [
          "src/lib/chartOfAccounts.ts",
          "src/lib/chartOfAccounts.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "province",
        "files": [
          "src/lib/chartOfAccounts.ts",
          "src/lib/exportManager.ts",
          "src/lib/exportManager.ts",
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 5
      },
      {
        "type": "function",
        "name": "normalized",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "similarity",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/duplicateDetector.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "normalizedHeaders",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "headerMapping",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "formatIdentifiers",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "hasAllRequiredColumns",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "hasDate",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "hasDescription",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "hasAmount",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "format",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/exportManager.ts",
          "src/lib/exportManager.ts"
        ],
        "count": 7
      },
      {
        "type": "function",
        "name": "headerType",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "sampleText",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "dateFormats",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "testDate",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "inferredFormat",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "datePatterns",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "value",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/exportManager.ts"
        ],
        "count": 5
      },
      {
        "type": "function",
        "name": "batchResults",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/performance.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "alt",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "date",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/exportManager.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 4
      },
      {
        "type": "function",
        "name": "currentYear",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "duplicates",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/csvProcessor.ts",
          "src/lib/duplicateDetector.ts"
        ],
        "count": 3
      },
      {
        "type": "function",
        "name": "seen",
        "files": [
          "src/lib/csvProcessor.ts",
          "src/lib/duplicateDetector.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "newPattern",
        "files": [
          "src/lib/databaseService.ts",
          "src/lib/databaseService.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "newCorrection",
        "files": [
          "src/lib/databaseService.ts",
          "src/lib/databaseService.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "checks",
        "files": [
          "src/lib/monitoring.ts",
          "src/lib/monitoring.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "month",
        "files": [
          "src/lib/pdfProcessor.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "monthMap",
        "files": [
          "src/lib/pdfProcessor.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "monthNum",
        "files": [
          "src/lib/pdfProcessor.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "amountRegex",
        "files": [
          "src/lib/pdfProcessor.ts",
          "src/lib/pdfProcessor.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "validationIssues",
        "files": [
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "uncategorizedTransactions",
        "files": [
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "skippedCodes",
        "files": [
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "codeToUse",
        "files": [
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "accountFound",
        "files": [
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "processedAmount",
        "files": [
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "doc",
        "files": [
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "function",
        "name": "yPosition",
        "files": [
          "src/lib/reportGenerator.ts",
          "src/lib/reportGenerator.ts"
        ],
        "count": 2
      },
      {
        "type": "component",
        "name": "CustomKeywordManager",
        "files": [
          "src/components/CustomKeywordManager.tsx",
          "src/data/customKeywords.ts"
        ],
        "count": 2
      }
    ],
    "implementation": [
      {
        "type": "state_management",
        "files": [
          "src/app/admin/page.tsx",
          "src/app/help/page.tsx",
          "src/app/page.tsx",
          "src/app/reports/page.tsx",
          "src/app/settings/page.tsx",
          "src/components/AICategorizationButton.tsx",
          "src/components/AuthButton.tsx",
          "src/components/BulkCategorySelector.tsx",
          "src/components/ClientLayout.tsx",
          "src/components/CustomKeywordManager.tsx",
          "src/components/DuplicateWarning.tsx",
          "src/components/ExportManager.tsx",
          "src/components/FileUpload.tsx",
          "src/components/FloatingChat.tsx",
          "src/components/KeywordManager.tsx",
          "src/components/Preloader.tsx",
          "src/components/StorageIndicator.tsx",
          "src/components/TransactionTable.tsx",
          "src/context/AuthContext.tsx",
          "src/context/FinancialDataContext.tsx"
        ],
        "count": 20
      },
      {
        "type": "http_client",
        "files": [
          "src/app/help/page.tsx",
          "src/components/FloatingChat.tsx",
          "src/lib/aiCategorizationService.ts",
          "src/lib/databaseService.ts",
          "src/lib/monitoring.ts"
        ],
        "count": 5
      },
      {
        "type": "authentication",
        "files": [
          "src/app/login/page.tsx",
          "src/app/page.tsx",
          "src/app/settings/page.tsx",
          "src/components/AuthButton.tsx",
          "src/context/AuthContext.tsx",
          "src/lib/aiEngine.ts",
          "src/lib/apiGateway.ts",
          "src/lib/billing.ts",
          "src/lib/chartOfAccounts.ts",
          "src/lib/databaseService.ts",
          "src/lib/monitoring.ts",
          "src/lib/multiTenant.ts",
          "src/lib/supabase.ts"
        ],
        "count": 13
      }
    ],
    "configuration": [
      {
        "type": "react_ecosystem",
        "file": "package.json",
        "issue": "Too many React-related dependencies"
      },
      {
        "type": "react_ecosystem",
        "file": "package.json",
        "issue": "Too many React-related dependencies"
      },
      {
        "type": "react_ecosystem",
        "file": "package.json",
        "issue": "Too many React-related dependencies"
      },
      {
        "type": "react_ecosystem",
        "file": "package.json",
        "issue": "Too many React-related dependencies"
      },
      {
        "type": "react_ecosystem",
        "file": "package.json",
        "issue": "Too many React-related dependencies"
      },
      {
        "type": "react_ecosystem",
        "file": "package.json",
        "issue": "Too many React-related dependencies"
      }
    ],
    "patterns": []
  },
  "deadCode": {
    "unusedFiles": [
      "src/app/api/ai-categorize/route.ts",
      "src/app/api/chat/route.ts",
      "src/app/globals.css",
      "src/components/AuthButton.tsx",
      "src/lib/errorHandler.ts",
      "src/lib/performance.ts",
      "src/lib/testData.ts"
    ],
    "unusedFunctions": [
      {
        "name": "mockTenants",
        "file": "src/app/admin/page.tsx"
      },
      {
        "name": "openai",
        "file": "src/app/api/chat/route.ts"
      },
      {
        "name": "apiKeyValid",
        "file": "src/app/api/chat/route.ts"
      },
      {
        "name": "apiKey",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "chartOfAccounts",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "accountOptions",
        "file": "src/app/api/ai-categorize/route.ts"
      },
      {
        "name": "aiEngine",
        "file": "src/lib/testData.ts"
      },
      {
        "name": "learnedResult",
        "file": "src/app/api/ai-categorize/route.ts"
      },
      {
        "name": "accountName",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "client",
        "file": "src/app/api/chat/route.ts"
      },
      {
        "name": "aiResult",
        "file": "src/components/AICategorizationButton.tsx"
      },
      {
        "name": "systemPrompt",
        "file": "src/app/api/chat/route.ts"
      },
      {
        "name": "controller",
        "file": "src/app/api/chat/route.ts"
      },
      {
        "name": "timeoutId",
        "file": "src/app/page.tsx"
      },
      {
        "name": "completion",
        "file": "src/app/api/chat/route.ts"
      },
      {
        "name": "response",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "accountCodeMatch",
        "file": "src/app/api/ai-categorize/route.ts"
      },
      {
        "name": "confidenceMatch",
        "file": "src/app/api/ai-categorize/route.ts"
      },
      {
        "name": "reasoningMatch",
        "file": "src/app/api/ai-categorize/route.ts"
      },
      {
        "name": "keywordMatch",
        "file": "src/app/api/ai-categorize/route.ts"
      },
      {
        "name": "accountCode",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "suggestedKeyword",
        "file": "src/lib/aiCategorizationService.ts"
      },
      {
        "name": "localResult",
        "file": "src/app/api/ai-categorize/route.ts"
      },
      {
        "name": "lowerMessage",
        "file": "src/app/api/chat/route.ts"
      },
      {
        "name": "fallbackResponse",
        "file": "src/app/api/chat/route.ts"
      },
      {
        "name": "messages",
        "file": "src/app/api/chat/route.ts"
      },
      {
        "name": "handleContactSupport",
        "file": "src/app/help/page.tsx"
      },
      {
        "name": "handleUserGuide",
        "file": "src/app/help/page.tsx"
      },
      {
        "name": "assistantMessage",
        "file": "src/components/FloatingChat.tsx"
      },
      {
        "name": "errorMessage",
        "file": "src/components/FloatingChat.tsx"
      },
      {
        "name": "message",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "metadata",
        "file": "src/app/layout.tsx"
      },
      {
        "name": "supabase",
        "file": "src/lib/supabase.ts"
      },
      {
        "name": "router",
        "file": "src/app/login/page.tsx"
      },
      {
        "name": "aiEngineRef",
        "file": "src/app/page.tsx"
      },
      {
        "name": "dashboard",
        "file": "src/app/page.tsx"
      },
      {
        "name": "handleFileProcessed",
        "file": "src/app/page.tsx"
      },
      {
        "name": "handleError",
        "file": "src/app/page.tsx"
      },
      {
        "name": "handleTransactionUpdate",
        "file": "src/app/page.tsx"
      },
      {
        "name": "newTransactions",
        "file": "src/app/page.tsx"
      },
      {
        "name": "handleResolveDuplicates",
        "file": "src/app/page.tsx"
      },
      {
        "name": "handleDismissDuplicateWarning",
        "file": "src/app/page.tsx"
      },
      {
        "name": "proceedToExport",
        "file": "src/app/page.tsx"
      },
      {
        "name": "handleNewFile",
        "file": "src/app/page.tsx"
      },
      {
        "name": "handleDownloadTemplate",
        "file": "src/app/page.tsx"
      },
      {
        "name": "template",
        "file": "src/app/page.tsx"
      },
      {
        "name": "blob",
        "file": "src/components/KeywordManager.tsx"
      },
      {
        "name": "a",
        "file": "src/components/KeywordManager.tsx"
      },
      {
        "name": "handleRetry",
        "file": "src/app/page.tsx"
      },
      {
        "name": "today",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "startDate",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "endDate",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "dates",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "generator",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "fallbackGenerator",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "uploadedData",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "plData",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "bsData",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "fallbackPlData",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "fallbackBsData",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "revenue",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "expenses",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "revenueTotal",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "expensesTotal",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "assets",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "liabilities",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "equity",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "assetsTotal",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "liabilitiesTotal",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "equityTotal",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "pdf",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "filename",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "hasReportData",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "canShowReports",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "isRealData",
        "file": "src/app/reports/page.tsx"
      },
      {
        "name": "sampleData",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "handleApplyResult",
        "file": "src/components/AICategorizationButton.tsx"
      },
      {
        "name": "handleAddKeyword",
        "file": "src/components/KeywordManager.tsx"
      },
      {
        "name": "handleSkipKeyword",
        "file": "src/components/AICategorizationButton.tsx"
      },
      {
        "name": "handleDismiss",
        "file": "src/components/AICategorizationButton.tsx"
      },
      {
        "name": "AuthButton",
        "file": "src/components/AuthButton.tsx"
      },
      {
        "name": "handleSignIn",
        "file": "src/components/AuthButton.tsx"
      },
      {
        "name": "handleSignOut",
        "file": "src/components/AuthButton.tsx"
      },
      {
        "name": "testConnection",
        "file": "src/components/AuthButton.tsx"
      },
      {
        "name": "isConnected",
        "file": "src/components/AuthButton.tsx"
      },
      {
        "name": "BulkCategorySelector",
        "file": "src/components/BulkCategorySelector.tsx"
      },
      {
        "name": "allAccounts",
        "file": "src/components/BulkCategorySelector.tsx"
      },
      {
        "name": "filteredTransactions",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "filtered",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "handleManualAssign",
        "file": "src/components/BulkCategorySelector.tsx"
      },
      {
        "name": "updates",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "isAllSelected",
        "file": "src/components/BulkCategorySelector.tsx"
      },
      {
        "name": "isIndeterminate",
        "file": "src/components/BulkCategorySelector.tsx"
      },
      {
        "name": "newSelected",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "handleFinish",
        "file": "src/components/ClientLayout.tsx"
      },
      {
        "name": "chart",
        "file": "src/components/CustomKeywordManager.tsx"
      },
      {
        "name": "accountList",
        "file": "src/components/CustomKeywordManager.tsx"
      },
      {
        "name": "filteredKeywords",
        "file": "src/components/CustomKeywordManager.tsx"
      },
      {
        "name": "matchesSearch",
        "file": "src/components/CustomKeywordManager.tsx"
      },
      {
        "name": "matchesAccount",
        "file": "src/components/CustomKeywordManager.tsx"
      },
      {
        "name": "filteredRules",
        "file": "src/components/CustomKeywordManager.tsx"
      },
      {
        "name": "handleAdd",
        "file": "src/components/CustomKeywordManager.tsx"
      },
      {
        "name": "handleSave",
        "file": "src/components/CustomKeywordManager.tsx"
      },
      {
        "name": "validKeywords",
        "file": "src/components/KeywordManager.tsx"
      },
      {
        "name": "handleExport",
        "file": "src/components/KeywordManager.tsx"
      },
      {
        "name": "handleImport",
        "file": "src/components/KeywordManager.tsx"
      },
      {
        "name": "file",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "reader",
        "file": "src/components/CustomKeywordManager.tsx"
      },
      {
        "name": "result",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "addKeywordField",
        "file": "src/components/CustomKeywordManager.tsx"
      },
      {
        "name": "DuplicateWarning",
        "file": "src/components/DuplicateWarning.tsx"
      },
      {
        "name": "newExpanded",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "handleRemoveDuplicates",
        "file": "src/components/DuplicateWarning.tsx"
      },
      {
        "name": "FallbackComponent",
        "file": "src/components/ErrorBoundary.tsx"
      },
      {
        "name": "availableFormats",
        "file": "src/components/ExportManager.tsx"
      },
      {
        "name": "transactionDateRange",
        "file": "src/components/ExportManager.tsx"
      },
      {
        "name": "validation",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "exportStats",
        "file": "src/components/ExportManager.tsx"
      },
      {
        "name": "link",
        "file": "src/components/ExportManager.tsx"
      },
      {
        "name": "lowerError",
        "file": "src/components/FileFormatError.tsx"
      },
      {
        "name": "errorDetails",
        "file": "src/components/FileFormatError.tsx"
      },
      {
        "name": "csvProcessor",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "pdfProcessor",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "cat",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "fileExtension",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "pdfResult",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "csvBlob",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "csvFile",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "reportTransactions",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "companyName",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "handleFileSelect",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "files",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "handleDrop",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "handleDragOver",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "handleDragLeave",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "allTransactions",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "allStats",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "allValidation",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "allBankFormats",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "allDuplicateResults",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "already",
        "file": "src/components/FileUpload.tsx"
      },
      {
        "name": "handleKeyPress",
        "file": "src/components/FloatingChat.tsx"
      },
      {
        "name": "handleAddRule",
        "file": "src/components/KeywordManager.tsx"
      },
      {
        "name": "handleUpdateKeyword",
        "file": "src/components/KeywordManager.tsx"
      },
      {
        "name": "updated",
        "file": "src/components/KeywordManager.tsx"
      },
      {
        "name": "handleUpdateRule",
        "file": "src/components/KeywordManager.tsx"
      },
      {
        "name": "newKeywords",
        "file": "src/components/KeywordManager.tsx"
      },
      {
        "name": "navigationItems",
        "file": "src/components/NavigationBar.tsx"
      },
      {
        "name": "x",
        "file": "src/components/Preloader.tsx"
      },
      {
        "name": "Preloader",
        "file": "src/components/Preloader.tsx"
      },
      {
        "name": "accountingCodes",
        "file": "src/components/Preloader.tsx"
      },
      {
        "name": "timer",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "handleMouseMove",
        "file": "src/components/Preloader.tsx"
      },
      {
        "name": "streams",
        "file": "src/components/Preloader.tsx"
      },
      {
        "name": "baseSeed",
        "file": "src/components/Preloader.tsx"
      },
      {
        "name": "seed",
        "file": "src/components/Preloader.tsx"
      },
      {
        "name": "interval",
        "file": "src/components/Preloader.tsx"
      },
      {
        "name": "style",
        "file": "src/components/Preloader.tsx"
      },
      {
        "name": "zapInterval",
        "file": "src/components/Preloader.tsx"
      },
      {
        "name": "fadeTimer",
        "file": "src/components/Preloader.tsx"
      },
      {
        "name": "handleLaunch",
        "file": "src/components/Preloader.tsx"
      },
      {
        "name": "totalExpenses",
        "file": "src/components/ProcessingResults.tsx"
      },
      {
        "name": "totalIncome",
        "file": "src/components/ProcessingResults.tsx"
      },
      {
        "name": "const",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "SortArrow",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "SortableHeader",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "accountCodes",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "availableAccounts",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "getAccountByCode",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "expenseAccounts",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "revenueAccounts",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "assetAccounts",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "combinedAccounts",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "availableCodes",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "provinceTaxRates",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "baseTaxRate",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "zeroRatedCategories",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "aValue",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "transactionsToSelect",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "thisMonth",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "thisYear",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "transactionDate",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "handleApplyToSimilar",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "similarTransactions",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "sourceDesc",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "targetDesc",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "shouldApply",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "similarDescriptions",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "removed",
        "file": "src/data/customKeywords.ts"
      },
      {
        "name": "sourceTransaction",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "invalidAccountCodeWarned",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "safeAccountCode",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "transaction",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "feedback",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "groupedTransactions",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "groups",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "handleBulkApprove",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "handleAutoApproveHighConfidence",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "highConfidenceTransactions",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "getConfidenceDisplay",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "stats",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "total",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "needsReview",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "highConfidence",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "approved",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "readyToApprove",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "outflow",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "lowConfidenceTransactions",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "batchSize",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "i",
        "file": "src/lib/performance.ts"
      },
      {
        "name": "batch",
        "file": "src/lib/performance.ts"
      },
      {
        "name": "foundInvalid",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "isETransfer",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "isBillPayment",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "rowClass",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "taxRate",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "isExpanded",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "groupTotal",
        "file": "src/components/TransactionTable.tsx"
      },
      {
        "name": "AuthContext",
        "file": "src/context/AuthContext.tsx"
      },
      {
        "name": "context",
        "file": "src/context/FinancialDataContext.tsx"
      },
      {
        "name": "FinancialDataContext",
        "file": "src/context/FinancialDataContext.tsx"
      },
      {
        "name": "safeStorage",
        "file": "src/context/FinancialDataContext.tsx"
      },
      {
        "name": "item",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "parsed",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "STORAGE_KEYS",
        "file": "src/context/FinancialDataContext.tsx"
      },
      {
        "name": "FinancialDataProvider",
        "file": "src/context/FinancialDataContext.tsx"
      },
      {
        "name": "savedData",
        "file": "src/context/FinancialDataContext.tsx"
      },
      {
        "name": "savedIsSample",
        "file": "src/context/FinancialDataContext.tsx"
      },
      {
        "name": "success",
        "file": "src/context/FinancialDataContext.tsx"
      },
      {
        "name": "clearStorage",
        "file": "src/context/FinancialDataContext.tsx"
      },
      {
        "name": "BANK_FORMATS",
        "file": "src/data/bankFormats.ts"
      },
      {
        "name": "getBankFormatInfo",
        "file": "src/data/bankFormats.ts"
      },
      {
        "name": "validateBankFormat",
        "file": "src/data/bankFormats.ts"
      },
      {
        "name": "newKeyword",
        "file": "src/data/customKeywords.ts"
      },
      {
        "name": "existingIndex",
        "file": "src/data/customKeywords.ts"
      },
      {
        "name": "newRule",
        "file": "src/data/customKeywords.ts"
      },
      {
        "name": "initialLength",
        "file": "src/data/customKeywords.ts"
      },
      {
        "name": "index",
        "file": "src/data/customKeywords.ts"
      },
      {
        "name": "normalizedDesc",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "rule",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "matchCount",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "matchRatio",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "adjustedConfidence",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "keywordsData",
        "file": "src/data/customKeywords.ts"
      },
      {
        "name": "rulesData",
        "file": "src/data/customKeywords.ts"
      },
      {
        "name": "CATEGORY_TO_ACCOUNT_MAP",
        "file": "src/data/merchants.ts"
      },
      {
        "name": "MERCHANT_PATTERNS",
        "file": "src/data/merchants.ts"
      },
      {
        "name": "merchants",
        "file": "src/data/merchants.ts"
      },
      {
        "name": "findMerchantPattern",
        "file": "src/data/merchants.ts"
      },
      {
        "name": "cleanDescription",
        "file": "src/lib/aiCategorizationService.ts"
      },
      {
        "name": "sortedPatterns",
        "file": "src/data/merchants.ts"
      },
      {
        "name": "pattern",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "getMerchantAccountCodes",
        "file": "src/data/merchants.ts"
      },
      {
        "name": "getPatternsByAccountCode",
        "file": "src/data/merchants.ts"
      },
      {
        "name": "PROVINCES",
        "file": "src/data/provinces.ts"
      },
      {
        "name": "getProvinceByCode",
        "file": "src/data/provinces.ts"
      },
      {
        "name": "learnedPatterns",
        "file": "src/lib/aiCategorizationService.ts"
      },
      {
        "name": "lowerDesc",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "genericPatterns",
        "file": "src/lib/aiCategorizationService.ts"
      },
      {
        "name": "words",
        "file": "src/lib/aiCategorizationService.ts"
      },
      {
        "name": "merchantName",
        "file": "src/lib/aiCategorizationService.ts"
      },
      {
        "name": "aiCategorizationService",
        "file": "src/lib/aiCategorizationService.ts"
      },
      {
        "name": "BANK_PATTERNS",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "isPositive",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "customKeywordMatch",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "learnedPattern",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "similarRule",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "bankMatch",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "inflowOutflow",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "exactMatch",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "fuzzyMatch",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "amountMatch",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "defaultCategory",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "results",
        "file": "src/lib/testData.ts"
      },
      {
        "name": "bestMatch",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "score",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "jaroWinkler",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "levenshtein",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "maxLength",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "levenshteinSimilarity",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "matchWindow",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "s1Matches",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "s2Matches",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "transpositions",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "start",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "j",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "k",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "jaro",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "prefix",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "matrix",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "keywords",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "categoryMapping",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "ruleKey",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "existingRule",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "individualPattern",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "current",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "categories",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "totalUsage",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "allPatterns",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "patternData",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "absAmount",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "subscriptionAmounts",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "isRoundNumber",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "endsIn99",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "lastTwoDigits",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "bankPatterns",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "savedCorrections",
        "file": "src/lib/databaseService.ts"
      },
      {
        "name": "corrections",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "savedPatterns",
        "file": "src/lib/databaseService.ts"
      },
      {
        "name": "correctionsObj",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "patternsObj",
        "file": "src/lib/aiEngine.ts"
      },
      {
        "name": "key",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "startTime",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "tenantId",
        "file": "src/lib/billing.ts"
      },
      {
        "name": "rateLimitConfig",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "keyData",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "rateLimitCheck",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "quotaCheck",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "authHeader",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "apiKeyHeader",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "apiKeyParam",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "cachedKey",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "query",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "config",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "entry",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "resetTime",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "quotaKey",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "quota",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "planQuotas",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "since",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "tenantLogs",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "requestsByEndpoint",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "requestsByDay",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "day",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "totalRequests",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "averageResponseTime",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "errorRequests",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "errorRate",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "cutoff",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "nextMonth",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "apiGatewayService",
        "file": "src/lib/apiGateway.ts"
      },
      {
        "name": "customer",
        "file": "src/lib/billing.ts"
      },
      {
        "name": "subscription",
        "file": "src/lib/billing.ts"
      },
      {
        "name": "subscriptionData",
        "file": "src/lib/billing.ts"
      },
      {
        "name": "currentSubscription",
        "file": "src/lib/billing.ts"
      },
      {
        "name": "newPlan",
        "file": "src/lib/billing.ts"
      },
      {
        "name": "stripeSubscription",
        "file": "src/lib/billing.ts"
      },
      {
        "name": "session",
        "file": "src/lib/billing.ts"
      },
      {
        "name": "usageRecord",
        "file": "src/lib/billing.ts"
      },
      {
        "name": "upcomingInvoice",
        "file": "src/lib/billing.ts"
      },
      {
        "name": "billingService",
        "file": "src/lib/billing.ts"
      },
      {
        "name": "HARDCODED_ACCOUNTS",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "globalChartOfAccounts",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "provinceAccounts",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "acc",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "aCount",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "bCount",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "popularCodes",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "suggestions",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "categoryMappings",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "currentCount",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "province",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "taxType",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "taxCode",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "hstMatch",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "gstPstMatch",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "gstMatch",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "accountsByType",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "getChartOfAccounts",
        "file": "src/lib/chartOfAccounts.ts"
      },
      {
        "name": "HEADER_PATTERNS",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "ADDITIONAL_HEADER_PATTERNS",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "HEADER_FORMATTING_OPTIONS",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "normalized",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "suffix",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "similarity",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "words1",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "words2",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "commonWords",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "header",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "classification",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "normalizedHeaders",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "headerMapping",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "formatIdentifiers",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "hasAllRequiredColumns",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "hasDate",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "hasDescription",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "hasAmount",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "potentialDateColumns",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "potentialDescColumns",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "potentialAmountColumns",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "sampleDate",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "dateColumn",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "formatPriority",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "bank",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "exactMatches",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "hasAllColumns",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "colType",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "headerType",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "sampleText",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "hasPatternMatch",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "dateFormats",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "dateFormatFound",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "dateFormat",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "testDate",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "inferredFormat",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "headerValidation",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "bankFormat",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "firstCol",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "datePatterns",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "firstRow",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "dateCol",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "descCol",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "amountCol",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "inferredHeaders",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "lowerFilename",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "value",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "cleanValue",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "transformedData",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "rowArray",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "obj",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "duplicateResult",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "categorizedTransactions",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "batchResults",
        "file": "src/lib/performance.ts"
      },
      {
        "name": "finalTransactions",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "categorizationStats",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "dateString",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "amountString",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "rowAny",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "withdrawalString",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "depositString",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "dateAlternatives",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "alt",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "descAlternatives",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "amountAlternatives",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "date",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "cleanDate",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "formats",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "monthNames",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "monthIndex",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "currentYear",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "cleanAmount",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "formatFound",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "idType",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "potentialDateHeaders",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "potentialDescHeaders",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "potentialAmountHeaders",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "nonStandardHeaders",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "invalidDates",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "missingDescriptions",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "zeroAmounts",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "duplicates",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "seen",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "categorized",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "warnings",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "recommendedHeaders",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "csvContent",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "cleanDateStr",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "parsedDate",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "tenYearsAgo",
        "file": "src/lib/csvProcessor.ts"
      },
      {
        "name": "newPattern",
        "file": "src/lib/databaseService.ts"
      },
      {
        "name": "newCorrection",
        "file": "src/lib/databaseService.ts"
      },
      {
        "name": "existingPattern",
        "file": "src/lib/databaseService.ts"
      },
      {
        "name": "factors",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "desc1",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "desc2",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "duplicateGroups",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "processedIndexes",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "groupIdx",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "duplicateIndexes",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "keyJ",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "cleanTransactions",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "groupCount",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "duplicateCount",
        "file": "src/lib/duplicateDetector.ts"
      },
      {
        "name": "uncategorized",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "lowConfidence",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "unapproved",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "content",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "totalAmount",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "rows",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "rawValue",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "stringValue",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "formatName",
        "file": "src/lib/exportManager.ts"
      },
      {
        "name": "AppIcons",
        "file": "src/lib/iconSystem.ts"
      },
      {
        "name": "IconSizes",
        "file": "src/lib/iconSystem.ts"
      },
      {
        "name": "IconColors",
        "file": "src/lib/iconSystem.ts"
      },
      {
        "name": "getIcon",
        "file": "src/lib/iconSystem.ts"
      },
      {
        "name": "iconCategory",
        "file": "src/lib/iconSystem.ts"
      },
      {
        "name": "icon",
        "file": "src/lib/iconSystem.ts"
      },
      {
        "name": "CommonIcons",
        "file": "src/lib/iconSystem.ts"
      },
      {
        "name": "navigation",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "observer",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "resource",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "logEntry",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "color",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "errorReport",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "performanceMetric",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "thresholds",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "metric",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "checks",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "status",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "byLevel",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "pageLoads",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "apiResponses",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "slowQueries",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "monitoringService",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "monitor",
        "file": "src/lib/monitoring.ts"
      },
      {
        "name": "tenantMemberships",
        "file": "src/lib/multiTenant.ts"
      },
      {
        "name": "lastTenantId",
        "file": "src/lib/multiTenant.ts"
      },
      {
        "name": "targetTenant",
        "file": "src/lib/multiTenant.ts"
      },
      {
        "name": "tenantData",
        "file": "src/lib/multiTenant.ts"
      },
      {
        "name": "storageUsage",
        "file": "src/lib/multiTenant.ts"
      },
      {
        "name": "limits",
        "file": "src/lib/multiTenant.ts"
      },
      {
        "name": "multiTenantService",
        "file": "src/lib/multiTenant.ts"
      },
      {
        "name": "pdfjsLib",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "loadingTask",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "fullText",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "allLines",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "pageNum",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "page",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "textContent",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "textItems",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "lines",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "currentLine",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "lastY",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "extraction",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "csvText",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "testLines",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "rbcDatePatterns",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "rbcAmountPatterns",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "amountPatterns",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "ADDITIONAL_DATE_PATTERNS",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "processedCount",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "dateMatch",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "datePattern",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "isRbcFormat",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "additionalPattern",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "month",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "monthMap",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "monthNum",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "amountRegex",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "lowerLine",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "skipKeywords",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "keywordCount",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "invalidKeywords",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "hasInvalidKeyword",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "dateRegex",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "csvLines",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "tx",
        "file": "src/lib/pdfProcessor.ts"
      },
      {
        "name": "sizeInMB",
        "file": "src/lib/performance.ts"
      },
      {
        "name": "processed",
        "file": "src/lib/performance.ts"
      },
      {
        "name": "tracker",
        "file": "src/lib/performance.ts"
      },
      {
        "name": "progress",
        "file": "src/lib/performance.ts"
      },
      {
        "name": "FALLBACK_ACCOUNT_CATEGORIES",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "balanceSheetCategory",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "fallbackCategories",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "validationIssues",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "uncategorizedTransactions",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "skippedCodes",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "categoryTotals",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "codeToUse",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "accountFound",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "processedAmount",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "categoryName",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "costOfGoodsSold",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "grossProfit",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "operatingExpenses",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "operatingIncome",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "netIncome",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "accountTotals",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "calculatedEquity",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "equityDifference",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "doc",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "yPosition",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "revenueData",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "expenseData",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "netIncomeColor",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "currentAssetsData",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "nonCurrentAssetsData",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "currentLiabilitiesData",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "equityData",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "totalLiabilitiesEquity",
        "file": "src/lib/reportGenerator.ts"
      },
      {
        "name": "supabaseInstance",
        "file": "src/lib/supabase.ts"
      },
      {
        "name": "supabaseEnabled",
        "file": "src/lib/supabase.ts"
      },
      {
        "name": "supabaseUrl",
        "file": "src/lib/supabase.ts"
      },
      {
        "name": "supabaseAnonKey",
        "file": "src/lib/supabase.ts"
      },
      {
        "name": "SAMPLE_TRANSACTIONS",
        "file": "src/lib/testData.ts"
      },
      {
        "name": "testAIEngine",
        "file": "src/lib/testData.ts"
      }
    ],
    "unusedImports": [
      {
        "file": "src/app/admin/page.tsx",
        "line": 3,
        "import": "React",
        "fullLine": "import React, { useState, useEffect } from 'react';"
      },
      {
        "file": "src/app/admin/page.tsx",
        "line": 4,
        "import": "multiTenantService",
        "fullLine": "import { multiTenantService, Tenant, TenantUser } from '../../lib/multiTenant';"
      },
      {
        "file": "src/app/admin/page.tsx",
        "line": 4,
        "import": "TenantUser",
        "fullLine": "import { multiTenantService, Tenant, TenantUser } from '../../lib/multiTenant';"
      },
      {
        "file": "src/app/admin/page.tsx",
        "line": 5,
        "import": "billingService",
        "fullLine": "import { billingService } from '../../lib/billing';"
      },
      {
        "file": "src/app/admin/page.tsx",
        "line": 6,
        "import": "monitoringService",
        "fullLine": "import { monitoringService } from '../../lib/monitoring';"
      },
      {
        "file": "src/app/admin/page.tsx",
        "line": 7,
        "import": "apiGatewayService",
        "fullLine": "import { apiGatewayService } from '../../lib/apiGateway';"
      },
      {
        "file": "src/app/layout.tsx",
        "line": 1,
        "import": "type",
        "fullLine": "import type { Metadata } from 'next'"
      },
      {
        "file": "src/app/page.tsx",
        "line": 15,
        "import": "Image",
        "fullLine": "import Image from 'next/image';"
      },
      {
        "file": "src/app/page.tsx",
        "line": 550,
        "import": "ready",
        "fullLine": "<div className=\"text-sm text-slate-600\">Direct import ready</div>"
      },
      {
        "file": "src/components/AICategorizationButton.tsx",
        "line": 3,
        "import": "React",
        "fullLine": "import React, { useState, useEffect } from 'react';"
      },
      {
        "file": "src/components/BulkCategorySelector.tsx",
        "line": 3,
        "import": "CommonIcons",
        "fullLine": "import { AppIcons, CommonIcons } from '../lib/iconSystem';"
      },
      {
        "file": "src/components/CustomKeywordManager.tsx",
        "line": 5,
        "import": "CustomKeywordManager as KeywordManager",
        "fullLine": "import { CustomKeywordManager as KeywordManager, CustomKeyword, CustomKeywordRule } from '../data/customKeywords';"
      },
      {
        "file": "src/components/DuplicateWarning.tsx",
        "line": 5,
        "import": "DuplicateGroup",
        "fullLine": "import { DuplicateDetectionResult, DuplicateGroup } from '../lib/duplicateDetector';"
      },
      {
        "file": "src/components/ExportManager.tsx",
        "line": 4,
        "import": "ExportFormat",
        "fullLine": "import { ExportManager, ExportOptions, ExportFormat, ExportResult } from '../lib/exportManager';"
      },
      {
        "file": "src/components/FileFormatError.tsx",
        "line": 1,
        "import": "React",
        "fullLine": "import React from 'react';"
      },
      {
        "file": "src/components/KeywordManager.tsx",
        "line": 2,
        "import": "React",
        "fullLine": "import React, { useState, useEffect } from 'react';"
      },
      {
        "file": "src/components/NavigationBar.tsx",
        "line": 4,
        "import": "IconColors",
        "fullLine": "import { AppIcons, IconSizes, IconColors } from '../lib/iconSystem';"
      },
      {
        "file": "src/components/ProcessingResults.tsx",
        "line": 2,
        "import": "React",
        "fullLine": "import React from 'react';"
      },
      {
        "file": "src/components/ProgressBar.tsx",
        "line": 3,
        "import": "React",
        "fullLine": "import React from 'react';"
      },
      {
        "file": "src/components/StorageIndicator.tsx",
        "line": 3,
        "import": "React",
        "fullLine": "import React, { useState, useEffect } from 'react';"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 9,
        "import": "IconSizes",
        "fullLine": "import { AppIcons, CommonIcons, IconSizes } from '../lib/iconSystem';"
      },
      {
        "file": "src/data/customKeywords.ts",
        "line": 240,
        "import": "format",
        "fullLine": "return { success: false, message: 'Invalid import format' };"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 3,
        "import": "findMerchantPattern",
        "fullLine": "import { MERCHANT_PATTERNS, findMerchantPattern } from '../data/merchants';"
      },
      {
        "file": "src/lib/apiGateway.ts",
        "line": 4,
        "import": "billingService",
        "fullLine": "import { billingService } from './billing';"
      },
      {
        "file": "src/lib/billing.ts",
        "line": 4,
        "import": "getCurrentUser",
        "fullLine": "import { getCurrentUser } from './supabase';"
      }
    ],
    "unusedDependencies": [],
    "commentedCode": [
      {
        "file": "src/app/admin/page.tsx",
        "line": 58,
        "content": "// Mock data for demonstration - replace with actual API calls"
      },
      {
        "file": "src/app/admin/page.tsx",
        "line": 69,
        "content": "// Mock data for demonstration - replace with actual API calls"
      },
      {
        "file": "src/app/admin/page.tsx",
        "line": 114,
        "content": "// Send notification to tenant"
      },
      {
        "file": "src/app/api/ai-categorize/route.ts",
        "line": 48,
        "content": "// Create a list of available account codes for ChatGPT to choose from"
      },
      {
        "file": "src/app/api/ai-categorize/route.ts",
        "line": 51,
        "content": "// If forceAI is true (AI button clicked), skip learned patterns and go straight to ChatGPT"
      },
      {
        "file": "src/app/api/ai-categorize/route.ts",
        "line": 55,
        "content": "// ALWAYS check learned patterns first for automatic categorization"
      },
      {
        "file": "src/app/api/ai-categorize/route.ts",
        "line": 60,
        "content": "// Load learned patterns from frontend if provided"
      },
      {
        "file": "src/app/api/ai-categorize/route.ts",
        "line": 86,
        "content": "// If no learned pattern or forceAI is true, try ChatGPT"
      },
      {
        "file": "src/app/api/ai-categorize/route.ts",
        "line": 193,
        "content": "// Fallback to local categorization if AI failed"
      },
      {
        "file": "src/app/api/chat/route.ts",
        "line": 21,
        "content": "// Basic validation of API key format"
      },
      {
        "file": "src/app/api/chat/route.ts",
        "line": 117,
        "content": "// Prepare messages for OpenAI"
      },
      {
        "file": "src/app/api/chat/route.ts",
        "line": 190,
        "content": "// Even if everything fails, provide a helpful response"
      },
      {
        "file": "src/app/globals.css",
        "line": 4,
        "content": "/* Modern Color Palette */"
      },
      {
        "file": "src/app/globals.css",
        "line": 135,
        "content": "/* Smooth transitions for all interactive elements */"
      },
      {
        "file": "src/app/globals.css",
        "line": 149,
        "content": "/* Ensure proper text color for form elements */"
      },
      {
        "file": "src/app/globals.css",
        "line": 179,
        "content": "/* Custom animations for chatbot and modals */"
      },
      {
        "file": "src/app/help/page.tsx",
        "line": 5,
        "content": "// Add interfaces for chat functionality"
      },
      {
        "file": "src/app/help/page.tsx",
        "line": 30,
        "content": "// Add function to send message to ChatGPT"
      },
      {
        "file": "src/app/help/page.tsx",
        "line": 83,
        "content": "// Add function to handle quick action clicks"
      },
      {
        "file": "src/app/page.tsx",
        "line": 38,
        "content": "// AI Engine instance for feedback training (client-side only)"
      },
      {
        "file": "src/app/page.tsx",
        "line": 42,
        "content": "// Pass user ID to AIEngine constructor"
      },
      {
        "file": "src/app/page.tsx",
        "line": 44,
        "content": "// Make AI engine accessible globally for debugging"
      },
      {
        "file": "src/app/page.tsx",
        "line": 60,
        "content": "// Sync with global context for persistence (only on mount or when financialData changes externally)"
      },
      {
        "file": "src/app/page.tsx",
        "line": 206,
        "content": "// Redirect to login if not authenticated (only after component is mounted)"
      },
      {
        "file": "src/app/page.tsx",
        "line": 207,
        "content": "// Temporarily disabled for testing - uncomment when Supabase is properly configured"
      },
      {
        "file": "src/app/page.tsx",
        "line": 599,
        "content": "// Optionally refresh transactions or show a notification"
      },
      {
        "file": "src/app/reports/page.tsx",
        "line": 46,
        "content": "// Convert dashboard data to FinancialData format"
      },
      {
        "file": "src/app/reports/page.tsx",
        "line": 48,
        "content": "// Check if we have uploaded transaction data in the dashboard"
      },
      {
        "file": "src/app/reports/page.tsx",
        "line": 96,
        "content": "// Wait for Chart of Accounts to initialize (increased timeout)"
      },
      {
        "file": "src/app/reports/page.tsx",
        "line": 104,
        "content": "// Create a fallback generator even if Chart of Accounts fails"
      },
      {
        "file": "src/app/reports/page.tsx",
        "line": 169,
        "content": "// Fallback functions for when ReportGenerator fails"
      },
      {
        "file": "src/app/reports/page.tsx",
        "line": 269,
        "content": "// Show reports if we have data (either sample or real) and reports are generated"
      },
      {
        "file": "src/components/AICategorizationButton.tsx",
        "line": 79,
        "content": "// Show keyword prompt if a keyword was suggested"
      },
      {
        "file": "src/components/AICategorizationButton.tsx",
        "line": 96,
        "content": "// Notify parent component"
      },
      {
        "file": "src/components/AICategorizationButton.tsx",
        "line": 122,
        "content": "// Don't show button if AI is not available"
      },
      {
        "file": "src/components/BulkCategorySelector.tsx",
        "line": 32,
        "content": "// Create ChartOfAccounts instance for the province"
      },
      {
        "file": "src/components/BulkCategorySelector.tsx",
        "line": 35,
        "content": "// Get available accounts for the province"
      },
      {
        "file": "src/components/ExportManager.tsx",
        "line": 43,
        "content": "// Available export formats"
      },
      {
        "file": "src/components/FileFormatError.tsx",
        "line": 17,
        "content": "// Parse common error patterns to provide specific guidance"
      },
      {
        "file": "src/components/FileUpload.tsx",
        "line": 106,
        "content": "// Map transactions for reports"
      },
      {
        "file": "src/components/FileUpload.tsx",
        "line": 112,
        "content": "// Set context for reports"
      },
      {
        "file": "src/components/FileUpload.tsx",
        "line": 128,
        "content": "// Ensure correct type for bankFormat"
      },
      {
        "file": "src/components/FileUpload.tsx",
        "line": 179,
        "content": "// The processFile function already updates context and calls onFileProcessed, so for true merging, you may want to refactor processFile to return results instead of calling onFileProcessed directly."
      },
      {
        "file": "src/components/FileUpload.tsx",
        "line": 180,
        "content": "// For now, this will process each file individually as before, but you can refactor to merge results if needed."
      },
      {
        "file": "src/components/FloatingChat.tsx",
        "line": 5,
        "content": "// Add interfaces for chat functionality"
      },
      {
        "file": "src/components/FloatingChat.tsx",
        "line": 19,
        "content": "// Add function to send message to ChatGPT"
      },
      {
        "file": "src/components/KeywordManager.tsx",
        "line": 21,
        "content": "// New keyword form"
      },
      {
        "file": "src/components/KeywordManager.tsx",
        "line": 29,
        "content": "// New rule form"
      },
      {
        "file": "src/components/Preloader.tsx",
        "line": 43,
        "content": "// Mouse tracking for custom cursor"
      },
      {
        "file": "src/components/Preloader.tsx",
        "line": 81,
        "content": "// Add pulse animation for scroll indicator"
      },
      {
        "file": "src/components/StorageIndicator.tsx",
        "line": 26,
        "content": "// Don't show anything if no data"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 21,
        "content": "// Notification Popup Component"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 91,
        "content": "// Use singleton Chart of Accounts instance"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 94,
        "content": "// Sorting function"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 145,
        "content": "// Helper function to get account by code"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 159,
        "content": "// Helper function to get account name"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 164,
        "content": "// Debug logging for code mismatches"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 233,
        "content": "// Check if transaction should be zero-rated"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 317,
        "content": "// Smart selection functions"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 364,
        "content": "// Check for similar merchant/description patterns"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 387,
        "content": "// Learn from this action for future uploads"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 403,
        "content": "// Category change function removed - using account codes only"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 439,
        "content": "// Learn from this action for future uploads"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 500,
        "content": "// Train AI engine if available (safe addition)"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 630,
        "content": "// Auto-trigger AI categorization for low confidence transactions"
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "line": 1049,
        "content": "// Special styling for E-Transfer and Bill Payment transactions"
      },
      {
        "file": "src/context/AuthContext.tsx",
        "line": 37,
        "content": "// Listen for auth changes"
      },
      {
        "file": "src/context/FinancialDataContext.tsx",
        "line": 9,
        "content": "// Extended interface for dashboard state"
      },
      {
        "file": "src/context/FinancialDataContext.tsx",
        "line": 22,
        "content": "// Combined interface for both report data and dashboard state"
      },
      {
        "file": "src/context/FinancialDataContext.tsx",
        "line": 33,
        "content": "// New persistent storage functions"
      },
      {
        "file": "src/context/FinancialDataContext.tsx",
        "line": 146,
        "content": "// Manual storage functions"
      },
      {
        "file": "src/data/bankFormats.ts",
        "line": 72,
        "content": "// BT Records format - supports files like \"5000 BT Records.csv\""
      },
      {
        "file": "src/data/bankFormats.ts",
        "line": 96,
        "content": "// Internet Banking Transfer format"
      },
      {
        "file": "src/data/bankFormats.ts",
        "line": 111,
        "content": "// Headerless CSV format (no headers, just data)"
      },
      {
        "file": "src/data/bankFormats.ts",
        "line": 128,
        "content": "// Helper function to get format details"
      },
      {
        "file": "src/data/bankFormats.ts",
        "line": 133,
        "content": "// Bank format validation"
      },
      {
        "file": "src/data/customKeywords.ts",
        "line": 51,
        "content": "// Check for duplicates"
      },
      {
        "file": "src/data/customKeywords.ts",
        "line": 79,
        "content": "// Check for duplicates"
      },
      {
        "file": "src/data/customKeywords.ts",
        "line": 168,
        "content": "// Find matching keyword for a transaction description"
      },
      {
        "file": "src/data/merchants.ts",
        "line": 46,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 47,
        "content": "// FOOD & RESTAURANTS (High Confidence - Very Specific Patterns)"
      },
      {
        "file": "src/data/merchants.ts",
        "line": 48,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 66,
        "content": "// NEW: Specific A&W locations from training data"
      },
      {
        "file": "src/data/merchants.ts",
        "line": 119,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 121,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 134,
        "content": "// NEW: Specific gas station locations from training data"
      },
      {
        "file": "src/data/merchants.ts",
        "line": 160,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 162,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 196,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 198,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 232,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 234,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 247,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 249,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 260,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 262,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 273,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 275,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 287,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 289,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 300,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 302,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 317,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 319,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 332,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 334,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 347,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 349,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 361,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 363,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 374,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 376,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 388,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 390,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 399,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 401,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 411,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 413,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 430,
        "content": "// NEW: Specific bank fees from training data"
      },
      {
        "file": "src/data/merchants.ts",
        "line": 465,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 467,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 480,
        "content": "// NEW: Specific grocery store locations from training data"
      },
      {
        "file": "src/data/merchants.ts",
        "line": 512,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 514,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 544,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 546,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 564,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 566,
        "content": "// ============================================================================="
      },
      {
        "file": "src/data/merchants.ts",
        "line": 588,
        "content": "// Add named export for merchants"
      },
      {
        "file": "src/data/merchants.ts",
        "line": 591,
        "content": "// Helper functions for pattern matching"
      },
      {
        "file": "src/data/merchants.ts",
        "line": 616,
        "content": "// Default export for backwards compatibility"
      },
      {
        "file": "src/lib/aiCategorizationService.ts",
        "line": 92,
        "content": "// Get learned patterns from the global AI engine if available"
      },
      {
        "file": "src/lib/aiCategorizationService.ts",
        "line": 107,
        "content": "// Get user ID from global AI engine if available"
      },
      {
        "file": "src/lib/aiCategorizationService.ts",
        "line": 118,
        "content": "// Add user ID header if available"
      },
      {
        "file": "src/lib/aiCategorizationService.ts",
        "line": 151,
        "content": "// Get user ID from global AI engine if available"
      },
      {
        "file": "src/lib/aiCategorizationService.ts",
        "line": 162,
        "content": "// Add user ID header if available"
      },
      {
        "file": "src/lib/aiCategorizationService.ts",
        "line": 201,
        "content": "// Suggest keyword if it's a good candidate"
      },
      {
        "file": "src/lib/aiCategorizationService.ts",
        "line": 223,
        "content": "// Generate specific reasoning based on transaction type"
      },
      {
        "file": "src/lib/aiCategorizationService.ts",
        "line": 267,
        "content": "// Only suggest keywords for high-confidence categorizations"
      },
      {
        "file": "src/lib/aiCategorizationService.ts",
        "line": 276,
        "content": "// Don't suggest keywords for generic descriptions"
      },
      {
        "file": "src/lib/aiCategorizationService.ts",
        "line": 305,
        "content": "// Export singleton instance"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 64,
        "content": "// Generic Deposits - Lower confidence for manual review"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 104,
        "content": "// BILL PAYMENTS TO VENDORS (Specific account codes based on vendor type)"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 111,
        "content": "// Generic Bill Payments - Lower confidence for manual review"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 115,
        "content": "// PAYROLL (Account Code: 477 for expenses, 200 for income)"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 126,
        "content": "// BUSINESS EXPENSES (Specific categories)"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 165,
        "content": "// BANK-SPECIFIC TRANSACTIONS (Lower confidence for manual review)"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 179,
        "content": "// GENERIC PATTERNS (Lower confidence for manual review)"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 200,
        "content": "// ATM, Cash, Transfer, etc. with positive amount = inflow (deposit)"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 236,
        "content": "// Keep local patterns for performance, but sync with database"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 247,
        "content": "// Use singleton Chart of Accounts instance to prevent multiple initializations"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 269,
        "content": "// Skip if no user ID"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 294,
        "content": "// Fallback to localStorage if database fails"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 304,
        "content": "// Skip if no user ID"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 339,
        "content": "// Helper function to determine inflow/outflow"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 384,
        "content": "// 4. Try bank transaction patterns (high priority for bank-related)"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 463,
        "content": "// Special handling for E-TRANSFER - now requires manual entry"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 530,
        "content": "// Only return if score is good enough"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 601,
        "content": "// Winkler modification"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 703,
        "content": "// Check if chart of accounts is available"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 893,
        "content": "// Also learn individual patterns for each similar transaction"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 917,
        "content": "// Check for exact matches first"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 930,
        "content": "// Check for partial matches"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 1102,
        "content": "// Check if it's a typical gas amount (often ends in .99 or is a round number)"
      },
      {
        "file": "src/lib/aiEngine.ts",
        "line": 1307,
        "content": "// Normalize the description for pattern matching"
      },
      {
        "file": "src/lib/apiGateway.ts",
        "line": 105,
        "content": "// Skip middleware for non-API routes"
      },
      {
        "file": "src/lib/apiGateway.ts",
        "line": 110,
        "content": "// Skip middleware for health checks and webhooks"
      },
      {
        "file": "src/lib/apiGateway.ts",
        "line": 315,
        "content": "// Check if quota period has reset"
      },
      {
        "file": "src/lib/apiGateway.ts",
        "line": 321,
        "content": "// Check if quota is exceeded"
      },
      {
        "file": "src/lib/apiGateway.ts",
        "line": 581,
        "content": "// Export singleton instance"
      },
      {
        "file": "src/lib/billing.ts",
        "line": 488,
        "content": "// Handle failed payment (send notification, etc.)"
      },
      {
        "file": "src/lib/billing.ts",
        "line": 593,
        "content": "// Export singleton instance"
      },
      {
        "file": "src/lib/chartOfAccounts.ts",
        "line": 17,
        "content": "// Hardcoded account lists for ON, BC, AB"
      },
      {
        "file": "src/lib/chartOfAccounts.ts",
        "line": 264,
        "content": "// Global singleton instance"
      },
      {
        "file": "src/lib/chartOfAccounts.ts",
        "line": 279,
        "content": "// Singleton pattern to prevent multiple instances"
      },
      {
        "file": "src/lib/chartOfAccounts.ts",
        "line": 420,
        "content": "// Parse tax information from the Tax Code field in CSV"
      },
      {
        "file": "src/lib/chartOfAccounts.ts",
        "line": 434,
        "content": "// GST+PST provinces (BC, SK, MB) - handles \"GST/PST\" format"
      },
      {
        "file": "src/lib/chartOfAccounts.ts",
        "line": 510,
        "content": "// Export default instance for easy access"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 7,
        "content": "// Enhanced header formatting patterns"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 53,
        "content": "// Add new header patterns for more banks and international formats"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 78,
        "content": "// Header normalization and formatting options"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 97,
        "content": "// Common misspellings and variations"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 138,
        "content": "// Apply corrections for common misspellings"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 252,
        "content": "// Enhanced format detection with multiple fallback strategies"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 256,
        "content": "// Check if all required columns are present"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 267,
        "content": "// Enhanced generic format detection with flexible column matching"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 314,
        "content": "// Enhanced header mapping for better analysis"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 318,
        "content": "// Check for BT Records format based on filename first"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 336,
        "content": "// Check for most specific formats first - prioritize exact matches"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 346,
        "content": "// Check for exact header matches first"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 351,
        "content": "// If we have exact matches for all required columns, use this format"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 371,
        "content": "// Check for pattern-based format detection (for formats with patterns)"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 386,
        "content": "// If headers match, test date format compatibility"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 388,
        "content": "// Try multiple date formats for Generic format to be more flexible"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 397,
        "content": "// Update the format's date format for this detection"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 423,
        "content": "// Enhanced fallback: try to create a custom format based on detected columns"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 463,
        "content": "// Check if we have headers or if this is a headerless CSV"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 467,
        "content": "// If no headers or headers look like data, try to infer format"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 492,
        "content": "// Detect bank format with data sample"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 538,
        "content": "// Check if first column looks like a date"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 564,
        "content": "// Try to identify columns based on content"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 573,
        "content": "// Determine format based on filename or content patterns"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 576,
        "content": "// Check content for internet banking patterns"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 611,
        "content": "// Check if value looks like a date"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 634,
        "content": "// Skip if it looks like a date or amount"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 643,
        "content": "// If no long text found, look for any non-date, non-amount column"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 692,
        "content": "// Check if it's a number (possibly with decimal)"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 714,
        "content": "// Transform data to use inferred headers"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 773,
        "content": "// Check for duplicates before categorization"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 847,
        "content": "// Special handling for RBC format with separate withdrawal/deposit columns"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 864,
        "content": "// Fallback: try alternative column names if primary columns are empty"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 942,
        "content": "// Try multiple date formats"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1020,
        "content": "// Handle RBC format like \"11 Dec\" - assume current year"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1062,
        "content": "// Handle various formats: $123.45, 123.45, (123.45), -123.45, $1,234.56, \"3,276.00\""
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1077,
        "content": "// Validate reasonable amount range (increased limit for business accounts)"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1126,
        "content": "// Check against all known bank formats with enhanced matching"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1149,
        "content": "// Enhanced generic format detection with pattern matching"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1165,
        "content": "// Add helpful suggestions for better formatting"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1216,
        "content": "// Enhanced warnings for non-standard headers"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1258,
        "content": "// Check for common issues"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1280,
        "content": "// Performance warning for large datasets"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1296,
        "content": "// Create a key that identifies potential duplicates"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1344,
        "content": "// Check for missing required columns"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1360,
        "content": "// Suggest standard headers for non-standard ones"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1373,
        "content": "// Check for common formatting issues"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1377,
        "content": "// Check for excessive capitalization"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1383,
        "content": "// Check for special characters"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1388,
        "content": "// Check for excessive length"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1437,
        "content": "// Try multiple date formats"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1497,
        "content": "// Handle common date formats"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1528,
        "content": "// Handle text formats"
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "line": 1533,
        "content": "// Handle datetime formats"
      },
      {
        "file": "src/lib/databaseService.ts",
        "line": 21,
        "content": "// Initialize fallback data from localStorage if available"
      },
      {
        "file": "src/lib/duplicateDetector.ts",
        "line": 43,
        "content": "// Date comparison (exact match = 0.4 points)"
      },
      {
        "file": "src/lib/duplicateDetector.ts",
        "line": 49,
        "content": "// Amount comparison (exact match = 0.4 points)"
      },
      {
        "file": "src/lib/duplicateDetector.ts",
        "line": 55,
        "content": "// Description comparison (exact match = 0.2 points)"
      },
      {
        "file": "src/lib/duplicateDetector.ts",
        "line": 102,
        "content": "// Look for future duplicates"
      },
      {
        "file": "src/lib/errorHandler.ts",
        "line": 10,
        "content": "// Enhanced header formatting errors"
      },
      {
        "file": "src/lib/errorHandler.ts",
        "line": 35,
        "content": "// File format errors"
      },
      {
        "file": "src/lib/errorHandler.ts",
        "line": 52,
        "content": "// Papa Parse specific errors"
      },
      {
        "file": "src/lib/exportManager.ts",
        "line": 199,
        "content": "// Format-specific validation"
      },
      {
        "file": "src/lib/exportManager.ts",
        "line": 218,
        "content": "// Get export format"
      },
      {
        "file": "src/lib/exportManager.ts",
        "line": 226,
        "content": "// Validate first for transaction exports"
      },
      {
        "file": "src/lib/exportManager.ts",
        "line": 314,
        "content": "// Format specific values"
      },
      {
        "file": "src/lib/exportManager.ts",
        "line": 316,
        "content": "// Use the transform function's date format if it exists, otherwise default"
      },
      {
        "file": "src/lib/exportManager.ts",
        "line": 329,
        "content": "// Log the first few rows for debugging Xero formats"
      },
      {
        "file": "src/lib/exportManager.ts",
        "line": 337,
        "content": "// Add audit trail if requested (but not for Xero formats to avoid column mapping issues)"
      },
      {
        "file": "src/lib/exportManager.ts",
        "line": 359,
        "content": "// Escape if contains comma, quote, or newline"
      },
      {
        "file": "src/lib/exportManager.ts",
        "line": 439,
        "content": "// Fallback for unknown provinces"
      },
      {
        "file": "src/lib/iconSystem.ts",
        "line": 2,
        "content": "// Centralized icon configuration for consistent UI/UX"
      },
      {
        "file": "src/lib/iconSystem.ts",
        "line": 106,
        "content": "// Icon Categories for organized access"
      },
      {
        "file": "src/lib/iconSystem.ts",
        "line": 240,
        "content": "// Icon sizes for consistent sizing"
      },
      {
        "file": "src/lib/iconSystem.ts",
        "line": 252,
        "content": "// Icon colors for consistent theming"
      },
      {
        "file": "src/lib/iconSystem.ts",
        "line": 265,
        "content": "// Helper function to get icon with consistent styling"
      },
      {
        "file": "src/lib/iconSystem.ts",
        "line": 286,
        "content": "// Predefined icon combinations for common use cases"
      },
      {
        "file": "src/lib/iconSystem.ts",
        "line": 322,
        "content": "// Export type for TypeScript support"
      },
      {
        "file": "src/lib/monitoring.ts",
        "line": 113,
        "content": "// Track page load performance"
      },
      {
        "file": "src/lib/monitoring.ts",
        "line": 177,
        "content": "// Console output for development"
      },
      {
        "file": "src/lib/monitoring.ts",
        "line": 280,
        "content": "// Keep only last 1000 performance metrics in memory"
      },
      {
        "file": "src/lib/monitoring.ts",
        "line": 430,
        "content": "// Check if we can reach external services"
      },
      {
        "file": "src/lib/monitoring.ts",
        "line": 599,
        "content": "// Export singleton instance"
      },
      {
        "file": "src/lib/monitoring.ts",
        "line": 602,
        "content": "// Export utility functions"
      },
      {
        "file": "src/lib/multiTenant.ts",
        "line": 133,
        "content": "// Store in localStorage for persistence"
      },
      {
        "file": "src/lib/multiTenant.ts",
        "line": 232,
        "content": "// Check specific permissions"
      },
      {
        "file": "src/lib/multiTenant.ts",
        "line": 391,
        "content": "// Calculate storage usage (simplified)"
      },
      {
        "file": "src/lib/multiTenant.ts",
        "line": 431,
        "content": "// Export singleton instance"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 29,
        "content": "// Check if we're on the client side"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 39,
        "content": "// Wait for PDF.js to be loaded"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 156,
        "content": "// Log sample transactions for quality check"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 173,
        "content": "// Convert to CSV format"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 191,
        "content": "// Test function to verify parsing logic"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 215,
        "content": "// Debug: Log first few lines to understand format"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 223,
        "content": "// RBC-specific date patterns"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 237,
        "content": "// RBC-specific amount patterns for separate withdrawal/deposit columns"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 254,
        "content": "// Add new regex patterns for more PDF layouts"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 273,
        "content": "// First try RBC-specific date pattern"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 314,
        "content": "// Handle RBC format: \"11 Dec\" -> \"11/12/2024\" (assuming current year)"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 337,
        "content": "// Look for amount - try RBC patterns first if it's RBC format"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 407,
        "content": "// Skip common header/summary keywords - but be more specific"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 414,
        "content": "// Only skip if the line contains multiple header keywords or is clearly a header"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 417,
        "content": "// Also skip lines that are too short (likely headers) - but be more lenient for RBC format"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 445,
        "content": "// Skip if description is too short or contains invalid keywords"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 450,
        "content": "// Validate amount format"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 456,
        "content": "// Validate date format"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 466,
        "content": "// Convert various date formats to DD/MM/YYYY"
      },
      {
        "file": "src/lib/pdfProcessor.ts",
        "line": 495,
        "content": "// Escape description if it contains commas or quotes"
      },
      {
        "file": "src/lib/reportGenerator.ts",
        "line": 5,
        "content": "// Types for financial data"
      },
      {
        "file": "src/lib/reportGenerator.ts",
        "line": 61,
        "content": "// Updated to match actual province-specific CSV account codes"
      },
      {
        "file": "src/lib/reportGenerator.ts",
        "line": 117,
        "content": "// Use singleton Chart of Accounts instance to prevent multiple initializations"
      },
      {
        "file": "src/lib/reportGenerator.ts",
        "line": 164,
        "content": "// Determine if current or non-current asset based on account code"
      },
      {
        "file": "src/lib/reportGenerator.ts",
        "line": 173,
        "content": "// Determine if current or non-current liability based on account code"
      },
      {
        "file": "src/lib/reportGenerator.ts",
        "line": 192,
        "content": "// Fallback to regex-based categorization if Chart of Accounts is not available"
      },
      {
        "file": "src/lib/reportGenerator.ts",
        "line": 211,
        "content": "// Default to expense if unknown"
      },
      {
        "file": "src/lib/reportGenerator.ts",
        "line": 480,
        "content": "// Categorize accounts for balance sheet"
      },
      {
        "file": "src/lib/supabase.ts",
        "line": 3,
        "content": "// Singleton instance"
      },
      {
        "file": "src/lib/supabase.ts",
        "line": 8,
        "content": "// Return existing instance if available"
      },
      {
        "file": "src/lib/supabase.ts",
        "line": 13,
        "content": "// Try both server and client env vars"
      },
      {
        "file": "src/lib/supabase.ts",
        "line": 32,
        "content": "// Check if we have the required environment variables"
      },
      {
        "file": "src/lib/supabase.ts",
        "line": 38,
        "content": "// Validate URL format"
      },
      {
        "file": "src/lib/supabase.ts",
        "line": 44,
        "content": "// Validate anon key format (should be a JWT token starting with \"eyJ\")"
      },
      {
        "file": "src/lib/supabase.ts",
        "line": 94,
        "content": "// Type definitions for the database"
      }
    ]
  },
  "architecture": {
    "fileStructure": [],
    "importExport": [
      {
        "type": "duplicate_export",
        "name": "CustomKeywordManager",
        "files": [
          "src/components/CustomKeywordManager.tsx",
          "src/data/customKeywords.ts"
        ],
        "count": 2
      },
      {
        "type": "duplicate_export",
        "name": "BankFormat",
        "files": [
          "src/data/bankFormats.ts",
          "src/lib/types.ts"
        ],
        "count": 2
      },
      {
        "type": "duplicate_export",
        "name": "Province",
        "files": [
          "src/data/provinces.ts",
          "src/lib/types.ts"
        ],
        "count": 2
      },
      {
        "type": "duplicate_export",
        "name": "DuplicateGroup",
        "files": [
          "src/lib/duplicateDetector.ts",
          "src/lib/types.ts"
        ],
        "count": 2
      },
      {
        "type": "duplicate_export",
        "name": "DuplicateDetectionResult",
        "files": [
          "src/lib/duplicateDetector.ts",
          "src/lib/types.ts"
        ],
        "count": 2
      },
      {
        "type": "duplicate_export",
        "name": "Transaction",
        "files": [
          "src/lib/reportGenerator.ts",
          "src/lib/types.ts"
        ],
        "count": 2
      },
      {
        "type": "duplicate_export",
        "name": "FinancialData",
        "files": [
          "src/lib/reportGenerator.ts",
          "src/lib/types.ts"
        ],
        "count": 2
      },
      {
        "type": "duplicate_export",
        "name": "ProfitLossData",
        "files": [
          "src/lib/reportGenerator.ts",
          "src/lib/types.ts"
        ],
        "count": 2
      },
      {
        "type": "duplicate_export",
        "name": "BalanceSheetData",
        "files": [
          "src/lib/reportGenerator.ts",
          "src/lib/types.ts"
        ],
        "count": 2
      }
    ],
    "circularDependencies": [],
    "inconsistentPatterns": []
  },
  "performance": {
    "largeFiles": [
      {
        "file": "src/app/help/page.tsx",
        "size": 60900,
        "lines": 934
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "size": 71706,
        "lines": 1558
      },
      {
        "file": "src/lib/aiEngine.ts",
        "size": 59411,
        "lines": 1321
      },
      {
        "file": "src/lib/chartOfAccounts.ts",
        "size": 53581,
        "lines": 512
      },
      {
        "file": "src/lib/csvProcessor.ts",
        "size": 56363,
        "lines": 1546
      }
    ],
    "inefficientPatterns": [
      {
        "file": "src/app/page.tsx",
        "pattern": "excessive_useEffect",
        "count": 5
      },
      {
        "file": "src/components/Preloader.tsx",
        "pattern": "excessive_useEffect",
        "count": 7
      },
      {
        "file": "src/components/TransactionTable.tsx",
        "pattern": "excessive_useEffect",
        "count": 6
      }
    ],
    "memoryLeaks": []
  },
  "security": {
    "vulnerabilities": [],
    "hardcodedSecrets": [],
    "unsafePatterns": []
  }
}